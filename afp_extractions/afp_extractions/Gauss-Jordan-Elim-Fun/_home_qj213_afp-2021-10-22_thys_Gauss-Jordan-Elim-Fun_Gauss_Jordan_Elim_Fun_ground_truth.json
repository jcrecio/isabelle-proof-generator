{"file_name": "/home/qj213/afp-2021-10-22/thys/Gauss-Jordan-Elim-Fun/Gauss_Jordan_Elim_Fun.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gauss-Jordan-Elim-Fun", "problem_names": ["lemma solution_swap:\nassumes \"p1 < n\" \"p2 < n\"\nshows \"solution (Fun.swap p1 p2 A) n x = solution A n x\" (is \"?L = ?R\")", "lemma solution_upd1:\n  \"c \\<noteq> 0 \\<Longrightarrow> solution (A(p:=(\\<lambda>j. A p j / c))) n x = solution A n x\"", "lemma solution_upd_but1: \"\\<lbrakk> ap = A p; \\<forall>i j. i\\<noteq>p \\<longrightarrow> a i j = A i j; p<n \\<rbrakk> \\<Longrightarrow>\n solution (\\<lambda>i. if i=p then ap else (\\<lambda>j. a i j - c i * ap j)) n x =\n solution A n x\"", "lemma gauss_jordan_lemma: \"m\\<le>n \\<Longrightarrow> unit A m n \\<Longrightarrow> gauss_jordan A m = Some B \\<Longrightarrow>\n  unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\"", "theorem gauss_jordan_correct:\n  \"gauss_jordan A n = Some B \\<Longrightarrow> solution A n (\\<lambda>j. B j n)\"", "lemma non_null_if_pivot:\n  assumes \"usolution A m n x\" and \"q < m\" shows \"\\<exists>p<m. A p q \\<noteq> 0\"", "lemma lem1:\n  fixes f :: \"'a \\<Rightarrow> 'b::field\"\n  shows \"(\\<Sum>x\\<in>A. f x * (a * g x)) = a * (\\<Sum>x\\<in>A. f x * g x)\"", "lemma lem2:\n  fixes f :: \"'a \\<Rightarrow> 'b::field\"\n  shows \"(\\<Sum>x\\<in>A. f x * (g x * a)) = a * (\\<Sum>x\\<in>A. f x * g x)\"", "lemma gauss_jordan_complete:\n  \"m \\<le> n \\<Longrightarrow> usolution A m n x \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B\""], "translations": [["", "lemma solution_swap:\nassumes \"p1 < n\" \"p2 < n\"\nshows \"solution (Fun.swap p1 p2 A) n x = solution A n x\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x = solution A n x", "proof(cases \"p1=p2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p1 = p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x\n 2. p1 \\<noteq> p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x", "case True"], ["proof (state)\nthis:\n  p1 = p2\n\ngoal (2 subgoals):\n 1. p1 = p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x\n 2. p1 \\<noteq> p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x", "thus ?thesis"], ["proof (prove)\nusing this:\n  p1 = p2\n\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x = solution A n x", "by simp"], ["proof (state)\nthis:\n  solution (Fun.swap p1 p2 A) n x = solution A n x\n\ngoal (1 subgoal):\n 1. p1 \\<noteq> p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p1 \\<noteq> p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x", "case False"], ["proof (state)\nthis:\n  p1 \\<noteq> p2\n\ngoal (1 subgoal):\n 1. p1 \\<noteq> p2 \\<Longrightarrow>\n    solution (Fun.swap p1 p2 A) n x = solution A n x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x = solution A n x", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. solution (Fun.swap p1 p2 A) n x \\<Longrightarrow> solution A n x\n 2. solution A n x \\<Longrightarrow> solution (Fun.swap p1 p2 A) n x", "assume ?R"], ["proof (state)\nthis:\n  solution A n x\n\ngoal (2 subgoals):\n 1. solution (Fun.swap p1 p2 A) n x \\<Longrightarrow> solution A n x\n 2. solution A n x \\<Longrightarrow> solution (Fun.swap p1 p2 A) n x", "thus ?L"], ["proof (prove)\nusing this:\n  solution A n x\n\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x", "using assms False"], ["proof (prove)\nusing this:\n  solution A n x\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x", "by(simp add: solution_def Fun.swap_def)"], ["proof (state)\nthis:\n  solution (Fun.swap p1 p2 A) n x\n\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x \\<Longrightarrow> solution A n x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x \\<Longrightarrow> solution A n x", "assume ?L"], ["proof (state)\nthis:\n  solution (Fun.swap p1 p2 A) n x\n\ngoal (1 subgoal):\n 1. solution (Fun.swap p1 p2 A) n x \\<Longrightarrow> solution A n x", "show ?R"], ["proof (prove)\ngoal (1 subgoal):\n 1. solution A n x", "proof(auto simp: solution_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "assume \"i<n\""], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>i. i < n \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "show \"(\\<Sum>j = 0..<n. A i j * x j) = A i n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<not> ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "assume \"i=p1\""], ["proof (state)\nthis:\n  i = p1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<not> ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "with \\<open>?L\\<close> assms False"], ["proof (chain)\npicking this:\n  solution (Fun.swap p1 p2 A) n x\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n  i = p1", "show ?thesis"], ["proof (prove)\nusing this:\n  solution (Fun.swap p1 p2 A) n x\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n  i = p1\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "by(fastforce simp add: solution_def Fun.swap_def)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. A i j * x j) = A i n\n\ngoal (1 subgoal):\n 1. i \\<noteq> p1 \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> p1 \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "assume \"i\\<noteq>p1\""], ["proof (state)\nthis:\n  i \\<noteq> p1\n\ngoal (1 subgoal):\n 1. i \\<noteq> p1 \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<not> ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "assume \"i=p2\""], ["proof (state)\nthis:\n  i = p2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<not> ?P \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "with \\<open>?L\\<close> assms False"], ["proof (chain)\npicking this:\n  solution (Fun.swap p1 p2 A) n x\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n  i = p2", "show ?thesis"], ["proof (prove)\nusing this:\n  solution (Fun.swap p1 p2 A) n x\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n  i = p2\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "by(fastforce simp add: solution_def Fun.swap_def)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. A i j * x j) = A i n\n\ngoal (1 subgoal):\n 1. i \\<noteq> p2 \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> p2 \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "assume \"i\\<noteq>p2\""], ["proof (state)\nthis:\n  i \\<noteq> p2\n\ngoal (1 subgoal):\n 1. i \\<noteq> p2 \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "with \\<open>i\\<noteq>p1\\<close> \\<open>?L\\<close> \\<open>i<n\\<close> assms False"], ["proof (chain)\npicking this:\n  i \\<noteq> p1\n  solution (Fun.swap p1 p2 A) n x\n  i < n\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n  i \\<noteq> p2", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<noteq> p1\n  solution (Fun.swap p1 p2 A) n x\n  i < n\n  p1 < n\n  p2 < n\n  p1 \\<noteq> p2\n  i \\<noteq> p2\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "by(fastforce simp add: solution_def Fun.swap_def)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. A i j * x j) = A i n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. A i j * x j) = A i n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<n. A i j * x j) = A i n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  solution A n x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  solution (Fun.swap p1 p2 A) n x = solution A n x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Converting these apply scripts makes them blow up - see above *)"], ["", "lemma solution_upd1:\n  \"c \\<noteq> 0 \\<Longrightarrow> solution (A(p:=(\\<lambda>j. A p j / c))) n x = solution A n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> (0::'a) \\<Longrightarrow>\n    solution (A(p := \\<lambda>j. A p j / c)) n x = solution A n x", "apply(cases \"p<n\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c \\<noteq> (0::'a); p < n\\<rbrakk>\n    \\<Longrightarrow> solution (A(p := \\<lambda>j. A p j / c)) n x =\n                      solution A n x\n 2. \\<lbrakk>c \\<noteq> (0::'a); \\<not> p < n\\<rbrakk>\n    \\<Longrightarrow> solution (A(p := \\<lambda>j. A p j / c)) n x =\n                      solution A n x", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c \\<noteq> (0::'a); \\<not> p < n\\<rbrakk>\n    \\<Longrightarrow> solution (A(p := \\<lambda>j. A p j / c)) n x =\n                      solution A n x\n 2. \\<lbrakk>c \\<noteq> (0::'a); p < n\\<rbrakk>\n    \\<Longrightarrow> solution (A(p := \\<lambda>j. A p j / c)) n x =\n                      solution A n x", "apply(simp add: solution_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<noteq> (0::'a); p < n\\<rbrakk>\n    \\<Longrightarrow> solution (A(p := \\<lambda>j. A p j / c)) n x =\n                      solution A n x", "apply(clarsimp simp add: solution_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<noteq> (0::'a); p < n\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>i.\n                          (i = p \\<longrightarrow>\n                           (\\<Sum>j = 0..<n. A p j * x j / c) =\n                           A p n / c) \\<and>\n                          (i \\<noteq> p \\<longrightarrow>\n                           i < n \\<longrightarrow>\n                           (\\<Sum>j = 0..<n. A i j * x j) = A i n)) =\n                      (\\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c \\<noteq> (0::'a); p < n;\n     \\<forall>i.\n        (i = p \\<longrightarrow>\n         (\\<Sum>j = 0..<n. A p j * x j / c) = A p n / c) \\<and>\n        (i \\<noteq> p \\<longrightarrow>\n         i < n \\<longrightarrow>\n         (\\<Sum>j = 0..<n. A i j * x j) = A i n)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<lbrakk>c \\<noteq> (0::'a); p < n;\n     \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j / c) =\n                          A p n / c) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>c \\<noteq> (0::'a); p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j / c) = A p n / c) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n);\n        i < n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<lbrakk>c \\<noteq> (0::'a); p < n;\n     \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j / c) =\n                          A p n / c) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply(case_tac \"i=p\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>c \\<noteq> (0::'a); p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j / c) = A p n / c) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n);\n        i < n; i = p\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<And>i.\n       \\<lbrakk>c \\<noteq> (0::'a); p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j / c) = A p n / c) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n);\n        i < n; i \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 3. \\<lbrakk>c \\<noteq> (0::'a); p < n;\n     \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j / c) =\n                          A p n / c) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply (simp add: sum_divide_distrib[symmetric] eq_divide_eq field_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>c \\<noteq> (0::'a); p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j / c) = A p n / c) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n);\n        i < n; i \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<lbrakk>c \\<noteq> (0::'a); p < n;\n     \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j / c) =\n                          A p n / c) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<noteq> (0::'a); p < n;\n     \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j / c) =\n                          A p n / c) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply (simp add: sum_divide_distrib[symmetric] eq_divide_eq field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma solution_upd_but1: \"\\<lbrakk> ap = A p; \\<forall>i j. i\\<noteq>p \\<longrightarrow> a i j = A i j; p<n \\<rbrakk> \\<Longrightarrow>\n solution (\\<lambda>i. if i=p then ap else (\\<lambda>j. a i j - c i * ap j)) n x =\n solution A n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ap = A p;\n     \\<forall>i j. i \\<noteq> p \\<longrightarrow> a i j = A i j;\n     p < n\\<rbrakk>\n    \\<Longrightarrow> solution\n                       (\\<lambda>i.\n                           if i = p then ap\n                           else (\\<lambda>j. a i j - c i * ap j))\n                       n x =\n                      solution A n x", "apply(clarsimp simp add: solution_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ap = A p;\n     \\<forall>i. i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n     p < n\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>i.\n                          (i = p \\<longrightarrow>\n                           (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n                          (i \\<noteq> p \\<longrightarrow>\n                           i < n \\<longrightarrow>\n                           (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n                           A i n - c i * A p n)) =\n                      (\\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ap = A p;\n     \\<forall>i. i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n     p < n;\n     \\<forall>i.\n        (i = p \\<longrightarrow>\n         (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n        (i \\<noteq> p \\<longrightarrow>\n         i < n \\<longrightarrow>\n         (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n         A i n - c i * A p n)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<lbrakk>ap = A p;\n     \\<forall>i. i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n     p < n; \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n                          A i n - c i * A p n)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ap = A p;\n     \\<forall>i. i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n     p < n; \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = p \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n                         (i \\<noteq> p \\<longrightarrow>\n                          i < n \\<longrightarrow>\n                          (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n                          A i n - c i * A p n)\n 2. \\<lbrakk>ap = A p;\n     \\<forall>i. i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n     p < n;\n     \\<forall>i.\n        (i = p \\<longrightarrow>\n         (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n        (i \\<noteq> p \\<longrightarrow>\n         i < n \\<longrightarrow>\n         (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n         A i n - c i * A p n)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "apply (simp add: field_simps sum_subtractf sum_distrib_left[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ap = A p;\n     \\<forall>i. i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n     p < n;\n     \\<forall>i.\n        (i = p \\<longrightarrow>\n         (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n        (i \\<noteq> p \\<longrightarrow>\n         i < n \\<longrightarrow>\n         (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n         A i n - c i * A p n)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i<n. (\\<Sum>j = 0..<n. A i j * x j) = A i n", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>ap = A p;\n        \\<forall>i.\n           i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n        p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow>\n            (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n            A i n - c i * A p n);\n        i < n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "apply(case_tac \"i=p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>ap = A p;\n        \\<forall>i.\n           i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n        p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow>\n            (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n            A i n - c i * A p n);\n        i < n; i = p\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n\n 2. \\<And>i.\n       \\<lbrakk>ap = A p;\n        \\<forall>i.\n           i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n        p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow>\n            (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n            A i n - c i * A p n);\n        i < n; i \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>ap = A p;\n        \\<forall>i.\n           i \\<noteq> p \\<longrightarrow> (\\<forall>j. a i j = A i j);\n        p < n;\n        \\<forall>i.\n           (i = p \\<longrightarrow>\n            (\\<Sum>j = 0..<n. A p j * x j) = A p n) \\<and>\n           (i \\<noteq> p \\<longrightarrow>\n            i < n \\<longrightarrow>\n            (\\<Sum>j = 0..<n. (A i j - c i * A p j) * x j) =\n            A i n - c i * A p n);\n        i < n; i \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>j = 0..<n. A i j * x j) = A i n", "apply (auto simp add: field_simps sum_subtractf sum_distrib_left[symmetric] all_conj_distrib)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection\\<open>Correctness\\<close>"], ["", "text\\<open>The correctness proof:\\<close>"], ["", "lemma gauss_jordan_lemma: \"m\\<le>n \\<Longrightarrow> unit A m n \\<Longrightarrow> gauss_jordan A m = Some B \\<Longrightarrow>\n  unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n; unit A m n; gauss_jordan A m = Some B\\<rbrakk>\n    \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "proof(induct m arbitrary: A B)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 \\<le> n; unit A 0 n; gauss_jordan A 0 = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n 2. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "case 0"], ["proof (state)\nthis:\n  0 \\<le> n\n  unit A 0 n\n  gauss_jordan A 0 = Some B\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 \\<le> n; unit A 0 n; gauss_jordan A 0 = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n 2. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "{"], ["proof (state)\nthis:\n  0 \\<le> n\n  unit A 0 n\n  gauss_jordan A 0 = Some B\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 \\<le> n; unit A 0 n; gauss_jordan A 0 = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n 2. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "fix a and b c d :: \"'a\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 \\<le> n; unit A 0 n; gauss_jordan A 0 = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n 2. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "have \"(if a then b else c) * d = (if a then b*d else c*d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a then b else c) * d = (if a then b * d else c * d)", "by simp"], ["proof (state)\nthis:\n  (if a then b else c) * d = (if a then b * d else c * d)\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 \\<le> n; unit A 0 n; gauss_jordan A 0 = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n 2. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "}"], ["proof (state)\nthis:\n  (if ?a2 then ?b2 else ?c2) * ?d2 = (if ?a2 then ?b2 * ?d2 else ?c2 * ?d2)\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>0 \\<le> n; unit A 0 n; gauss_jordan A 0 = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n 2. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "with 0"], ["proof (chain)\npicking this:\n  0 \\<le> n\n  unit A 0 n\n  gauss_jordan A 0 = Some B\n  (if ?a2 then ?b2 else ?c2) * ?d2 = (if ?a2 then ?b2 * ?d2 else ?c2 * ?d2)", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  unit A 0 n\n  gauss_jordan A 0 = Some B\n  (if ?a2 then ?b2 else ?c2) * ?d2 = (if ?a2 then ?b2 * ?d2 else ?c2 * ?d2)\n\ngoal (1 subgoal):\n 1. unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "by(simp add: unit_def solution_def sum.If_cases)"], ["proof (state)\nthis:\n  unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "case (Suc m)"], ["proof (state)\nthis:\n  \\<lbrakk>m \\<le> n; unit ?A m n; gauss_jordan ?A m = Some ?B\\<rbrakk>\n  \\<Longrightarrow> unit ?B 0 n \\<and> solution ?A n (\\<lambda>j. ?B j n)\n  Suc m \\<le> n\n  unit A (Suc m) n\n  gauss_jordan A (Suc m) = Some B\n\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "let \"?Ap' p\" = \"(\\<lambda>j. A p j / A p m)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "let \"?A' p\" = \"(\\<lambda>i. if i=p then ?Ap' p else (\\<lambda>j. A i j - A i m * ?Ap' p j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "from \\<open>gauss_jordan A (Suc m) = Some B\\<close>"], ["proof (chain)\npicking this:\n  gauss_jordan A (Suc m) = Some B", "obtain p ks where \"dropWhile (\\<lambda>i. A i m = 0) [0..<Suc m] = p#ks\" and\n    rec: \"gauss_jordan (Fun.swap p m (?A' p)) m = Some B\""], ["proof (prove)\nusing this:\n  gauss_jordan A (Suc m) = Some B\n\ngoal (1 subgoal):\n 1. (\\<And>p ks.\n        \\<lbrakk>dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] =\n                 p # ks;\n         gauss_jordan\n          (Fun.swap p m\n            (\\<lambda>a.\n                if a = p then \\<lambda>a. A p a / A p m\n                else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n          m =\n         Some B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: list.splits)"], ["proof (state)\nthis:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # ks\n  gauss_jordan\n   (Fun.swap p m\n     (\\<lambda>a.\n         if a = p then \\<lambda>a. A p a / A p m\n         else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n   m =\n  Some B\n\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "from this"], ["proof (chain)\npicking this:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # ks\n  gauss_jordan\n   (Fun.swap p m\n     (\\<lambda>a.\n         if a = p then \\<lambda>a. A p a / A p m\n         else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n   m =\n  Some B", "have p: \"p\\<le>m\" \"A p m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # ks\n  gauss_jordan\n   (Fun.swap p m\n     (\\<lambda>a.\n         if a = p then \\<lambda>a. A p a / A p m\n         else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n   m =\n  Some B\n\ngoal (1 subgoal):\n 1. p \\<le> m &&& A p m \\<noteq> (0::'a)", "apply(simp_all add: dropWhile_eq_Cons_conv del:upt_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[0..<Suc m] =\n             takeWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] @\n             p # ks \\<and>\n             A p m \\<noteq> (0::'a);\n     gauss_jordan\n      (Fun.swap p m\n        (\\<lambda>a.\n            if a = p then \\<lambda>a. A p a / A p m\n            else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n      m =\n     Some B\\<rbrakk>\n    \\<Longrightarrow> p \\<le> m", "by (metis set_upt atLeast0AtMost atLeastLessThanSuc_atLeastAtMost atMost_iff in_set_conv_decomp)"], ["proof (state)\nthis:\n  p \\<le> m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "have \"m\\<le>n\" \"m<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<le> n &&& m < n", "using \\<open>Suc m \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. m \\<le> n &&& m < n", "by arith+"], ["proof (state)\nthis:\n  m \\<le> n\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "have \"unit (Fun.swap p m (?A' p)) m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unit\n     (Fun.swap p m\n       (\\<lambda>a.\n           if a = p then \\<lambda>a. A p a / A p m\n           else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n     m n", "using Suc.prems(2) p"], ["proof (prove)\nusing this:\n  unit A (Suc m) n\n  p \\<le> m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. unit\n     (Fun.swap p m\n       (\\<lambda>a.\n           if a = p then \\<lambda>a. A p a / A p m\n           else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n     m n", "unfolding unit_def Fun.swap_def Suc_le_eq"], ["proof (prove)\nusing this:\n  \\<forall>i j.\n     m < j \\<longrightarrow>\n     j < n \\<longrightarrow> A i j = (if i = j then 1::'a else (0::'a))\n  p \\<le> m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       m \\<le> j \\<longrightarrow>\n       j < n \\<longrightarrow>\n       ((\\<lambda>a.\n            if a = p then \\<lambda>a. A p a / A p m\n            else (\\<lambda>j. A a j - A a m * (A p j / A p m)))\n        (p := if m = p then \\<lambda>a. A p a / A p m\n              else (\\<lambda>j. A m j - A m m * (A p j / A p m)),\n         m := if p = p then \\<lambda>a. A p a / A p m\n              else (\\<lambda>j. A p j - A p m * (A p j / A p m))))\n        i j =\n       (if i = j then 1::'a else (0::'a))", "by (auto simp: le_less)"], ["proof (state)\nthis:\n  unit\n   (Fun.swap p m\n     (\\<lambda>a.\n         if a = p then \\<lambda>a. A p a / A p m\n         else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n   m n\n\ngoal (1 subgoal):\n 1. \\<And>m A B.\n       \\<lbrakk>\\<And>A B.\n                   \\<lbrakk>m \\<le> n; unit A m n;\n                    gauss_jordan A m = Some B\\<rbrakk>\n                   \\<Longrightarrow> unit B 0 n \\<and>\n                                     solution A n (\\<lambda>j. B j n);\n        Suc m \\<le> n; unit A (Suc m) n;\n        gauss_jordan A (Suc m) = Some B\\<rbrakk>\n       \\<Longrightarrow> unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "from Suc.hyps[OF \\<open>m\\<le>n\\<close> this rec] \\<open>m<n\\<close> p"], ["proof (chain)\npicking this:\n  unit B 0 n \\<and>\n  solution\n   (Fun.swap p m\n     (\\<lambda>a.\n         if a = p then \\<lambda>a. A p a / A p m\n         else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n   n (\\<lambda>j. B j n)\n  m < n\n  p \\<le> m\n  A p m \\<noteq> (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  unit B 0 n \\<and>\n  solution\n   (Fun.swap p m\n     (\\<lambda>a.\n         if a = p then \\<lambda>a. A p a / A p m\n         else (\\<lambda>j. A a j - A a m * (A p j / A p m))))\n   n (\\<lambda>j. B j n)\n  m < n\n  p \\<le> m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)", "by(simp add: solution_swap solution_upd1 solution_upd_but1[where A = \"A(p := ?Ap' p)\"])"], ["proof (state)\nthis:\n  unit B 0 n \\<and> solution A n (\\<lambda>j. B j n)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem gauss_jordan_correct:\n  \"gauss_jordan A n = Some B \\<Longrightarrow> solution A n (\\<lambda>j. B j n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gauss_jordan A n = Some B \\<Longrightarrow>\n    solution A n (\\<lambda>j. B j n)", "by(simp add:gauss_jordan_lemma[of n n] unit_def  field_simps)"], ["", "definition solution2 :: \"('a::field)matrix \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> (nat \\<Rightarrow> 'a) \\<Rightarrow> bool\"\nwhere \"solution2 A m n x = (\\<forall>i<m. (\\<Sum> j=0..<m. A i j * x j) = A i n)\""], ["", "definition \"usolution A m n x \\<longleftrightarrow>\n  solution2 A m n x \\<and> (\\<forall>y. solution2 A m n y \\<longrightarrow> (\\<forall>j<m. y j = x j))\""], ["", "lemma non_null_if_pivot:\n  assumes \"usolution A m n x\" and \"q < m\" shows \"\\<exists>p<m. A p q \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p<m. A p q \\<noteq> (0::'a)", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "assume \"\\<not>(\\<exists>p<m. A p q \\<noteq> 0)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "hence 1: \"\\<And>p. p<m \\<Longrightarrow> A p q = 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>p. p < m \\<Longrightarrow> A p q = (0::'a)", "by simp"], ["proof (state)\nthis:\n  ?p < m \\<Longrightarrow> A ?p q = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ?p < m \\<Longrightarrow> A ?p q = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "assume 2: \"\\<forall>j. j\\<noteq>q \\<longrightarrow> y j = x j\""], ["proof (state)\nthis:\n  \\<forall>j. j \\<noteq> q \\<longrightarrow> y j = x j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<forall>j. j \\<noteq> q \\<longrightarrow> y j = x j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "assume \"i<m\""], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "with assms(1)"], ["proof (chain)\npicking this:\n  usolution A m n x\n  i < m", "have \"A i n = (\\<Sum>j = 0..<m. A i j * x j)\""], ["proof (prove)\nusing this:\n  usolution A m n x\n  i < m\n\ngoal (1 subgoal):\n 1. A i n = (\\<Sum>j = 0..<m. A i j * x j)", "by (auto simp: solution2_def usolution_def)"], ["proof (state)\nthis:\n  A i n = (\\<Sum>j = 0..<m. A i j * x j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "with 1[OF \\<open>i<m\\<close>] 2"], ["proof (chain)\npicking this:\n  A i q = (0::'a)\n  \\<forall>j. j \\<noteq> q \\<longrightarrow> y j = x j\n  A i n = (\\<Sum>j = 0..<m. A i j * x j)", "have \"(\\<Sum>j = 0..<m. A i j * y j) = A i n\""], ["proof (prove)\nusing this:\n  A i q = (0::'a)\n  \\<forall>j. j \\<noteq> q \\<longrightarrow> y j = x j\n  A i n = (\\<Sum>j = 0..<m. A i j * x j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<m. A i j * y j) = A i n", "by (auto intro!: sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<m. A i j * y j) = A i n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?i2 < m \\<Longrightarrow> (\\<Sum>j = 0..<m. A ?i2 j * y j) = A ?i2 n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "hence \"solution2 A m n y\""], ["proof (prove)\nusing this:\n  ?i2 < m \\<Longrightarrow> (\\<Sum>j = 0..<m. A ?i2 j * y j) = A ?i2 n\n\ngoal (1 subgoal):\n 1. solution2 A m n y", "by(simp add: solution2_def)"], ["proof (state)\nthis:\n  solution2 A m n y\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<forall>j. j \\<noteq> q \\<longrightarrow> ?y2 j = x j \\<Longrightarrow>\n  solution2 A m n ?y2\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "hence \"solution2 A m n (x(q:=0))\" and \"solution2 A m n (x(q:=1))\""], ["proof (prove)\nusing this:\n  \\<forall>j. j \\<noteq> q \\<longrightarrow> ?y2 j = x j \\<Longrightarrow>\n  solution2 A m n ?y2\n\ngoal (1 subgoal):\n 1. solution2 A m n (x(q := 0::'a)) &&& solution2 A m n (x(q := 1::'a))", "by auto"], ["proof (state)\nthis:\n  solution2 A m n (x(q := 0::'a))\n  solution2 A m n (x(q := 1::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>p<m. A p q \\<noteq> (0::'a)) \\<Longrightarrow> False", "with assms(1) zero_neq_one \\<open>q < m\\<close>"], ["proof (chain)\npicking this:\n  usolution A m n x\n  (0::?'a) \\<noteq> (1::?'a)\n  q < m\n  solution2 A m n (x(q := 0::'a))\n  solution2 A m n (x(q := 1::'a))", "show False"], ["proof (prove)\nusing this:\n  usolution A m n x\n  (0::?'a) \\<noteq> (1::?'a)\n  q < m\n  solution2 A m n (x(q := 0::'a))\n  solution2 A m n (x(q := 1::'a))\n\ngoal (1 subgoal):\n 1. False", "by (simp add: usolution_def)\n       (metis fun_upd_same zero_neq_one)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lem1:\n  fixes f :: \"'a \\<Rightarrow> 'b::field\"\n  shows \"(\\<Sum>x\\<in>A. f x * (a * g x)) = a * (\\<Sum>x\\<in>A. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. f x * (a * g x)) = a * (\\<Sum>x\\<in>A. f x * g x)", "by (simp add: sum_distrib_left field_simps)"], ["", "lemma lem2:\n  fixes f :: \"'a \\<Rightarrow> 'b::field\"\n  shows \"(\\<Sum>x\\<in>A. f x * (g x * a)) = a * (\\<Sum>x\\<in>A. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>A. f x * (g x * a)) = a * (\\<Sum>x\\<in>A. f x * g x)", "by (simp add: sum_distrib_left field_simps)"], ["", "subsection\\<open>Complete\\<close>"], ["", "lemma gauss_jordan_complete:\n  \"m \\<le> n \\<Longrightarrow> usolution A m n x \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B", "proof(induction m arbitrary: A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>0 \\<le> n; usolution A 0 n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A 0 = Some B\n 2. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "case 0"], ["proof (state)\nthis:\n  0 \\<le> n\n  usolution A 0 n x\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>0 \\<le> n; usolution A 0 n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A 0 = Some B\n 2. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. gauss_jordan A 0 = Some B", "by simp"], ["proof (state)\nthis:\n  \\<exists>B. gauss_jordan A 0 = Some B\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "case (Suc m A)"], ["proof (state)\nthis:\n  \\<lbrakk>m \\<le> n; usolution ?A m n x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B. gauss_jordan ?A m = Some B\n  Suc m \\<le> n\n  usolution A (Suc m) n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "from \\<open>Suc m \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  Suc m \\<le> n", "have \"m\\<le>n\" and \"m<Suc m\""], ["proof (prove)\nusing this:\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. m \\<le> n &&& m < Suc m", "by arith+"], ["proof (state)\nthis:\n  m \\<le> n\n  m < Suc m\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "from non_null_if_pivot[OF Suc.prems(2) \\<open>m<Suc m\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>p<Suc m. A p m \\<noteq> (0::'a)", "obtain p' where \"p'<Suc m\" and \"A p' m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>p<Suc m. A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>p' < Suc m; A p' m \\<noteq> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p' < Suc m\n  A p' m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "hence \"dropWhile (\\<lambda>i. A i m = 0) [0..<Suc m] \\<noteq> []\""], ["proof (prove)\nusing this:\n  p' < Suc m\n  A p' m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] \\<noteq> []", "by (simp add: atLeast0LessThan) (metis lessThan_iff linorder_neqE_nat not_less_eq)"], ["proof (state)\nthis:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "then"], ["proof (chain)\npicking this:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] \\<noteq> []", "obtain p xs where 1: \"dropWhile (\\<lambda>i. A i m = 0) [0..<Suc m] = p#xs\""], ["proof (prove)\nusing this:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>p xs.\n        dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] =\n        p # xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis list.exhaust)"], ["proof (state)\nthis:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # xs\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "from this"], ["proof (chain)\npicking this:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # xs", "have \"p\\<le>m\" \"A p m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # xs\n\ngoal (1 subgoal):\n 1. p \\<le> m &&& A p m \\<noteq> (0::'a)", "by (simp_all add: dropWhile_eq_Cons_conv del: upt_Suc)\n       (metis set_upt atLeast0AtMost atLeastLessThanSuc_atLeastAtMost atMost_iff in_set_conv_decomp)"], ["proof (state)\nthis:\n  p \\<le> m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "then"], ["proof (chain)\npicking this:\n  p \\<le> m\n  A p m \\<noteq> (0::'a)", "have p: \"p < Suc m\" \"A p m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p \\<le> m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. p < Suc m &&& A p m \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  p < Suc m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "let ?Ap' = \"(\\<lambda>j. A p j / A p m)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "let ?A' = \"(\\<lambda>i. if i=p then ?Ap' else (\\<lambda>j. A i j - A i m * ?Ap' j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "let ?A = \"Fun.swap p m ?A'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "have A: \"solution2 A (Suc m) n x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. solution2 A (Suc m) n x", "using Suc.prems(2)"], ["proof (prove)\nusing this:\n  usolution A (Suc m) n x\n\ngoal (1 subgoal):\n 1. solution2 A (Suc m) n x", "by(simp add: usolution_def)"], ["proof (state)\nthis:\n  solution2 A (Suc m) n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "{"], ["proof (state)\nthis:\n  solution2 A (Suc m) n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "assume le_m: \"p < Suc m\" \"i < Suc m\" \"A p m \\<noteq> 0\""], ["proof (state)\nthis:\n  p < Suc m\n  i < Suc m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "have \"(\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n      ((\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m) -\n      ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n    (\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m -\n    ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m", "by (simp add: field_simps sum_subtractf sum_divide_distrib\n                    sum_distrib_left)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n  (\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m -\n  ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "also"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n  (\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m -\n  ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "have \"\\<dots> = A i n - A p n * A i m / A p m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m -\n    ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m =\n    A i n - A p n * A i m / A p m", "using A le_m"], ["proof (prove)\nusing this:\n  solution2 A (Suc m) n x\n  p < Suc m\n  i < Suc m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m -\n    ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m =\n    A i n - A p n * A i m / A p m", "by (simp add: solution2_def field_simps del: sum.op_ivl_Suc)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<Suc m. A i j * x j) - A i m * x m -\n  ((\\<Sum>j = 0..<Suc m. A p j * x j) - A p m * x m) * A i m / A p m =\n  A i n - A p n * A i m / A p m\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n  A i n - A p n * A i m / A p m", "have \"(\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n      A i n - A p n * A i m / A p m\""], ["proof (prove)\nusing this:\n  (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n  A i n - A p n * A i m / A p m\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n    A i n - A p n * A i m / A p m", "."], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<m. (A i j - A i m * A p j / A p m) * x j) =\n  A i n - A p n * A i m / A p m\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "}"], ["proof (state)\nthis:\n  \\<lbrakk>p < Suc m; ?i2 < Suc m; A p m \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>j = 0..<m.\n                        (A ?i2 j - A ?i2 m * A p j / A p m) * x j) =\n                    A ?i2 n - A p n * A ?i2 m / A p m\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>p < Suc m; ?i2 < Suc m; A p m \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>j = 0..<m.\n                        (A ?i2 j - A ?i2 m * A p j / A p m) * x j) =\n                    A ?i2 n - A p n * A ?i2 m / A p m", "have \"solution2 ?A m n x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>p < Suc m; ?i2 < Suc m; A p m \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>j = 0..<m.\n                        (A ?i2 j - A ?i2 m * A p j / A p m) * x j) =\n                    A ?i2 n - A p n * A ?i2 m / A p m\n\ngoal (1 subgoal):\n 1. solution2\n     (Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n     m n x", "using p"], ["proof (prove)\nusing this:\n  \\<lbrakk>p < Suc m; ?i2 < Suc m; A p m \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>j = 0..<m.\n                        (A ?i2 j - A ?i2 m * A p j / A p m) * x j) =\n                    A ?i2 n - A p n * A ?i2 m / A p m\n  p < Suc m\n  A p m \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. solution2\n     (Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n     m n x", "by (auto simp add: solution2_def Fun.swap_def field_simps)"], ["proof (state)\nthis:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "moreover"], ["proof (state)\nthis:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "{"], ["proof (state)\nthis:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "assume a: \"solution2 ?A m n y\""], ["proof (state)\nthis:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n y\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "let ?y = \"y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "have \"solution2 A (Suc m) n ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. solution2 A (Suc m) n\n     (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))", "unfolding solution2_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<Suc m.\n       (\\<Sum>j = 0..<Suc m.\n           A i j *\n           (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n            j) =\n       A i n", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc m \\<Longrightarrow>\n       (\\<Sum>j = 0..<Suc m.\n           A i j *\n           (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n            j) =\n       A i n", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc m \\<Longrightarrow>\n       (\\<Sum>j = 0..<Suc m.\n           A i j *\n           (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n            j) =\n       A i n", "assume \"i < Suc m\""], ["proof (state)\nthis:\n  i < Suc m\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc m \\<Longrightarrow>\n       (\\<Sum>j = 0..<Suc m.\n           A i j *\n           (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n            j) =\n       A i n", "show \"(\\<Sum>j=0..<Suc m. A i j * ?y j) = A i n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "proof (cases \"i = p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n\n 2. i \\<noteq> p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "assume \"i = p\""], ["proof (state)\nthis:\n  i = p\n\ngoal (2 subgoals):\n 1. i = p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n\n 2. i \\<noteq> p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "with p"], ["proof (chain)\npicking this:\n  p < Suc m\n  A p m \\<noteq> (0::'a)\n  i = p", "show ?thesis"], ["proof (prove)\nusing this:\n  p < Suc m\n  A p m \\<noteq> (0::'a)\n  i = p\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<Suc m.\n      A i j *\n      (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j) =\n  A i n\n\ngoal (1 subgoal):\n 1. i \\<noteq> p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "assume \"i \\<noteq> p\""], ["proof (state)\nthis:\n  i \\<noteq> p\n\ngoal (1 subgoal):\n 1. i \\<noteq> p \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "proof (cases \"i = m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n\n 2. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "assume \"i = m\""], ["proof (state)\nthis:\n  i = m\n\ngoal (2 subgoals):\n 1. i = m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n\n 2. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "with p \\<open>i \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  p < Suc m\n  A p m \\<noteq> (0::'a)\n  i \\<noteq> p\n  i = m", "have \"p < m\""], ["proof (prove)\nusing this:\n  p < Suc m\n  A p m \\<noteq> (0::'a)\n  i \\<noteq> p\n  i = m\n\ngoal (1 subgoal):\n 1. p < m", "by simp"], ["proof (state)\nthis:\n  p < m\n\ngoal (2 subgoals):\n 1. i = m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n\n 2. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "with a[unfolded solution2_def, THEN spec, of p] p(2)"], ["proof (chain)\npicking this:\n  p < m \\<longrightarrow>\n  (\\<Sum>j = 0..<m.\n      Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n       p j *\n      y j) =\n  Fun.swap p m\n   (\\<lambda>i.\n       if i = p then \\<lambda>j. A p j / A p m\n       else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n   p n\n  A p m \\<noteq> (0::'a)\n  p < m", "have \"A p m * (A m m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A m j)) = A p m * (A m n * A p m + A m m * (\\<Sum>j = 0..<m. y j * A p j))\""], ["proof (prove)\nusing this:\n  p < m \\<longrightarrow>\n  (\\<Sum>j = 0..<m.\n      Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n       p j *\n      y j) =\n  Fun.swap p m\n   (\\<lambda>i.\n       if i = p then \\<lambda>j. A p j / A p m\n       else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n   p n\n  A p m \\<noteq> (0::'a)\n  p < m\n\ngoal (1 subgoal):\n 1. A p m * (A m m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A m j)) =\n    A p m * (A m n * A p m + A m m * (\\<Sum>j = 0..<m. y j * A p j))", "by (simp add: Fun.swap_def field_simps sum_subtractf lem1 lem2 sum_divide_distrib[symmetric]\n                     split: if_splits)"], ["proof (state)\nthis:\n  A p m * (A m m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A m j)) =\n  A p m * (A m n * A p m + A m m * (\\<Sum>j = 0..<m. y j * A p j))\n\ngoal (2 subgoals):\n 1. i = m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n\n 2. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "with \\<open>A p m \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  A p m \\<noteq> (0::'a)\n  A p m * (A m m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A m j)) =\n  A p m * (A m n * A p m + A m m * (\\<Sum>j = 0..<m. y j * A p j))", "show ?thesis"], ["proof (prove)\nusing this:\n  A p m \\<noteq> (0::'a)\n  A p m * (A m m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A m j)) =\n  A p m * (A m n * A p m + A m m * (\\<Sum>j = 0..<m. y j * A p j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "unfolding \\<open>i = m\\<close>"], ["proof (prove)\nusing this:\n  A p m \\<noteq> (0::'a)\n  A p m * (A m m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A m j)) =\n  A p m * (A m n * A p m + A m m * (\\<Sum>j = 0..<m. y j * A p j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m.\n        A m j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A m n", "by simp (simp add: field_simps)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<Suc m.\n      A i j *\n      (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j) =\n  A i n\n\ngoal (1 subgoal):\n 1. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "assume \"i \\<noteq> m\""], ["proof (state)\nthis:\n  i \\<noteq> m\n\ngoal (1 subgoal):\n 1. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> m", "have \"i < m\""], ["proof (prove)\nusing this:\n  i \\<noteq> m\n\ngoal (1 subgoal):\n 1. i < m", "using \\<open>i < Suc m\\<close>"], ["proof (prove)\nusing this:\n  i \\<noteq> m\n  i < Suc m\n\ngoal (1 subgoal):\n 1. i < m", "by simp"], ["proof (state)\nthis:\n  i < m\n\ngoal (1 subgoal):\n 1. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "with a[unfolded solution2_def, THEN spec, of i] p(2)"], ["proof (chain)\npicking this:\n  i < m \\<longrightarrow>\n  (\\<Sum>j = 0..<m.\n      Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n       i j *\n      y j) =\n  Fun.swap p m\n   (\\<lambda>i.\n       if i = p then \\<lambda>j. A p j / A p m\n       else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n   i n\n  A p m \\<noteq> (0::'a)\n  i < m", "have \"A p m * (A i m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A i j)) = A p m * (A i n * A p m + A i m * (\\<Sum>j = 0..<m. y j * A p j))\""], ["proof (prove)\nusing this:\n  i < m \\<longrightarrow>\n  (\\<Sum>j = 0..<m.\n      Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n       i j *\n      y j) =\n  Fun.swap p m\n   (\\<lambda>i.\n       if i = p then \\<lambda>j. A p j / A p m\n       else (\\<lambda>j. A i j - A i m * (A p j / A p m)))\n   i n\n  A p m \\<noteq> (0::'a)\n  i < m\n\ngoal (1 subgoal):\n 1. A p m * (A i m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A i j)) =\n    A p m * (A i n * A p m + A i m * (\\<Sum>j = 0..<m. y j * A p j))", "by (simp add: Fun.swap_def split: if_splits)\n              (simp add: field_simps sum_subtractf lem1 lem2 sum_divide_distrib [symmetric])"], ["proof (state)\nthis:\n  A p m * (A i m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A i j)) =\n  A p m * (A i n * A p m + A i m * (\\<Sum>j = 0..<m. y j * A p j))\n\ngoal (1 subgoal):\n 1. i \\<noteq> m \\<Longrightarrow>\n    (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "with \\<open>A p m \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  A p m \\<noteq> (0::'a)\n  A p m * (A i m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A i j)) =\n  A p m * (A i n * A p m + A i m * (\\<Sum>j = 0..<m. y j * A p j))", "show ?thesis"], ["proof (prove)\nusing this:\n  A p m \\<noteq> (0::'a)\n  A p m * (A i m * A p n + A p m * (\\<Sum>j = 0..<m. y j * A i j)) =\n  A p m * (A i n * A p m + A i m * (\\<Sum>j = 0..<m. y j * A p j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = 0..<Suc m.\n        A i j *\n        (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n         j) =\n    A i n", "by simp (simp add: field_simps)"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<Suc m.\n      A i j *\n      (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j) =\n  A i n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<Suc m.\n      A i j *\n      (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j) =\n  A i n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>j = 0..<Suc m.\n      A i j *\n      (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j) =\n  A i n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  solution2 A (Suc m) n\n   (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "with \\<open>usolution A (Suc m) n x\\<close>"], ["proof (chain)\npicking this:\n  usolution A (Suc m) n x\n  solution2 A (Suc m) n\n   (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))", "have \"\\<forall>j<Suc m. ?y j = x j\""], ["proof (prove)\nusing this:\n  usolution A (Suc m) n x\n  solution2 A (Suc m) n\n   (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m))\n\ngoal (1 subgoal):\n 1. \\<forall>j<Suc m.\n       (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j =\n       x j", "by (simp add: usolution_def)"], ["proof (state)\nthis:\n  \\<forall>j<Suc m.\n     (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j =\n     x j\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "hence \"\\<forall>j<m. y j = x j\""], ["proof (prove)\nusing this:\n  \\<forall>j<Suc m.\n     (y(m := A p n / A p m - (\\<Sum>j = 0..<m. A p j * y j) / A p m)) j =\n     x j\n\ngoal (1 subgoal):\n 1. \\<forall>j<m. y j = x j", "by simp (metis less_SucI nat_neq_iff)"], ["proof (state)\nthis:\n  \\<forall>j<m. y j = x j\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "}"], ["proof (state)\nthis:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n ?y2 \\<Longrightarrow>\n  \\<forall>j<m. ?y2 j = x j\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "ultimately"], ["proof (chain)\npicking this:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n x\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n ?y2 \\<Longrightarrow>\n  \\<forall>j<m. ?y2 j = x j", "have \"usolution ?A m n x\""], ["proof (prove)\nusing this:\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n x\n  solution2\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n ?y2 \\<Longrightarrow>\n  \\<forall>j<m. ?y2 j = x j\n\ngoal (1 subgoal):\n 1. usolution\n     (Fun.swap p m\n       (\\<lambda>i.\n           if i = p then \\<lambda>j. A p j / A p m\n           else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n     m n x", "by(simp add: usolution_def)"], ["proof (state)\nthis:\n  usolution\n   (Fun.swap p m\n     (\\<lambda>i.\n         if i = p then \\<lambda>j. A p j / A p m\n         else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n   m n x\n\ngoal (1 subgoal):\n 1. \\<And>m A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>m \\<le> n; usolution A m n x\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>B. gauss_jordan A m = Some B;\n        Suc m \\<le> n; usolution A (Suc m) n x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B. gauss_jordan A (Suc m) = Some B", "from Suc.IH[OF \\<open>m\\<le>n\\<close> this] 1"], ["proof (chain)\npicking this:\n  \\<exists>B.\n     gauss_jordan\n      (Fun.swap p m\n        (\\<lambda>i.\n            if i = p then \\<lambda>j. A p j / A p m\n            else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n      m =\n     Some B\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # xs", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>B.\n     gauss_jordan\n      (Fun.swap p m\n        (\\<lambda>i.\n            if i = p then \\<lambda>j. A p j / A p m\n            else (\\<lambda>j. A i j - A i m * (A p j / A p m))))\n      m =\n     Some B\n  dropWhile (\\<lambda>i. A i m = (0::'a)) [0..<Suc m] = p # xs\n\ngoal (1 subgoal):\n 1. \\<exists>B. gauss_jordan A (Suc m) = Some B", "by(simp)"], ["proof (state)\nthis:\n  \\<exists>B. gauss_jordan A (Suc m) = Some B\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Future work: extend the proof to matrix inversion.\\<close>"], ["", "hide_const (open) unit"], ["", "end"]]}