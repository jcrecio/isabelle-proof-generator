{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Common/List_Misc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma list_app_singletonE:\n  assumes \"rs\\<^sub>1 @ rs\\<^sub>2 = [x]\"\n  obtains (first) \"rs\\<^sub>1 = [x]\" \"rs\\<^sub>2 = []\"\n        | (second) \"rs\\<^sub>1 = []\" \"rs\\<^sub>2 = [x]\"", "lemma list_app_eq_cases:\n  assumes \"xs\\<^sub>1 @ xs\\<^sub>2 = ys\\<^sub>1 @ ys\\<^sub>2\"\n  obtains (longer)  \"xs\\<^sub>1 = take (length xs\\<^sub>1) ys\\<^sub>1\" \"xs\\<^sub>2 = drop (length xs\\<^sub>1) ys\\<^sub>1 @ ys\\<^sub>2\"\n        | (shorter) \"ys\\<^sub>1 = take (length ys\\<^sub>1) xs\\<^sub>1\" \"ys\\<^sub>2 = drop (length ys\\<^sub>1) xs\\<^sub>1 @ xs\\<^sub>2\"", "lemma empty_concat: \"concat (map (\\<lambda>x. []) ms) = []\""], "translations": [["", "lemma list_app_singletonE:\n  assumes \"rs\\<^sub>1 @ rs\\<^sub>2 = [x]\"\n  obtains (first) \"rs\\<^sub>1 = [x]\" \"rs\\<^sub>2 = []\"\n        | (second) \"rs\\<^sub>1 = []\" \"rs\\<^sub>2 = [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>rs\\<^sub>1 = [x]; rs\\<^sub>2 = []\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>rs\\<^sub>1 = []; rs\\<^sub>2 = [x]\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 @ rs\\<^sub>2 = [x]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>rs\\<^sub>1 = [x]; rs\\<^sub>2 = []\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>rs\\<^sub>1 = []; rs\\<^sub>2 = [x]\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (cases \"rs\\<^sub>1\") auto"], ["", "lemma list_app_eq_cases:\n  assumes \"xs\\<^sub>1 @ xs\\<^sub>2 = ys\\<^sub>1 @ ys\\<^sub>2\"\n  obtains (longer)  \"xs\\<^sub>1 = take (length xs\\<^sub>1) ys\\<^sub>1\" \"xs\\<^sub>2 = drop (length xs\\<^sub>1) ys\\<^sub>1 @ ys\\<^sub>2\"\n        | (shorter) \"ys\\<^sub>1 = take (length ys\\<^sub>1) xs\\<^sub>1\" \"ys\\<^sub>2 = drop (length ys\\<^sub>1) xs\\<^sub>1 @ xs\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>xs\\<^sub>1 = take (length xs\\<^sub>1) ys\\<^sub>1;\n              xs\\<^sub>2 =\n              drop (length xs\\<^sub>1) ys\\<^sub>1 @ ys\\<^sub>2\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>ys\\<^sub>1 = take (length ys\\<^sub>1) xs\\<^sub>1;\n      ys\\<^sub>2 = drop (length ys\\<^sub>1) xs\\<^sub>1 @ xs\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  xs\\<^sub>1 @ xs\\<^sub>2 = ys\\<^sub>1 @ ys\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>xs\\<^sub>1 = take (length xs\\<^sub>1) ys\\<^sub>1;\n              xs\\<^sub>2 =\n              drop (length xs\\<^sub>1) ys\\<^sub>1 @ ys\\<^sub>2\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>ys\\<^sub>1 = take (length ys\\<^sub>1) xs\\<^sub>1;\n      ys\\<^sub>2 = drop (length ys\\<^sub>1) xs\\<^sub>1 @ xs\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (cases \"length xs\\<^sub>1 \\<le> length ys\\<^sub>1\") (metis append_eq_append_conv_if)+"], ["", "lemma empty_concat: \"concat (map (\\<lambda>x. []) ms) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. concat (map (\\<lambda>x. []) ms) = []", "by simp"], ["", "end"]]}