{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma deny:\n  \"matches \\<gamma> m p \\<Longrightarrow> a = Drop \\<or> a = Reject \\<Longrightarrow> iptables_bigstep \\<Gamma> \\<gamma> p [Rule m a] Undecided (Decision FinalDeny)\"", "lemma seq_cons:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r],Undecided\\<rangle> \\<Rightarrow> t\" and \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,t\\<rangle> \\<Rightarrow> t'\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs, Undecided\\<rangle> \\<Rightarrow> t'\"", "lemma iptables_bigstep_induct\n  [case_names Skip Allow Deny Log Nomatch Decision Seq Call_return Call_result,\n   induct pred: iptables_bigstep]:\n  \"\\<lbrakk> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,s\\<rangle> \\<Rightarrow> t;\n     \\<And>t. P [] t t;\n     \\<And>m a. matches \\<gamma> m p \\<Longrightarrow> a = Accept \\<Longrightarrow> P [Rule m a] Undecided (Decision FinalAllow);\n     \\<And>m a. matches \\<gamma> m p \\<Longrightarrow> a = Drop \\<or> a = Reject \\<Longrightarrow> P [Rule m a] Undecided (Decision FinalDeny);\n     \\<And>m a. matches \\<gamma> m p \\<Longrightarrow> a = Log \\<or> a = Empty \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>m a. \\<not> matches \\<gamma> m p \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>rs X. P rs (Decision X) (Decision X);\n     \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t'. rs = rs\\<^sub>1 @ rs\\<^sub>2 \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> P rs\\<^sub>1 Undecided t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> P rs\\<^sub>2 t t' \\<Longrightarrow> P rs Undecided t';\n     \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2. matches \\<gamma> m p \\<Longrightarrow> a = Call chain \\<Longrightarrow> \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2) \\<Longrightarrow> matches \\<gamma> m' p \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> P rs\\<^sub>1 Undecided Undecided \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>m a chain rs t. matches \\<gamma> m p \\<Longrightarrow> a = Call chain \\<Longrightarrow> \\<Gamma> chain = Some rs \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> P rs Undecided t \\<Longrightarrow> P [Rule m a] Undecided t \\<rbrakk> \\<Longrightarrow>\n   P rs s t\"", "lemma skipD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [] \\<Longrightarrow> s = t\"", "lemma decisionD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> s = Decision X \\<Longrightarrow> t = Decision X\"", "lemma acceptD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Accept] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Decision FinalAllow\"", "lemma dropD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Drop] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Decision FinalDeny\"", "lemma rejectD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Reject] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Decision FinalDeny\"", "lemma logD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Log] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Undecided\"", "lemma emptyD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Empty] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Undecided\"", "lemma nomatchD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m a] \\<Longrightarrow> s = Undecided \\<Longrightarrow> \\<not> matches \\<gamma> m p \\<Longrightarrow> t = Undecided\"", "lemma callD:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t\" \"r = [Rule m (Call chain)]\" \"s = Undecided\" \"matches \\<gamma> m p\" \"\\<Gamma> chain = Some rs\"\n  obtains \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,s\\<rangle> \\<Rightarrow> t\"\n        | rs\\<^sub>1 rs\\<^sub>2 m' where \"rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2\" \"matches \\<gamma> m' p\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> Undecided\" \"t = Undecided\"", "lemmas iptables_bigstepD = skipD acceptD dropD rejectD logD emptyD nomatchD decisionD callD", "lemma seq':\n  assumes \"rs = rs\\<^sub>1 @ rs\\<^sub>2\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> t\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t\\<rangle> \\<Rightarrow> t'\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,s\\<rangle> \\<Rightarrow> t'\"", "lemma seq'_cons: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r],s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs, s\\<rangle> \\<Rightarrow> t'\"", "lemma seq_split:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" \"rs = rs\\<^sub>1@rs\\<^sub>2\"\n  obtains t' where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> t'\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t'\\<rangle> \\<Rightarrow> t\"", "lemma seqE:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1@rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"\n  obtains ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> ti\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,ti\\<rangle> \\<Rightarrow> t\"", "lemma seqE_cons:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs, s\\<rangle> \\<Rightarrow> t\"\n  obtains ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r],s\\<rangle> \\<Rightarrow> ti\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,ti\\<rangle> \\<Rightarrow> t\"", "lemma nomatch':\n  assumes \"\\<And>r. r \\<in> set rs \\<Longrightarrow> \\<not> matches \\<gamma> (get_match r) p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s\"", "lemma no_free_return: assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Return], Undecided\\<rangle> \\<Rightarrow> t\" and \"matches \\<gamma> m p\" shows \"False\"", "lemma seq_progress: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> rs = rs\\<^sub>1@rs\\<^sub>2 \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\"", "theorem iptables_bigstep_deterministic: assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" and \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\" shows \"t = t'\"", "lemma iptables_bigstep_to_undecided: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> s = Undecided\"", "lemma iptables_bigstep_to_decision: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision Y\\<rangle> \\<Rightarrow> Decision X \\<Longrightarrow> Y = X\"", "lemma Rule_UndecidedE:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Undecided\"\n  obtains (nomatch) \"\\<not> matches \\<gamma> m p\"\n        | (log) \"a = Log \\<or> a = Empty\"\n        | (call) c where \"a = Call c\" \"matches \\<gamma> m p\"", "lemma Rule_DecisionE:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Decision X\"\n  obtains (call) chain where \"matches \\<gamma> m p\" \"a = Call chain\"\n        | (accept_reject) \"matches \\<gamma> m p\" \"X = FinalAllow \\<Longrightarrow> a = Accept\" \"X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\"", "lemma log_remove:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ [Rule m Log] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"", "lemma empty_empty:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ [Rule m Empty] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"", "lemma Unknown_actions_False: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r # rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = Rule m a \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> a = Unknown \\<or> (\\<exists>chain. a = Goto chain) \\<Longrightarrow> False\"", "lemma wf_\\<Gamma>_append: \"wf_\\<Gamma> (rs1@rs2) \\<longleftrightarrow> wf_\\<Gamma> rs1 \\<and> wf_\\<Gamma> rs2\"", "lemma wf_\\<Gamma>_tail: \"wf_\\<Gamma> (r # rs) \\<Longrightarrow> wf_\\<Gamma> rs\"", "lemma wf_\\<Gamma>_Call: \"wf_\\<Gamma> [Rule m (Call chain)] \\<Longrightarrow> wf_\\<Gamma> (the (\\<Gamma> chain)) \\<and> (\\<exists>rs. \\<Gamma> chain = Some rs)\"", "lemma \"wf_\\<Gamma> rs \\<Longrightarrow> p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"", "lemma wf_chain_append: \"wf_chain \\<Gamma> (rs1@rs2) \\<longleftrightarrow> wf_chain \\<Gamma> rs1 \\<and> wf_chain \\<Gamma> rs2\"", "lemma wf_chain_fst: \"wf_chain \\<Gamma> (r # rs) \\<Longrightarrow>  wf_chain \\<Gamma> (rs)\"", "lemma sanity_wf_ruleset_wf_chain: \"sanity_wf_ruleset \\<Gamma> \\<Longrightarrow> rs \\<in> ran (map_of \\<Gamma>) \\<Longrightarrow> wf_chain (map_of \\<Gamma>) rs\"", "lemma sanity_wf_ruleset_start: \"sanity_wf_ruleset \\<Gamma> \\<Longrightarrow> chain_name \\<in> dom (map_of \\<Gamma>) \\<Longrightarrow>\n  default_action = Accept \\<or> default_action = Drop \\<Longrightarrow> \n  wf_chain (map_of \\<Gamma>) [Rule MatchAny (Call chain_name), Rule MatchAny default_action]\"", "lemma [code]: \"sanity_wf_ruleset \\<Gamma> =\n  (let dom = map fst \\<Gamma>;\n       ran = map snd \\<Gamma>\n   in distinct dom \\<and>\n    (\\<forall> rs \\<in> set ran. (\\<forall>r \\<in> set rs. case get_action r of Accept \\<Rightarrow> True\n                                                       | Drop \\<Rightarrow> True\n                                                       | Reject \\<Rightarrow> True\n                                                       | Log \\<Rightarrow> True\n                                                       | Empty \\<Rightarrow> True\n                                                       | Call chain \\<Rightarrow> chain \\<in> set dom\n                                                       | Goto chain \\<Rightarrow> chain \\<in> set dom\n                                                       | Return \\<Rightarrow> True\n                                                       | _ \\<Rightarrow> False)))\"", "lemma semantics_bigstep_defined1: assumes \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg\"\n  and \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. \\<forall> r \\<in> set rsg. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown\"\n  and \"\\<forall> r \\<in> set rs. get_action r \\<noteq> Return\" (*no toplevel return*)\n  and \"(\\<forall>name \\<in> dom \\<Gamma>. \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> t)\" (*defined for all chains in the background ruleset*)\n  shows \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"", "lemma iptables_bigstep_defined_if_singleton_rules:\n  \"\\<forall> r \\<in> set rs. (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow> \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"", "lemma calls_chain_def2: \"calls_chain \\<Gamma> = {(caller, callee). \\<exists>rs m. \\<Gamma> caller = Some rs \\<and> Rule m (Call callee) \\<in> set rs}\"", "lemma \"calls_chain [\n      ''FORWARD'' \\<mapsto> [(Rule m1 Log), (Rule m2 (Call ''foo'')), (Rule m3 Accept), (Rule m' (Call ''baz''))],\n      ''foo'' \\<mapsto> [(Rule m4 Log), (Rule m5 Return), (Rule m6 (Call ''bar''))], \n      ''bar'' \\<mapsto> [],\n      ''baz'' \\<mapsto> []] =\n      {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}\"", "lemma \"wf (calls_chain [\n      ''FORWARD'' \\<mapsto> [(Rule m1 Log), (Rule m2 (Call ''foo'')), (Rule m3 Accept), (Rule m' (Call ''baz''))],\n      ''foo'' \\<mapsto> [(Rule m4 Log), (Rule m5 Return), (Rule m6 (Call ''bar''))], \n      ''bar'' \\<mapsto> [],\n      ''baz'' \\<mapsto> []])\"", "lemma called_by_chain_converse: \"calls_chain \\<Gamma> = converse (called_by_chain \\<Gamma>)\"", "lemma wf_called_by_chain: \"finite (calls_chain \\<Gamma>) \\<Longrightarrow> wf (calls_chain \\<Gamma>) \\<Longrightarrow> wf (called_by_chain \\<Gamma>)\"", "lemma helper_cases_call_subchain_defined_or_return:\n        \"(\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x) \\<Longrightarrow>\n         \\<forall>rsg\\<in>ran \\<Gamma>. \\<forall>r\\<in>set rsg. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow>\n         \\<forall>y m. \\<forall>r\\<in>set rs_called. r = Rule m (Call y) \\<longrightarrow> (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call y)], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n         wf_chain \\<Gamma> rs_called \\<Longrightarrow> \n         \\<forall>r\\<in>set rs_called. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow>\n         (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n         (\\<exists>rs_called1 rs_called2 m'.\n             rs_called = (rs_called1 @ [Rule m' Return] @ rs_called2) \\<and>\n             matches \\<gamma> m' p \\<and> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\"", "lemma helper_defined_single: \n    assumes \"wf (called_by_chain \\<Gamma>)\" \n    and \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\"\n    and \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {[Rule m a]}. \\<forall> r \\<in> set rsg. (\\<not>(\\<exists>chain. get_action r = Goto chain)) \\<and> get_action r \\<noteq> Unknown\"\n    and \"a \\<noteq> Return\" (*no toplevel Return*)\n    shows \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], s\\<rangle> \\<Rightarrow> t\"", "lemma helper_defined_ruleset_calledby: \"wf (called_by_chain \\<Gamma>) \\<Longrightarrow> \n    \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg \\<Longrightarrow>\n    \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. \\<forall> r \\<in> set rsg. (\\<not>(\\<exists>chain. get_action r = Goto chain)) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow>\n    \\<forall> r \\<in> set rs. get_action r \\<noteq> Return \\<Longrightarrow>\n    \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"", "lemma iptables_bigstep_rm_LogEmpty: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"", "lemma iptables_bigstep_rw_Reject: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], "translations": [["", "lemma deny:\n  \"matches \\<gamma> m p \\<Longrightarrow> a = Drop \\<or> a = Reject \\<Longrightarrow> iptables_bigstep \\<Gamma> \\<gamma> p [Rule m a] Undecided (Decision FinalDeny)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalDeny", "by (auto intro: drop reject)"], ["", "lemma seq_cons:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r],Undecided\\<rangle> \\<Rightarrow> t\" and \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,t\\<rangle> \\<Rightarrow> t'\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs, Undecided\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, Undecided\\<rangle> \\<Rightarrow> t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, Undecided\\<rangle> \\<Rightarrow> t'", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t'", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r] @ rs, Undecided\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r] @\n       rs, Undecided\\<rangle> \\<Rightarrow> t'", "by (rule seq)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r] @\n     rs, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, Undecided\\<rangle> \\<Rightarrow> t'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r] @\n     rs, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, Undecided\\<rangle> \\<Rightarrow> t'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iptables_bigstep_induct\n  [case_names Skip Allow Deny Log Nomatch Decision Seq Call_return Call_result,\n   induct pred: iptables_bigstep]:\n  \"\\<lbrakk> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,s\\<rangle> \\<Rightarrow> t;\n     \\<And>t. P [] t t;\n     \\<And>m a. matches \\<gamma> m p \\<Longrightarrow> a = Accept \\<Longrightarrow> P [Rule m a] Undecided (Decision FinalAllow);\n     \\<And>m a. matches \\<gamma> m p \\<Longrightarrow> a = Drop \\<or> a = Reject \\<Longrightarrow> P [Rule m a] Undecided (Decision FinalDeny);\n     \\<And>m a. matches \\<gamma> m p \\<Longrightarrow> a = Log \\<or> a = Empty \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>m a. \\<not> matches \\<gamma> m p \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>rs X. P rs (Decision X) (Decision X);\n     \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t'. rs = rs\\<^sub>1 @ rs\\<^sub>2 \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> P rs\\<^sub>1 Undecided t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> P rs\\<^sub>2 t t' \\<Longrightarrow> P rs Undecided t';\n     \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2. matches \\<gamma> m p \\<Longrightarrow> a = Call chain \\<Longrightarrow> \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2) \\<Longrightarrow> matches \\<gamma> m' p \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> P rs\\<^sub>1 Undecided Undecided \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>m a chain rs t. matches \\<gamma> m p \\<Longrightarrow> a = Call chain \\<Longrightarrow> \\<Gamma> chain = Some rs \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> P rs Undecided t \\<Longrightarrow> P [Rule m a] Undecided t \\<rbrakk> \\<Longrightarrow>\n   P rs s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     \\<And>t. P [] t t;\n     \\<And>m a.\n        \\<lbrakk>matches \\<gamma> m p; a = Accept\\<rbrakk>\n        \\<Longrightarrow> P [Rule m a] Undecided (Decision FinalAllow);\n     \\<And>m a.\n        \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject\\<rbrakk>\n        \\<Longrightarrow> P [Rule m a] Undecided (Decision FinalDeny);\n     \\<And>m a.\n        \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty\\<rbrakk>\n        \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>m a.\n        \\<not> matches \\<gamma> m p \\<Longrightarrow>\n        P [Rule m a] Undecided Undecided;\n     \\<And>rs X. P rs (Decision X) (Decision X);\n     \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t'.\n        \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n         P rs\\<^sub>1 Undecided t;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n         P rs\\<^sub>2 t t'\\<rbrakk>\n        \\<Longrightarrow> P rs Undecided t';\n     \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n         \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         P rs\\<^sub>1 Undecided Undecided\\<rbrakk>\n        \\<Longrightarrow> P [Rule m a] Undecided Undecided;\n     \\<And>m a chain rs t.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n         \\<Gamma> chain = Some rs;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n         P rs Undecided t\\<rbrakk>\n        \\<Longrightarrow> P [Rule m a] Undecided t\\<rbrakk>\n    \\<Longrightarrow> P rs s t", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma skipD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [] \\<Longrightarrow> s = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = []\\<rbrakk>\n    \\<Longrightarrow> s = t", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma decisionD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> s = Decision X \\<Longrightarrow> t = Decision X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     s = Decision X\\<rbrakk>\n    \\<Longrightarrow> t = Decision X", "by (induction rule: iptables_bigstep_induct) auto"], ["", "context\n  notes skipD[dest] list_app_singletonE[elim]\nbegin"], ["", "lemma acceptD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Accept] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Decision FinalAllow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = [Rule m Accept]; matches \\<gamma> m p; s = Undecided\\<rbrakk>\n    \\<Longrightarrow> t = Decision FinalAllow", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma dropD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Drop] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Decision FinalDeny\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = [Rule m Drop]; matches \\<gamma> m p; s = Undecided\\<rbrakk>\n    \\<Longrightarrow> t = Decision FinalDeny", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma rejectD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Reject] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Decision FinalDeny\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = [Rule m Reject]; matches \\<gamma> m p; s = Undecided\\<rbrakk>\n    \\<Longrightarrow> t = Decision FinalDeny", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma logD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Log] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = [Rule m Log]; matches \\<gamma> m p; s = Undecided\\<rbrakk>\n    \\<Longrightarrow> t = Undecided", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma emptyD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m Empty] \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> s = Undecided \\<Longrightarrow> t = Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = [Rule m Empty]; matches \\<gamma> m p; s = Undecided\\<rbrakk>\n    \\<Longrightarrow> t = Undecided", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma nomatchD: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = [Rule m a] \\<Longrightarrow> s = Undecided \\<Longrightarrow> \\<not> matches \\<gamma> m p \\<Longrightarrow> t = Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t;\n     r = [Rule m a]; s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> t = Undecided", "by (induction rule: iptables_bigstep.induct) auto"], ["", "lemma callD:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t\" \"r = [Rule m (Call chain)]\" \"s = Undecided\" \"matches \\<gamma> m p\" \"\\<Gamma> chain = Some rs\"\n  obtains \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,s\\<rangle> \\<Rightarrow> t\"\n        | rs\\<^sub>1 rs\\<^sub>2 m' where \"rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2\" \"matches \\<gamma> m' p\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> Undecided\" \"t = Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n             thesis;\n     \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> Undecided;\n         t = Undecided\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r, s\\<rangle> \\<Rightarrow> t\n  r = [Rule m (Call chain)]\n  s = Undecided\n  matches \\<gamma> m p\n  \\<Gamma> chain = Some rs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n             thesis;\n     \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> Undecided;\n         t = Undecided\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof (induction r s t arbitrary: rs rule: iptables_bigstep.induct)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>t rs.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> Undecided;\n            t = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [] = [Rule m (Call chain)]; t = Undecided; matches \\<gamma> m p;\n        \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalAllow \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalAllow = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Accept] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalDeny \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalDeny = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Drop] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalDeny \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalDeny = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Reject] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Log] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Empty] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>ma a rs.\n       \\<lbrakk>\\<not> matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma a] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>rs X rsa.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Decision\n                         X\\<rangle> \\<Rightarrow> Decision\n             X \\<Longrightarrow>\n                thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rsa = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                            X\\<rangle> \\<Rightarrow> Undecided;\n            Decision X = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = [Rule m (Call chain)]; Decision X = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rsa\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>rs\\<^sub>1 t rs\\<^sub>2 t' rs.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                    thesis;\n            \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n               \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                matches \\<gamma> m' p;\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n                t = Undecided\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n            matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n                    thesis;\n            \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n               \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                matches \\<gamma> m' p;\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> Undecided;\n                t' = Undecided\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = [Rule m (Call chain)]; t = Undecided;\n            matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            t' = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs\\<^sub>1 @ rs\\<^sub>2 = [Rule m (Call chain)];\n        Undecided = Undecided; matches \\<gamma> m p;\n        \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>ma chaina rs\\<^sub>1 m' rs\\<^sub>2 rs.\n        \\<lbrakk>matches \\<gamma> ma p;\n         \\<Gamma> chaina =\n         Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         \\<And>rs.\n            \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n                     thesis;\n             \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n                \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                 matches \\<gamma> m' p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n                 Undecided = Undecided\\<rbrakk>\n                \\<Longrightarrow> thesis;\n             rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n             matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n         thesis;\n         \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n            \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n             matches \\<gamma> m' p;\n             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n             Undecided = Undecided\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         [Rule ma (Call chaina)] = [Rule m (Call chain)];\n         Undecided = Undecided; matches \\<gamma> m p;\n         \\<Gamma> chain = Some rs\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 11 subgoals...", "case (seq rs\\<^sub>1)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs, Undecided\\<rangle> \\<Rightarrow> t_ \\<Longrightarrow>\n           thesis;\n   \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n      \\<lbrakk>?rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n       matches \\<gamma> m' p;\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n       t_ = Undecided\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n   matches \\<gamma> m p; \\<Gamma> chain = Some ?rs\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs, t_\\<rangle> \\<Rightarrow> t'_ \\<Longrightarrow>\n           thesis;\n   \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n      \\<lbrakk>?rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n       matches \\<gamma> m' p;\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t_\\<rangle> \\<Rightarrow> Undecided;\n       t'_ = Undecided\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   rs\\<^sub>2_ = [Rule m (Call chain)]; t_ = Undecided;\n   matches \\<gamma> m p; \\<Gamma> chain = Some ?rs\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'_ \\<Longrightarrow>\n  thesis\n  \\<lbrakk>rs = ?rs\\<^sub>1 @ Rule ?m' Return # ?rs\\<^sub>2;\n   matches \\<gamma> ?m' p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n   t'_ = Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs\\<^sub>1 @ rs\\<^sub>2_ = [Rule m (Call chain)]\n  Undecided = Undecided\n  matches \\<gamma> m p\n  \\<Gamma> chain = Some rs\n\ngoal (11 subgoals):\n 1. \\<And>t rs.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> Undecided;\n            t = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [] = [Rule m (Call chain)]; t = Undecided; matches \\<gamma> m p;\n        \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalAllow \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalAllow = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Accept] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalDeny \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalDeny = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Drop] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalDeny \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalDeny = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Reject] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Log] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Empty] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>ma a rs.\n       \\<lbrakk>\\<not> matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma a] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>rs X rsa.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Decision\n                         X\\<rangle> \\<Rightarrow> Decision\n             X \\<Longrightarrow>\n                thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rsa = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                            X\\<rangle> \\<Rightarrow> Undecided;\n            Decision X = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = [Rule m (Call chain)]; Decision X = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rsa\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>rs\\<^sub>1 t rs\\<^sub>2 t' rs.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                    thesis;\n            \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n               \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                matches \\<gamma> m' p;\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n                t = Undecided\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n            matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n                    thesis;\n            \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n               \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                matches \\<gamma> m' p;\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> Undecided;\n                t' = Undecided\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = [Rule m (Call chain)]; t = Undecided;\n            matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            t' = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs\\<^sub>1 @ rs\\<^sub>2 = [Rule m (Call chain)];\n        Undecided = Undecided; matches \\<gamma> m p;\n        \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>ma chaina rs\\<^sub>1 m' rs\\<^sub>2 rs.\n        \\<lbrakk>matches \\<gamma> ma p;\n         \\<Gamma> chaina =\n         Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         \\<And>rs.\n            \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n                     thesis;\n             \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n                \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                 matches \\<gamma> m' p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n                 Undecided = Undecided\\<rbrakk>\n                \\<Longrightarrow> thesis;\n             rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n             matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n         thesis;\n         \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n            \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n             matches \\<gamma> m' p;\n             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n             Undecided = Undecided\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         [Rule ma (Call chaina)] = [Rule m (Call chain)];\n         Undecided = Undecided; matches \\<gamma> m p;\n         \\<Gamma> chain = Some rs\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs, Undecided\\<rangle> \\<Rightarrow> t_ \\<Longrightarrow>\n           thesis;\n   \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n      \\<lbrakk>?rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n       matches \\<gamma> m' p;\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n       t_ = Undecided\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n   matches \\<gamma> m p; \\<Gamma> chain = Some ?rs\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs, t_\\<rangle> \\<Rightarrow> t'_ \\<Longrightarrow>\n           thesis;\n   \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n      \\<lbrakk>?rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n       matches \\<gamma> m' p;\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t_\\<rangle> \\<Rightarrow> Undecided;\n       t'_ = Undecided\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   rs\\<^sub>2_ = [Rule m (Call chain)]; t_ = Undecided;\n   matches \\<gamma> m p; \\<Gamma> chain = Some ?rs\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'_ \\<Longrightarrow>\n  thesis\n  \\<lbrakk>rs = ?rs\\<^sub>1 @ Rule ?m' Return # ?rs\\<^sub>2;\n   matches \\<gamma> ?m' p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n   t'_ = Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs\\<^sub>1 @ rs\\<^sub>2_ = [Rule m (Call chain)]\n  Undecided = Undecided\n  matches \\<gamma> m p\n  \\<Gamma> chain = Some rs\n\ngoal (1 subgoal):\n 1. thesis", "by (cases rs\\<^sub>1) auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (10 subgoals):\n 1. \\<And>t rs.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> Undecided;\n            t = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [] = [Rule m (Call chain)]; t = Undecided; matches \\<gamma> m p;\n        \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalAllow \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalAllow = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Accept] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalDeny \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalDeny = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Drop] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           FinalDeny \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Decision FinalDeny = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Reject] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Log] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>ma rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma Empty] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>ma a rs.\n       \\<lbrakk>\\<not> matches \\<gamma> ma p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma a] = [Rule m (Call chain)]; Undecided = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>rs X rsa.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Decision\n                         X\\<rangle> \\<Rightarrow> Decision\n             X \\<Longrightarrow>\n                thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rsa = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                            X\\<rangle> \\<Rightarrow> Undecided;\n            Decision X = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = [Rule m (Call chain)]; Decision X = Undecided;\n        matches \\<gamma> m p; \\<Gamma> chain = Some rsa\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>ma chaina rs\\<^sub>1 m' rs\\<^sub>2 rs.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma> chaina = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n                    thesis;\n            \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n               \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                matches \\<gamma> m' p;\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n                Undecided = Undecided\\<rbrakk>\n               \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = [Rule m (Call chain)]; Undecided = Undecided;\n            matches \\<gamma> m p; \\<Gamma> chain = Some rs\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n        thesis;\n        \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n           \\<lbrakk>rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n            matches \\<gamma> m' p;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n            Undecided = Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule ma (Call chaina)] = [Rule m (Call chain)];\n        Undecided = Undecided; matches \\<gamma> m p;\n        \\<Gamma> chain = Some rs\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>ma chaina rs t rsa.\n        \\<lbrakk>matches \\<gamma> ma p; \\<Gamma> chaina = Some rs;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n         \\<And>rsa.\n            \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                     thesis;\n             \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n                \\<lbrakk>rsa = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n                 matches \\<gamma> m' p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n                 t = Undecided\\<rbrakk>\n                \\<Longrightarrow> thesis;\n             rs = [Rule m (Call chain)]; Undecided = Undecided;\n             matches \\<gamma> m p; \\<Gamma> chain = Some rsa\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n         thesis;\n         \\<And>rs\\<^sub>1 m' rs\\<^sub>2.\n            \\<lbrakk>rsa = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n             matches \\<gamma> m' p;\n             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n             t = Undecided\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         [Rule ma (Call chaina)] = [Rule m (Call chain)];\n         Undecided = Undecided; matches \\<gamma> m p;\n         \\<Gamma> chain = Some rsa\\<rbrakk>\n        \\<Longrightarrow> thesis", "qed auto"], ["", "end"], ["", "lemmas iptables_bigstepD = skipD acceptD dropD rejectD logD emptyD nomatchD decisionD callD"], ["", "lemma seq':\n  assumes \"rs = rs\\<^sub>1 @ rs\\<^sub>2\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> t\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t\\<rangle> \\<Rightarrow> t'\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,s\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "using assms"], ["proof (prove)\nusing this:\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "by (cases s) (auto intro: seq decision dest: decisionD)"], ["", "lemma seq'_cons: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r],s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs, s\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                         rs, s\\<rangle> \\<Rightarrow> t'", "by (metis decision decisionD state.exhaust seq_cons)"], ["", "lemma seq_split:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" \"rs = rs\\<^sub>1@rs\\<^sub>2\"\n  obtains t' where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> t'\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t'\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t';\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t';\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induction rs s t arbitrary: rs\\<^sub>1 rs\\<^sub>2 thesis rule: iptables_bigstep_induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalAllow\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalDeny\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Allow"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Accept\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Decision\n        FinalAllow\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (9 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalAllow\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalDeny\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Accept\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Decision\n        FinalAllow\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. thesis", "by (cases rs\\<^sub>1) (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  thesis\n\ngoal (8 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalDeny\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalDeny\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Deny"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Drop \\<or> a_ = Reject\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Decision\n        FinalDeny\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (8 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                FinalDeny\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Drop \\<or> a_ = Reject\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Decision\n        FinalDeny\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. thesis", "by (cases rs\\<^sub>1) (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  thesis\n\ngoal (7 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Log"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Log \\<or> a_ = Empty\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (7 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Log \\<or> a_ = Empty\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. thesis", "by (cases rs\\<^sub>1) (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  thesis\n\ngoal (6 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Nomatch"], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m_ p\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (6 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  \\<not> matches \\<gamma> m_ p\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. thesis", "by (cases rs\\<^sub>1) (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  thesis\n\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Seq rs rsa rsb t t')"], ["proof (state)\nthis:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "hence rs: \"rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\""], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "note List.append_eq_append_conv_if[simp]"], ["proof (state)\nthis:\n  (?xs\\<^sub>1 @ ?xs\\<^sub>2 = ?ys\\<^sub>1 @ ?ys\\<^sub>2) =\n  (if length ?xs\\<^sub>1 \\<le> length ?ys\\<^sub>1\n   then ?xs\\<^sub>1 = take (length ?xs\\<^sub>1) ?ys\\<^sub>1 \\<and>\n        ?xs\\<^sub>2 = drop (length ?xs\\<^sub>1) ?ys\\<^sub>1 @ ?ys\\<^sub>2\n   else take (length ?ys\\<^sub>1) ?xs\\<^sub>1 = ?ys\\<^sub>1 \\<and>\n        drop (length ?ys\\<^sub>1) ?xs\\<^sub>1 @ ?xs\\<^sub>2 = ?ys\\<^sub>2)\n\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' thesis.\n           \\<lbrakk>\\<And>t'a.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'a.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "from rs"], ["proof (chain)\npicking this:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. thesis", "proof (cases rule: list_app_eq_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "case longer"], ["proof (state)\nthis:\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "with Seq"], ["proof (chain)\npicking this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2", "have t1: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa) rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa)\n        rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa)\n      rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "from Seq longer"], ["proof (chain)\npicking this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2", "obtain t2\n          where t2a: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop (length rsa) rs\\<^sub>1,t\\<rangle> \\<Rightarrow> t2\"\n            and rs2_t2: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t2\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesisa__\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>t2.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop (length rsa)\n                     rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop (length rsa)\n      rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "with t1 rs2_t2"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa)\n      rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop (length rsa)\n      rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa) rs\\<^sub>1 @ drop (length rsa) rs\\<^sub>1,Undecided\\<rangle> \\<Rightarrow> t2\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa)\n      rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop (length rsa)\n      rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa) rs\\<^sub>1 @\n       drop (length rsa) rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t2", "by (blast intro: iptables_bigstep.seq)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa) rs\\<^sub>1 @\n     drop (length rsa) rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "with Seq rs2_t2"], ["proof (chain)\npicking this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa) rs\\<^sub>1 @\n     drop (length rsa) rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t2", "show ?thesis"], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t2\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa) rs\\<^sub>1 @\n     drop (length rsa) rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t2\n\ngoal (1 subgoal):\n 1. thesis", "by simp"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "case shorter"], ["proof (state)\nthis:\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "with rs"], ["proof (chain)\npicking this:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb", "have rsa': \"rsa = rs\\<^sub>1 @ take (length rsa - length rs\\<^sub>1) rs\\<^sub>2\""], ["proof (prove)\nusing this:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\n\ngoal (1 subgoal):\n 1. rsa = rs\\<^sub>1 @ take (length rsa - length rs\\<^sub>1) rs\\<^sub>2", "by (metis append_eq_conv_conj length_drop)"], ["proof (state)\nthis:\n  rsa = rs\\<^sub>1 @ take (length rsa - length rs\\<^sub>1) rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "from shorter rs"], ["proof (chain)\npicking this:\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2", "have rsb': \"rsb = drop (length rsa - length rs\\<^sub>1) rs\\<^sub>2\""], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. rsb = drop (length rsa - length rs\\<^sub>1) rs\\<^sub>2", "by (metis append_eq_conv_conj length_drop)"], ["proof (state)\nthis:\n  rsb = drop (length rsa - length rs\\<^sub>1) rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "from Seq rsa'"], ["proof (chain)\npicking this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  rsa = rs\\<^sub>1 @ take (length rsa - length rs\\<^sub>1) rs\\<^sub>2", "obtain t1\n          where t1a: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,Undecided\\<rangle> \\<Rightarrow> t1\"\n            and t1b: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take (length rsa - length rs\\<^sub>1) rs\\<^sub>2,t1\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesisa__\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  rsa = rs\\<^sub>1 @ take (length rsa - length rs\\<^sub>1) rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>t1.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t1;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take\n             (length rsa - length rs\\<^sub>1)\n             rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t1\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take\n      (length rsa - length rs\\<^sub>1)\n      rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "from rsb' Seq.hyps"], ["proof (chain)\npicking this:\n  rsb = drop (length rsa - length rs\\<^sub>1) rs\\<^sub>2\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'", "have t2: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop (length rsa - length rs\\<^sub>1) rs\\<^sub>2,t\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  rsb = drop (length rsa - length rs\\<^sub>1) rs\\<^sub>2\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop\n        (length rsa - length rs\\<^sub>1)\n        rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop\n      (length rsa - length rs\\<^sub>1)\n      rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "with seq' t1b"], ["proof (chain)\npicking this:\n  \\<lbrakk>?rs = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs\\<^sub>1, ?s\\<rangle> \\<Rightarrow> ?t;\n   ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, ?s\\<rangle> \\<Rightarrow> ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take\n      (length rsa - length rs\\<^sub>1)\n      rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop\n      (length rsa - length rs\\<^sub>1)\n      rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t1\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?rs = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs\\<^sub>1, ?s\\<rangle> \\<Rightarrow> ?t;\n   ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, ?s\\<rangle> \\<Rightarrow> ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>take\n      (length rsa - length rs\\<^sub>1)\n      rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>drop\n      (length rsa - length rs\\<^sub>1)\n      rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t'", "by fastforce"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> thesis", "with Seq t1a"], ["proof (chain)\npicking this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t1\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<And>t'a.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a;\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'a\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t1\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t1\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. thesis", "by fast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Call_return"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some (rs\\<^sub>1_ @ [Rule m'_ Return] @ rs\\<^sub>2_)\n  matches \\<gamma> m'_ p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs\\<^sub>1_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some (rs\\<^sub>1_ @ [Rule m'_ Return] @ rs\\<^sub>2_)\n  matches \\<gamma> m'_ p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs\\<^sub>1_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided &&&\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> Undecided", "by (case_tac [!] rs\\<^sub>1) (auto intro: iptables_bigstep.skip iptables_bigstep.call_return)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. thesis", "by fact"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Call_result _ _ _ _ t)"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 thesis.\n           \\<lbrakk>\\<And>t'.\n                       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>t'.\n           \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases rs\\<^sub>1)"], ["proof (state)\ngoal (2 subgoals):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow> thesis\n 2. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "case Nil"], ["proof (state)\nthis:\n  rs\\<^sub>1 = []\n\ngoal (2 subgoals):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow> thesis\n 2. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "with Call_result"], ["proof (chain)\npicking this:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = []", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = []\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided &&&\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t", "by (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow> thesis\n 2. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. thesis", "by fact"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "case Cons"], ["proof (state)\nthis:\n  rs\\<^sub>1 = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "with Call_result"], ["proof (chain)\npicking this:\n  matches \\<gamma> m_ p\n  a___ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a___] = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = a_ # list_", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a___ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>\\<And>t'.\n              \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n              \\<Longrightarrow> ?thesis;\n   rs_ = ?rs\\<^sub>1 @ ?rs\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t';\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> thesis\n  [Rule m_ a___] = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t &&&\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t", "by (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a list. rs\\<^sub>1 = a # list \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. thesis", "by fact"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (2 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        [] = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 thesis.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n      X\\<rangle> \\<Rightarrow> t';\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                        X\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        rs = rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed (auto intro: iptables_bigstep.intros)"], ["", "lemma seqE:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1@rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"\n  obtains ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1,s\\<rangle> \\<Rightarrow> ti\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,ti\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force elim: seq_split)"], ["", "lemma seqE_cons:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs, s\\<rangle> \\<Rightarrow> t\"\n  obtains ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r],s\\<rangle> \\<Rightarrow> ti\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs,ti\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis append_Cons append_Nil seqE)"], ["", "lemma nomatch':\n  assumes \"\\<And>r. r \\<in> set rs \\<Longrightarrow> \\<not> matches \\<gamma> (get_match r) p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s", "proof(cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s", "case Undecided"], ["proof (state)\nthis:\n  s = Undecided\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s", "have \"\\<forall>r\\<in>set rs. \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs.\n       \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "proof(induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>r\\<in>set [].\n       \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>a rs.\n       \\<lbrakk>\\<forall>r\\<in>set rs.\n                   \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set (a # rs).\n           \\<not> matches \\<gamma> (get_match r) p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "case Nil"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set []. \\<not> matches \\<gamma> (get_match r) p\n\ngoal (2 subgoals):\n 1. \\<forall>r\\<in>set [].\n       \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>a rs.\n       \\<lbrakk>\\<forall>r\\<in>set rs.\n                   \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set (a # rs).\n           \\<not> matches \\<gamma> (get_match r) p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set []. \\<not> matches \\<gamma> (get_match r) p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "by (fast intro: skip)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<forall>r\\<in>set rs.\n                   \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set (a # rs).\n           \\<not> matches \\<gamma> (get_match r) p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<forall>r\\<in>set rs.\n                   \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set (a # rs).\n           \\<not> matches \\<gamma> (get_match r) p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<forall>r\\<in>set (r # rs). \\<not> matches \\<gamma> (get_match r) p\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<forall>r\\<in>set rs.\n                   \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set (a # rs).\n           \\<not> matches \\<gamma> (get_match r) p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<forall>r\\<in>set (r # rs). \\<not> matches \\<gamma> (get_match r) p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Undecided", "by (cases r) (auto intro: nomatch)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<forall>r\\<in>set rs.\n                   \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set (a # rs).\n           \\<not> matches \\<gamma> (get_match r) p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "with Cons"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<forall>r\\<in>set (r # rs). \\<not> matches \\<gamma> (get_match r) p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Undecided", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<forall>r\\<in>set (r # rs). \\<not> matches \\<gamma> (get_match r) p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "by (fastforce intro: seq_cons)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s", "with assms Undecided"], ["proof (chain)\npicking this:\n  ?r \\<in> set rs \\<Longrightarrow> \\<not> matches \\<gamma> (get_match ?r) p\n  s = Undecided\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "show ?thesis"], ["proof (prove)\nusing this:\n  ?r \\<in> set rs \\<Longrightarrow> \\<not> matches \\<gamma> (get_match ?r) p\n  s = Undecided\n  \\<forall>r\\<in>set rs.\n     \\<not> matches \\<gamma> (get_match r) p \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> s", "qed (blast intro: decision)"], ["", "text\\<open>there are only two cases when there can be a Return on top-level:\n\n  \\<^item> the firewall is in a Decision state\n  \\<^item> the return does not match\n\nIn both cases, it is not applied!\n\\<close>"], ["", "lemma no_free_return: assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Return], Undecided\\<rangle> \\<Rightarrow> t\" and \"matches \\<gamma> m p\" shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "fix a s"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have no_free_return_hlp: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a,s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow>  s = Undecided \\<Longrightarrow> a = [Rule m Return] \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a, s\\<rangle> \\<Rightarrow> t;\n     matches \\<gamma> m p; s = Undecided; a = [Rule m Return]\\<rbrakk>\n    \\<Longrightarrow> False", "proof (induction rule: iptables_bigstep.induct)"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>matches \\<gamma> m p; t = Undecided;\n        [] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Accept] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Drop] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Reject] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Log] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Empty] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>ma a.\n       \\<lbrakk>\\<not> matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma a] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>rs X.\n       \\<lbrakk>matches \\<gamma> m p; Decision X = Undecided;\n        rs = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>rs\\<^sub>1 t rs\\<^sub>2 t'.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n         rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<lbrakk>matches \\<gamma> m p; t = Undecided;\n         rs\\<^sub>2 = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False;\n        matches \\<gamma> m p; Undecided = Undecided;\n        rs\\<^sub>1 @ rs\\<^sub>2 = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>ma chain rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>matches \\<gamma> ma p;\n         \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n          rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n         \\<Longrightarrow> False;\n         matches \\<gamma> m p; Undecided = Undecided;\n         [Rule ma (Call chain)] = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 11 subgoals...", "case (seq rs\\<^sub>1)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n   rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n  \\<lbrakk>matches \\<gamma> m p; t_ = Undecided;\n   rs\\<^sub>2_ = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n  matches \\<gamma> m p\n  Undecided = Undecided\n  rs\\<^sub>1 @ rs\\<^sub>2_ = [Rule m Return]\n\ngoal (11 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>matches \\<gamma> m p; t = Undecided;\n        [] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Accept] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Drop] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Reject] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Log] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Empty] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>ma a.\n       \\<lbrakk>\\<not> matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma a] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>rs X.\n       \\<lbrakk>matches \\<gamma> m p; Decision X = Undecided;\n        rs = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>rs\\<^sub>1 t rs\\<^sub>2 t'.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n         rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<lbrakk>matches \\<gamma> m p; t = Undecided;\n         rs\\<^sub>2 = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False;\n        matches \\<gamma> m p; Undecided = Undecided;\n        rs\\<^sub>1 @ rs\\<^sub>2 = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>ma chain rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>matches \\<gamma> ma p;\n         \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n          rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n         \\<Longrightarrow> False;\n         matches \\<gamma> m p; Undecided = Undecided;\n         [Rule ma (Call chain)] = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False\nA total of 11 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n   rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n  \\<lbrakk>matches \\<gamma> m p; t_ = Undecided;\n   rs\\<^sub>2_ = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n  matches \\<gamma> m p\n  Undecided = Undecided\n  rs\\<^sub>1 @ rs\\<^sub>2_ = [Rule m Return]\n\ngoal (1 subgoal):\n 1. False", "by (cases rs\\<^sub>1) (auto dest: skipD)"], ["proof (state)\nthis:\n  False\n\ngoal (10 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>matches \\<gamma> m p; t = Undecided;\n        [] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Accept] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Drop] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Reject] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Log] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>ma.\n       \\<lbrakk>matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma Empty] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 7. \\<And>ma a.\n       \\<lbrakk>\\<not> matches \\<gamma> ma p; matches \\<gamma> m p;\n        Undecided = Undecided; [Rule ma a] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 8. \\<And>rs X.\n       \\<lbrakk>matches \\<gamma> m p; Decision X = Undecided;\n        rs = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 9. \\<And>ma chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> ma p;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n         rs\\<^sub>1 = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False;\n        matches \\<gamma> m p; Undecided = Undecided;\n        [Rule ma (Call chain)] = [Rule m Return]\\<rbrakk>\n       \\<Longrightarrow> False\n 10. \\<And>ma chain rs t.\n        \\<lbrakk>matches \\<gamma> ma p; \\<Gamma> chain = Some rs;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n         \\<lbrakk>matches \\<gamma> m p; Undecided = Undecided;\n          rs = [Rule m Return]\\<rbrakk>\n         \\<Longrightarrow> False;\n         matches \\<gamma> m p; Undecided = Undecided;\n         [Rule ma (Call chain)] = [Rule m Return]\\<rbrakk>\n        \\<Longrightarrow> False", "qed simp_all"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a, s\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p; s = Undecided; a = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?a2, ?s2\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p; ?s2 = Undecided; ?a2 = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "with assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Return], Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?a2, ?s2\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p; ?s2 = Undecided; ?a2 = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Return], Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?a2, ?s2\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p; ?s2 = Undecided; ?a2 = [Rule m Return]\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "(* seq_split is elim, seq_progress is dest *)"], ["", "lemma seq_progress: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> rs = rs\\<^sub>1@rs\\<^sub>2 \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     rs = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "proof(induction arbitrary: rs\\<^sub>1 rs\\<^sub>2 t' rule: iptables_bigstep_induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalAllow\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalDeny\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 9. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case Allow"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Accept\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (9 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalAllow\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalDeny\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 9. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Accept\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n        FinalAllow", "by (cases \"rs\\<^sub>1\") (auto intro: iptables_bigstep.intros dest: iptables_bigstepD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n      FinalAllow\n\ngoal (8 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalDeny\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 6. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalDeny\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 6. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case Deny"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Drop \\<or> a_ = Reject\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (8 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             FinalDeny\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 6. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Drop \\<or> a_ = Reject\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n        FinalDeny", "by (cases \"rs\\<^sub>1\") (auto intro: iptables_bigstep.intros dest: iptables_bigstepD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n      FinalDeny\n\ngoal (7 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 5. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 6. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 7. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 5. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 6. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 7. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case Log"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Log \\<or> a_ = Empty\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (7 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 5. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 6. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 7. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Log \\<or> a_ = Empty\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "by (cases \"rs\\<^sub>1\") (auto intro: iptables_bigstep.intros dest: iptables_bigstepD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n\ngoal (6 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 4. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 5. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 4. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 5. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case Nomatch"], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m_ p\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (6 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 4. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 5. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<not> matches \\<gamma> m_ p\n  [Rule m_ a_] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "by (cases \"rs\\<^sub>1\") (auto intro: iptables_bigstep.intros dest: iptables_bigstepD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case Decision"], ["proof (state)\nthis:\n  rs_ = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                  X_\\<rangle> \\<Rightarrow> t'\n\ngoal (5 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs X rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                        X\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n                             X\n 3. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 4. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  rs_ = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Decision\n                  X_\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n        X_", "by (cases \"rs\\<^sub>1\") (auto intro: iptables_bigstep.intros dest: iptables_bigstepD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Decision\n      X_\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case(Seq rs rsa rsb t t' rs\\<^sub>1 rs\\<^sub>2 t'')"], ["proof (state)\nthis:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t''\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "hence rs: \"rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\""], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t''\n\ngoal (1 subgoal):\n 1. rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "note List.append_eq_append_conv_if[simp]"], ["proof (state)\nthis:\n  (?xs\\<^sub>1 @ ?xs\\<^sub>2 = ?ys\\<^sub>1 @ ?ys\\<^sub>2) =\n  (if length ?xs\\<^sub>1 \\<le> length ?ys\\<^sub>1\n   then ?xs\\<^sub>1 = take (length ?xs\\<^sub>1) ?ys\\<^sub>1 \\<and>\n        ?xs\\<^sub>2 = drop (length ?xs\\<^sub>1) ?ys\\<^sub>1 @ ?ys\\<^sub>2\n   else take (length ?ys\\<^sub>1) ?xs\\<^sub>1 = ?ys\\<^sub>1 \\<and>\n        drop (length ?ys\\<^sub>1) ?xs\\<^sub>1 @ ?xs\\<^sub>2 = ?ys\\<^sub>2)\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "(* TODO larsrh custom case distinction rule *)"], ["proof (state)\nthis:\n  (?xs\\<^sub>1 @ ?xs\\<^sub>2 = ?ys\\<^sub>1 @ ?ys\\<^sub>2) =\n  (if length ?xs\\<^sub>1 \\<le> length ?ys\\<^sub>1\n   then ?xs\\<^sub>1 = take (length ?xs\\<^sub>1) ?ys\\<^sub>1 \\<and>\n        ?xs\\<^sub>2 = drop (length ?xs\\<^sub>1) ?ys\\<^sub>1 @ ?ys\\<^sub>2\n   else take (length ?ys\\<^sub>1) ?xs\\<^sub>1 = ?ys\\<^sub>1 \\<and>\n        drop (length ?ys\\<^sub>1) ?xs\\<^sub>1 @ ?xs\\<^sub>2 = ?ys\\<^sub>2)\n\ngoal (4 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' rs\\<^sub>1' rs\\<^sub>2' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>rs\\<^sub>1 rs\\<^sub>2' t'a.\n           \\<lbrakk>rs\\<^sub>2 = rs\\<^sub>1 @ rs\\<^sub>2';\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t';\n        rs = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'a\\<rangle> \\<Rightarrow> t'\n 3. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 4. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "from rs"], ["proof (chain)\npicking this:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2", "show \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2,t''\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "proof(cases rule: list_app_eq_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "case longer"], ["proof (state)\nthis:\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "have \"rs\\<^sub>1 = take (length rsa) rs\\<^sub>1 @ drop (length rsa) rs\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = take (length rsa) rs\\<^sub>1 @ drop (length rsa) rs\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  rs\\<^sub>1 = take (length rsa) rs\\<^sub>1 @ drop (length rsa) rs\\<^sub>1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rsa = take (length rsa) rs\\<^sub>1;\n     rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'\n 2. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "with Seq longer"], ["proof (chain)\npicking this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t''\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = take (length rsa) rs\\<^sub>1 @ drop (length rsa) rs\\<^sub>1", "show ?thesis"], ["proof (prove)\nusing this:\n  rs = rsa @ rsb\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rsb = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t'\n  rs = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t''\n  rsa = take (length rsa) rs\\<^sub>1\n  rsb = drop (length rsa) rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = take (length rsa) rs\\<^sub>1 @ drop (length rsa) rs\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "by (metis append_Nil2 skipD seq_split)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "case shorter"], ["proof (state)\nthis:\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = take (length rs\\<^sub>1) rsa;\n     rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "with Seq(7) Seq.hyps(3) Seq.IH(1) rs"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, t\\<rangle> \\<Rightarrow> t'\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  rsa @ rsb = rs\\<^sub>1 @ rs\\<^sub>2\n  rs\\<^sub>1 = take (length rs\\<^sub>1) rsa\n  rs\\<^sub>2 = drop (length rs\\<^sub>1) rsa @ rsb\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'", "by (metis seq' append_eq_conv_conj)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t'\n\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case(Call_return m a chain rsa m' rsb)"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n  a = Call chain\n  \\<Gamma> chain = Some (rsa @ [Rule m' Return] @ rsb)\n  matches \\<gamma> m' p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "have xx: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call chain)], Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow>\n          \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb) \\<Longrightarrow>\n          matches \\<gamma> m' p \\<Longrightarrow>\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n          t' = Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  (Call chain)], Undecided\\<rangle> \\<Rightarrow> t';\n     matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> t' = Undecided", "apply(erule callD)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> [Rule m (Call chain)] = [Rule ?m (Call ?chain)]\n 2. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> Undecided = Undecided\n 3. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> matches \\<gamma> ?m p\n 4. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> ?chain = Some ?rs\n 5. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> t' = Undecided\n 6. \\<And>rs\\<^sub>1 rs\\<^sub>2 m'a.\n       \\<lbrakk>matches \\<gamma> m p;\n        \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        ?rs = rs\\<^sub>1 @ Rule m'a Return # rs\\<^sub>2;\n        matches \\<gamma> m'a p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t' = Undecided\\<rbrakk>\n       \\<Longrightarrow> t' = Undecided", "apply(simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa @\n        Rule m' Return # rsb, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> t' = Undecided", "apply(erule seqE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti.\n       \\<lbrakk>matches \\<gamma> m p;\n        \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m' Return #\n           rsb, ti\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = Undecided", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti tia.\n       \\<lbrakk>matches \\<gamma> m p;\n        \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n             Return], ti\\<rangle> \\<Rightarrow> tia;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsb, tia\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t' = Undecided", "by (metis Call_return.IH no_free_return self_append_conv skipD)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                (Call chain)], Undecided\\<rangle> \\<Rightarrow> t';\n   matches \\<gamma> m p; \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n   matches \\<gamma> m' p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> t' = Undecided\n\ngoal (3 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 rs\\<^sub>1' rs\\<^sub>2' t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>rs\\<^sub>1' rs\\<^sub>2 t'.\n           \\<lbrakk>rs\\<^sub>1 = rs\\<^sub>1' @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n        [Rule m a] = rs\\<^sub>1' @ rs\\<^sub>2';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1', Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2', t'\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "proof (cases rs\\<^sub>1)"], ["proof (state)\ngoal (2 subgoals):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>a list.\n       rs\\<^sub>1 = a # list \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "case (Cons r rs)"], ["proof (state)\nthis:\n  rs\\<^sub>1 = r # rs\n\ngoal (2 subgoals):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>a list.\n       rs\\<^sub>1 = a # list \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "thus ?thesis"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = r # rs\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "using Call_return"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = r # rs\n  matches \\<gamma> m p\n  a = Call chain\n  \\<Gamma> chain = Some (rsa @ [Rule m' Return] @ rsb)\n  matches \\<gamma> m' p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>rsa = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> Undecided\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "apply(case_tac \"[Rule m a] = rs\\<^sub>2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>rs\\<^sub>1 = r # rs; matches \\<gamma> m p; a = Call chain;\n     \\<Gamma> chain = Some (rsa @ [Rule m' Return] @ rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rsa = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n     [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n     [Rule m a] = rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n 2. \\<lbrakk>rs\\<^sub>1 = r # rs; matches \\<gamma> m p; a = Call chain;\n     \\<Gamma> chain = Some (rsa @ [Rule m' Return] @ rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rsa = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n     [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n     [Rule m a] \\<noteq> rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = r # rs; matches \\<gamma> m p; a = Call chain;\n     \\<Gamma> chain = Some (rsa @ [Rule m' Return] @ rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rsa = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n     [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n     [Rule m a] \\<noteq> rs\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = [r]; matches \\<gamma> m p; a = Call chain;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rsa = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n     Rule m (Call chain) = r \\<and> rs = [] \\<and> rs\\<^sub>2 = [];\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t'\\<rangle> \\<Rightarrow> Undecided", "using xx"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                (Call chain)], Undecided\\<rangle> \\<Rightarrow> t';\n   matches \\<gamma> m p; \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n   matches \\<gamma> m' p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> t' = Undecided\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = [r]; matches \\<gamma> m p; a = Call chain;\n     \\<Gamma> chain = Some (rsa @ Rule m' Return # rsb);\n     matches \\<gamma> m' p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rsa, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rsa = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided;\n     Rule m (Call chain) = r \\<and> rs = [] \\<and> rs\\<^sub>2 = [];\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t'\\<rangle> \\<Rightarrow> Undecided", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "case Nil"], ["proof (state)\nthis:\n  rs\\<^sub>1 = []\n\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "moreover"], ["proof (state)\nthis:\n  rs\\<^sub>1 = []\n\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "hence \"t' = Undecided\""], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = []\n\ngoal (1 subgoal):\n 1. t' = Undecided", "by (metis Call_return.hyps(1) Call_return.prems(2) append.simps(1) decision no_free_return seq state.exhaust)"], ["proof (state)\nthis:\n  t' = Undecided\n\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "moreover"], ["proof (state)\nthis:\n  t' = Undecided\n\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "have \"\\<And>m. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> Undecided", "by (metis (no_types) Call_return(2) Call_return.hyps(3) Call_return.hyps(4) Call_return.hyps(5) call_return nomatch)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n       a], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. rs\\<^sub>1 = [] \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "ultimately"], ["proof (chain)\npicking this:\n  rs\\<^sub>1 = []\n  t' = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n       a], Undecided\\<rangle> \\<Rightarrow> Undecided", "show ?thesis"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = []\n  t' = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n       a], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "using Call_return.prems(1)"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = []\n  t' = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n       a], Undecided\\<rangle> \\<Rightarrow> Undecided\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided", "by auto"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> Undecided\n\ngoal (2 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case(Call_result m a chain rs t)"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n  a = Call chain\n  \\<Gamma> chain = Some rs\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rs = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (2 subgoals):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a chain rs t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Call chain\n  \\<Gamma> chain = Some rs\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rs = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "proof (cases rs\\<^sub>1)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Call chain; \\<Gamma> chain = Some rs;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n     [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n     rs\\<^sub>1 = []\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>aa list.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n        rs\\<^sub>1 = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "case Cons"], ["proof (state)\nthis:\n  rs\\<^sub>1 = a_ # list_\n\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Call chain; \\<Gamma> chain = Some rs;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n     [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n     rs\\<^sub>1 = []\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>aa list.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n        rs\\<^sub>1 = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = a_ # list_\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "using Call_result"], ["proof (prove)\nusing this:\n  rs\\<^sub>1 = a_ # list_\n  matches \\<gamma> m p\n  a = Call chain\n  \\<Gamma> chain = Some rs\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>rs = ?rs\\<^sub>1 @ ?rs\\<^sub>2;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs\\<^sub>2, ?t'\\<rangle> \\<Rightarrow> t\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "apply(auto simp add: iptables_bigstep.skip iptables_bigstep.call_result dest: skipD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rs\\<^sub>1 = [Rule m (Call chain)]; matches \\<gamma> m p;\n     a = Call chain; \\<Gamma> chain = Some rs;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain)], Undecided\\<rangle> \\<Rightarrow> t';\n     a_ = Rule m (Call chain); list_ = []; rs\\<^sub>2 = []\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t'\\<rangle> \\<Rightarrow> t", "apply(drule callD, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>rs\\<^sub>1 = [Rule m (Call chain)]; matches \\<gamma> m p;\n     a = Call chain; \\<Gamma> chain = Some rs;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n     a_ = Rule m (Call chain); list_ = []; rs\\<^sub>2 = [];\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t'\\<rangle> \\<Rightarrow> t\n 2. \\<And>rs\\<^sub>1 rs\\<^sub>2 m'.\n       \\<lbrakk>rs\\<^sub>1 = [Rule m (Call chain)]; matches \\<gamma> m p;\n        a = Call chain; \\<Gamma> chain = Some rs;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        a_ = Rule m (Call chain); list_ = []; rs\\<^sub>2 = [];\n        rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t' = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rs\\<^sub>1 rs\\<^sub>2 m'.\n       \\<lbrakk>rs\\<^sub>1 = [Rule m (Call chain)]; matches \\<gamma> m p;\n        a = Call chain; \\<Gamma> chain = Some rs;\n        \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n           \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n        a_ = Rule m (Call chain); list_ = []; rs\\<^sub>2 = [];\n        rs = rs\\<^sub>1 @ Rule m' Return # rs\\<^sub>2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t' = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by (metis Cons_eq_appendI append_self_conv2 no_free_return seq_split)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Call chain; \\<Gamma> chain = Some rs;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n     \\<And>rs\\<^sub>1 rs\\<^sub>2 t'.\n        \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t;\n     [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t';\n     rs\\<^sub>1 = []\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "qed (fastforce intro: iptables_bigstep.intros dest: skipD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>t rs\\<^sub>1 rs\\<^sub>2 t'.\n       \\<lbrakk>[] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "qed (auto dest: iptables_bigstepD)"], ["", "theorem iptables_bigstep_deterministic: assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" and \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\" shows \"t = t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t = t'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. t = t'", "fix r1 r2 m t"], ["proof (state)\ngoal (1 subgoal):\n 1. t = t'", "assume a1: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1 @ Rule m Return # r2, Undecided\\<rangle> \\<Rightarrow> t\" and a2: \"matches \\<gamma> m p\" and a3: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1,Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1 @\n     Rule m Return # r2, Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. t = t'", "have False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "from a1 a3"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1 @\n     Rule m Return # r2, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1, Undecided\\<rangle> \\<Rightarrow> Undecided", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Return # r2, Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1 @\n     Rule m Return # r2, Undecided\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Return #\n       r2, Undecided\\<rangle> \\<Rightarrow> t", "by (blast intro: seq_progress)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Return #\n     r2, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. False", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Return] @ r2, Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Return #\n     r2, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Return] @\n       r2, Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Return] @\n     r2, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. False", "from seqE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>ti.\n      \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    Return], Undecided\\<rangle> \\<Rightarrow> ti;\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r2, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Return], Undecided\\<rangle> \\<Rightarrow> ti\""], ["proof (prove)\nusing this:\n  (\\<And>ti.\n      \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    Return], Undecided\\<rangle> \\<Rightarrow> ti;\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r2, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             Return], Undecided\\<rangle> \\<Rightarrow> ti \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Return], Undecided\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. False", "with no_free_return a2"], ["proof (chain)\npicking this:\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[Rule ?m\n                   Return], Undecided\\<rangle> \\<Rightarrow> ?t;\n   matches ?\\<gamma> ?m ?p\\<rbrakk>\n  \\<Longrightarrow> False\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Return], Undecided\\<rangle> \\<Rightarrow> ti", "show False"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[Rule ?m\n                   Return], Undecided\\<rangle> \\<Rightarrow> ?t;\n   matches ?\\<gamma> ?m ?p\\<rbrakk>\n  \\<Longrightarrow> False\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Return], Undecided\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "(*by (blast intro: no_free_return elim: seq_split)*)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. t = t'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r1.2 @\n              Rule ?m2 Return #\n              ?r2.2, Undecided\\<rangle> \\<Rightarrow> ?ta2;\n   matches \\<gamma> ?m2 p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r1.2, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. t = t'", "note no_free_return_seq=this"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r1.2 @\n              Rule ?m2 Return #\n              ?r2.2, Undecided\\<rangle> \\<Rightarrow> ?ta2;\n   matches \\<gamma> ?m2 p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r1.2, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. t = t'", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. t = t'", "proof (induction arbitrary: t' rule: iptables_bigstep_induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>t'a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'a \\<Longrightarrow>\n           t' = t'a;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> t' = t'a\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 9. \\<And>m a chain rs t t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t = t'", "case Seq"], ["proof (state)\nthis:\n  rs_ = rs\\<^sub>1_ @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  t_ = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  t'_ = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (9 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t' t'a.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<And>t'a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'a \\<Longrightarrow>\n           t' = t'a;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'a\\<rbrakk>\n       \\<Longrightarrow> t' = t'a\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 9. \\<And>m a chain rs t t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t = t'", "thus ?case"], ["proof (prove)\nusing this:\n  rs_ = rs\\<^sub>1_ @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  t_ = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  t'_ = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. t'_ = t'", "by (metis seq_progress)"], ["proof (state)\nthis:\n  t'_ = t'\n\ngoal (8 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 8. \\<And>m a chain rs t t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t = t'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 8. \\<And>m a chain rs t t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t = t'", "case Call_result"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  t_ = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m_\n       a_], Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (8 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 8. \\<And>m a chain rs t t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           t = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> t = t'", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some rs_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_, Undecided\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  t_ = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m_\n       a_], Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. t_ = t'", "by (metis no_free_return_seq callD)"], ["proof (state)\nthis:\n  t_ = t'\n\ngoal (7 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'", "case Call_return"], ["proof (state)\nthis:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some (rs\\<^sub>1_ @ [Rule m'_ Return] @ rs\\<^sub>2_)\n  matches \\<gamma> m'_ p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  Undecided = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m_\n       a_], Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (7 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'\n 7. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2 t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<And>t'.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n           Undecided = t';\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m_ p\n  a_ = Call chain_\n  \\<Gamma> chain_ = Some (rs\\<^sub>1_ @ [Rule m'_ Return] @ rs\\<^sub>2_)\n  matches \\<gamma> m'_ p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> ?t' \\<Longrightarrow>\n  Undecided = ?t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m_\n       a_], Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. Undecided = t'", "by (metis append_Cons callD no_free_return_seq)"], ["proof (state)\nthis:\n  Undecided = t'\n\ngoal (6 subgoals):\n 1. \\<And>t t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       t = t'\n 2. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalAllow = t'\n 3. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Decision FinalDeny = t'\n 4. \\<And>m a t'.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 5. \\<And>m a t'.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> Undecided = t'\n 6. \\<And>rs X t'.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n       Decision X = t'", "qed (auto dest: iptables_bigstepD)"], ["proof (state)\nthis:\n  t = t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iptables_bigstep_to_undecided: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> s = Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n    s = Undecided", "by (metis decisionD state.exhaust)"], ["", "lemma iptables_bigstep_to_decision: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision Y\\<rangle> \\<Rightarrow> Decision X \\<Longrightarrow> Y = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n            Y\\<rangle> \\<Rightarrow> Decision X \\<Longrightarrow>\n    Y = X", "by (metis decisionD state.inject)"], ["", "lemma Rule_UndecidedE:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Undecided\"\n  obtains (nomatch) \"\\<not> matches \\<gamma> m p\"\n        | (log) \"a = Log \\<or> a = Empty\"\n        | (call) c where \"a = Call c\" \"matches \\<gamma> m p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof (induction \"[Rule m a]\" Undecided Undecided rule: iptables_bigstep_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n     \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<not> matches \\<gamma> m p;\n     \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<And>rs\\<^sub>1 rs\\<^sub>2 t.\n       \\<lbrakk>[Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a]; t = Undecided;\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs\\<^sub>2 = [Rule m a]; t = Undecided;\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a];\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>chain rs.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs = [Rule m a];\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case Seq"], ["proof (state)\nthis:\n  [Rule m a] = rs\\<^sub>1_ @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<lbrakk>rs\\<^sub>1_ = [Rule m a]; t_ = Undecided;\n   \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n   a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n   \\<And>c.\n      \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>rs\\<^sub>2_ = [Rule m a]; t_ = Undecided;\n   \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n   a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n   \\<And>c.\n      \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis\n  a = Log \\<or> a = Empty \\<Longrightarrow> thesis\n  \\<lbrakk>a = Call ?c; matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (5 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n     \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<not> matches \\<gamma> m p;\n     \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<And>rs\\<^sub>1 rs\\<^sub>2 t.\n       \\<lbrakk>[Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a]; t = Undecided;\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs\\<^sub>2 = [Rule m a]; t = Undecided;\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a];\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>chain rs.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs = [Rule m a];\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  [Rule m a] = rs\\<^sub>1_ @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<lbrakk>rs\\<^sub>1_ = [Rule m a]; t_ = Undecided;\n   \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n   a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n   \\<And>c.\n      \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>rs\\<^sub>2_ = [Rule m a]; t_ = Undecided;\n   \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n   a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n   \\<And>c.\n      \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n      \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis\n  a = Log \\<or> a = Empty \\<Longrightarrow> thesis\n  \\<lbrakk>a = Call ?c; matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis append_eq_Cons_conv append_is_Nil_conv iptables_bigstep_to_undecided)"], ["proof (state)\nthis:\n  thesis\n\ngoal (4 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n     \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<not> matches \\<gamma> m p;\n     \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n     a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n     \\<And>c.\n        \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<And>chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a];\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>chain rs.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>rs = [Rule m a];\n         \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n         a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n         \\<And>c.\n            \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n            \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<not> matches \\<gamma> m p \\<Longrightarrow> thesis;\n        a = Log \\<or> a = Empty \\<Longrightarrow> thesis;\n        \\<And>c.\n           \\<lbrakk>a = Call c; matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed simp_all"], ["", "lemma Rule_DecisionE:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Decision X\"\n  obtains (call) chain where \"matches \\<gamma> m p\" \"a = Call chain\"\n        | (accept_reject) \"matches \\<gamma> m p\" \"X = FinalAllow \\<Longrightarrow> a = Accept\" \"X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>chain.\n                \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], Undecided\\<rangle> \\<Rightarrow> Decision X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>chain.\n                \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "proof (induction \"[Rule m a]\" Undecided \"Decision X\" rule: iptables_bigstep_induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Accept; FinalAllow = X;\n     \\<And>chain.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject; FinalDeny = X;\n     \\<And>chain.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<And>rs\\<^sub>1 rs\\<^sub>2 t.\n       \\<lbrakk>[Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a]; t = Decision X;\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> Decision\n           X;\n        \\<lbrakk>rs\\<^sub>2 = [Rule m a]; t = Undecided;\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<And>chain.\n           \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>matches \\<gamma> m p;\n         X = FinalAllow \\<Longrightarrow> a = Accept;\n         X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>chain rs.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           X;\n        \\<lbrakk>rs = [Rule m a];\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<And>chain.\n           \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>matches \\<gamma> m p;\n         X = FinalAllow \\<Longrightarrow> a = Accept;\n         X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (Seq rs\\<^sub>1)"], ["proof (state)\nthis:\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<lbrakk>rs\\<^sub>1 = [Rule m a]; t_ = Decision X;\n   \\<And>chain.\n      \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   \\<lbrakk>matches \\<gamma> m p;\n    X = FinalAllow \\<Longrightarrow> a = Accept;\n    X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n   \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> Decision\n       X\n  \\<lbrakk>rs\\<^sub>2_ = [Rule m a]; t_ = Undecided;\n   \\<And>chain.\n      \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   \\<lbrakk>matches \\<gamma> m p;\n    X = FinalAllow \\<Longrightarrow> a = Accept;\n    X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n   \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>matches \\<gamma> m p; a = Call ?chain\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>matches \\<gamma> m p;\n   X = FinalAllow \\<Longrightarrow> a = Accept;\n   X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (4 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Accept; FinalAllow = X;\n     \\<And>chain.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject; FinalDeny = X;\n     \\<And>chain.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<And>rs\\<^sub>1 rs\\<^sub>2 t.\n       \\<lbrakk>[Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>rs\\<^sub>1 = [Rule m a]; t = Decision X;\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> Decision\n           X;\n        \\<lbrakk>rs\\<^sub>2 = [Rule m a]; t = Undecided;\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<And>chain.\n           \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>matches \\<gamma> m p;\n         X = FinalAllow \\<Longrightarrow> a = Accept;\n         X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>chain rs.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           X;\n        \\<lbrakk>rs = [Rule m a];\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<And>chain.\n           \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>matches \\<gamma> m p;\n         X = FinalAllow \\<Longrightarrow> a = Accept;\n         X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?case"], ["proof (prove)\nusing this:\n  [Rule m a] = rs\\<^sub>1 @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t_\n  \\<lbrakk>rs\\<^sub>1 = [Rule m a]; t_ = Decision X;\n   \\<And>chain.\n      \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   \\<lbrakk>matches \\<gamma> m p;\n    X = FinalAllow \\<Longrightarrow> a = Accept;\n    X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n   \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> Decision\n       X\n  \\<lbrakk>rs\\<^sub>2_ = [Rule m a]; t_ = Undecided;\n   \\<And>chain.\n      \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n      \\<Longrightarrow> thesis;\n   \\<lbrakk>matches \\<gamma> m p;\n    X = FinalAllow \\<Longrightarrow> a = Accept;\n    X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n   \\<Longrightarrow> thesis\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>matches \\<gamma> m p; a = Call ?chain\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>matches \\<gamma> m p;\n   X = FinalAllow \\<Longrightarrow> a = Accept;\n   X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (cases rs\\<^sub>1) (auto dest: skipD)"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Accept; FinalAllow = X;\n     \\<And>chain.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject; FinalDeny = X;\n     \\<And>chain.\n        \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<lbrakk>matches \\<gamma> m p;\n      X = FinalAllow \\<Longrightarrow> a = Accept;\n      X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<And>chain rs.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Decision\n           X;\n        \\<lbrakk>rs = [Rule m a];\n         \\<And>chain.\n            \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n            \\<Longrightarrow> thesis;\n         \\<lbrakk>matches \\<gamma> m p;\n          X = FinalAllow \\<Longrightarrow> a = Accept;\n          X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n        \\<Longrightarrow> thesis;\n        \\<And>chain.\n           \\<lbrakk>matches \\<gamma> m p; a = Call chain\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<lbrakk>matches \\<gamma> m p;\n         X = FinalAllow \\<Longrightarrow> a = Accept;\n         X = FinalDeny \\<Longrightarrow> a = Drop \\<or> a = Reject\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed simp_all"], ["", "lemma log_remove:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ [Rule m Log] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     [Rule m Log] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "obtain t' where t': \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log] @ rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     [Rule m Log] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t';\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log] @\n            rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: seqE)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log # rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n       rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "obtain t'' where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log], t'\\<rangle> \\<Rightarrow> t''\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      Log], t'\\<rangle> \\<Rightarrow> t'';\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: seqE_cons)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Log], t'\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "with t'"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Log], t'\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Log] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Log], t'\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "by (metis state.exhaust iptables_bigstep_deterministic decision log nomatch seq)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma empty_empty:\n  assumes \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ [Rule m Empty] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "from assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     [Rule m Empty] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "obtain t' where t': \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty] @ rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     [Rule m Empty] @ rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t';\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty] @\n            rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: seqE)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty # rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n       rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "then"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t", "obtain t'' where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty], t'\\<rangle> \\<Rightarrow> t''\" \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      Empty], t'\\<rangle> \\<Rightarrow> t'';\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: seqE_cons)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Empty], t'\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "with t'"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Empty], t'\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, s\\<rangle> \\<Rightarrow> t'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Empty] @\n     rs\\<^sub>2, t'\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       Empty], t'\\<rangle> \\<Rightarrow> t''\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t''\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n       rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t", "by (metis state.exhaust iptables_bigstep_deterministic decision empty nomatch seq)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n     rs\\<^sub>2, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Unknown_actions_False: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r # rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = Rule m a \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> a = Unknown \\<or> (\\<exists>chain. a = Goto chain) \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "have 1: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Unknown], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  Unknown], Undecided\\<rangle> \\<Rightarrow> t;\n     matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> False", "by (induction \"[Rule m Unknown]\" Undecided t rule: iptables_bigstep.induct)\n     (auto elim: list_app_singletonE dest: skipD)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                Unknown], Undecided\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                Unknown], Undecided\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "fix chain"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Goto chain)], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  (Goto chain)], Undecided\\<rangle> \\<Rightarrow> t;\n     matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> False", "by (induction \"[Rule m (Goto chain)]\" Undecided t rule: iptables_bigstep.induct)\n       (auto elim: list_app_singletonE dest: skipD)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                (Goto chain)], Undecided\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                (Goto ?chain2)], Undecided\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "note 2=this"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                (Goto ?chain2)], Undecided\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> m p\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "show \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r # rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow> r = Rule m a \\<Longrightarrow> matches \\<gamma> m p \\<Longrightarrow> a = Unknown \\<or> (\\<exists>chain. a = Goto chain) \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                rs, Undecided\\<rangle> \\<Rightarrow> t;\n     r = Rule m a; matches \\<gamma> m p;\n     a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n    \\<Longrightarrow> False", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac ti)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t;\n        ti = Undecided\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>ti x2.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t;\n        ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> False", "apply(simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        ti = Undecided\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>ti x2.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n                x2\\<rangle> \\<Rightarrow> t;\n        ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> False", "using Rule_UndecidedE"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[Rule ?m\n                   ?a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n   \\<not> matches ?\\<gamma> ?m ?p \\<Longrightarrow> ?thesis;\n   ?a = Log \\<or> ?a = Empty \\<Longrightarrow> ?thesis;\n   \\<And>c.\n      \\<lbrakk>?a = Call c; matches ?\\<gamma> ?m ?p\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        ti = Undecided\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>ti x2.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n                x2\\<rangle> \\<Rightarrow> t;\n        ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti x2.\n       \\<lbrakk>r = Rule m a; matches \\<gamma> m p;\n        a = Unknown \\<or> (\\<exists>chain. a = Goto chain);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n                x2\\<rangle> \\<Rightarrow> t;\n        ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> False", "by (metis \"1\" \"2\" decision iptables_bigstep_deterministic)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> t;\n   r = Rule m a; matches \\<gamma> m p;\n   a = Unknown \\<or> (\\<exists>chain. a = Goto chain)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\nThe notation we prefer in the paper. The semantics are defined for fixed \\<open>\\<Gamma>\\<close> and \\<open>\\<gamma>\\<close>\n\\<close>"], ["", "locale iptables_bigstep_fixedbackground =\n  fixes \\<Gamma>::\"'a ruleset\"\n  and \\<gamma>::\"('a, 'p) matcher\"\n  begin"], ["", "inductive iptables_bigstep' :: \"'p \\<Rightarrow> 'a rule list \\<Rightarrow> state \\<Rightarrow> state \\<Rightarrow> bool\"\n    (\"_\\<turnstile>'' \\<langle>_, _\\<rangle> \\<Rightarrow> _\"  [60,20,98,98] 89)\n    for p where\n  skip:    \"p\\<turnstile>' \\<langle>[], t\\<rangle> \\<Rightarrow> t\" |\n  accept:  \"matches \\<gamma> m p \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m Accept], Undecided\\<rangle> \\<Rightarrow> Decision FinalAllow\" |\n  drop:    \"matches \\<gamma> m p \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m Drop], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny\" |\n  reject:  \"matches \\<gamma> m p \\<Longrightarrow>  p\\<turnstile>' \\<langle>[Rule m Reject], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny\" |\n  log:     \"matches \\<gamma> m p \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m Log], Undecided\\<rangle> \\<Rightarrow> Undecided\" |\n  empty:   \"matches \\<gamma> m p \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m Empty], Undecided\\<rangle> \\<Rightarrow> Undecided\" |\n  nomatch: \"\\<not> matches \\<gamma> m p \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Undecided\" |\n  decision: \"p\\<turnstile>' \\<langle>rs, Decision X\\<rangle> \\<Rightarrow> Decision X\" |\n  seq:      \"\\<lbrakk>p\\<turnstile>' \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t; p\\<turnstile>' \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t'\\<rbrakk> \\<Longrightarrow> p\\<turnstile>' \\<langle>rs\\<^sub>1@rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t'\" |\n  call_return:  \"\\<lbrakk> matches \\<gamma> m p; \\<Gamma> chain = Some (rs\\<^sub>1@[Rule m' Return]@rs\\<^sub>2);\n                   matches \\<gamma> m' p; p\\<turnstile>' \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided \\<rbrakk> \\<Longrightarrow>\n                 p\\<turnstile>' \\<langle>[Rule m (Call chain)], Undecided\\<rangle> \\<Rightarrow> Undecided\" |\n  call_result:  \"\\<lbrakk> matches \\<gamma> m p; p\\<turnstile>' \\<langle>the (\\<Gamma> chain), Undecided\\<rangle> \\<Rightarrow> t \\<rbrakk> \\<Longrightarrow>\n                 p\\<turnstile>' \\<langle>[Rule m (Call chain)], Undecided\\<rangle> \\<Rightarrow> t\""], ["", "definition wf_\\<Gamma>:: \"'a rule list \\<Rightarrow> bool\" where\n    \"wf_\\<Gamma> rs \\<equiv> \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. (\\<forall>r \\<in> set rsg. \\<forall> chain. get_action r = Call chain \\<longrightarrow> \\<Gamma> chain \\<noteq> None)\""], ["", "lemma wf_\\<Gamma>_append: \"wf_\\<Gamma> (rs1@rs2) \\<longleftrightarrow> wf_\\<Gamma> rs1 \\<and> wf_\\<Gamma> rs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_\\<Gamma> (rs1 @ rs2) = (wf_\\<Gamma> rs1 \\<and> wf_\\<Gamma> rs2)", "by(simp add: wf_\\<Gamma>_def, blast)"], ["", "lemma wf_\\<Gamma>_tail: \"wf_\\<Gamma> (r # rs) \\<Longrightarrow> wf_\\<Gamma> rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_\\<Gamma> (r # rs) \\<Longrightarrow> wf_\\<Gamma> rs", "by(simp add: wf_\\<Gamma>_def)"], ["", "lemma wf_\\<Gamma>_Call: \"wf_\\<Gamma> [Rule m (Call chain)] \\<Longrightarrow> wf_\\<Gamma> (the (\\<Gamma> chain)) \\<and> (\\<exists>rs. \\<Gamma> chain = Some rs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_\\<Gamma> [Rule m (Call chain)] \\<Longrightarrow>\n    wf_\\<Gamma> (the (\\<Gamma> chain)) \\<and>\n    (\\<exists>rs. \\<Gamma> chain = Some rs)", "apply(simp add: wf_\\<Gamma>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y. \\<Gamma> chain = Some y) \\<and>\n    (\\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           \\<forall>chain.\n              get_action r = Call chain \\<longrightarrow>\n              (\\<exists>y. \\<Gamma> chain = Some y)) \\<Longrightarrow>\n    \\<forall>r\\<in>set (the (\\<Gamma> chain)).\n       \\<forall>chain.\n          get_action r = Call chain \\<longrightarrow>\n          (\\<exists>y. \\<Gamma> chain = Some y)", "by (metis option.collapse ranI)"], ["", "lemma \"wf_\\<Gamma> rs \\<Longrightarrow> p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_\\<Gamma> rs \\<Longrightarrow>\n    p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_\\<Gamma> rs;\n     p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>wf_\\<Gamma> rs;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rotate_tac 1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     wf_\\<Gamma> rs\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>wf_\\<Gamma> rs;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(induction rs s t rule: iptables_bigstep'.induct)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>t.\n       wf_\\<Gamma> [] \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], t\\<rangle> \\<Rightarrow> t\n 2. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Accept]\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Accept], Undecided\\<rangle> \\<Rightarrow> Decision\n                                   FinalAllow\n 3. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Drop]\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Drop], Undecided\\<rangle> \\<Rightarrow> Decision\n                                 FinalDeny\n 4. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Reject]\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Reject], Undecided\\<rangle> \\<Rightarrow> Decision\n                                   FinalDeny\n 5. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Log]\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Log], Undecided\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Empty]\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Empty], Undecided\\<rangle> \\<Rightarrow> Undecided\n 7. \\<And>m a.\n       \\<lbrakk>\\<not> matches \\<gamma> m p; wf_\\<Gamma> [Rule m a]\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>rs X.\n       wf_\\<Gamma> rs \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n               X\\<rangle> \\<Rightarrow> Decision X\n 9. \\<And>rs\\<^sub>1 t rs\\<^sub>2 t'.\n       \\<lbrakk>p\\<turnstile>' \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        wf_\\<Gamma> rs\\<^sub>1 \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        p\\<turnstile>' \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        wf_\\<Gamma> rs\\<^sub>2 \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        wf_\\<Gamma> (rs\\<^sub>1 @ rs\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1 @\n                            rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t'\n 10. \\<And>m chain rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>matches \\<gamma> m p;\n         \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         p\\<turnstile>' \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         wf_\\<Gamma> rs\\<^sub>1 \\<Longrightarrow>\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         wf_\\<Gamma> [Rule m (Call chain)]\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                               (Call\n                                 chain)], Undecided\\<rangle> \\<Rightarrow> Undecided\nA total of 12 subgoals...", "apply(auto intro: iptables_bigstep.intros simp: wf_\\<Gamma>_append dest!: wf_\\<Gamma>_Call)[11]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_\\<Gamma> rs;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rotate_tac 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     wf_\\<Gamma> rs\\<rbrakk>\n    \\<Longrightarrow> p\\<turnstile>' \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(induction rs s t rule: iptables_bigstep.induct)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>t.\n       wf_\\<Gamma> [] \\<Longrightarrow>\n       p\\<turnstile>' \\<langle>[], t\\<rangle> \\<Rightarrow> t\n 2. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Accept]\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n             Accept], Undecided\\<rangle> \\<Rightarrow> Decision FinalAllow\n 3. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Drop]\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n             Drop], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny\n 4. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Reject]\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n             Reject], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny\n 5. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Log]\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n             Log], Undecided\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>m.\n       \\<lbrakk>matches \\<gamma> m p; wf_\\<Gamma> [Rule m Empty]\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n             Empty], Undecided\\<rangle> \\<Rightarrow> Undecided\n 7. \\<And>m a.\n       \\<lbrakk>\\<not> matches \\<gamma> m p; wf_\\<Gamma> [Rule m a]\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>rs X.\n       wf_\\<Gamma> rs \\<Longrightarrow>\n       p\\<turnstile>' \\<langle>rs, Decision\n                                    X\\<rangle> \\<Rightarrow> Decision X\n 9. \\<And>rs\\<^sub>1 t rs\\<^sub>2 t'.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        wf_\\<Gamma> rs\\<^sub>1 \\<Longrightarrow>\n        p\\<turnstile>' \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        wf_\\<Gamma> rs\\<^sub>2 \\<Longrightarrow>\n        p\\<turnstile>' \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        wf_\\<Gamma> (rs\\<^sub>1 @ rs\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> p\\<turnstile>' \\<langle>rs\\<^sub>1 @\n           rs\\<^sub>2, Undecided\\<rangle> \\<Rightarrow> t'\n 10. \\<And>m chain rs\\<^sub>1 m' rs\\<^sub>2.\n        \\<lbrakk>matches \\<gamma> m p;\n         \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         wf_\\<Gamma> rs\\<^sub>1 \\<Longrightarrow>\n         p\\<turnstile>' \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n         wf_\\<Gamma> [Rule m (Call chain)]\\<rbrakk>\n        \\<Longrightarrow> p\\<turnstile>' \\<langle>[Rule m\n              (Call chain)], Undecided\\<rangle> \\<Rightarrow> Undecided\nA total of 11 subgoals...", "apply(auto intro: iptables_bigstep'.intros simp: wf_\\<Gamma>_append dest!: wf_\\<Gamma>_Call)[11]"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "text\\<open>Showing that semantics are defined.\n  For rulesets which can be loaded by the Linux kernel. The kernel does not allow loops.\\<close>"], ["", "text\\<open>\n  We call a ruleset well-formed (wf) iff all @{const Call}s are into actually existing chains.\n\\<close>"], ["", "definition wf_chain :: \"'a ruleset \\<Rightarrow> 'a rule list \\<Rightarrow> bool\" where\n  \"wf_chain \\<Gamma> rs \\<equiv> (\\<forall>r \\<in> set rs. \\<forall> chain. get_action r = Call chain \\<longrightarrow> \\<Gamma> chain \\<noteq> None)\""], ["", "lemma wf_chain_append: \"wf_chain \\<Gamma> (rs1@rs2) \\<longleftrightarrow> wf_chain \\<Gamma> rs1 \\<and> wf_chain \\<Gamma> rs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_chain \\<Gamma> (rs1 @ rs2) =\n    (wf_chain \\<Gamma> rs1 \\<and> wf_chain \\<Gamma> rs2)", "by(simp add: wf_chain_def, blast)"], ["", "lemma wf_chain_fst: \"wf_chain \\<Gamma> (r # rs) \\<Longrightarrow>  wf_chain \\<Gamma> (rs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_chain \\<Gamma> (r # rs) \\<Longrightarrow> wf_chain \\<Gamma> rs", "by(simp add: wf_chain_def)"], ["", "text\\<open>This is what our tool will check at runtime\\<close>"], ["", "definition sanity_wf_ruleset :: \"(string \\<times> 'a rule list) list \\<Rightarrow> bool\" where\n  \"sanity_wf_ruleset \\<Gamma> \\<equiv> distinct (map fst \\<Gamma>) \\<and>\n          (\\<forall> rs \\<in> ran (map_of \\<Gamma>). (\\<forall>r \\<in> set rs. case get_action r of Accept \\<Rightarrow> True\n                                                                    | Drop \\<Rightarrow> True\n                                                                    | Reject \\<Rightarrow> True\n                                                                    | Log \\<Rightarrow> True\n                                                                    | Empty \\<Rightarrow> True\n                                                                    | Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n                                                                    | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n                                                                    | Return \\<Rightarrow> True\n                                                                    | _ \\<Rightarrow> False))\""], ["", "lemma sanity_wf_ruleset_wf_chain: \"sanity_wf_ruleset \\<Gamma> \\<Longrightarrow> rs \\<in> ran (map_of \\<Gamma>) \\<Longrightarrow> wf_chain (map_of \\<Gamma>) rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sanity_wf_ruleset \\<Gamma>;\n     rs \\<in> ran (map_of \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> wf_chain (map_of \\<Gamma>) rs", "apply(simp add: sanity_wf_ruleset_def wf_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (map fst \\<Gamma>) \\<and>\n             (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n                 \\<forall>r\\<in>set rs.\n                    case get_action r of\n                    Call chain \\<Rightarrow>\n                      chain \\<in> dom (map_of \\<Gamma>)\n                    | Goto chain \\<Rightarrow>\n                        chain \\<in> dom (map_of \\<Gamma>)\n                    | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True);\n     rs \\<in> ran (map_of \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>set rs.\n                         \\<forall>chain.\n                            get_action r = Call chain \\<longrightarrow>\n                            (\\<exists>y. (chain, y) \\<in> set \\<Gamma>)", "by fastforce"], ["", "lemma sanity_wf_ruleset_start: \"sanity_wf_ruleset \\<Gamma> \\<Longrightarrow> chain_name \\<in> dom (map_of \\<Gamma>) \\<Longrightarrow>\n  default_action = Accept \\<or> default_action = Drop \\<Longrightarrow> \n  wf_chain (map_of \\<Gamma>) [Rule MatchAny (Call chain_name), Rule MatchAny default_action]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sanity_wf_ruleset \\<Gamma>;\n     chain_name \\<in> dom (map_of \\<Gamma>);\n     default_action = Accept \\<or> default_action = Drop\\<rbrakk>\n    \\<Longrightarrow> wf_chain (map_of \\<Gamma>)\n                       [Rule MatchAny (Call chain_name),\n                        Rule MatchAny default_action]", "apply(simp add: sanity_wf_ruleset_def wf_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (map fst \\<Gamma>) \\<and>\n             (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n                 \\<forall>r\\<in>set rs.\n                    case get_action r of\n                    Call chain \\<Rightarrow>\n                      chain \\<in> dom (map_of \\<Gamma>)\n                    | Goto chain \\<Rightarrow>\n                        chain \\<in> dom (map_of \\<Gamma>)\n                    | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True);\n     chain_name \\<in> dom (map_of \\<Gamma>);\n     default_action = Accept \\<or> default_action = Drop\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>y.\n                          (chain_name, y) \\<in> set \\<Gamma>) \\<and>\n                      (\\<forall>chain.\n                          default_action = Call chain \\<longrightarrow>\n                          (\\<exists>y. (chain, y) \\<in> set \\<Gamma>))", "apply(safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>map_of \\<Gamma> chain_name = Some y;\n        distinct (map fst \\<Gamma>);\n        \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n           \\<forall>r\\<in>set rs.\n              case get_action r of\n              Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True;\n        default_action = Accept\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (chain_name, y) \\<in> set \\<Gamma>\n 2. \\<And>y.\n       \\<lbrakk>map_of \\<Gamma> chain_name = Some y;\n        distinct (map fst \\<Gamma>);\n        \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n           \\<forall>r\\<in>set rs.\n              case get_action r of\n              Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True;\n        default_action = Drop\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (chain_name, y) \\<in> set \\<Gamma>", "apply(simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(chain_name, y) \\<in> set \\<Gamma>;\n        distinct (map fst \\<Gamma>);\n        \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n           \\<forall>r\\<in>set rs.\n              case get_action r of\n              Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True;\n        default_action = Accept\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (chain_name, y) \\<in> set \\<Gamma>\n 2. \\<And>y.\n       \\<lbrakk>(chain_name, y) \\<in> set \\<Gamma>;\n        distinct (map fst \\<Gamma>);\n        \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n           \\<forall>r\\<in>set rs.\n              case get_action r of\n              Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n              | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True;\n        default_action = Drop\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. (chain_name, y) \\<in> set \\<Gamma>", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [code]: \"sanity_wf_ruleset \\<Gamma> =\n  (let dom = map fst \\<Gamma>;\n       ran = map snd \\<Gamma>\n   in distinct dom \\<and>\n    (\\<forall> rs \\<in> set ran. (\\<forall>r \\<in> set rs. case get_action r of Accept \\<Rightarrow> True\n                                                       | Drop \\<Rightarrow> True\n                                                       | Reject \\<Rightarrow> True\n                                                       | Log \\<Rightarrow> True\n                                                       | Empty \\<Rightarrow> True\n                                                       | Call chain \\<Rightarrow> chain \\<in> set dom\n                                                       | Goto chain \\<Rightarrow> chain \\<in> set dom\n                                                       | Return \\<Rightarrow> True\n                                                       | _ \\<Rightarrow> False)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sanity_wf_ruleset \\<Gamma> =\n    (let dom = map fst \\<Gamma>; ran = map snd \\<Gamma>\n     in distinct dom \\<and>\n        (\\<forall>rs\\<in>set ran.\n            \\<forall>r\\<in>set rs.\n               case get_action r of\n               Call chain \\<Rightarrow> chain \\<in> set dom\n               | Goto chain \\<Rightarrow> chain \\<in> set dom\n               | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sanity_wf_ruleset \\<Gamma> =\n    (let dom = map fst \\<Gamma>; ran = map snd \\<Gamma>\n     in distinct dom \\<and>\n        (\\<forall>rs\\<in>set ran.\n            \\<forall>r\\<in>set rs.\n               case get_action r of\n               Call chain \\<Rightarrow> chain \\<in> set dom\n               | Goto chain \\<Rightarrow> chain \\<in> set dom\n               | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "have set_map_fst: \"set (map fst \\<Gamma>) = dom (map_of \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map fst \\<Gamma>) = dom (map_of \\<Gamma>)", "by (simp add: dom_map_of_conv_image_fst)"], ["proof (state)\nthis:\n  set (map fst \\<Gamma>) = dom (map_of \\<Gamma>)\n\ngoal (1 subgoal):\n 1. sanity_wf_ruleset \\<Gamma> =\n    (let dom = map fst \\<Gamma>; ran = map snd \\<Gamma>\n     in distinct dom \\<and>\n        (\\<forall>rs\\<in>set ran.\n            \\<forall>r\\<in>set rs.\n               case get_action r of\n               Call chain \\<Rightarrow> chain \\<in> set dom\n               | Goto chain \\<Rightarrow> chain \\<in> set dom\n               | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "have set_map_snd: \"distinct (map fst \\<Gamma>) \\<Longrightarrow> set (map snd \\<Gamma>) = ran (map_of \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst \\<Gamma>) \\<Longrightarrow>\n    set (map snd \\<Gamma>) = ran (map_of \\<Gamma>)", "by (simp add: ran_distinct)"], ["proof (state)\nthis:\n  distinct (map fst \\<Gamma>) \\<Longrightarrow>\n  set (map snd \\<Gamma>) = ran (map_of \\<Gamma>)\n\ngoal (1 subgoal):\n 1. sanity_wf_ruleset \\<Gamma> =\n    (let dom = map fst \\<Gamma>; ran = map snd \\<Gamma>\n     in distinct dom \\<and>\n        (\\<forall>rs\\<in>set ran.\n            \\<forall>r\\<in>set rs.\n               case get_action r of\n               Call chain \\<Rightarrow> chain \\<in> set dom\n               | Goto chain \\<Rightarrow> chain \\<in> set dom\n               | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sanity_wf_ruleset \\<Gamma> =\n    (let dom = map fst \\<Gamma>; ran = map snd \\<Gamma>\n     in distinct dom \\<and>\n        (\\<forall>rs\\<in>set ran.\n            \\<forall>r\\<in>set rs.\n               case get_action r of\n               Call chain \\<Rightarrow> chain \\<in> set dom\n               | Goto chain \\<Rightarrow> chain \\<in> set dom\n               | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "unfolding sanity_wf_ruleset_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (distinct (map fst \\<Gamma>) \\<and>\n     (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n         \\<forall>r\\<in>set rs.\n            case get_action r of\n            Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n            | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n            | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)) =\n    (distinct (map fst \\<Gamma>) \\<and>\n     (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n         \\<forall>r\\<in>set rs.\n            case get_action r of\n            Call chain \\<Rightarrow> chain \\<in> set (map fst \\<Gamma>)\n            | Goto chain \\<Rightarrow> chain \\<in> set (map fst \\<Gamma>)\n            | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "apply(subst set_map_fst)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. (distinct (map fst \\<Gamma>) \\<and>\n     (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n         \\<forall>r\\<in>set rs.\n            case get_action r of\n            Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n            | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n            | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)) =\n    (distinct (map fst \\<Gamma>) \\<and>\n     (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n         \\<forall>r\\<in>set rs.\n            case get_action r of\n            Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n            | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n            | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False\n           | _ \\<Rightarrow> True) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)\n 2. distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False\n           | _ \\<Rightarrow> True) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)", "apply(elim conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct (map fst \\<Gamma>);\n     \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> distinct (map fst \\<Gamma>) \\<and>\n                      (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n                          \\<forall>r\\<in>set rs.\n                             case get_action r of\n                             Call chain \\<Rightarrow>\n                               chain \\<in> dom (map_of \\<Gamma>)\n                             | Goto chain \\<Rightarrow>\n                                 chain \\<in> dom (map_of \\<Gamma>)\n                             | Unknown \\<Rightarrow> False\n                             | _ \\<Rightarrow> True)\n 2. distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False\n           | _ \\<Rightarrow> True) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)", "apply(subst set_map_snd)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>distinct (map fst \\<Gamma>);\n     \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> distinct (map fst \\<Gamma>)\n 2. \\<lbrakk>distinct (map fst \\<Gamma>);\n     \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> distinct (map fst \\<Gamma>) \\<and>\n                      (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n                          \\<forall>r\\<in>set rs.\n                             case get_action r of\n                             Call chain \\<Rightarrow>\n                               chain \\<in> dom (map_of \\<Gamma>)\n                             | Goto chain \\<Rightarrow>\n                                 chain \\<in> dom (map_of \\<Gamma>)\n                             | Unknown \\<Rightarrow> False\n                             | _ \\<Rightarrow> True)\n 3. distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False\n           | _ \\<Rightarrow> True) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct (map fst \\<Gamma>);\n     \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> distinct (map fst \\<Gamma>) \\<and>\n                      (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n                          \\<forall>r\\<in>set rs.\n                             case get_action r of\n                             Call chain \\<Rightarrow>\n                               chain \\<in> dom (map_of \\<Gamma>)\n                             | Goto chain \\<Rightarrow>\n                                 chain \\<in> dom (map_of \\<Gamma>)\n                             | Unknown \\<Rightarrow> False\n                             | _ \\<Rightarrow> True)\n 2. distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False\n           | _ \\<Rightarrow> True) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False\n           | _ \\<Rightarrow> True) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>) \\<and>\n    (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True)", "apply(elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct (map fst \\<Gamma>);\n     \\<forall>rs\\<in>set (map snd \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> distinct (map fst \\<Gamma>) \\<and>\n                      (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n                          \\<forall>r\\<in>set rs.\n                             case get_action r of\n                             Call chain \\<Rightarrow>\n                               chain \\<in> dom (map_of \\<Gamma>)\n                             | Goto chain \\<Rightarrow>\n                                 chain \\<in> dom (map_of \\<Gamma>)\n                             | Unknown \\<Rightarrow> False\n                             | _ \\<Rightarrow> True)", "apply(subst(asm) set_map_snd)"], ["proof (prove)\ngoal (2 subgoals):\n 1. distinct (map fst \\<Gamma>) \\<Longrightarrow>\n    distinct (map fst \\<Gamma>)\n 2. \\<lbrakk>distinct (map fst \\<Gamma>);\n     \\<forall>rs\\<in>ran (map_of \\<Gamma>).\n        \\<forall>r\\<in>set rs.\n           case get_action r of\n           Call chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Goto chain \\<Rightarrow> chain \\<in> dom (map_of \\<Gamma>)\n           | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> distinct (map fst \\<Gamma>) \\<and>\n                      (\\<forall>rs\\<in>ran (map_of \\<Gamma>).\n                          \\<forall>r\\<in>set rs.\n                             case get_action r of\n                             Call chain \\<Rightarrow>\n                               chain \\<in> dom (map_of \\<Gamma>)\n                             | Goto chain \\<Rightarrow>\n                                 chain \\<in> dom (map_of \\<Gamma>)\n                             | Unknown \\<Rightarrow> False\n                             | _ \\<Rightarrow> True)", "apply(simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  sanity_wf_ruleset \\<Gamma> =\n  (let dom = map fst \\<Gamma>; ran = map snd \\<Gamma>\n   in distinct dom \\<and>\n      (\\<forall>rs\\<in>set ran.\n          \\<forall>r\\<in>set rs.\n             case get_action r of\n             Call chain \\<Rightarrow> chain \\<in> set dom\n             | Goto chain \\<Rightarrow> chain \\<in> set dom\n             | Unknown \\<Rightarrow> False | _ \\<Rightarrow> True))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma semantics_bigstep_defined1: assumes \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg\"\n  and \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. \\<forall> r \\<in> set rsg. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown\"\n  and \"\\<forall> r \\<in> set rs. get_action r \\<noteq> Return\" (*no toplevel return*)\n  and \"(\\<forall>name \\<in> dom \\<Gamma>. \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> t)\" (*defined for all chains in the background ruleset*)\n  shows \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>r\\<in>set rs. get_action r \\<noteq> Return\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>t.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof(induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball (ran \\<Gamma> \\<union> {[]}) (wf_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set []. get_action r \\<noteq> Return;\n     \\<forall>name\\<in>dom \\<Gamma>.\n        Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n             Undecided)\\<rbrakk>\n    \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p [] s)\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {[]}. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>r\\<in>set []. get_action r \\<noteq> Return\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball (ran \\<Gamma> \\<union> {[]}) (wf_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set []. get_action r \\<noteq> Return;\n     \\<forall>name\\<in>dom \\<Gamma>.\n        Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n             Undecided)\\<rbrakk>\n    \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p [] s)\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {[]}. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>r\\<in>set []. get_action r \\<noteq> Return\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=s in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma> \\<union> {[]}. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set []. get_action r \\<noteq> Return;\n     \\<forall>name\\<in>dom \\<Gamma>.\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n               (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> s", "by(simp add: skip)"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown;\n   \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n   \\<forall>name\\<in>dom \\<Gamma>.\n      \\<exists>a.\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n             (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {r # rs}. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {r # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>r\\<in>set (r # rs). get_action r \\<noteq> Return\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "from Cons.prems Cons.IH"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {r # rs}. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {r # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>r\\<in>set (r # rs). get_action r \\<noteq> Return\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n  \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown;\n   \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n   \\<forall>name\\<in>dom \\<Gamma>.\n      \\<exists>a.\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n             (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a", "obtain t' where t': \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {r # rs}. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {r # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>r\\<in>set (r # rs). get_action r \\<noteq> Return\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n  \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown;\n   \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n   \\<forall>name\\<in>dom \\<Gamma>.\n      \\<exists>a.\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n             (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n                thesis;\n     wf_chain \\<Gamma> (r # rs) \\<and>\n     (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown \\<and>\n     (\\<forall>r\\<in>set rs.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown) \\<and>\n     (\\<forall>rsg\\<in>ran \\<Gamma>.\n         \\<forall>r\\<in>set rsg.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown);\n     get_action r \\<noteq> Return \\<and>\n     (\\<forall>r\\<in>set rs. get_action r \\<noteq> Return);\n     \\<forall>name\\<in>dom \\<Gamma>.\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n               (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a;\n     wf_chain \\<Gamma> rs \\<Longrightarrow>\n     Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n                thesis;\n     \\<forall>name\\<in>dom \\<Gamma>.\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n               (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a;\n     wf_chain \\<Gamma> rs \\<Longrightarrow>\n     Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x;\n     \\<forall>chain. get_action r \\<noteq> Goto chain;\n     get_action r \\<noteq> Return;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(simp add: wf_chain_fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n                thesis;\n     \\<forall>name\\<in>dom \\<Gamma>.\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n               (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a;\n     Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x;\n     \\<forall>chain. get_action r \\<noteq> Goto chain;\n     get_action r \\<noteq> Return;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "obtain m a where r: \"r = Rule m a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m a. r = Rule m a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases r) blast"], ["proof (state)\nthis:\n  r = Rule m a\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma> \\<union> {rs})\n                          (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n                 \\<forall>name\\<in>dom \\<Gamma>.\n                    Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                         (the (\\<Gamma> name)) Undecided)\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs s);\n        Ball (ran \\<Gamma> \\<union> {a # rs}) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {a # rs}.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>r\\<in>set (a # rs). get_action r \\<noteq> Return;\n        \\<forall>name\\<in>dom \\<Gamma>.\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p (the (\\<Gamma> name))\n                Undecided)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "proof(cases \"matches \\<gamma> m p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "case False"], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m p\n\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s\""], ["proof (prove)\nusing this:\n  \\<not> matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s", "apply(cases s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> matches \\<gamma> m p; s = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       \\<lbrakk>\\<not> matches \\<gamma> m p; s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s", "apply(simp add: nomatch r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>\\<not> matches \\<gamma> m p; s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s", "by(simp add: decision)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s\n\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=t' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, s\\<rangle> \\<Rightarrow> t'", "apply(rule_tac t=s in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "using t'"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> s \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "by(simp)"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "case True"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "proof(cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<exists>a.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n             rs, s\\<rangle> \\<Rightarrow> a", "case (Decision X)"], ["proof (state)\nthis:\n  s = Decision X\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<exists>a.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n             rs, s\\<rangle> \\<Rightarrow> a", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Decision X\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=\"Decision X\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s = Decision X \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, s\\<rangle> \\<Rightarrow> Decision X", "by(simp add: decision)"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "case Undecided"], ["proof (state)\nthis:\n  s = Undecided\n\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "have \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a # rs, Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "proof(cases a)"], ["proof (state)\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 9. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Accept"], ["proof (state)\nthis:\n  a = Accept\n\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 9. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Accept", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Accept\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=\"Decision FinalAllow\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Accept\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs, Undecided\\<rangle> \\<Rightarrow> Decision\n                         FinalAllow", "apply(rule_tac t=\"Decision FinalAllow\" in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Accept\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalAllow\n 2. \\<lbrakk>matches \\<gamma> m p; a = Accept\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n                              FinalAllow\\<rangle> \\<Rightarrow> Decision\n                           FinalAllow", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Drop"], ["proof (state)\nthis:\n  a = Drop\n\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Drop", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Drop\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=\"Decision FinalDeny\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Drop\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs, Undecided\\<rangle> \\<Rightarrow> Decision\n                         FinalDeny", "apply(rule_tac t=\"Decision FinalDeny\" in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Drop\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalDeny\n 2. \\<lbrakk>matches \\<gamma> m p; a = Drop\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n                              FinalDeny\\<rangle> \\<Rightarrow> Decision\n                          FinalDeny", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Log"], ["proof (state)\nthis:\n  a = Log\n\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with True t' Undecided"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n  s = Undecided\n  a = Log", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n  s = Undecided\n  a = Log\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=t' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t';\n     s = Undecided; a = Log\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs, Undecided\\<rangle> \\<Rightarrow> t'", "apply(rule_tac t=Undecided in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t';\n     s = Undecided; a = Log\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t';\n     s = Undecided; a = Log\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Reject"], ["proof (state)\nthis:\n  a = Reject\n\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Reject", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Reject\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=\"Decision FinalDeny\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs, Undecided\\<rangle> \\<Rightarrow> Decision\n                         FinalDeny", "apply(rule_tac t=\"Decision FinalDeny\" in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalDeny\n 2. \\<lbrakk>matches \\<gamma> m p; a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Decision\n                              FinalDeny\\<rangle> \\<Rightarrow> Decision\n                          FinalDeny", "by(auto intro: iptables_bigstep.intros)[2]"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Return"], ["proof (state)\nthis:\n  a = Return\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with Cons.prems(3)[simplified r]"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>set (Rule m a # rs). get_action r \\<noteq> Return\n  a = Return", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set (Rule m a # rs). get_action r \\<noteq> Return\n  a = Return\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (4 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Goto"], ["proof (state)\nthis:\n  a = Goto x7_\n\ngoal (4 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with Cons.prems(2)[simplified r]"], ["proof (chain)\npicking this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {Rule m a # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Goto x7_", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {Rule m a # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Goto x7_\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "by auto"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case (Call chain_name)"], ["proof (state)\nthis:\n  a = Call chain_name\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "from Call Cons.prems(1)"], ["proof (chain)\npicking this:\n  a = Call chain_name\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {r # rs}. wf_chain \\<Gamma> a", "obtain rs' where 1: \"\\<Gamma> chain_name = Some rs'\""], ["proof (prove)\nusing this:\n  a = Call chain_name\n  \\<forall>a\\<in>ran \\<Gamma> \\<union> {r # rs}. wf_chain \\<Gamma> a\n\ngoal (1 subgoal):\n 1. (\\<And>rs'.\n        \\<Gamma> chain_name = Some rs' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(simp add: r wf_chain_def) blast"], ["proof (state)\nthis:\n  \\<Gamma> chain_name = Some rs'\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with Cons.prems(4)"], ["proof (chain)\npicking this:\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n  \\<Gamma> chain_name = Some rs'", "obtain t'' where 2: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the (\\<Gamma> chain_name), Undecided\\<rangle> \\<Rightarrow> t''\""], ["proof (prove)\nusing this:\n  \\<forall>name\\<in>dom \\<Gamma>.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma> name), Undecided\\<rangle> \\<Rightarrow> a\n  \\<Gamma> chain_name = Some rs'\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n            (\\<Gamma>\n              chain_name), Undecided\\<rangle> \\<Rightarrow> t'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n      (\\<Gamma> chain_name), Undecided\\<rangle> \\<Rightarrow> t''\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "from 1 2 True"], ["proof (chain)\npicking this:\n  \\<Gamma> chain_name = Some rs'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n      (\\<Gamma> chain_name), Undecided\\<rangle> \\<Rightarrow> t''\n  matches \\<gamma> m p", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t''\""], ["proof (prove)\nusing this:\n  \\<Gamma> chain_name = Some rs'\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>the\n      (\\<Gamma> chain_name), Undecided\\<rangle> \\<Rightarrow> t''\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t''", "by(auto dest: call_result)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t''\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n             rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with Call t' Undecided"], ["proof (chain)\npicking this:\n  a = Call chain_name\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n  s = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t''", "show ?thesis"], ["proof (prove)\nusing this:\n  a = Call chain_name\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n  s = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t''\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(simp add: r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Call chain_name;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     s = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t''\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call chain_name) #\n                            rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(cases t'')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Call chain_name;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     s = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t'';\n     t'' = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call chain_name) #\n                            rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t'';\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                (Call chain_name) #\n                               rs, Undecided\\<rangle> \\<Rightarrow> t", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Call chain_name;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     s = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     t'' = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call chain_name) #\n                            rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t'';\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                (Call chain_name) #\n                               rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=t' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = Call chain_name;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     s = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     t'' = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                          (Call chain_name) #\n                         rs, Undecided\\<rangle> \\<Rightarrow> t'\n 2. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t'';\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                (Call chain_name) #\n                               rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac t=Undecided in seq'_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a = Call chain_name;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     s = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     t'' = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           (Call\n                             chain_name)], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<lbrakk>a = Call chain_name;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     s = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     t'' = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n 3. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t'';\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                (Call chain_name) #\n                               rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(auto intro: iptables_bigstep.intros)[2]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t'';\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                (Call chain_name) #\n                               rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call\n               chain_name)], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                (Call chain_name) #\n                               rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=t'' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call\n               chain_name)], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call chain_name) #\n                            rs, Undecided\\<rangle> \\<Rightarrow> t''", "apply(rule_tac t=t'' in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call\n               chain_name)], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              (Call\n                                chain_name)], Undecided\\<rangle> \\<Rightarrow> t''\n 2. \\<And>x2.\n       \\<lbrakk>a = Call chain_name;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n        s = Undecided;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call\n               chain_name)], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        t'' = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, t''\\<rangle> \\<Rightarrow> t''", "apply(auto intro: iptables_bigstep.intros)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Empty"], ["proof (state)\nthis:\n  a = Empty\n\ngoal (2 subgoals):\n 1. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with True t' Undecided"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n  s = Undecided\n  a = Empty", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n  s = Undecided\n  a = Empty\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=t' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t';\n     s = Undecided; a = Empty\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs, Undecided\\<rangle> \\<Rightarrow> t'", "apply(rule_tac t=Undecided in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t';\n     s = Undecided; a = Empty\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t';\n     s = Undecided; a = Empty\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "case Unknown"], ["proof (state)\nthis:\n  a = Unknown\n\ngoal (1 subgoal):\n 1. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "with Cons.prems(2)[simplified r]"], ["proof (chain)\npicking this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {Rule m a # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Unknown", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {Rule m a # rs}.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Unknown\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> t", "by(simp)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "unfolding r Undecided"], ["proof (prove)\nusing this:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n        rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>b.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n          rs, Undecided\\<rangle> \\<Rightarrow> b", "by simp"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Showing the main theorem\\<close>"], ["", "context\nbegin"], ["", "private"], ["", "lemma iptables_bigstep_defined_if_singleton_rules:\n  \"\\<forall> r \\<in> set rs. (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow> \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<in>set rs.\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof(induction rs arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<forall>r\\<in>set [].\n          Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s) \\<Longrightarrow>\n       Ex (iptables_bigstep \\<Gamma> \\<gamma> p [] s)\n 2. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set [].\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<forall>r\\<in>set [].\n          Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s) \\<Longrightarrow>\n       Ex (iptables_bigstep \\<Gamma> \\<gamma> p [] s)\n 2. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> s\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set [].\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> s", "by(simp add: skip)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> s\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<forall>r\\<in>set [].\n          Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s) \\<Longrightarrow>\n       Ex (iptables_bigstep \\<Gamma> \\<gamma> p [] s)\n 2. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> s\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> a", "by blast"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "case(Cons r rs s)"], ["proof (state)\nthis:\n  \\<forall>r\\<in>set rs.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], ?s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> a\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a", "obtain t where t: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r]\n                           s) \\<Longrightarrow>\n                   Ex (iptables_bigstep \\<Gamma> \\<gamma> p rs s);\n        \\<forall>r\\<in>set (a # rs).\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [r] s)\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p (a # rs)\n                              s)", "with Cons"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>set rs.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], ?s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> a\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], ?s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> a\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "proof(cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>s.\n                \\<forall>r\\<in>set rs.\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                \\<exists>a.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n     \\<forall>r\\<in>set (r # rs).\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     t = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<And>x2.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n        \\<forall>r\\<in>set (r # rs).\n           \\<exists>a.\n              \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n        t = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs, s\\<rangle> \\<Rightarrow> a", "case Decision"], ["proof (state)\nthis:\n  t = Decision x2_\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>s.\n                \\<forall>r\\<in>set rs.\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                \\<exists>a.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n     \\<forall>r\\<in>set (r # rs).\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     t = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> a\n 2. \\<And>x2.\n       \\<lbrakk>\\<And>s.\n                   \\<forall>r\\<in>set rs.\n                      \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n        \\<forall>r\\<in>set (r # rs).\n           \\<exists>a.\n              \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n        t = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs, s\\<rangle> \\<Rightarrow> a", "with t"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\n  t = Decision x2_", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\n  t = Decision x2_\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "by (meson decision seq'_cons)"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<forall>r\\<in>set rs.\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                \\<exists>a.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n     \\<forall>r\\<in>set (r # rs).\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     t = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<forall>r\\<in>set rs.\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                \\<exists>a.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n     \\<forall>r\\<in>set (r # rs).\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     t = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> a", "case Undecided"], ["proof (state)\nthis:\n  t = Undecided\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<forall>r\\<in>set rs.\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                \\<exists>a.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n     \\<forall>r\\<in>set (r # rs).\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     t = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> a", "from Cons"], ["proof (chain)\npicking this:\n  \\<forall>r\\<in>set rs.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], ?s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> a\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a", "obtain t' where t': \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\""], ["proof (prove)\nusing this:\n  \\<forall>r\\<in>set rs.\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], ?s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> a\n  \\<forall>r\\<in>set (r # rs).\n     \\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<forall>r\\<in>set rs.\n                   \\<exists>a.\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a \\<Longrightarrow>\n                \\<exists>a.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> a;\n     \\<forall>r\\<in>set (r # rs).\n        \\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     t = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> a", "with Undecided t"], ["proof (chain)\npicking this:\n  t = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  t = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs, s\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=t' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                         rs, s\\<rangle> \\<Rightarrow> t'", "apply(rule seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> ?t4\n 2. \\<lbrakk>t = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?t4\\<rangle> \\<Rightarrow> t'", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'", "using iptables_bigstep_to_undecided"], ["proof (prove)\nusing this:\n  ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, ?s\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n  ?s = Undecided\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n        rs, s\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>well founded relation.\\<close>"], ["", "definition calls_chain :: \"'a ruleset \\<Rightarrow> (string \\<times> string) set\" where\n    \"calls_chain \\<Gamma> = {(r, s). case \\<Gamma> r of Some rs \\<Rightarrow> \\<exists>m. Rule m (Call s) \\<in> set rs | None \\<Rightarrow> False}\""], ["", "lemma calls_chain_def2: \"calls_chain \\<Gamma> = {(caller, callee). \\<exists>rs m. \\<Gamma> caller = Some rs \\<and> Rule m (Call callee) \\<in> set rs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calls_chain \\<Gamma> =\n    _Collect (caller, callee)\n     (\\<exists>rs m.\n         \\<Gamma> caller = Some rs \\<and> Rule m (Call callee) \\<in> set rs)", "unfolding calls_chain_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. _Collect (r, s)\n     (case \\<Gamma> r of None \\<Rightarrow> False\n      | Some rs \\<Rightarrow> \\<exists>m. Rule m (Call s) \\<in> set rs) =\n    _Collect (caller, callee)\n     (\\<exists>rs m.\n         \\<Gamma> caller = Some rs \\<and> Rule m (Call callee) \\<in> set rs)", "apply(safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       case \\<Gamma> a of None \\<Rightarrow> False\n       | Some rs \\<Rightarrow>\n           \\<exists>m. Rule m (Call b) \\<in> set rs \\<Longrightarrow>\n       \\<exists>rs m.\n          \\<Gamma> a = Some rs \\<and> Rule m (Call b) \\<in> set rs\n 2. \\<And>a b rs m.\n       \\<lbrakk>\\<Gamma> a = Some rs; Rule m (Call b) \\<in> set rs\\<rbrakk>\n       \\<Longrightarrow> case \\<Gamma> a of None \\<Rightarrow> False\n                         | Some rs \\<Rightarrow>\n                             \\<exists>m. Rule m (Call b) \\<in> set rs", "apply(simp split: option.split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b rs m.\n       \\<lbrakk>\\<Gamma> a = Some rs; Rule m (Call b) \\<in> set rs\\<rbrakk>\n       \\<Longrightarrow> case \\<Gamma> a of None \\<Rightarrow> False\n                         | Some rs \\<Rightarrow>\n                             \\<exists>m. Rule m (Call b) \\<in> set rs", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b rs m.\n       \\<lbrakk>\\<Gamma> a = Some rs; Rule m (Call b) \\<in> set rs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m. Rule m (Call b) \\<in> set rs", "by blast"], ["", "text\\<open>example\\<close>"], ["", "private"], ["", "lemma \"calls_chain [\n      ''FORWARD'' \\<mapsto> [(Rule m1 Log), (Rule m2 (Call ''foo'')), (Rule m3 Accept), (Rule m' (Call ''baz''))],\n      ''foo'' \\<mapsto> [(Rule m4 Log), (Rule m5 Return), (Rule m6 (Call ''bar''))], \n      ''bar'' \\<mapsto> [],\n      ''baz'' \\<mapsto> []] =\n      {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calls_chain\n     [''FORWARD'' \\<mapsto>\n      [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n       Rule m' (Call ''baz'')],\n      ''foo'' \\<mapsto>\n      [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n      \\<mapsto> [], ''baz'' \\<mapsto> []] =\n    {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}", "unfolding calls_chain_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. _Collect (r, s)\n     (case [''FORWARD'' \\<mapsto>\n            [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n             Rule m' (Call ''baz'')],\n            ''foo'' \\<mapsto>\n            [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n            \\<mapsto> [], ''baz'' \\<mapsto> []]\n            r of\n      None \\<Rightarrow> False\n      | Some rs \\<Rightarrow> \\<exists>m. Rule m (Call s) \\<in> set rs) =\n    {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}", "by(auto split: option.split_asm if_split_asm)"], ["", "private"], ["", "lemma \"wf (calls_chain [\n      ''FORWARD'' \\<mapsto> [(Rule m1 Log), (Rule m2 (Call ''foo'')), (Rule m3 Accept), (Rule m' (Call ''baz''))],\n      ''foo'' \\<mapsto> [(Rule m4 Log), (Rule m5 Return), (Rule m6 (Call ''bar''))], \n      ''bar'' \\<mapsto> [],\n      ''baz'' \\<mapsto> []])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (calls_chain\n         [''FORWARD'' \\<mapsto>\n          [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n           Rule m' (Call ''baz'')],\n          ''foo'' \\<mapsto>\n          [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n          \\<mapsto> [], ''baz'' \\<mapsto> []])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wf (calls_chain\n         [''FORWARD'' \\<mapsto>\n          [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n           Rule m' (Call ''baz'')],\n          ''foo'' \\<mapsto>\n          [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n          \\<mapsto> [], ''baz'' \\<mapsto> []])", "have g: \"calls_chain [''FORWARD'' \\<mapsto> [(Rule m1 Log), (Rule m2 (Call ''foo'')), (Rule m3 Accept), (Rule m' (Call ''baz''))],\n            ''foo'' \\<mapsto> [(Rule m4 Log), (Rule m5 Return), (Rule m6 (Call ''bar''))], \n            ''bar'' \\<mapsto> [],\n            ''baz'' \\<mapsto> []] = {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calls_chain\n     [''FORWARD'' \\<mapsto>\n      [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n       Rule m' (Call ''baz'')],\n      ''foo'' \\<mapsto>\n      [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n      \\<mapsto> [], ''baz'' \\<mapsto> []] =\n    {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}", "by(auto simp add: calls_chain_def split: option.split_asm if_split_asm)"], ["proof (state)\nthis:\n  calls_chain\n   [''FORWARD'' \\<mapsto>\n    [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n     Rule m' (Call ''baz'')],\n    ''foo'' \\<mapsto> [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')],\n    ''bar'' \\<mapsto> [], ''baz'' \\<mapsto> []] =\n  {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}\n\ngoal (1 subgoal):\n 1. wf (calls_chain\n         [''FORWARD'' \\<mapsto>\n          [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n           Rule m' (Call ''baz'')],\n          ''foo'' \\<mapsto>\n          [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n          \\<mapsto> [], ''baz'' \\<mapsto> []])", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (calls_chain\n         [''FORWARD'' \\<mapsto>\n          [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n           Rule m' (Call ''baz'')],\n          ''foo'' \\<mapsto>\n          [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n          \\<mapsto> [], ''baz'' \\<mapsto> []])", "unfolding g"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(''FORWARD'', ''foo''), (''FORWARD'', ''baz''), (''foo'', ''bar'')}", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (''baz'', ''FORWARD'') \\<notin> {(''foo'', ''bar'')}\\<^sup>* \\<and>\n    (''foo'', ''FORWARD'')\n    \\<notin> {(''FORWARD'', ''baz''), (''foo'', ''bar'')}\\<^sup>*", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. (''baz'', ''FORWARD'')\n    \\<in> {(''foo'', ''bar'')}\\<^sup>* \\<Longrightarrow>\n    False\n 2. (''foo'', ''FORWARD'')\n    \\<in> {(''FORWARD'', ''baz''),\n           (''foo'', ''bar'')}\\<^sup>* \\<Longrightarrow>\n    False", "apply(erule rtranclE, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (''foo'', ''FORWARD'')\n    \\<in> {(''FORWARD'', ''baz''),\n           (''foo'', ''bar'')}\\<^sup>* \\<Longrightarrow>\n    False", "apply(erule rtranclE, simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  wf (calls_chain\n       [''FORWARD'' \\<mapsto>\n        [Rule m1 Log, Rule m2 (Call ''foo''), Rule m3 Accept,\n         Rule m' (Call ''baz'')],\n        ''foo'' \\<mapsto>\n        [Rule m4 Log, Rule m5 Return, Rule m6 (Call ''bar'')], ''bar'' \n        \\<mapsto> [], ''baz'' \\<mapsto> []])\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>In our proof, we will need the reverse.\\<close>"], ["", "private"], ["", "definition called_by_chain :: \"'a ruleset \\<Rightarrow> (string \\<times> string) set\" where\n    \"called_by_chain \\<Gamma> = {(callee, caller). case \\<Gamma> caller of Some rs \\<Rightarrow> \\<exists>m. Rule m (Call callee) \\<in> set rs | None \\<Rightarrow> False}\""], ["", "private"], ["", "lemma called_by_chain_converse: \"calls_chain \\<Gamma> = converse (called_by_chain \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. calls_chain \\<Gamma> = (called_by_chain \\<Gamma>)\\<inverse>", "apply(simp add: calls_chain_def called_by_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. _Collect (r, s)\n     (case \\<Gamma> r of None \\<Rightarrow> False\n      | Some rs \\<Rightarrow> \\<exists>m. Rule m (Call s) \\<in> set rs) =\n    (_Collect (callee, caller)\n      (case \\<Gamma> caller of None \\<Rightarrow> False\n       | Some rs \\<Rightarrow>\n           \\<exists>m. Rule m (Call callee) \\<in> set rs))\\<inverse>", "by blast"], ["", "private"], ["", "lemma wf_called_by_chain: \"finite (calls_chain \\<Gamma>) \\<Longrightarrow> wf (calls_chain \\<Gamma>) \\<Longrightarrow> wf (called_by_chain \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (calls_chain \\<Gamma>);\n     wf (calls_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> wf (called_by_chain \\<Gamma>)", "apply(frule Wellfounded.wf_acyclic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (calls_chain \\<Gamma>); wf (calls_chain \\<Gamma>);\n     acyclic (calls_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> wf (called_by_chain \\<Gamma>)", "apply(drule(1) Wellfounded.finite_acyclic_wf_converse)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf (calls_chain \\<Gamma>); acyclic (calls_chain \\<Gamma>);\n     wf ((calls_chain \\<Gamma>)\\<inverse>)\\<rbrakk>\n    \\<Longrightarrow> wf (called_by_chain \\<Gamma>)", "apply(simp add: called_by_chain_converse)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "private"], ["", "lemma helper_cases_call_subchain_defined_or_return:\n        \"(\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x) \\<Longrightarrow>\n         \\<forall>rsg\\<in>ran \\<Gamma>. \\<forall>r\\<in>set rsg. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow>\n         \\<forall>y m. \\<forall>r\\<in>set rs_called. r = Rule m (Call y) \\<longrightarrow> (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call y)], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n         wf_chain \\<Gamma> rs_called \\<Longrightarrow> \n         \\<forall>r\\<in>set rs_called. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow>\n         (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n         (\\<exists>rs_called1 rs_called2 m'.\n             rs_called = (rs_called1 @ [Rule m' Return] @ rs_called2) \\<and>\n             matches \\<gamma> m' p \\<and> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set rs_called.\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>t.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> t);\n     wf_chain \\<Gamma> rs_called;\n     \\<forall>r\\<in>set rs_called.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>t.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          rs_called =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "proof(induction rs_called arbitrary:)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set [].\n           r = Rule m (Call y) \\<longrightarrow>\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                Undecided);\n     wf_chain \\<Gamma> [];\n     \\<forall>r\\<in>set [].\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p []\n                           Undecided) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          [] =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set [].\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> []\n  \\<forall>r\\<in>set [].\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set [].\n           r = Rule m (Call y) \\<longrightarrow>\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                Undecided);\n     wf_chain \\<Gamma> [];\n     \\<forall>r\\<in>set [].\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p []\n                           Undecided) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          [] =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "hence \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set [].\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> []\n  \\<forall>r\\<in>set [].\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=Undecided in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set [].\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> [];\n     \\<forall>r\\<in>set [].\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "by(simp add: skip)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set [].\n           r = Rule m (Call y) \\<longrightarrow>\n           Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                Undecided);\n     wf_chain \\<Gamma> [];\n     \\<forall>r\\<in>set [].\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p []\n                           Undecided) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          [] =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        [] = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "by simp"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      [] = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown;\n   \\<forall>y m.\n      \\<forall>r\\<in>set rs.\n         r = Rule m (Call y) \\<longrightarrow>\n         (\\<exists>a.\n             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n   wf_chain \\<Gamma> rs;\n   \\<forall>r\\<in>set rs.\n      (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n      get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>a.\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                    (\\<exists>rs_called1 rs_called2 m'.\n                        rs =\n                        rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                        matches \\<gamma> m' p \\<and>\n                        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown", "have \"wf_chain \\<Gamma> [r]\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. wf_chain \\<Gamma> [r]", "by(simp add: wf_chain_def)"], ["proof (state)\nthis:\n  wf_chain \\<Gamma> [r]\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown", "have IH:\"(\\<exists>t'. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t') \\<or>\n      (\\<exists>rs_called1 rs_called2 m'.\n          rs = (rs_called1 @ [Rule m' Return] @ rs_called2) \\<and>\n          matches \\<gamma> m' p \\<and> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. (\\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t') \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set (r # rs).\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>r\\<in>set (r # rs).\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>t'.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t') \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule Cons.IH)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set (r # rs).\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>r\\<in>set (r # rs).\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n 2. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set (r # rs).\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>r\\<in>set (r # rs).\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma>.\n                         \\<forall>r\\<in>set rsg.\n                            (\\<forall>chain.\n                                get_action r \\<noteq> Goto chain) \\<and>\n                            get_action r \\<noteq> Unknown\n 3. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set (r # rs).\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>r\\<in>set (r # rs).\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y m.\n                         \\<forall>r\\<in>set rs.\n                            r = Rule m (Call y) \\<longrightarrow>\n                            (\\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a)\n 4. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set (r # rs).\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>r\\<in>set (r # rs).\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> wf_chain \\<Gamma> rs\n 5. \\<lbrakk>\\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>y m.\n        \\<forall>r\\<in>set (r # rs).\n           r = Rule m (Call y) \\<longrightarrow>\n           (\\<exists>a.\n               \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                    (Call y)], Undecided\\<rangle> \\<Rightarrow> a);\n     wf_chain \\<Gamma> (r # rs);\n     \\<forall>r\\<in>set (r # rs).\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>set rs.\n                         (\\<forall>chain.\n                             get_action r \\<noteq> Goto chain) \\<and>\n                         get_action r \\<noteq> Unknown", "apply(auto dest: wf_chain_fst)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>t'.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t') \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown", "have case_call: \"r = Rule m (Call y) \\<Longrightarrow> (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call y)], Undecided\\<rangle> \\<Rightarrow> t)\" for y m"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. r = Rule m (Call y) \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call y)], Undecided\\<rangle> \\<Rightarrow> t", "by(simp)"], ["proof (state)\nthis:\n  r = Rule ?m (Call ?y) \\<Longrightarrow>\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n          (Call ?y)], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "obtain m a where r: \"r = Rule m a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m a. r = Rule m a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases r) simp"], ["proof (state)\nthis:\n  r = Rule m a\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown", "have a_not: \"(\\<forall>chain. a \\<noteq> Goto chain) \\<and> a \\<noteq> Unknown\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set (r # rs).\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>a.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> a)\n  wf_chain \\<Gamma> (r # rs)\n  \\<forall>r\\<in>set (r # rs).\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. (\\<forall>chain. a \\<noteq> Goto chain) \\<and> a \\<noteq> Unknown", "by(simp add: r)"], ["proof (state)\nthis:\n  (\\<forall>chain. a \\<noteq> Goto chain) \\<and> a \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "have ex_neq_ret: \"a \\<noteq> Return \\<Longrightarrow> \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "proof(cases \"matches \\<gamma> m p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>a \\<noteq> Return; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "case False"], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>a \\<noteq> Return; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(rule_tac x=Undecided in exI)(simp add: nomatch; fail)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "case True"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "assume \"a \\<noteq> Return\""], ["proof (state)\nthis:\n  a \\<noteq> Return\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "proof(cases a)"], ["proof (state)\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 9. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Accept"], ["proof (state)\nthis:\n  a = Accept\n\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 9. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Accept", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Accept\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(rule_tac x=\"Decision FinalAllow\" in exI) (simp add: accept; fail)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Drop"], ["proof (state)\nthis:\n  a = Drop\n\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Drop", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Drop\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(rule_tac x=\"Decision FinalDeny\" in exI) (simp add: drop; fail)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Log"], ["proof (state)\nthis:\n  a = Log\n\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Log", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Log\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(rule_tac x=\"Undecided\" in exI)(simp add: log; fail)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Reject"], ["proof (state)\nthis:\n  a = Reject\n\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Reject", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Reject\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(rule_tac x=\"Decision FinalDeny\" in exI) (simp add: reject; fail)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Call"], ["proof (state)\nthis:\n  a = Call x5_\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Call x5_", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Call x5_\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Call x5_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              (Call\n                                x5_)], Undecided\\<rangle> \\<Rightarrow> t", "apply(rule case_call)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p; a = Call x5_\\<rbrakk>\n    \\<Longrightarrow> r = Rule m (Call x5_)", "apply(simp add: r; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (4 subgoals):\n 1. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Empty"], ["proof (state)\nthis:\n  a = Empty\n\ngoal (4 subgoals):\n 1. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Empty", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Empty\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(rule_tac x=\"Undecided\" in exI) (simp add: empty; fail)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (3 subgoals):\n 1. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Return"], ["proof (state)\nthis:\n  a = Return\n\ngoal (3 subgoals):\n 1. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with \\<open>a \\<noteq> Return\\<close>"], ["proof (chain)\npicking this:\n  a \\<noteq> Return\n  a = Return", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> Return\n  a = Return\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "qed(simp_all add: a_not)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<noteq> Return \\<Longrightarrow>\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "have *: \"?case\"\n      if pre: \"rs = rs_called1 @ Rule m' Return # rs_called2 \\<and> matches \\<gamma> m' p \\<and> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\"\n      for rs_called1 m' rs_called2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "proof(cases \"matches \\<gamma> m p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case False"], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m p\n\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>rs_called1 rs_called2 m'.\n       r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n       matches \\<gamma> m' p \\<and>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=\"r#rs_called1\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>rs_called2 m'.\n       r # rs = (r # rs_called1) @ [Rule m' Return] @ rs_called2 \\<and>\n       matches \\<gamma> m' p \\<and>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=rs_called2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>m'.\n       r # rs = (r # rs_called1) @ [Rule m' Return] @ rs_called2 \\<and>\n       matches \\<gamma> m' p \\<and>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n          rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=m' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    r # rs = (r # rs_called1) @ [Rule m' Return] @ rs_called2 \\<and>\n    matches \\<gamma> m' p \\<and>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: r pre)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n       rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac t=Undecided in seq_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: r nomatch; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: pre; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case True"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from pre"], ["proof (chain)\npicking this:\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "have rule_case_dijs1: \"\\<exists>X. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Decision X \\<Longrightarrow> ?thesis\""], ["proof (prove)\nusing this:\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<exists>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> Decision\n            X \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>X.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>X.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, Undecided\\<rangle> \\<Rightarrow> a", "apply(elim exE conjE, rename_tac X)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n        rs = rs_called1 @ Rule m' Return # rs_called2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs, Undecided\\<rangle> \\<Rightarrow> a", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n        rs = rs_called1 @ Rule m' Return # rs_called2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs_called1 @\n                               Rule m' Return #\n                               rs_called2, Undecided\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=\"Decision X\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n        rs = rs_called1 @ Rule m' Return # rs_called2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs_called1 @\n                            Rule m' Return #\n                            rs_called2, Undecided\\<rangle> \\<Rightarrow> Decision\n                                    X", "apply(rule_tac t=\"Decision X\" in seq_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>X.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n        rs = rs_called1 @ Rule m' Return # rs_called2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Decision\n                             X\n 2. \\<And>X.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n        rs = rs_called1 @ Rule m' Return # rs_called2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1 @\n                            Rule m' Return #\n                            rs_called2, Decision\n   X\\<rangle> \\<Rightarrow> Decision X", "apply(simp add: r; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision X;\n        rs = rs_called1 @ Rule m' Return # rs_called2;\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1 @\n                            Rule m' Return #\n                            rs_called2, Decision\n   X\\<rangle> \\<Rightarrow> Decision X", "apply(simp add: decision; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>X.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> Decision X \\<Longrightarrow>\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from pre"], ["proof (chain)\npicking this:\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "have rule_case_dijs2: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> ?thesis\""], ["proof (prove)\nusing this:\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rs_called1 rs_called2 m'.\n                         r # rs =\n                         rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=\"r#rs_called1\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rs_called2 m'.\n                         r # rs =\n                         (r # rs_called1) @\n                         [Rule m' Return] @ rs_called2 \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=rs_called2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m'.\n                         r # rs =\n                         (r # rs_called1) @\n                         [Rule m' Return] @ rs_called2 \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=m' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> r # rs =\n                      (r # rs_called1) @\n                      [Rule m' Return] @ rs_called2 \\<and>\n                      matches \\<gamma> m' p \\<and>\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                         rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac t=Undecided in seq_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp;fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "proof(cases a)"], ["proof (state)\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Drop \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 8. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 9. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Accept"], ["proof (state)\nthis:\n  a = Accept\n\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Drop \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 8. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 9. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule rule_case_dijs1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> Decision X", "apply(rule_tac x=\"FinalAllow\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Decision FinalAllow", "using True pre Accept"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  a = Accept\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Decision FinalAllow", "by(simp add: accept)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 8. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 8. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Drop"], ["proof (state)\nthis:\n  a = Drop\n\ngoal (8 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 8. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule rule_case_dijs1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> Decision X", "apply(rule_tac x=\"FinalDeny\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny", "using True Drop"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Drop\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny", "by(simp add: deny)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Log"], ["proof (state)\nthis:\n  a = Log\n\ngoal (7 subgoals):\n 1. a = Log \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 7. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule rule_case_dijs2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided", "using Log True"], ["proof (prove)\nusing this:\n  a = Log\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided", "by(simp add: log)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Reject"], ["proof (state)\nthis:\n  a = Reject\n\ngoal (6 subgoals):\n 1. a = Reject \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 6. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule rule_case_dijs1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> Decision X", "apply(rule_tac x=\"FinalDeny\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny", "using Reject True"], ["proof (prove)\nusing this:\n  a = Reject\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny", "by(simp add: reject)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case (Call x5)"], ["proof (state)\nthis:\n  a = Call x5\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "have \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call x5)], Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call x5)], Undecided\\<rangle> \\<Rightarrow> t", "by(rule case_call) (simp add: r Call)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call x5)], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (5 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 5. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "with Call pre True"], ["proof (chain)\npicking this:\n  a = Call x5\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  matches \\<gamma> m p\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call x5)], Undecided\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  a = Call x5\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n  matches \\<gamma> m p\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call x5)], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = Call x5;\n     rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n     matches \\<gamma> m p;\n     \\<exists>t.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs_called1 @\n                             Rule m' Return #\n                             rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1a rs_called2a m'a.\n                          r # rs_called1 @ Rule m' Return # rs_called2 =\n                          rs_called1a @ Rule m'a Return # rs_called2a \\<and>\n                          matches \\<gamma> m'a p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(elim exE, rename_tac t_called)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(case_tac t_called)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs_called1a rs_called2a m'a.\n                            r # rs_called1 @ Rule m' Return # rs_called2 =\n                            rs_called1a @\n                            Rule m'a Return # rs_called2a \\<and>\n                            matches \\<gamma> m'a p \\<and>\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule_tac x=\"r#rs_called1\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>rs_called2a m'a.\n                            r # rs_called1 @ Rule m' Return # rs_called2 =\n                            (r # rs_called1) @\n                            Rule m'a Return # rs_called2a \\<and>\n                            matches \\<gamma> m'a p \\<and>\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule_tac x=rs_called2 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m'a.\n                            r # rs_called1 @ Rule m' Return # rs_called2 =\n                            (r # rs_called1) @\n                            Rule m'a Return # rs_called2 \\<and>\n                            matches \\<gamma> m'a p \\<and>\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule_tac x=m' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> r # rs_called1 @ Rule m' Return # rs_called2 =\n                         (r # rs_called1) @\n                         Rule m' Return # rs_called2 \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(simp add: r)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call x5) #\n                            rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule_tac t=Undecided in seq_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              (Call\n                                x5)], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n 3. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(simp add: r; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> Undecided;\n        t_called = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>a.\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                                rs_called1 @\n                                Rule m' Return #\n                                rs_called2, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                         (\\<exists>rs_called1a rs_called2a m'a.\n                             r # rs_called1 @ Rule m' Return # rs_called2 =\n                             rs_called1a @\n                             Rule m'a Return # rs_called2a \\<and>\n                             matches \\<gamma> m'a p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1a, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs_called1 @\n                               Rule m' Return #\n                               rs_called2, Undecided\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=t_called in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs_called1 @\n                            Rule m' Return #\n                            rs_called2, Undecided\\<rangle> \\<Rightarrow> t_called", "apply(rule_tac t=t_called in seq_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> t_called\n 2. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1 @\n                            Rule m' Return #\n                            rs_called2, t_called\\<rangle> \\<Rightarrow> t_called", "apply(simp add: r; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t_called x2.\n       \\<lbrakk>a = Call x5;\n        rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             (Call x5)], Undecided\\<rangle> \\<Rightarrow> t_called;\n        t_called = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1 @\n                            Rule m' Return #\n                            rs_called2, t_called\\<rangle> \\<Rightarrow> t_called", "apply(simp add: decision; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (4 subgoals):\n 1. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Empty"], ["proof (state)\nthis:\n  a = Empty\n\ngoal (4 subgoals):\n 1. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Empty \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 4. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule rule_case_dijs2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided", "using Empty True"], ["proof (prove)\nusing this:\n  a = Empty\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided", "by(simp add: pre empty)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (3 subgoals):\n 1. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case Return"], ["proof (state)\nthis:\n  a = Return\n\ngoal (3 subgoals):\n 1. a = Return \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 3. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs_called1 rs_called2 m'.\n       r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n       matches \\<gamma> m' p \\<and>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=\"[]\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>rs_called2 m'.\n       r # rs = [] @ [Rule m' Return] @ rs_called2 \\<and>\n       matches \\<gamma> m' p \\<and>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=\"rs_called1 @ Rule m' Return # rs_called2\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m'a.\n       r # rs =\n       [] @\n       [Rule m'a Return] @ rs_called1 @ Rule m' Return # rs_called2 \\<and>\n       matches \\<gamma> m'a p \\<and>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=m in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. r # rs =\n    [] @ [Rule m Return] @ rs_called1 @ Rule m' Return # rs_called2 \\<and>\n    matches \\<gamma> m p \\<and>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "using Return True pre"], ["proof (prove)\nusing this:\n  a = Return\n  matches \\<gamma> m p\n  rs = rs_called1 @ Rule m' Return # rs_called2 \\<and>\n  matches \\<gamma> m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. r # rs =\n    [] @ [Rule m Return] @ rs_called1 @ Rule m' Return # rs_called2 \\<and>\n    matches \\<gamma> m p \\<and>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "by(simp add: skip r)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (2 subgoals):\n 1. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       (\\<exists>a.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n              rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n       (\\<exists>rs_called1 rs_called2 m'.\n           r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n           matches \\<gamma> m' p \\<and>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. a = Unknown \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "qed(simp_all add: a_not)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rs = ?rs_called1.0 @ Rule ?m' Return # ?rs_called2.0 \\<and>\n  matches \\<gamma> ?m' p \\<and>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs_called1.0, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from IH"], ["proof (chain)\npicking this:\n  (\\<exists>t'.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t') \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "have **: \"a \\<noteq> Return \\<longrightarrow> (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow> ?case\""], ["proof (prove)\nusing this:\n  (\\<exists>t'.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t') \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. a \\<noteq> Return \\<longrightarrow>\n    (\\<exists>t.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n             a], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "proof(elim disjE, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>rs_called1 rs_called2 m'.\n        rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case 2"], ["proof (state)\nthis:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>rs_called1 rs_called2 m'.\n     rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>rs_called1 rs_called2 m'.\n        rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from this"], ["proof (chain)\npicking this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>rs_called1 rs_called2 m'.\n     rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "obtain rs_called1 m' rs_called2 where \n        a1: \"rs = rs_called1 @ [Rule m' Return] @ rs_called2\" and\n        a2: \"matches \\<gamma> m' p\" and a3: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (prove)\nusing this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>rs_called1 rs_called2 m'.\n     rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n     matches \\<gamma> m' p \\<and>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. (\\<And>rs_called1 m' rs_called2.\n        \\<lbrakk>rs = rs_called1 @ [Rule m' Return] @ rs_called2;\n         matches \\<gamma> m' p;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  rs = rs_called1 @ [Rule m' Return] @ rs_called2\n  matches \\<gamma> m' p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>rs_called1 rs_called2 m'.\n        rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rs = ?rs_called1.0 @ Rule ?m' Return # ?rs_called2.0 \\<and>\n    matches \\<gamma> ?m' p \\<and>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs_called1.0, Undecided\\<rangle> \\<Rightarrow> Undecided", "using a1 a2 a3"], ["proof (prove)\nusing this:\n  rs = rs_called1 @ [Rule m' Return] @ rs_called2\n  matches \\<gamma> m' p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. rs = ?rs_called1.0 @ Rule ?m' Return # ?rs_called2.0 \\<and>\n    matches \\<gamma> ?m' p \\<and>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs_called1.0, Undecided\\<rangle> \\<Rightarrow> Undecided", "by simp"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case 1"], ["proof (state)\nthis:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>t'.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>t'.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "proof(cases \"a \\<noteq> Return\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case True"], ["proof (state)\nthis:\n  a \\<noteq> Return\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "with 1"], ["proof (chain)\npicking this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>t'.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n  a \\<noteq> Return", "obtain t1 t2 where t1: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> t1\"\n                              and t2: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\""], ["proof (prove)\nusing this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>t'.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n  a \\<noteq> Return\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t1;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], Undecided\\<rangle> \\<Rightarrow> t1\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "from t1 t2"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], Undecided\\<rangle> \\<Rightarrow> t1\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], Undecided\\<rangle> \\<Rightarrow> t1\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> t1;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> t1;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, Undecided\\<rangle> \\<Rightarrow> a", "apply(simp add: r)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> t1;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> b", "apply(cases t1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> t1;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n     t1 = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> b\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> t1;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n        t1 = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                a #\n                               rs, Undecided\\<rangle> \\<Rightarrow> b", "apply(simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n     t1 = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, Undecided\\<rangle> \\<Rightarrow> b\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n        t1 = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                a #\n                               rs, Undecided\\<rangle> \\<Rightarrow> b", "apply(rule_tac x=t2 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n     t1 = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                         rs, Undecided\\<rangle> \\<Rightarrow> t2\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n        t1 = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                a #\n                               rs, Undecided\\<rangle> \\<Rightarrow> b", "apply(rule_tac seq'_cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n     t1 = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> ?t6\n 2. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                  a], Undecided\\<rangle> \\<Rightarrow> Undecided;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n     t1 = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?t6\\<rangle> \\<Rightarrow> t2\n 3. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n        t1 = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                a #\n                               rs, Undecided\\<rangle> \\<Rightarrow> b", "apply(simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     a], Undecided\\<rangle> \\<Rightarrow> Decision x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t2;\n        t1 = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                                a #\n                               rs, Undecided\\<rangle> \\<Rightarrow> b", "apply (meson decision seq_cons)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<noteq> Return\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> a \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "proof(cases \"matches \\<gamma> m p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "assume \"\\<not> matches \\<gamma> m p\""], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m p\n\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "with 1"], ["proof (chain)\npicking this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>t'.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n  \\<not> matches \\<gamma> m p", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t)\n  \\<exists>t'.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\n  \\<not> matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n             (\\<exists>t.\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                      a], Undecided\\<rangle> \\<Rightarrow> t);\n     \\<exists>t'.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t';\n     \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, Undecided\\<rangle> \\<Rightarrow> a", "apply(elim exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n                (\\<exists>t.\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                         a], Undecided\\<rangle> \\<Rightarrow> t);\n        \\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs, Undecided\\<rangle> \\<Rightarrow> a", "apply(rename_tac t')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n                (\\<exists>t.\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                         a], Undecided\\<rangle> \\<Rightarrow> t);\n        \\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                               rs, Undecided\\<rangle> \\<Rightarrow> a", "apply(rule_tac x=t' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n                (\\<exists>t.\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                         a], Undecided\\<rangle> \\<Rightarrow> t);\n        \\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, Undecided\\<rangle> \\<Rightarrow> t'", "apply(rule_tac t=Undecided in seq_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n                (\\<exists>t.\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                         a], Undecided\\<rangle> \\<Rightarrow> t);\n        \\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<And>t'.\n       \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n                (\\<exists>t.\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                         a], Undecided\\<rangle> \\<Rightarrow> t);\n        \\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'", "apply(simp add: r nomatch; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>a \\<noteq> Return \\<longrightarrow>\n                (\\<exists>t.\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                         a], Undecided\\<rangle> \\<Rightarrow> t);\n        \\<not> matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t'", "by(simp)"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "assume \"matches \\<gamma> m p\""], ["proof (state)\nthis:\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "with False"], ["proof (chain)\npicking this:\n  \\<not> a \\<noteq> Return\n  matches \\<gamma> m p", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> a \\<noteq> Return\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>a.\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                             rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n                      (\\<exists>rs_called1 rs_called2 m'.\n                          r # rs =\n                          rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                          matches \\<gamma> m' p \\<and>\n                          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "apply(rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rs_called1 rs_called2 m'.\n                         r # rs =\n                         rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=\"[]\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>rs_called2 m'.\n                         r # rs = [] @ [Rule m' Return] @ rs_called2 \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=rs in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m'.\n                         r # rs = [] @ [Rule m' Return] @ rs \\<and>\n                         matches \\<gamma> m' p \\<and>\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac x=m in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a \\<noteq> Return; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> r # rs = [] @ [Rule m Return] @ rs \\<and>\n                      matches \\<gamma> m p \\<and>\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: r skip; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<And>a rs_called.\n       \\<lbrakk>\\<lbrakk>Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                 \\<forall>rsg\\<in>ran \\<Gamma>.\n                    \\<forall>r\\<in>set rsg.\n                       (\\<forall>chain.\n                           get_action r \\<noteq> Goto chain) \\<and>\n                       get_action r \\<noteq> Unknown;\n                 \\<forall>y m.\n                    \\<forall>r\\<in>set rs_called.\n                       r = Rule m (Call y) \\<longrightarrow>\n                       Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                            [Rule m (Call y)] Undecided);\n                 wf_chain \\<Gamma> rs_called;\n                 \\<forall>r\\<in>set rs_called.\n                    (\\<forall>chain.\n                        get_action r \\<noteq> Goto chain) \\<and>\n                    get_action r \\<noteq> Unknown\\<rbrakk>\n                \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n rs_called Undecided) \\<or>\n                                  (\\<exists>rs_called1 rs_called2 m'.\nrs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\nmatches \\<gamma> m' p \\<and>\n\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided);\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set (a # rs_called).\n              r = Rule m (Call y) \\<longrightarrow>\n              Ex (iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)]\n                   Undecided);\n        wf_chain \\<Gamma> (a # rs_called);\n        \\<forall>r\\<in>set (a # rs_called).\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              (a # rs_called) Undecided) \\<or>\n                         (\\<exists>rs_called1 rs_called2 m'.\n                             a # rs_called =\n                             rs_called1 @\n                             [Rule m' Return] @ rs_called2 \\<and>\n                             matches \\<gamma> m' p \\<and>\n                             \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "using ex_neq_ret"], ["proof (prove)\nusing this:\n  a \\<noteq> Return \\<longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n           a], Undecided\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n  a \\<noteq> Return \\<Longrightarrow>\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n           rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>a.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n         rs, Undecided\\<rangle> \\<Rightarrow> a) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      r # rs = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma helper_defined_single: \n    assumes \"wf (called_by_chain \\<Gamma>)\" \n    and \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\"\n    and \"\\<forall>rsg \\<in> ran \\<Gamma> \\<union> {[Rule m a]}. \\<forall> r \\<in> set rsg. (\\<not>(\\<exists>chain. get_action r = Goto chain)) \\<and> get_action r \\<noteq> Unknown\"\n    and \"a \\<noteq> Return\" (*no toplevel Return*)\n    shows \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "proof(cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], s\\<rangle> \\<Rightarrow> t", "case (Decision decision)"], ["proof (state)\nthis:\n  s = Decision decision\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], s\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Decision decision\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=\"Decision decision\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s = Decision decision \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> Decision decision", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s = Decision decision \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Decision decision\\<rangle> \\<Rightarrow> Decision decision", "using iptables_bigstep.decision"], ["proof (prove)\nusing this:\n  ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, Decision\n              ?X\\<rangle> \\<Rightarrow> Decision ?X\n\ngoal (1 subgoal):\n 1. s = Decision decision \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], Decision decision\\<rangle> \\<Rightarrow> Decision decision", "by fast"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "case Undecided"], ["proof (state)\nthis:\n  s = Undecided\n\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "have \"\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "proof(cases \"matches \\<gamma> m p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case False"], ["proof (state)\nthis:\n  \\<not> matches \\<gamma> m p\n\ngoal (2 subgoals):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with assms"], ["proof (chain)\npicking this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n  \\<not> matches \\<gamma> m p", "show ?thesis"], ["proof (prove)\nusing this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n  \\<not> matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=Undecided in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf (called_by_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<nexists>chain. get_action r = Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     a \\<noteq> Return; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(rule_tac t=Undecided in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf (called_by_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<nexists>chain. get_action r = Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     a \\<noteq> Return; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 2. \\<lbrakk>wf (called_by_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<nexists>chain. get_action r = Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     a \\<noteq> Return; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply (metis empty_iff empty_set insert_iff list.simps(15) nomatch' rule.sel(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf (called_by_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n        \\<forall>r\\<in>set rsg.\n           (\\<nexists>chain. get_action r = Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     a \\<noteq> Return; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: skip; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case True"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n\ngoal (1 subgoal):\n 1. matches \\<gamma> m p \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "proof(cases a)"], ["proof (state)\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 9. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Unknown"], ["proof (state)\nthis:\n  a = Unknown\n\ngoal (9 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 9. a = Unknown \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with assms(3)"], ["proof (chain)\npicking this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Unknown", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Unknown\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (8 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Goto"], ["proof (state)\nthis:\n  a = Goto x7_\n\ngoal (8 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. \\<And>x7.\n       a = Goto x7 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 8. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with assms(3)"], ["proof (chain)\npicking this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Goto x7_", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a = Goto x7_\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by auto"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (7 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Accept"], ["proof (state)\nthis:\n  a = Accept\n\ngoal (7 subgoals):\n 1. a = Accept \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 7. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Accept", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Accept\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (6 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Drop"], ["proof (state)\nthis:\n  a = Drop\n\ngoal (6 subgoals):\n 1. a = Drop \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 6. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Drop", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Drop\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (5 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Reject"], ["proof (state)\nthis:\n  a = Reject\n\ngoal (5 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Reject \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 5. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Reject", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Reject\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (4 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Log"], ["proof (state)\nthis:\n  a = Log\n\ngoal (4 subgoals):\n 1. a = Log \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 4. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Log", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Log\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Empty"], ["proof (state)\nthis:\n  a = Empty\n\ngoal (3 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t\n 3. a = Empty \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with True"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  a = Empty", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  a = Empty\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by(auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "case Return"], ["proof (state)\nthis:\n  a = Return\n\ngoal (2 subgoals):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t\n 2. a = Return \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "with assms"], ["proof (chain)\npicking this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n  a = Return", "show ?thesis"], ["proof (prove)\nusing this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n  a = Return\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t", "case (Call chain_name)"], ["proof (state)\nthis:\n  a = Call chain_name\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t", "thm wf_induct_rule[where r=\"(calls_chain \\<Gamma>)\" and P=\"\\<lambda>x. \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call x)], Undecided\\<rangle> \\<Rightarrow> t\"]\n        \\<comment> \\<open>Only the assumptions we will need\\<close>"], ["proof (state)\nthis:\n  a = Call chain_name\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t", "from assms"], ["proof (chain)\npicking this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return", "have \"wf (called_by_chain \\<Gamma>)\"\n            \"\\<forall>rsg\\<in>ran \\<Gamma>. wf_chain \\<Gamma> rsg\"\n            \"\\<forall>rsg\\<in>ran \\<Gamma>. \\<forall>r\\<in>set rsg. (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and> get_action r \\<noteq> Unknown\""], ["proof (prove)\nusing this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n\ngoal (1 subgoal):\n 1. wf (called_by_chain \\<Gamma>) &&&\n    \\<forall>rsg\\<in>ran \\<Gamma>. wf_chain \\<Gamma> rsg &&&\n    \\<forall>rsg\\<in>ran \\<Gamma>.\n       \\<forall>r\\<in>set rsg.\n          (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n          get_action r \\<noteq> Unknown", "by auto\n        \\<comment> \\<open>strengthening the IH to do a well-founded induction\\<close>"], ["proof (state)\nthis:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma>. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t", "hence \"matches \\<gamma> m p \\<Longrightarrow> wf_chain \\<Gamma> [Rule m (Call chain_name)] \\<Longrightarrow> (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call chain_name)], Undecided\\<rangle> \\<Rightarrow> t)\""], ["proof (prove)\nusing this:\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma>. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     wf_chain \\<Gamma> [Rule m (Call chain_name)]\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              (Call\n                                chain_name)], Undecided\\<rangle> \\<Rightarrow> t", "proof(induction arbitrary: m rule: wf_induct_rule[where r=\"called_by_chain \\<Gamma>\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "case (less chain_name_neu)"], ["proof (state)\nthis:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "from less.prems"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown", "have \"\\<Gamma> chain_name_neu \\<noteq> None\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n\ngoal (1 subgoal):\n 1. \\<Gamma> chain_name_neu \\<noteq> None", "by(simp add: wf_chain_def)"], ["proof (state)\nthis:\n  \\<Gamma> chain_name_neu \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "from this"], ["proof (chain)\npicking this:\n  \\<Gamma> chain_name_neu \\<noteq> None", "obtain rs_called where rs_called: \"\\<Gamma> chain_name_neu = Some rs_called\""], ["proof (prove)\nusing this:\n  \\<Gamma> chain_name_neu \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>rs_called.\n        \\<Gamma> chain_name_neu = Some rs_called \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> chain_name_neu = Some rs_called\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "from less rs_called"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called", "have \"wf_chain \\<Gamma> rs_called\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called\n\ngoal (1 subgoal):\n 1. wf_chain \\<Gamma> rs_called", "by (simp add: ranI)"], ["proof (state)\nthis:\n  wf_chain \\<Gamma> rs_called\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "from less rs_called"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called", "have \"rs_called \\<in> ran \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called\n\ngoal (1 subgoal):\n 1. rs_called \\<in> ran \\<Gamma>", "by (simp add: ranI)"], ["proof (state)\nthis:\n  rs_called \\<in> ran \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "(*get good IH*)"], ["proof (state)\nthis:\n  rs_called \\<in> ran \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "from less.prems rs_called"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called", "have\n            \"\\<forall>y m. \\<forall>r \\<in> set rs_called. r = Rule m (Call y) \\<longrightarrow> (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and> wf_chain \\<Gamma> [Rule m (Call y)]\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called\n\ngoal (1 subgoal):\n 1. \\<forall>y m.\n       \\<forall>r\\<in>set rs_called.\n          r = Rule m (Call y) \\<longrightarrow>\n          (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n          wf_chain \\<Gamma> [Rule m (Call y)]", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n     \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n     \\<forall>rsg\\<in>ran \\<Gamma>.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<Gamma> chain_name_neu = Some rs_called\\<rbrakk>\n    \\<Longrightarrow> \\<forall>y m.\n                         Rule m (Call y)\n                         \\<in> set rs_called \\<longrightarrow>\n                         (y, chain_name_neu)\n                         \\<in> called_by_chain \\<Gamma> \\<and>\n                         wf_chain \\<Gamma> [Rule m (Call y)]", "apply(intro impI allI conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y m.\n       \\<lbrakk>matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<Gamma> chain_name_neu = Some rs_called;\n        Rule m (Call y) \\<in> set rs_called\\<rbrakk>\n       \\<Longrightarrow> (y, chain_name_neu) \\<in> called_by_chain \\<Gamma>\n 2. \\<And>y m.\n       \\<lbrakk>matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<Gamma> chain_name_neu = Some rs_called;\n        Rule m (Call y) \\<in> set rs_called\\<rbrakk>\n       \\<Longrightarrow> wf_chain \\<Gamma> [Rule m (Call y)]", "apply(simp add: called_by_chain_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y m.\n       \\<lbrakk>matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<Gamma> chain_name_neu = Some rs_called;\n        Rule m (Call y) \\<in> set rs_called\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m. Rule m (Call y) \\<in> set rs_called\n 2. \\<And>y m.\n       \\<lbrakk>matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<Gamma> chain_name_neu = Some rs_called;\n        Rule m (Call y) \\<in> set rs_called\\<rbrakk>\n       \\<Longrightarrow> wf_chain \\<Gamma> [Rule m (Call y)]", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y m.\n       \\<lbrakk>matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<Gamma> chain_name_neu = Some rs_called;\n        Rule m (Call y) \\<in> set rs_called\\<rbrakk>\n       \\<Longrightarrow> wf_chain \\<Gamma> [Rule m (Call y)]", "apply(simp add: wf_chain_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y m.\n       \\<lbrakk>matches \\<gamma> m p;\n        \\<forall>x\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set x.\n              \\<forall>chain.\n                 get_action r = Call chain \\<longrightarrow>\n                 (\\<exists>y. \\<Gamma> chain = Some y);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<Gamma> chain_name_neu = Some rs_called;\n        Rule m (Call y) \\<in> set rs_called\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ya. \\<Gamma> y = Some ya", "apply (meson ranI rule.sel(2))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>y m.\n     \\<forall>r\\<in>set rs_called.\n        r = Rule m (Call y) \\<longrightarrow>\n        (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n        wf_chain \\<Gamma> [Rule m (Call y)]\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "with less"], ["proof (chain)\npicking this:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set rs_called.\n        r = Rule m (Call y) \\<longrightarrow>\n        (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n        wf_chain \\<Gamma> [Rule m (Call y)]", "have \"\\<forall>y m. \\<forall>r\\<in>set rs_called. r = Rule m (Call y) \\<longrightarrow> (\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m (Call y)], Undecided\\<rangle> \\<Rightarrow> t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(?y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n   matches \\<gamma> ?m p; wf_chain \\<Gamma> [Rule ?m (Call ?y)];\n   \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n   \\<forall>rsg\\<in>ran \\<Gamma>.\n      \\<forall>r\\<in>set rsg.\n         (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n         get_action r \\<noteq> Unknown\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n                            (Call ?y)], Undecided\\<rangle> \\<Rightarrow> a\n  matches \\<gamma> m p\n  wf_chain \\<Gamma> [Rule m (Call chain_name_neu)]\n  \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<forall>y m.\n     \\<forall>r\\<in>set rs_called.\n        r = Rule m (Call y) \\<longrightarrow>\n        (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n        wf_chain \\<Gamma> [Rule m (Call y)]\n\ngoal (1 subgoal):\n 1. \\<forall>y m.\n       \\<forall>r\\<in>set rs_called.\n          r = Rule m (Call y) \\<longrightarrow>\n          (\\<exists>t.\n              \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                   (Call y)], Undecided\\<rangle> \\<Rightarrow> t)", "apply(intro allI, rename_tac y my)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y my.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, chain_name_neu)\n                            \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a.\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<And>y m.\n           \\<lbrakk>(y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n            matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call y)];\n            \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n            \\<forall>rsg\\<in>ran \\<Gamma>.\n               \\<forall>r\\<in>set rsg.\n                  (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n                  get_action r \\<noteq> Unknown\\<rbrakk>\n           \\<Longrightarrow> \\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)]\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<in>set rs_called.\n                            r = Rule my (Call y) \\<longrightarrow>\n                            (\\<exists>t.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     my (Call\n    y)], Undecided\\<rangle> \\<Rightarrow> t)", "apply(case_tac \"matches \\<gamma> my p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y my.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, chain_name_neu)\n                            \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a.\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<And>y m.\n           \\<lbrakk>(y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n            matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call y)];\n            \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n            \\<forall>rsg\\<in>ran \\<Gamma>.\n               \\<forall>r\\<in>set rsg.\n                  (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n                  get_action r \\<noteq> Unknown\\<rbrakk>\n           \\<Longrightarrow> \\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        matches \\<gamma> my p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<in>set rs_called.\n                            r = Rule my (Call y) \\<longrightarrow>\n                            (\\<exists>t.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     my (Call\n    y)], Undecided\\<rangle> \\<Rightarrow> t)\n 2. \\<And>y my.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, chain_name_neu)\n                            \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a.\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<And>y m.\n           \\<lbrakk>(y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n            matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call y)];\n            \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n            \\<forall>rsg\\<in>ran \\<Gamma>.\n               \\<forall>r\\<in>set rsg.\n                  (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n                  get_action r \\<noteq> Unknown\\<rbrakk>\n           \\<Longrightarrow> \\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<not> matches \\<gamma> my p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<in>set rs_called.\n                            r = Rule my (Call y) \\<longrightarrow>\n                            (\\<exists>t.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     my (Call\n    y)], Undecided\\<rangle> \\<Rightarrow> t)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y my.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, chain_name_neu)\n                            \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a.\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<And>y m.\n           \\<lbrakk>(y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n            matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call y)];\n            \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n            \\<forall>rsg\\<in>ran \\<Gamma>.\n               \\<forall>r\\<in>set rsg.\n                  (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n                  get_action r \\<noteq> Unknown\\<rbrakk>\n           \\<Longrightarrow> \\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<not> matches \\<gamma> my p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<in>set rs_called.\n                            r = Rule my (Call y) \\<longrightarrow>\n                            (\\<exists>t.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     my (Call\n    y)], Undecided\\<rangle> \\<Rightarrow> t)", "apply(intro ballI impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y my r.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, chain_name_neu)\n                            \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a.\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<And>y m.\n           \\<lbrakk>(y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n            matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call y)];\n            \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n            \\<forall>rsg\\<in>ran \\<Gamma>.\n               \\<forall>r\\<in>set rsg.\n                  (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n                  get_action r \\<noteq> Unknown\\<rbrakk>\n           \\<Longrightarrow> \\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<not> matches \\<gamma> my p; r \\<in> set rs_called;\n        r = Rule my (Call y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                 my (Call\ny)], Undecided\\<rangle> \\<Rightarrow> t", "apply(rule_tac x=Undecided in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y my r.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, chain_name_neu)\n                            \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a.\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<And>y m.\n           \\<lbrakk>(y, chain_name_neu) \\<in> called_by_chain \\<Gamma>;\n            matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call y)];\n            \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n            \\<forall>rsg\\<in>ran \\<Gamma>.\n               \\<forall>r\\<in>set rsg.\n                  (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n                  get_action r \\<noteq> Unknown\\<rbrakk>\n           \\<Longrightarrow> \\<exists>a.\n                                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                     m (Call\n   y)], Undecided\\<rangle> \\<Rightarrow> a;\n        matches \\<gamma> m p;\n        wf_chain \\<Gamma> [Rule m (Call chain_name_neu)];\n        \\<forall>a\\<in>ran \\<Gamma>. wf_chain \\<Gamma> a;\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown;\n        \\<forall>y m.\n           \\<forall>r\\<in>set rs_called.\n              r = Rule m (Call y) \\<longrightarrow>\n              (y, chain_name_neu) \\<in> called_by_chain \\<Gamma> \\<and>\n              wf_chain \\<Gamma> [Rule m (Call y)];\n        \\<not> matches \\<gamma> my p; r \\<in> set rs_called;\n        r = Rule my (Call y)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule my\n                              (Call\n                                y)], Undecided\\<rangle> \\<Rightarrow> Undecided", "apply(simp add: nomatch; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>y m.\n     \\<forall>r\\<in>set rs_called.\n        r = Rule m (Call y) \\<longrightarrow>\n        (\\<exists>t.\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                 (Call y)], Undecided\\<rangle> \\<Rightarrow> t)\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "from less.prems(4) rs_called \\<open>rs_called \\<in> ran \\<Gamma>\\<close>\n            helper_cases_call_subchain_defined_or_return[OF less.prems(3) less.prems(4) this \\<open>wf_chain \\<Gamma> rs_called\\<close>]"], ["proof (chain)\npicking this:\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called\n  rs_called \\<in> ran \\<Gamma>\n  \\<forall>r\\<in>set rs_called.\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown \\<Longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      rs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "have\n            \"(\\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n             (\\<exists>rs_called1 rs_called2 m'.\n                  \\<Gamma> chain_name_neu = Some (rs_called1@[Rule m' Return]@rs_called2) \\<and>\n                  matches \\<gamma> m' p \\<and> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\""], ["proof (prove)\nusing this:\n  \\<forall>rsg\\<in>ran \\<Gamma>.\n     \\<forall>r\\<in>set rsg.\n        (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  \\<Gamma> chain_name_neu = Some rs_called\n  rs_called \\<in> ran \\<Gamma>\n  \\<forall>r\\<in>set rs_called.\n     (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n     get_action r \\<noteq> Unknown \\<Longrightarrow>\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      rs_called = rs_called1 @ [Rule m' Return] @ rs_called2 \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. (\\<exists>t.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n    (\\<exists>rs_called1 rs_called2 m'.\n        \\<Gamma> chain_name_neu =\n        Some (rs_called1 @ [Rule m' Return] @ rs_called2) \\<and>\n        matches \\<gamma> m' p \\<and>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)", "by simp"], ["proof (state)\nthis:\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      \\<Gamma> chain_name_neu =\n      Some (rs_called1 @ [Rule m' Return] @ rs_called2) \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>\\<And>y m.\n                   \\<lbrakk>(y, x) \\<in> called_by_chain \\<Gamma>;\n                    matches \\<gamma> m p;\n                    wf_chain \\<Gamma> [Rule m (Call y)];\n                    Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n                    \\<forall>rsg\\<in>ran \\<Gamma>.\n                       \\<forall>r\\<in>set rsg.\n                          (\\<forall>chain.\n                              get_action r \\<noteq> Goto chain) \\<and>\n                          get_action r \\<noteq> Unknown\\<rbrakk>\n                   \\<Longrightarrow> Ex\n(iptables_bigstep \\<Gamma> \\<gamma> p [Rule m (Call y)] Undecided);\n        matches \\<gamma> m p; wf_chain \\<Gamma> [Rule m (Call x)];\n        Ball (ran \\<Gamma>) (wf_chain \\<Gamma>);\n        \\<forall>rsg\\<in>ran \\<Gamma>.\n           \\<forall>r\\<in>set rsg.\n              (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n              get_action r \\<noteq> Unknown\\<rbrakk>\n       \\<Longrightarrow> Ex (iptables_bigstep \\<Gamma> \\<gamma> p\n                              [Rule m (Call x)] Undecided)", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<exists>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t) \\<or>\n  (\\<exists>rs_called1 rs_called2 m'.\n      \\<Gamma> chain_name_neu =\n      Some (rs_called1 @ [Rule m' Return] @ rs_called2) \\<and>\n      matches \\<gamma> m' p \\<and>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided)\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "proof(elim disjE exE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<exists>a.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a\n 2. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<exists>a.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a\n 2. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "assume a: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<exists>a.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a\n 2. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "using call_result[OF less.prems(1) rs_called a]"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "by(blast)"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a\n\ngoal (1 subgoal):\n 1. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "fix m' rs_called1 rs_called2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "assume a1: \"\\<Gamma> chain_name_neu = Some (rs_called1 @ [Rule m' Return] @ rs_called2)\"\n            and a2: \"matches \\<gamma> m' p\" and a3: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (state)\nthis:\n  \\<Gamma> chain_name_neu =\n  Some (rs_called1 @ [Rule m' Return] @ rs_called2)\n  matches \\<gamma> m' p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<And>rs_called1 rs_called2 m'.\n       \\<lbrakk>\\<Gamma> chain_name_neu =\n                Some (rs_called1 @ [Rule m' Return] @ rs_called2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs_called1, Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 (Call\n                                   chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "using call_return[OF less.prems(1) a1 a2 a3 ]"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> Undecided\n\ngoal (1 subgoal):\n 1. \\<exists>a.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a", "by(blast)"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          (Call chain_name_neu)], Undecided\\<rangle> \\<Rightarrow> a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>matches \\<gamma> m p;\n   wf_chain \\<Gamma> [Rule m (Call chain_name)]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                            (Call\n                              chain_name)], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       a = Call x5 \\<Longrightarrow>\n       \\<exists>t.\n          \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n               a], Undecided\\<rangle> \\<Rightarrow> t", "with True assms Call"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n  a = Call chain_name\n  \\<lbrakk>matches \\<gamma> m p;\n   wf_chain \\<Gamma> [Rule m (Call chain_name)]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                            (Call\n                              chain_name)], Undecided\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  wf (called_by_chain \\<Gamma>)\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}. wf_chain \\<Gamma> rsg\n  \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {[Rule m a]}.\n     \\<forall>r\\<in>set rsg.\n        (\\<nexists>chain. get_action r = Goto chain) \\<and>\n        get_action r \\<noteq> Unknown\n  a \\<noteq> Return\n  a = Call chain_name\n  \\<lbrakk>matches \\<gamma> m p;\n   wf_chain \\<Gamma> [Rule m (Call chain_name)]\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                            (Call\n                              chain_name)], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. s = Undecided \\<Longrightarrow>\n    \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "with Undecided"], ["proof (chain)\npicking this:\n  s = Undecided\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Undecided\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            a], s\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<exists>t.\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n          a], s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "private"], ["", "lemma helper_defined_ruleset_calledby: \"wf (called_by_chain \\<Gamma>) \\<Longrightarrow> \n    \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg \\<Longrightarrow>\n    \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. \\<forall> r \\<in> set rsg. (\\<not>(\\<exists>chain. get_action r = Goto chain)) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow>\n    \\<forall> r \\<in> set rs. get_action r \\<noteq> Return \\<Longrightarrow>\n    \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf (called_by_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<nexists>chain. get_action r = Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rule iptables_bigstep_defined_if_singleton_rules)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf (called_by_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<nexists>chain. get_action r = Goto chain) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>set rs.\n                         \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r], s\\<rangle> \\<Rightarrow> t", "apply(intro ballI, rename_tac r, case_tac r, rename_tac m a, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t.\n                            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                                 a], s\\<rangle> \\<Rightarrow> t", "apply(rule helper_defined_single)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> wf (called_by_chain \\<Gamma>)\n 2. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union>\n    {[Rule m a]}.\n                            wf_chain \\<Gamma> rsg\n 3. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union>\n    {[Rule m a]}.\n                            \\<forall>r\\<in>set rsg.\n                               (\\<nexists>chain.\n                                   get_action r = Goto chain) \\<and>\n                               get_action r \\<noteq> Unknown\n 4. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> Return", "apply(simp; fail)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union>\n    {[Rule m a]}.\n                            wf_chain \\<Gamma> rsg\n 2. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union>\n    {[Rule m a]}.\n                            \\<forall>r\\<in>set rsg.\n                               (\\<nexists>chain.\n                                   get_action r = Goto chain) \\<and>\n                               get_action r \\<noteq> Unknown\n 3. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> Return", "apply(simp add: wf_chain_def; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union>\n    {[Rule m a]}.\n                            \\<forall>r\\<in>set rsg.\n                               (\\<nexists>chain.\n                                   get_action r = Goto chain) \\<and>\n                               get_action r \\<noteq> Unknown\n 2. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> Return", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>r m a.\n       \\<lbrakk>wf (called_by_chain \\<Gamma>);\n        wf_chain \\<Gamma> rs \\<and>\n        (\\<forall>x\\<in>ran \\<Gamma>. wf_chain \\<Gamma> x);\n        (\\<forall>r\\<in>set rs.\n            (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n            get_action r \\<noteq> Unknown) \\<and>\n        (\\<forall>rsg\\<in>ran \\<Gamma>.\n            \\<forall>r\\<in>set rsg.\n               (\\<forall>chain. get_action r \\<noteq> Goto chain) \\<and>\n               get_action r \\<noteq> Unknown);\n        \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n        Rule m a \\<in> set rs; r = Rule m a\\<rbrakk>\n       \\<Longrightarrow> a \\<noteq> Return", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary semantics_bigstep_defined: \"finite (calls_chain \\<Gamma>) \\<Longrightarrow> wf (calls_chain \\<Gamma>) \\<Longrightarrow> \\<comment> \\<open>call relation finite and terminating\\<close>\n    \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg \\<Longrightarrow> \\<comment> \\<open>All calls to defined chains\\<close>\n    \\<forall>rsg \\<in> ran \\<Gamma> \\<union> {rs}. \\<forall> r \\<in> set rsg. (\\<forall>x. get_action r \\<noteq> Goto x) \\<and> get_action r \\<noteq> Unknown \\<Longrightarrow> \\<comment> \\<open>no bad actions\\<close>\n    \\<forall> r \\<in> set rs. get_action r \\<noteq> Return \\<comment> \\<open>no toplevel return\\<close> \\<Longrightarrow>\n    \\<exists>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (calls_chain \\<Gamma>); wf (calls_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(drule(1) wf_called_by_chain)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf (calls_chain \\<Gamma>);\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}. wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     wf (called_by_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(thin_tac \"wf (calls_chain \\<Gamma>)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     wf (called_by_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rule helper_defined_ruleset_calledby)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     wf (called_by_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> wf (called_by_chain \\<Gamma>)\n 2. \\<lbrakk>\\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     wf (called_by_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                         wf_chain \\<Gamma> rsg\n 3. \\<lbrakk>\\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     wf (called_by_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                         \\<forall>r\\<in>set rsg.\n                            (\\<nexists>chain.\n                                get_action r = Goto chain) \\<and>\n                            get_action r \\<noteq> Unknown\n 4. \\<lbrakk>\\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n                wf_chain \\<Gamma> rsg;\n     \\<forall>rsg\\<in>ran \\<Gamma> \\<union> {rs}.\n        \\<forall>r\\<in>set rsg.\n           (\\<forall>x. get_action r \\<noteq> Goto x) \\<and>\n           get_action r \\<noteq> Unknown;\n     \\<forall>r\\<in>set rs. get_action r \\<noteq> Return;\n     wf (called_by_chain \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>set rs. get_action r \\<noteq> Return", "apply(simp_all)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "text\\<open>Common Algorithms\\<close>"], ["", "lemma iptables_bigstep_rm_LogEmpty: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof(induction rs arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           [], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           [], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n        [], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "by(simp)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n      [], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n      rs, ?s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "have step_IH: \"(\\<And>s. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs1, s\\<rangle> \\<Rightarrow> t = \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs2, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs1, s\\<rangle> \\<Rightarrow> t = \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs2, s\\<rangle> \\<Rightarrow> t\" for rs1 rs2 r"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs1, s\\<rangle> \\<Rightarrow> t =\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs2, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs1, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs2, s\\<rangle> \\<Rightarrow> t", "by (meson seq'_cons seqE_cons)"], ["proof (state)\nthis:\n  (\\<And>s.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs1.0, s\\<rangle> \\<Rightarrow> t =\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs2.0, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r #\n     ?rs1.0, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r #\n     ?rs2.0, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "have case_log: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log # rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n       rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n       rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     Log], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply (metis append_Nil log_remove seq')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Log #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply(rule_tac t=s in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         Log], s\\<rangle> \\<Rightarrow> s\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(cases s)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Log], s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Log], s\\<rangle> \\<Rightarrow> s\n 3. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(cases \"matches \\<gamma> m p\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Log], s\\<rangle> \\<Rightarrow> s\n 2. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Log], s\\<rangle> \\<Rightarrow> s\n 3. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Log], s\\<rangle> \\<Rightarrow> s\n 4. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(simp add: log; fail)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Log], s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Log], s\\<rangle> \\<Rightarrow> s\n 3. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(simp add: nomatch; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Log], s\\<rangle> \\<Rightarrow> s\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(simp add: decision; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule ?m Log #\n     rs, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "have case_empty: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty # rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n       rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n       rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                     Empty], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply (metis append_Nil empty_empty seq')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m Empty #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply(rule_tac t=s in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         Empty], s\\<rangle> \\<Rightarrow> s\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(cases s)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Empty], s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Empty], s\\<rangle> \\<Rightarrow> s\n 3. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(cases \"matches \\<gamma> m p\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Empty], s\\<rangle> \\<Rightarrow> s\n 2. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Empty], s\\<rangle> \\<Rightarrow> s\n 3. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Empty], s\\<rangle> \\<Rightarrow> s\n 4. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(simp add: empty; fail)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n     s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Empty], s\\<rangle> \\<Rightarrow> s\n 2. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Empty], s\\<rangle> \\<Rightarrow> s\n 3. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(simp add: nomatch; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Empty], s\\<rangle> \\<Rightarrow> s\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(simp add: decision; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule ?m Empty #\n     rs, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "from Cons"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n      rs, ?s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> t", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n      rs, ?s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n        (r # rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply(cases r, rename_tac m a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(case_tac a)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Accept\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Drop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 3. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Log\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 4. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Reject\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 5. \\<And>m a x5.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Call x5\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 6. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Return\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 7. \\<And>m a x7.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Goto x7\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 8. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Empty\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 9. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Unknown\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp_all)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>m a.\n       \\<lbrakk>r = Rule m Accept;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Accept\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Accept #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Accept #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a.\n       \\<lbrakk>r = Rule m Drop;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Drop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Drop #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Drop #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 3. \\<And>m a.\n       \\<lbrakk>r = Rule m Log;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Log\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Log #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 4. \\<And>m a.\n       \\<lbrakk>r = Rule m Reject;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Reject\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Reject #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Reject #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 5. \\<And>m a x5.\n       \\<lbrakk>r = Rule m (Call x5);\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Call x5\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call x5) #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call x5) #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 6. \\<And>m a.\n       \\<lbrakk>r = Rule m Return;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Return\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Return #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Return #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 7. \\<And>m a x7.\n       \\<lbrakk>r = Rule m (Goto x7);\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Goto x7\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Goto x7) #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Goto x7) #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 8. \\<And>m a.\n       \\<lbrakk>r = Rule m Empty;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Empty\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Empty #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 9. \\<And>m a.\n       \\<lbrakk>r = Rule m Unknown;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Unknown\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Unknown #\n                            rm_LogEmpty rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Unknown #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp_all cong: step_IH)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m a.\n       \\<lbrakk>r = Rule m Log;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Log\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Log #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a.\n       \\<lbrakk>r = Rule m Empty;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Empty\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Empty #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp_all add: case_log case_empty)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rm_LogEmpty\n      (r # rs), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iptables_bigstep_rw_Reject: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof(induction rs arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           [], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           [], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n        [], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "by(simp)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n      [], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n      rs, ?s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "have step_IH: \"(\\<And>s. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs1, s\\<rangle> \\<Rightarrow> t = \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs2, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs1, s\\<rangle> \\<Rightarrow> t = \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r#rs2, s\\<rangle> \\<Rightarrow> t\" for rs1 rs2 r"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs1, s\\<rangle> \\<Rightarrow> t =\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs2, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs1, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs2, s\\<rangle> \\<Rightarrow> t", "by (meson seq'_cons seqE_cons)"], ["proof (state)\nthis:\n  (\\<And>s.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs1.0, s\\<rangle> \\<Rightarrow> t =\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?rs2.0, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r #\n     ?rs1.0, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r #\n     ?rs2.0, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "have fst_rule: \"(\\<And>t. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r1], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r2], s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow> \n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1 # rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r2 # rs, s\\<rangle> \\<Rightarrow> t\" for r1 r2 rs s t"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r1], s\\<rangle> \\<Rightarrow> t =\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[r2], s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r1 #\n       rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r2 #\n       rs, s\\<rangle> \\<Rightarrow> t", "by (meson seq'_cons seqE_cons)"], ["proof (state)\nthis:\n  (\\<And>t.\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[?r1.0], ?s\\<rangle> \\<Rightarrow> t =\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[?r2.0], ?s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r1.0 #\n     ?rs, ?s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>?r2.0 #\n     ?rs, ?s\\<rangle> \\<Rightarrow> ?t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "have dropreject: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Drop], s\\<rangle> \\<Rightarrow> t = \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m Reject], s\\<rangle> \\<Rightarrow> t\" for m t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         Drop], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         Reject], s\\<rangle> \\<Rightarrow> t", "apply(cases s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         Drop], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         Reject], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "apply(cases \"matches \\<gamma> m p\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>s = Undecided; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Drop], s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Reject], s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Drop], s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Reject], s\\<rangle> \\<Rightarrow> t\n 3. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "using drop reject dropD rejectD"], ["proof (prove)\nusing this:\n  matches ?\\<gamma> ?m ?p \\<Longrightarrow>\n  ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[Rule ?m\n          Drop], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny\n  matches ?\\<gamma> ?m ?p \\<Longrightarrow>\n  ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[Rule ?m\n          Reject], Undecided\\<rangle> \\<Rightarrow> Decision FinalDeny\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?r, ?s\\<rangle> \\<Rightarrow> ?t;\n   ?r = [Rule ?m Drop]; matches ?\\<gamma> ?m ?p; ?s = Undecided\\<rbrakk>\n  \\<Longrightarrow> ?t = Decision FinalDeny\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?r, ?s\\<rangle> \\<Rightarrow> ?t;\n   ?r = [Rule ?m Reject]; matches ?\\<gamma> ?m ?p; ?s = Undecided\\<rbrakk>\n  \\<Longrightarrow> ?t = Decision FinalDeny\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s = Undecided; matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Drop], s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Reject], s\\<rangle> \\<Rightarrow> t\n 2. \\<lbrakk>s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Drop], s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Reject], s\\<rangle> \\<Rightarrow> t\n 3. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Drop], s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Reject], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "using nomatch nomatchD"], ["proof (prove)\nusing this:\n  \\<not> matches ?\\<gamma> ?m ?p \\<Longrightarrow>\n  ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[Rule ?m\n          ?a], Undecided\\<rangle> \\<Rightarrow> Undecided\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?r, ?s\\<rangle> \\<Rightarrow> ?t;\n   ?r = [Rule ?m ?a]; ?s = Undecided;\n   \\<not> matches ?\\<gamma> ?m ?p\\<rbrakk>\n  \\<Longrightarrow> ?t = Undecided\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s = Undecided; \\<not> matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Drop], s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                           Reject], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "using decision decisionD"], ["proof (prove)\nusing this:\n  ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, Decision\n              ?X\\<rangle> \\<Rightarrow> Decision ?X\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?r, ?s\\<rangle> \\<Rightarrow> ?t;\n   ?s = Decision ?X\\<rbrakk>\n  \\<Longrightarrow> ?t = Decision ?X\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Drop], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n            Reject], s\\<rangle> \\<Rightarrow> t", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n       Drop], s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m\n       Reject], s\\<rangle> \\<Rightarrow> ?t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       (\\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n           (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n          rs, s\\<rangle> \\<Rightarrow> t", "from Cons"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n      rs, ?s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> t", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n      rs, ?s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ?s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n        (r # rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, s\\<rangle> \\<Rightarrow> t", "apply(cases r, rename_tac m a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m a.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                       rs, s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (r # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(case_tac a)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Accept\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Drop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 3. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Log\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 4. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Reject\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 5. \\<And>m a x5.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Call x5\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 6. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Return\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 7. \\<And>m a x7.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Goto x7\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 8. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Empty\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 9. \\<And>m a.\n       \\<lbrakk>r = Rule m a;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Unknown\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n                             (Rule m a # rs), s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp_all)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>m a.\n       \\<lbrakk>r = Rule m Accept;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Accept\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Accept #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Accept #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a.\n       \\<lbrakk>r = Rule m Drop;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Drop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Drop #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Drop #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 3. \\<And>m a.\n       \\<lbrakk>r = Rule m Log;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Log\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Log #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Log #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 4. \\<And>m a.\n       \\<lbrakk>r = Rule m Reject;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Reject\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Drop #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Reject #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 5. \\<And>m a x5.\n       \\<lbrakk>r = Rule m (Call x5);\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Call x5\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call x5) #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Call x5) #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 6. \\<And>m a.\n       \\<lbrakk>r = Rule m Return;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Return\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Return #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Return #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 7. \\<And>m a x7.\n       \\<lbrakk>r = Rule m (Goto x7);\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Goto x7\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Goto x7) #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             (Goto x7) #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 8. \\<And>m a.\n       \\<lbrakk>r = Rule m Empty;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Empty\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Empty #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Empty #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 9. \\<And>m a.\n       \\<lbrakk>r = Rule m Unknown;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Unknown\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Unknown #\n                            rw_Reject rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Unknown #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp_all cong: step_IH)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m a.\n       \\<lbrakk>r = Rule m Reject;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Reject\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Drop #\n                            rs, s\\<rangle> \\<Rightarrow> t =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m\n                             Reject #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(rule fst_rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m a ta.\n       \\<lbrakk>r = Rule m Reject;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n               rs, s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        a = Reject\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Drop], s\\<rangle> \\<Rightarrow> ta =\n                         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              Reject], s\\<rangle> \\<Rightarrow> ta", "apply(simp add: dropreject)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rw_Reject\n      (r # rs), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}