{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Semantics_Ternary/Unknown_Match_Tacs.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma wf_in_doubt_allow: \"wf_unknown_match_tac in_doubt_allow\"", "lemma wf_in_doubt_deny: \"wf_unknown_match_tac in_doubt_deny\"", "lemma packet_independent_unknown_match_tacs:\n    \"packet_independent_\\<alpha> in_doubt_allow\"\n    \"packet_independent_\\<alpha> in_doubt_deny\"", "lemma Drop_neq_Accept_unknown_match_tacs:\n      \"in_doubt_allow Drop \\<noteq> in_doubt_allow Accept\"\n      \"in_doubt_deny Drop \\<noteq> in_doubt_deny Accept\""], "translations": [["", "lemma wf_in_doubt_allow: \"wf_unknown_match_tac in_doubt_allow\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_unknown_match_tac in_doubt_allow", "unfolding wf_unknown_match_tac_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. in_doubt_allow Drop = in_doubt_allow Reject", "by(simp add: fun_eq_iff)"], ["", "fun in_doubt_deny :: \"'packet unknown_match_tac\" where\n  \"in_doubt_deny Accept _ = False\" |\n  \"in_doubt_deny Drop _ = True\" |\n  \"in_doubt_deny Reject _ = True\" |\n  \"in_doubt_deny _ _ = undefined\""], ["", "(*Call/Return must not appear*)\n  (*call rm_LogEmpty first. Log/Empty must not appear here*)\n  (*give it a simple_ruleset*)"], ["", "lemma wf_in_doubt_deny: \"wf_unknown_match_tac in_doubt_deny\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_unknown_match_tac in_doubt_deny", "unfolding wf_unknown_match_tac_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. in_doubt_deny Drop = in_doubt_deny Reject", "by(simp add: fun_eq_iff)"], ["", "lemma packet_independent_unknown_match_tacs:\n    \"packet_independent_\\<alpha> in_doubt_allow\"\n    \"packet_independent_\\<alpha> in_doubt_deny\""], ["proof (prove)\ngoal (1 subgoal):\n 1. packet_independent_\\<alpha> in_doubt_allow &&&\n    packet_independent_\\<alpha> in_doubt_deny", "by(simp_all add: packet_independent_\\<alpha>_def)"], ["", "lemma Drop_neq_Accept_unknown_match_tacs:\n      \"in_doubt_allow Drop \\<noteq> in_doubt_allow Accept\"\n      \"in_doubt_deny Drop \\<noteq> in_doubt_deny Accept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_doubt_allow Drop \\<noteq> in_doubt_allow Accept &&&\n    in_doubt_deny Drop \\<noteq> in_doubt_deny Accept", "by(simp_all add: fun_eq_iff)"], ["", "(* use this more often to simplify existing proofs? *)"], ["", "corollary matches_induction_case_MatchNot_in_doubt_allow:\n      \"\\<forall> a. matches (\\<beta>,in_doubt_allow) m' a p = matches (\\<beta>,in_doubt_allow) m a p \\<Longrightarrow>\n      matches (\\<beta>,in_doubt_allow) (MatchNot m') a p = matches (\\<beta>,in_doubt_allow) (MatchNot m) a p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       matches (\\<beta>, in_doubt_allow) m' a p =\n       matches (\\<beta>, in_doubt_allow) m a p \\<Longrightarrow>\n    matches (\\<beta>, in_doubt_allow) (MatchNot m') a p =\n    matches (\\<beta>, in_doubt_allow) (MatchNot m) a p", "by(rule  matches_induction_case_MatchNot) (simp_all add: Drop_neq_Accept_unknown_match_tacs packet_independent_unknown_match_tacs)"], ["", "corollary matches_induction_case_MatchNot_in_doubt_deny:\n      \"\\<forall> a. matches (\\<beta>,in_doubt_deny) m' a p = matches (\\<beta>,in_doubt_deny) m a p \\<Longrightarrow>\n      matches (\\<beta>,in_doubt_deny) (MatchNot m') a p = matches (\\<beta>,in_doubt_deny) (MatchNot m) a p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       matches (\\<beta>, in_doubt_deny) m' a p =\n       matches (\\<beta>, in_doubt_deny) m a p \\<Longrightarrow>\n    matches (\\<beta>, in_doubt_deny) (MatchNot m') a p =\n    matches (\\<beta>, in_doubt_deny) (MatchNot m) a p", "by(rule  matches_induction_case_MatchNot) (simp_all add: Drop_neq_Accept_unknown_match_tacs packet_independent_unknown_match_tacs)"], ["", "end"]]}