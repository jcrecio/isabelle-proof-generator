{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Primitive_Matchers/L4_Protocol_Flags.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma \"match_tcp_flags ipt_tcp_syn {TCP_SYN, TCP_URG, TCP_PSH}\"", "lemma match_tcp_flags_nomatch: \"\\<not> c \\<subseteq> fmask \\<Longrightarrow> \\<not> match_tcp_flags (TCP_Flags fmask c) pkt\"", "lemma ipt_tcp_flags_NoMatch: \"\\<not> match_tcp_flags ipt_tcp_flags_NoMatch pkt\"", "lemma ipt_tcp_flags_Any: \"match_tcp_flags ipt_tcp_flags_Any pkt\"", "lemma ipt_tcp_flags_Any_isUNIV: \"fmask = {} \\<and> c = {} \\<longleftrightarrow> (\\<forall>pkt. match_tcp_flags (TCP_Flags fmask c) pkt)\"", "lemma match_tcp_flags_conjunct: \"match_tcp_flags (match_tcp_flags_conjunct f1 f2) pkt \\<longleftrightarrow> match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt\"", "lemma \"match_tcp_flags_conjunct_option ipt_tcp_syn (TCP_Flags {TCP_RST,TCP_ACK} {TCP_RST}) = None\"", "lemma match_tcp_flags_conjunct_option_Some: \"match_tcp_flags_conjunct_option f1 f2 = Some f3 \\<Longrightarrow>\n      match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt \\<longleftrightarrow> match_tcp_flags f3 pkt\"", "lemma match_tcp_flags_conjunct_option_None: \"match_tcp_flags_conjunct_option f1 f2 = None \\<Longrightarrow>\n      \\<not>(match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt)\"", "lemma match_tcp_flags_conjunct_option: \"(case match_tcp_flags_conjunct_option f1 f2 of None \\<Rightarrow> False | Some f3 \\<Rightarrow> match_tcp_flags f3 pkt) \\<longleftrightarrow> match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt\"", "lemma funny_set_falg_fmask_helper: \"c2 \\<subseteq> fmask2 \\<Longrightarrow> (c1 = c2 \\<and> fmask1 = fmask2) = (\\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2))\"", "lemma ipt_tcp_flags_equal: \"ipt_tcp_flags_equal f1 f2 \\<longleftrightarrow> (\\<forall>pkt. match_tcp_flags f1 pkt = match_tcp_flags f2 pkt)\""], "translations": [["", "lemma \"match_tcp_flags ipt_tcp_syn {TCP_SYN, TCP_URG, TCP_PSH}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. match_tcp_flags ipt_tcp_syn {TCP_SYN, TCP_URG, TCP_PSH}", "by eval"], ["", "lemma match_tcp_flags_nomatch: \"\\<not> c \\<subseteq> fmask \\<Longrightarrow> \\<not> match_tcp_flags (TCP_Flags fmask c) pkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> c \\<subseteq> fmask \\<Longrightarrow>\n    \\<not> match_tcp_flags (TCP_Flags fmask c) pkt", "by auto"], ["", "definition ipt_tcp_flags_NoMatch :: \"ipt_tcp_flags\" where\n    \"ipt_tcp_flags_NoMatch \\<equiv> TCP_Flags {} {TCP_SYN}\""], ["", "lemma ipt_tcp_flags_NoMatch: \"\\<not> match_tcp_flags ipt_tcp_flags_NoMatch pkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> match_tcp_flags ipt_tcp_flags_NoMatch pkt", "by(simp add: ipt_tcp_flags_NoMatch_def)"], ["", "definition ipt_tcp_flags_Any :: ipt_tcp_flags where\n    \"ipt_tcp_flags_Any \\<equiv> TCP_Flags {} {}\""], ["", "lemma ipt_tcp_flags_Any: \"match_tcp_flags ipt_tcp_flags_Any pkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. match_tcp_flags ipt_tcp_flags_Any pkt", "by(simp add: ipt_tcp_flags_Any_def)"], ["", "lemma ipt_tcp_flags_Any_isUNIV: \"fmask = {} \\<and> c = {} \\<longleftrightarrow> (\\<forall>pkt. match_tcp_flags (TCP_Flags fmask c) pkt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fmask = {} \\<and> c = {}) =\n    (\\<forall>pkt. match_tcp_flags (TCP_Flags fmask c) pkt)", "by auto"], ["", "fun match_tcp_flags_conjunct :: \"ipt_tcp_flags \\<Rightarrow> ipt_tcp_flags \\<Rightarrow> ipt_tcp_flags\" where\n    \"match_tcp_flags_conjunct (TCP_Flags fmask1 c1) (TCP_Flags fmask2 c2) = (\n          if c1 \\<subseteq> fmask1 \\<and> c2 \\<subseteq> fmask2 \\<and> fmask1 \\<inter> fmask2 \\<inter> c1 = fmask1 \\<inter> fmask2 \\<inter> c2\n          then (TCP_Flags (fmask1 \\<union> fmask2) (c1 \\<union> c2))\n          else ipt_tcp_flags_NoMatch)\""], ["", "lemma match_tcp_flags_conjunct: \"match_tcp_flags (match_tcp_flags_conjunct f1 f2) pkt \\<longleftrightarrow> match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. match_tcp_flags (match_tcp_flags_conjunct f1 f2) pkt =\n    (match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt)", "apply(cases f1, cases f2, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x1a x2a.\n       \\<lbrakk>f1 = TCP_Flags x1 x2; f2 = TCP_Flags x1a x2a\\<rbrakk>\n       \\<Longrightarrow> (x2 \\<subseteq> x1 \\<and>\n                          x2a \\<subseteq> x1a \\<and>\n                          x1 \\<inter> x1a \\<inter> x2 =\n                          x1 \\<inter> x1a \\<inter> x2a \\<longrightarrow>\n                          (pkt \\<inter> (x1 \\<union> x1a) =\n                           x2 \\<union> x2a) =\n                          (pkt \\<inter> x1 = x2 \\<and>\n                           pkt \\<inter> x1a = x2a)) \\<and>\n                         ((x2a \\<subseteq> x1a \\<longrightarrow>\n                           x2 \\<subseteq> x1 \\<longrightarrow>\n                           x1 \\<inter> x1a \\<inter> x2 \\<noteq>\n                           x1 \\<inter> x1a \\<inter> x2a) \\<longrightarrow>\n                          match_tcp_flags ipt_tcp_flags_NoMatch pkt =\n                          (pkt \\<inter> x1 = x2 \\<and>\n                           pkt \\<inter> x1a = x2a))", "apply(rename_tac fmask1 c1 fmask2 c2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2\\<rbrakk>\n       \\<Longrightarrow> (c1 \\<subseteq> fmask1 \\<and>\n                          c2 \\<subseteq> fmask2 \\<and>\n                          fmask1 \\<inter> fmask2 \\<inter> c1 =\n                          fmask1 \\<inter> fmask2 \\<inter>\n                          c2 \\<longrightarrow>\n                          (pkt \\<inter> (fmask1 \\<union> fmask2) =\n                           c1 \\<union> c2) =\n                          (pkt \\<inter> fmask1 = c1 \\<and>\n                           pkt \\<inter> fmask2 = c2)) \\<and>\n                         ((c2 \\<subseteq> fmask2 \\<longrightarrow>\n                           c1 \\<subseteq> fmask1 \\<longrightarrow>\n                           fmask1 \\<inter> fmask2 \\<inter> c1 \\<noteq>\n                           fmask1 \\<inter> fmask2 \\<inter>\n                           c2) \\<longrightarrow>\n                          match_tcp_flags ipt_tcp_flags_NoMatch pkt =\n                          (pkt \\<inter> fmask1 = c1 \\<and>\n                           pkt \\<inter> fmask2 = c2))", "apply(intro conjI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1 \\<and>\n        c2 \\<subseteq> fmask2 \\<and>\n        fmask1 \\<inter> fmask2 \\<inter> c1 =\n        fmask1 \\<inter> fmask2 \\<inter> c2\\<rbrakk>\n       \\<Longrightarrow> (pkt \\<inter> (fmask1 \\<union> fmask2) =\n                          c1 \\<union> c2) =\n                         (pkt \\<inter> fmask1 = c1 \\<and>\n                          pkt \\<inter> fmask2 = c2)\n 2. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c2 \\<subseteq> fmask2 \\<longrightarrow>\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        fmask1 \\<inter> fmask2 \\<inter> c1 \\<noteq>\n        fmask1 \\<inter> fmask2 \\<inter> c2\\<rbrakk>\n       \\<Longrightarrow> match_tcp_flags ipt_tcp_flags_NoMatch pkt =\n                         (pkt \\<inter> fmask1 = c1 \\<and>\n                          pkt \\<inter> fmask2 = c2)", "apply(elim conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1; c2 \\<subseteq> fmask2;\n        fmask1 \\<inter> fmask2 \\<inter> c1 =\n        fmask1 \\<inter> fmask2 \\<inter> c2\\<rbrakk>\n       \\<Longrightarrow> (pkt \\<inter> (fmask1 \\<union> fmask2) =\n                          c1 \\<union> c2) =\n                         (pkt \\<inter> fmask1 = c1 \\<and>\n                          pkt \\<inter> fmask2 = c2)\n 2. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c2 \\<subseteq> fmask2 \\<longrightarrow>\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        fmask1 \\<inter> fmask2 \\<inter> c1 \\<noteq>\n        fmask1 \\<inter> fmask2 \\<inter> c2\\<rbrakk>\n       \\<Longrightarrow> match_tcp_flags ipt_tcp_flags_NoMatch pkt =\n                         (pkt \\<inter> fmask1 = c1 \\<and>\n                          pkt \\<inter> fmask2 = c2)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c2 \\<subseteq> fmask2 \\<longrightarrow>\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        fmask1 \\<inter> fmask2 \\<inter> c1 \\<noteq>\n        fmask1 \\<inter> fmask2 \\<inter> c2\\<rbrakk>\n       \\<Longrightarrow> match_tcp_flags ipt_tcp_flags_NoMatch pkt =\n                         (pkt \\<inter> fmask1 = c1 \\<and>\n                          pkt \\<inter> fmask2 = c2)", "apply(simp add: ipt_tcp_flags_NoMatch)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c2 \\<subseteq> fmask2 \\<longrightarrow>\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        fmask1 \\<inter> fmask2 \\<inter> c1 \\<noteq>\n        fmask1 \\<inter> fmask2 \\<inter> c2\\<rbrakk>\n       \\<Longrightarrow> pkt \\<inter> fmask1 = c1 \\<longrightarrow>\n                         pkt \\<inter> fmask2 \\<noteq> c2", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare match_tcp_flags_conjunct.simps[simp del]"], ["", "text\\<open>Same as @{const match_tcp_flags_conjunct}, but returns @{const None} if result cannot match anyway\\<close>"], ["", "definition match_tcp_flags_conjunct_option :: \"ipt_tcp_flags \\<Rightarrow> ipt_tcp_flags \\<Rightarrow> ipt_tcp_flags option\" where\n    \"match_tcp_flags_conjunct_option f1 f2 = (case match_tcp_flags_conjunct f1 f2 of (TCP_Flags fmask c) \\<Rightarrow> if c \\<subseteq> fmask then Some (TCP_Flags fmask c) else None)\""], ["", "lemma \"match_tcp_flags_conjunct_option ipt_tcp_syn (TCP_Flags {TCP_RST,TCP_ACK} {TCP_RST}) = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. match_tcp_flags_conjunct_option ipt_tcp_syn\n     (TCP_Flags {TCP_RST, TCP_ACK} {TCP_RST}) =\n    None", "by eval"], ["", "lemma match_tcp_flags_conjunct_option_Some: \"match_tcp_flags_conjunct_option f1 f2 = Some f3 \\<Longrightarrow>\n      match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt \\<longleftrightarrow> match_tcp_flags f3 pkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. match_tcp_flags_conjunct_option f1 f2 = Some f3 \\<Longrightarrow>\n    (match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt) =\n    match_tcp_flags f3 pkt", "apply(simp add: match_tcp_flags_conjunct_option_def split: ipt_tcp_flags.split_asm if_split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>match_tcp_flags_conjunct f1 f2 = f3; x2 \\<subseteq> x1;\n        TCP_Flags x1 x2 = f3\\<rbrakk>\n       \\<Longrightarrow> (match_tcp_flags f1 pkt \\<and>\n                          match_tcp_flags f2 pkt) =\n                         match_tcp_flags f3 pkt", "using match_tcp_flags_conjunct"], ["proof (prove)\nusing this:\n  match_tcp_flags (match_tcp_flags_conjunct ?f1.0 ?f2.0) ?pkt =\n  (match_tcp_flags ?f1.0 ?pkt \\<and> match_tcp_flags ?f2.0 ?pkt)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>match_tcp_flags_conjunct f1 f2 = f3; x2 \\<subseteq> x1;\n        TCP_Flags x1 x2 = f3\\<rbrakk>\n       \\<Longrightarrow> (match_tcp_flags f1 pkt \\<and>\n                          match_tcp_flags f2 pkt) =\n                         match_tcp_flags f3 pkt", "by blast"], ["", "lemma match_tcp_flags_conjunct_option_None: \"match_tcp_flags_conjunct_option f1 f2 = None \\<Longrightarrow>\n      \\<not>(match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. match_tcp_flags_conjunct_option f1 f2 = None \\<Longrightarrow>\n    \\<not> (match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt)", "apply(simp add: match_tcp_flags_conjunct_option_def split: ipt_tcp_flags.split_asm if_split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>match_tcp_flags_conjunct f1 f2 = TCP_Flags x1 x2;\n        \\<not> x2 \\<subseteq> x1\\<rbrakk>\n       \\<Longrightarrow> match_tcp_flags f1 pkt \\<longrightarrow>\n                         \\<not> match_tcp_flags f2 pkt", "using match_tcp_flags_conjunct match_tcp_flags_nomatch"], ["proof (prove)\nusing this:\n  match_tcp_flags (match_tcp_flags_conjunct ?f1.0 ?f2.0) ?pkt =\n  (match_tcp_flags ?f1.0 ?pkt \\<and> match_tcp_flags ?f2.0 ?pkt)\n  \\<not> ?c \\<subseteq> ?fmask \\<Longrightarrow>\n  \\<not> match_tcp_flags (TCP_Flags ?fmask ?c) ?pkt\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>match_tcp_flags_conjunct f1 f2 = TCP_Flags x1 x2;\n        \\<not> x2 \\<subseteq> x1\\<rbrakk>\n       \\<Longrightarrow> match_tcp_flags f1 pkt \\<longrightarrow>\n                         \\<not> match_tcp_flags f2 pkt", "by metis"], ["", "lemma match_tcp_flags_conjunct_option: \"(case match_tcp_flags_conjunct_option f1 f2 of None \\<Rightarrow> False | Some f3 \\<Rightarrow> match_tcp_flags f3 pkt) \\<longleftrightarrow> match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (case match_tcp_flags_conjunct_option f1 f2 of None \\<Rightarrow> False\n     | Some f3 \\<Rightarrow> match_tcp_flags f3 pkt) =\n    (match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt)", "apply(simp split: option.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (match_tcp_flags_conjunct_option f1 f2 = None \\<longrightarrow>\n     match_tcp_flags f1 pkt \\<longrightarrow>\n     \\<not> match_tcp_flags f2 pkt) \\<and>\n    (\\<forall>x2.\n        match_tcp_flags_conjunct_option f1 f2 = Some x2 \\<longrightarrow>\n        match_tcp_flags x2 pkt =\n        (match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt))", "using match_tcp_flags_conjunct_option_Some match_tcp_flags_conjunct_option_None"], ["proof (prove)\nusing this:\n  match_tcp_flags_conjunct_option ?f1.0 ?f2.0 = Some ?f3.0 \\<Longrightarrow>\n  (match_tcp_flags ?f1.0 ?pkt \\<and> match_tcp_flags ?f2.0 ?pkt) =\n  match_tcp_flags ?f3.0 ?pkt\n  match_tcp_flags_conjunct_option ?f1.0 ?f2.0 = None \\<Longrightarrow>\n  \\<not> (match_tcp_flags ?f1.0 ?pkt \\<and> match_tcp_flags ?f2.0 ?pkt)\n\ngoal (1 subgoal):\n 1. (match_tcp_flags_conjunct_option f1 f2 = None \\<longrightarrow>\n     match_tcp_flags f1 pkt \\<longrightarrow>\n     \\<not> match_tcp_flags f2 pkt) \\<and>\n    (\\<forall>x2.\n        match_tcp_flags_conjunct_option f1 f2 = Some x2 \\<longrightarrow>\n        match_tcp_flags x2 pkt =\n        (match_tcp_flags f1 pkt \\<and> match_tcp_flags f2 pkt))", "by blast"], ["", "fun ipt_tcp_flags_equal :: \"ipt_tcp_flags \\<Rightarrow> ipt_tcp_flags \\<Rightarrow> bool\" where\n    \"ipt_tcp_flags_equal (TCP_Flags fmask1 c1) (TCP_Flags fmask2 c2) = (\n          if c1 \\<subseteq> fmask1 \\<and> c2 \\<subseteq> fmask2\n          then c1 = c2 \\<and> fmask1 = fmask2\n          else  (\\<not> c1 \\<subseteq> fmask1) \\<and> (\\<not> c2 \\<subseteq> fmask2))\""], ["", "context\n  begin"], ["", "private"], ["", "lemma funny_set_falg_fmask_helper: \"c2 \\<subseteq> fmask2 \\<Longrightarrow> (c1 = c2 \\<and> fmask1 = fmask2) = (\\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c2 \\<subseteq> fmask2 \\<Longrightarrow>\n    (c1 = c2 \\<and> fmask1 = fmask2) =\n    (\\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2))", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2; c1 = c2 \\<and> fmask1 = fmask2\\<rbrakk>\n    \\<Longrightarrow> \\<forall>pkt.\n                         (pkt \\<inter> fmask1 = c1) =\n                         (pkt \\<inter> fmask2 = c2)\n 2. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> c1 = c2 \\<and> fmask1 = fmask2", "apply presburger"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> c1 = c2 \\<and> fmask1 = fmask2", "apply(subgoal_tac \"fmask1 = fmask2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2);\n     fmask1 = fmask2\\<rbrakk>\n    \\<Longrightarrow> c1 = c2 \\<and> fmask1 = fmask2\n 2. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "(*\"e\": Try this: by (metis Diff_Compl Diff_eq Int_lower2 Un_Diff_Int compl_sup disjoint_eq_subset_Compl inf_assoc inf_commute inf_sup_absorb) (> 1.0 s, timed out).\n      Isar proof (300 ms):*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "assume a1: \"c2 \\<subseteq> fmask2\""], ["proof (state)\nthis:\n  c2 \\<subseteq> fmask2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "assume a2: \"\\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\""], ["proof (state)\nthis:\n  \\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f3: \"\\<And>A Aa. (A::'a set) - - Aa = Aa - - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa. A - - Aa = Aa - - A", "by (simp add: inf_commute)"], ["proof (state)\nthis:\n  ?A - - ?Aa = ?Aa - - ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f4: \"\\<And>A Aa. (A::'a set) - - (- Aa) = A - Aa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa. A - - (- Aa) = A - Aa", "by simp"], ["proof (state)\nthis:\n  ?A - - (- ?Aa) = ?A - ?Aa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f5: \"\\<And>A Aa Ab. (A::'a set) - - Aa - - Ab = A - - (Aa - - Ab)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa Ab. A - - Aa - - Ab = A - - (Aa - - Ab)", "by blast"], ["proof (state)\nthis:\n  ?A - - ?Aa - - ?Ab = ?A - - (?Aa - - ?Ab)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f6: \"\\<And>A Aa. (A::'a set) - (- A - Aa) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa. A - (- A - Aa) = A", "by fastforce"], ["proof (state)\nthis:\n  ?A - (- ?A - ?Aa) = ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f7: \"\\<And>A Aa. - (A::'a set) - - Aa = Aa - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa. - A - - Aa = Aa - A", "using f4 f3"], ["proof (prove)\nusing this:\n  ?A - - (- ?Aa) = ?A - ?Aa\n  ?A - - ?Aa = ?Aa - - ?A\n\ngoal (1 subgoal):\n 1. \\<And>A Aa. - A - - Aa = Aa - A", "by presburger"], ["proof (state)\nthis:\n  - ?A - - ?Aa = ?Aa - ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f8: \"\\<And>A Aa. - (A::'a set) = - (A - Aa) - (A - - Aa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A Aa. - A = - (A - Aa) - (A - - Aa)", "by blast"], ["proof (state)\nthis:\n  - ?A = - (?A - ?Aa) - (?A - - ?Aa)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f9: \"c1 = - (- c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c1 = - (- c1)", "by blast"], ["proof (state)\nthis:\n  c1 = - (- c1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have f10: \"\\<And>A. A - c1 - c1 = A - c1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. A - c1 - c1 = A - c1", "by blast"], ["proof (state)\nthis:\n  ?A - c1 - c1 = ?A - c1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have \"\\<And>A. A - - (fmask1 - - fmask2) = c2 \\<or> A - - fmask1 \\<noteq> c1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A. A - - (fmask1 - - fmask2) = c2 \\<or> A - - fmask1 \\<noteq> c1", "using f6 f5 a2"], ["proof (prove)\nusing this:\n  ?A - (- ?A - ?Aa) = ?A\n  ?A - - ?Aa - - ?Ab = ?A - - (?Aa - - ?Ab)\n  \\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\n\ngoal (1 subgoal):\n 1. \\<And>A. A - - (fmask1 - - fmask2) = c2 \\<or> A - - fmask1 \\<noteq> c1", "by (metis (no_types) Diff_Compl)"], ["proof (state)\nthis:\n  ?A - - (fmask1 - - fmask2) = c2 \\<or> ?A - - fmask1 \\<noteq> c1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "hence f11: \"\\<And>A. - A - - (fmask1 - - fmask2) = c2 \\<or> fmask1 - A \\<noteq> c1\""], ["proof (prove)\nusing this:\n  ?A - - (fmask1 - - fmask2) = c2 \\<or> ?A - - fmask1 \\<noteq> c1\n\ngoal (1 subgoal):\n 1. \\<And>A. - A - - (fmask1 - - fmask2) = c2 \\<or> fmask1 - A \\<noteq> c1", "using f7"], ["proof (prove)\nusing this:\n  ?A - - (fmask1 - - fmask2) = c2 \\<or> ?A - - fmask1 \\<noteq> c1\n  - ?A - - ?Aa = ?Aa - ?A\n\ngoal (1 subgoal):\n 1. \\<And>A. - A - - (fmask1 - - fmask2) = c2 \\<or> fmask1 - A \\<noteq> c1", "by meson"], ["proof (state)\nthis:\n  - ?A - - (fmask1 - - fmask2) = c2 \\<or> fmask1 - ?A \\<noteq> c1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have \"c2 - fmask2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c2 - fmask2 = {}", "using a1"], ["proof (prove)\nusing this:\n  c2 \\<subseteq> fmask2\n\ngoal (1 subgoal):\n 1. c2 - fmask2 = {}", "by force"], ["proof (state)\nthis:\n  c2 - fmask2 = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "hence f12: \"- c2 - (fmask2 - c2) = - fmask2\""], ["proof (prove)\nusing this:\n  c2 - fmask2 = {}\n\ngoal (1 subgoal):\n 1. - c2 - (fmask2 - c2) = - fmask2", "by blast"], ["proof (state)\nthis:\n  - c2 - (fmask2 - c2) = - fmask2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "hence \"fmask2 - - c2 = c2\""], ["proof (prove)\nusing this:\n  - c2 - (fmask2 - c2) = - fmask2\n\ngoal (1 subgoal):\n 1. fmask2 - - c2 = c2", "by blast"], ["proof (state)\nthis:\n  fmask2 - - c2 = c2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "hence f13: \"fmask1 - - c2 = c1\""], ["proof (prove)\nusing this:\n  fmask2 - - c2 = c2\n\ngoal (1 subgoal):\n 1. fmask1 - - c2 = c1", "using f3 a2"], ["proof (prove)\nusing this:\n  fmask2 - - c2 = c2\n  ?A - - ?Aa = ?Aa - - ?A\n  \\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\n\ngoal (1 subgoal):\n 1. fmask1 - - c2 = c1", "by simp"], ["proof (state)\nthis:\n  fmask1 - - c2 = c1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "hence f14: \"c1 = c2\""], ["proof (prove)\nusing this:\n  fmask1 - - c2 = c1\n\ngoal (1 subgoal):\n 1. c1 = c2", "using f11"], ["proof (prove)\nusing this:\n  fmask1 - - c2 = c1\n  - ?A - - (fmask1 - - fmask2) = c2 \\<or> fmask1 - ?A \\<noteq> c1\n\ngoal (1 subgoal):\n 1. c1 = c2", "by blast"], ["proof (state)\nthis:\n  c1 = c2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "hence f15: \"fmask2 - (fmask1 - c1) = c1\""], ["proof (prove)\nusing this:\n  c1 = c2\n\ngoal (1 subgoal):\n 1. fmask2 - (fmask1 - c1) = c1", "using f13 f10 f9 f8 f7 f3 a2"], ["proof (prove)\nusing this:\n  c1 = c2\n  fmask1 - - c2 = c1\n  ?A - c1 - c1 = ?A - c1\n  c1 = - (- c1)\n  - ?A = - (?A - ?Aa) - (?A - - ?Aa)\n  - ?A - - ?Aa = ?Aa - ?A\n  ?A - - ?Aa = ?Aa - - ?A\n  \\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\n\ngoal (1 subgoal):\n 1. fmask2 - (fmask1 - c1) = c1", "by (metis Diff_Compl)"], ["proof (state)\nthis:\n  fmask2 - (fmask1 - c1) = c1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "have \"fmask1 - (fmask2 - c1) = c1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fmask1 - (fmask2 - c1) = c1", "using f14 f12 f10 f9 f8 f4 f3 a2"], ["proof (prove)\nusing this:\n  c1 = c2\n  - c2 - (fmask2 - c2) = - fmask2\n  ?A - c1 - c1 = ?A - c1\n  c1 = - (- c1)\n  - ?A = - (?A - ?Aa) - (?A - - ?Aa)\n  ?A - - (- ?Aa) = ?A - ?Aa\n  ?A - - ?Aa = ?Aa - - ?A\n  \\<forall>pkt. (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\n\ngoal (1 subgoal):\n 1. fmask1 - (fmask2 - c1) = c1", "by (metis Diff_Compl)"], ["proof (state)\nthis:\n  fmask1 - (fmask2 - c1) = c1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c2 \\<subseteq> fmask2;\n     \\<forall>pkt.\n        (pkt \\<inter> fmask1 = c1) = (pkt \\<inter> fmask2 = c2)\\<rbrakk>\n    \\<Longrightarrow> fmask1 = fmask2", "thus \"fmask1 = fmask2\""], ["proof (prove)\nusing this:\n  fmask1 - (fmask2 - c1) = c1\n\ngoal (1 subgoal):\n 1. fmask1 = fmask2", "using f15"], ["proof (prove)\nusing this:\n  fmask1 - (fmask2 - c1) = c1\n  fmask2 - (fmask1 - c1) = c1\n\ngoal (1 subgoal):\n 1. fmask1 = fmask2", "by blast"], ["proof (state)\nthis:\n  fmask1 = fmask2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ipt_tcp_flags_equal: \"ipt_tcp_flags_equal f1 f2 \\<longleftrightarrow> (\\<forall>pkt. match_tcp_flags f1 pkt = match_tcp_flags f2 pkt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipt_tcp_flags_equal f1 f2 =\n    (\\<forall>pkt. match_tcp_flags f1 pkt = match_tcp_flags f2 pkt)", "apply(cases f1, cases f2, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x1a x2a.\n       \\<lbrakk>f1 = TCP_Flags x1 x2; f2 = TCP_Flags x1a x2a\\<rbrakk>\n       \\<Longrightarrow> (x2 \\<subseteq> x1 \\<and>\n                          x2a \\<subseteq> x1a \\<longrightarrow>\n                          (x2 = x2a \\<and> x1 = x1a) =\n                          (\\<forall>pkt.\n                              (pkt \\<inter> x1 = x2) =\n                              (pkt \\<inter> x1a = x2a))) \\<and>\n                         ((x2 \\<subseteq> x1 \\<longrightarrow>\n                           \\<not> x2a \\<subseteq> x1a) \\<longrightarrow>\n                          (\\<not> x2 \\<subseteq> x1 \\<and>\n                           \\<not> x2a \\<subseteq> x1a) =\n                          (\\<forall>pkt.\n                              (pkt \\<inter> x1 = x2) =\n                              (pkt \\<inter> x1a = x2a)))", "apply(rename_tac fmask1 c1 fmask2 c2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2\\<rbrakk>\n       \\<Longrightarrow> (c1 \\<subseteq> fmask1 \\<and>\n                          c2 \\<subseteq> fmask2 \\<longrightarrow>\n                          (c1 = c2 \\<and> fmask1 = fmask2) =\n                          (\\<forall>pkt.\n                              (pkt \\<inter> fmask1 = c1) =\n                              (pkt \\<inter> fmask2 = c2))) \\<and>\n                         ((c1 \\<subseteq> fmask1 \\<longrightarrow>\n                           \\<not> c2 \\<subseteq> fmask2) \\<longrightarrow>\n                          (\\<not> c1 \\<subseteq> fmask1 \\<and>\n                           \\<not> c2 \\<subseteq> fmask2) =\n                          (\\<forall>pkt.\n                              (pkt \\<inter> fmask1 = c1) =\n                              (pkt \\<inter> fmask2 = c2)))", "apply(intro conjI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1 \\<and> c2 \\<subseteq> fmask2\\<rbrakk>\n       \\<Longrightarrow> (c1 = c2 \\<and> fmask1 = fmask2) =\n                         (\\<forall>pkt.\n                             (pkt \\<inter> fmask1 = c1) =\n                             (pkt \\<inter> fmask2 = c2))\n 2. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        \\<not> c2 \\<subseteq> fmask2\\<rbrakk>\n       \\<Longrightarrow> (\\<not> c1 \\<subseteq> fmask1 \\<and>\n                          \\<not> c2 \\<subseteq> fmask2) =\n                         (\\<forall>pkt.\n                             (pkt \\<inter> fmask1 = c1) =\n                             (pkt \\<inter> fmask2 = c2))", "using funny_set_falg_fmask_helper"], ["proof (prove)\nusing this:\n  ?c2.0 \\<subseteq> ?fmask2.0 \\<Longrightarrow>\n  (?c1.0 = ?c2.0 \\<and> ?fmask1.0 = ?fmask2.0) =\n  (\\<forall>pkt.\n      (pkt \\<inter> ?fmask1.0 = ?c1.0) = (pkt \\<inter> ?fmask2.0 = ?c2.0))\n\ngoal (2 subgoals):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1 \\<and> c2 \\<subseteq> fmask2\\<rbrakk>\n       \\<Longrightarrow> (c1 = c2 \\<and> fmask1 = fmask2) =\n                         (\\<forall>pkt.\n                             (pkt \\<inter> fmask1 = c1) =\n                             (pkt \\<inter> fmask2 = c2))\n 2. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        \\<not> c2 \\<subseteq> fmask2\\<rbrakk>\n       \\<Longrightarrow> (\\<not> c1 \\<subseteq> fmask1 \\<and>\n                          \\<not> c2 \\<subseteq> fmask2) =\n                         (\\<forall>pkt.\n                             (pkt \\<inter> fmask1 = c1) =\n                             (pkt \\<inter> fmask2 = c2))", "apply metis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fmask1 c1 fmask2 c2.\n       \\<lbrakk>f1 = TCP_Flags fmask1 c1; f2 = TCP_Flags fmask2 c2;\n        c1 \\<subseteq> fmask1 \\<longrightarrow>\n        \\<not> c2 \\<subseteq> fmask2\\<rbrakk>\n       \\<Longrightarrow> (\\<not> c1 \\<subseteq> fmask1 \\<and>\n                          \\<not> c2 \\<subseteq> fmask2) =\n                         (\\<forall>pkt.\n                             (pkt \\<inter> fmask1 = c1) =\n                             (pkt \\<inter> fmask2 = c2))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "declare ipt_tcp_flags_equal.simps[simp del]"], ["", "end"]]}