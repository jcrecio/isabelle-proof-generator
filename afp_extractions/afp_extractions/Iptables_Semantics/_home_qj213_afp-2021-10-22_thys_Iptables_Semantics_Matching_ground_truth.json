{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Matching.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma MatchOr: \"matches \\<gamma> (MatchOr m1 m2) p \\<longleftrightarrow> matches \\<gamma> m1 p \\<or> matches \\<gamma> m2 p\"", "lemma opt_MatchAny_match_expr_correct: \"matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m\"", "lemma matcheq_matchAny: \"\\<not> has_primitive m \\<Longrightarrow> matcheq_matchAny m \\<longleftrightarrow> matches \\<gamma> m p\"", "lemma matcheq_matchNone: \"\\<not> has_primitive m \\<Longrightarrow> matcheq_matchNone m \\<longleftrightarrow> \\<not> matches \\<gamma> m p\"", "lemma matcheq_matchNone_not_matches: \"matcheq_matchNone m \\<Longrightarrow> \\<not> matches \\<gamma> m p\"", "lemma matches_rule_iptables_bigstep:\n  assumes \"matches \\<gamma> m p \\<longleftrightarrow> matches \\<gamma> m' p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a], s\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow>?r\")", "lemma matches_rule_and_simp_help:\n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m') a'], Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a'], Undecided\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow>?r\")", "lemma matches_MatchNot_simp: \n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m) a], Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")", "lemma matches_MatchNotAnd_simp:\n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")", "lemma matches_rule_and_simp:\n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m') a'], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a'], s\\<rangle> \\<Rightarrow> t\"", "lemma iptables_bigstep_MatchAnd_comm:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2) a], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1) a], s\\<rangle> \\<Rightarrow> t\"", "lemma add_match_split: \"add_match m (rs1@rs2) = add_match m rs1 @ add_match m rs2\"", "lemma add_match_split_fst: \"add_match m (Rule m' a' # rs) = Rule (MatchAnd m m') a' # add_match m rs\"", "lemma add_match_distrib:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\"", "lemma add_match_split_fst': \"add_match m (a # rs) = add_match m [a] @ add_match m rs\"", "lemma matches_add_match_simp:\n  assumes m: \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")", "lemma matches_add_match_MatchNot_simp:\n  assumes m: \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m) rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\" (is \"?l s \\<longleftrightarrow> ?r s\")", "lemma not_matches_add_match_simp:\n  assumes \"\\<not> matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\"", "lemma iptables_bigstep_add_match_notnot_simp: \n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, s\\<rangle> \\<Rightarrow> t\"", "lemma add_match_match_not_cases:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> matches \\<gamma> m p \\<or> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\"", "lemma not_matches_add_matchNot_simp:\n  \"\\<not> matches \\<gamma> m p \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m) rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"", "lemma iptables_bigstep_add_match_and:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\"", "lemma optimize_matches_option_generic:\n  assumes \"\\<forall> r \\<in> set rs. P (get_match r)\"\n      and \"(\\<And>m m'. P m \\<Longrightarrow> f m = Some m' \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p)\"\n      and \"(\\<And>m. P m \\<Longrightarrow> f m = None \\<Longrightarrow> \\<not> matches \\<gamma> m p)\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"\n      (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma optimize_matches_generic: \"\\<forall> r \\<in> set rs. P (get_match r) \\<Longrightarrow> \n      (\\<And>m. P m \\<Longrightarrow> matches \\<gamma> (f m) p = matches \\<gamma> m p) \\<Longrightarrow>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches f rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], "translations": [["", "lemma MatchOr: \"matches \\<gamma> (MatchOr m1 m2) p \\<longleftrightarrow> matches \\<gamma> m1 p \\<or> matches \\<gamma> m2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matches \\<gamma> (MatchOr m1 m2) p =\n    (matches \\<gamma> m1 p \\<or> matches \\<gamma> m2 p)", "by(simp add: MatchOr_def)"], ["", "lemma opt_MatchAny_match_expr_correct: \"matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m", "have \"matches \\<gamma> (opt_MatchAny_match_expr_once m) = matches \\<gamma> m\" for m"], ["proof (prove)\ngoal (1 subgoal):\n 1. matches \\<gamma> (opt_MatchAny_match_expr_once m) = matches \\<gamma> m", "apply(simp add: fun_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       matches \\<gamma> (opt_MatchAny_match_expr_once m) x =\n       matches \\<gamma> m x", "by(induction m rule: opt_MatchAny_match_expr_once.induct) (simp_all)"], ["proof (state)\nthis:\n  matches \\<gamma> (opt_MatchAny_match_expr_once ?m) = matches \\<gamma> ?m\n\ngoal (1 subgoal):\n 1. matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m", "thus ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> (opt_MatchAny_match_expr_once ?m) = matches \\<gamma> ?m\n\ngoal (1 subgoal):\n 1. matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m", "apply(simp add: opt_MatchAny_match_expr_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m.\n        matches \\<gamma> (opt_MatchAny_match_expr_once m) =\n        matches \\<gamma> m) \\<Longrightarrow>\n    matches \\<gamma> (repeat_stabilize 2 opt_MatchAny_match_expr_once m) =\n    matches \\<gamma> m", "apply(rule repeat_stabilize_induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<And>m.\n        matches \\<gamma> (opt_MatchAny_match_expr_once m) =\n        matches \\<gamma> m) \\<Longrightarrow>\n    matches \\<gamma> m = matches \\<gamma> m\n 2. \\<And>ma.\n       \\<lbrakk>\\<And>m.\n                   matches \\<gamma> (opt_MatchAny_match_expr_once m) =\n                   matches \\<gamma> m;\n        matches \\<gamma> ma = matches \\<gamma> m\\<rbrakk>\n       \\<Longrightarrow> matches \\<gamma>\n                          (opt_MatchAny_match_expr_once ma) =\n                         matches \\<gamma> m", "by(simp)+"], ["proof (state)\nthis:\n  matches \\<gamma> (opt_MatchAny_match_expr m) = matches \\<gamma> m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matcheq_matchAny: \"\\<not> has_primitive m \\<Longrightarrow> matcheq_matchAny m \\<longleftrightarrow> matches \\<gamma> m p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> has_primitive m \\<Longrightarrow>\n    matcheq_matchAny m = matches \\<gamma> m p", "by(induction m) simp_all"], ["", "lemma matcheq_matchNone: \"\\<not> has_primitive m \\<Longrightarrow> matcheq_matchNone m \\<longleftrightarrow> \\<not> matches \\<gamma> m p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> has_primitive m \\<Longrightarrow>\n    matcheq_matchNone m = (\\<not> matches \\<gamma> m p)", "by(auto dest: matcheq_matchAny matachAny_matchNone)"], ["", "lemma matcheq_matchNone_not_matches: \"matcheq_matchNone m \\<Longrightarrow> \\<not> matches \\<gamma> m p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matcheq_matchNone m \\<Longrightarrow> \\<not> matches \\<gamma> m p", "by(induction m rule: matcheq_matchNone.induct) auto"], ["", "text\\<open>Lemmas about matching in the @{const iptables_bigstep} semantics.\\<close>"], ["", "lemma matches_rule_iptables_bigstep:\n  assumes \"matches \\<gamma> m p \\<longleftrightarrow> matches \\<gamma> m' p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a], s\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow>?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "fix m m'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "assume \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m a], s\\<rangle> \\<Rightarrow> t\" \"matches \\<gamma> m p \\<longleftrightarrow> matches \\<gamma> m' p\""], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], s\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p = matches \\<gamma> m' p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "hence \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a], s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], s\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p = matches \\<gamma> m' p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "by (induction \"[Rule  m a]\" s t rule: iptables_bigstep_induct)\n         (auto intro: iptables_bigstep.intros simp: Cons_eq_append_conv dest: skipD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?ma2\n                a], s\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> ?ma2 p = matches \\<gamma> ?m'a2 p\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m'a2\n                         a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "with assms"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p = matches \\<gamma> m' p\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?ma2\n                a], s\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> ?ma2 p = matches \\<gamma> ?m'a2 p\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m'a2\n                         a], s\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p = matches \\<gamma> m' p\n  \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?ma2\n                a], s\\<rangle> \\<Rightarrow> t;\n   matches \\<gamma> ?ma2 p = matches \\<gamma> ?m'a2 p\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule ?m'a2\n                         a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n       a], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matches_rule_and_simp_help:\n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m') a'], Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a'], Undecided\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow>?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "assume ?l"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a'], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "thus ?r"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a'], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "by (induction \"[Rule (MatchAnd m m') a']\" Undecided t rule: iptables_bigstep_induct)\n       (auto intro: iptables_bigstep.intros simp: assms Cons_eq_append_conv dest: skipD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a'], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "assume ?r"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a'], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "thus ?l"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a'], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], Undecided\\<rangle> \\<Rightarrow> t", "by (induction \"[Rule m' a']\" Undecided t rule: iptables_bigstep_induct)\n       (auto intro: iptables_bigstep.intros simp: assms Cons_eq_append_conv dest: skipD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a'], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matches_MatchNot_simp: \n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m) a], Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "assume ?l"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n       a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "thus ?r"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n       a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by (induction \"[Rule (MatchNot m) a]\" \"Undecided\" t rule: iptables_bigstep_induct)\n       (auto intro: iptables_bigstep.intros simp: assms Cons_eq_append_conv dest: skipD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "assume ?r"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "hence \"t = Undecided\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. t = Undecided", "by (metis skipD)"], ["proof (state)\nthis:\n  t = Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "with assms"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  t = Undecided", "show ?l"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  t = Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n         a], Undecided\\<rangle> \\<Rightarrow> t", "by (fastforce intro: nomatch)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchNot m)\n       a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matches_MatchNotAnd_simp:\n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m')\n         a], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "assume ?l"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd (MatchNot m) m')\n       a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m')\n         a], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "thus ?r"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd (MatchNot m) m')\n       a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by (induction \"[Rule (MatchAnd (MatchNot m) m') a]\" \"Undecided\" t rule: iptables_bigstep_induct)\n       (auto intro: iptables_bigstep.intros simp add: assms Cons_eq_append_conv dest: skipD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "assume ?r"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "hence \"t = Undecided\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. t = Undecided", "by (metis skipD)"], ["proof (state)\nthis:\n  t = Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "with assms"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  t = Undecided", "show ?l"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  t = Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd (MatchNot m) m') a], Undecided\\<rangle> \\<Rightarrow> t", "by (fastforce intro: nomatch)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd (MatchNot m) m')\n       a], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matches_rule_and_simp:\n  assumes \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m') a'], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a'], s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], s\\<rangle> \\<Rightarrow> t", "proof (cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n            a'], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n            a'], s\\<rangle> \\<Rightarrow> t", "case Undecided"], ["proof (state)\nthis:\n  s = Undecided\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n            a'], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n            a'], s\\<rangle> \\<Rightarrow> t", "with assms"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  s = Undecided", "show ?thesis"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  s = Undecided\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], s\\<rangle> \\<Rightarrow> t", "by (simp add: matches_rule_and_simp_help)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a'], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a'], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n            a'], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n            a'], s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n            a'], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n            a'], s\\<rangle> \\<Rightarrow> t", "case Decision"], ["proof (state)\nthis:\n  s = Decision x2_\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n            a'], s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n            a'], s\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Decision x2_\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a'], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a'], s\\<rangle> \\<Rightarrow> t", "by (metis decision decisionD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a'], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a'], s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iptables_bigstep_MatchAnd_comm:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2) a], s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1) a], s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "fix m1 m2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2) a], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1) a], s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "proof (induction \"[Rule (MatchAnd m1 m2) a]\" s t rule: iptables_bigstep_induct)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Accept\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalAllow\n 2. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p;\n     a = Drop \\<or> a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalDeny\n 3. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p;\n     a = Log \\<or> a = Empty\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 4. \\<not> matches \\<gamma> (MatchAnd m1 m2) p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n            a], Decision X\\<rangle> \\<Rightarrow> Decision X\n 6. \\<And>rs\\<^sub>1 rs\\<^sub>2 t t'.\n       \\<lbrakk>[Rule (MatchAnd m1 m2) a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        rs\\<^sub>1 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        rs\\<^sub>2 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> t'\n 7. \\<And>chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        rs\\<^sub>1 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>chain rs t.\n       \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        rs = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "case Seq"], ["proof (state)\nthis:\n  [Rule (MatchAnd m1 m2) a] = rs\\<^sub>1_ @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> t_\n  rs\\<^sub>1_ = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  rs\\<^sub>2_ = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], t_\\<rangle> \\<Rightarrow> t'_\n\ngoal (8 subgoals):\n 1. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Accept\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalAllow\n 2. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p;\n     a = Drop \\<or> a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalDeny\n 3. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p;\n     a = Log \\<or> a = Empty\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 4. \\<not> matches \\<gamma> (MatchAnd m1 m2) p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n            a], Decision X\\<rangle> \\<Rightarrow> Decision X\n 6. \\<And>rs\\<^sub>1 rs\\<^sub>2 t t'.\n       \\<lbrakk>[Rule (MatchAnd m1 m2) a] = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        rs\\<^sub>1 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        rs\\<^sub>2 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], t\\<rangle> \\<Rightarrow> t'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> t'\n 7. \\<And>chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        rs\\<^sub>1 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 8. \\<And>chain rs t.\n       \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        rs = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  [Rule (MatchAnd m1 m2) a] = rs\\<^sub>1_ @ rs\\<^sub>2_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1_, Undecided\\<rangle> \\<Rightarrow> t_\n  rs\\<^sub>1_ = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], Undecided\\<rangle> \\<Rightarrow> t_\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2_, t_\\<rangle> \\<Rightarrow> t'_\n  rs\\<^sub>2_ = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], t_\\<rangle> \\<Rightarrow> t'_\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], Undecided\\<rangle> \\<Rightarrow> t'_", "by (metis Nil_is_append_conv append_Nil butlast_append butlast_snoc seq)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], Undecided\\<rangle> \\<Rightarrow> t'_\n\ngoal (7 subgoals):\n 1. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Accept\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalAllow\n 2. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p;\n     a = Drop \\<or> a = Reject\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Decision\n                           FinalDeny\n 3. \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p;\n     a = Log \\<or> a = Empty\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                           (MatchAnd m2 m1)\n                           a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 4. \\<not> matches \\<gamma> (MatchAnd m1 m2) p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>X.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n            a], Decision X\\<rangle> \\<Rightarrow> Decision X\n 6. \\<And>chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        rs\\<^sub>1 = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 7. \\<And>chain rs t.\n       \\<lbrakk>matches \\<gamma> (MatchAnd m1 m2) p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        rs = [Rule (MatchAnd m1 m2) a] \\<Longrightarrow>\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n             a], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m2 m1)\n                              a], Undecided\\<rangle> \\<Rightarrow> t", "qed (auto intro: iptables_bigstep.intros)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n       a], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "}"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd ?m1a2 ?m2a2)\n       a], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd ?m2a2 ?m1a2)\n       a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd ?m1a2 ?m2a2)\n       a], s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd ?m2a2 ?m1a2)\n       a], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n         a], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n         a], s\\<rangle> \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 m2)\n       a], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 m1)\n       a], s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Add match\\<close>"], ["", "definition add_match :: \"'a match_expr \\<Rightarrow> 'a rule list \\<Rightarrow> 'a rule list\" where\n  \"add_match m rs = map (\\<lambda>r. case r of Rule m' a' \\<Rightarrow> Rule (MatchAnd m m') a') rs\""], ["", "lemma add_match_split: \"add_match m (rs1@rs2) = add_match m rs1 @ add_match m rs2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_match m (rs1 @ rs2) = add_match m rs1 @ add_match m rs2", "unfolding add_match_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (case_rule (\\<lambda>m'. Rule (MatchAnd m m'))) (rs1 @ rs2) =\n    map (case_rule (\\<lambda>m'. Rule (MatchAnd m m'))) rs1 @\n    map (case_rule (\\<lambda>m'. Rule (MatchAnd m m'))) rs2", "by (fact map_append)"], ["", "lemma add_match_split_fst: \"add_match m (Rule m' a' # rs) = Rule (MatchAnd m m') a' # add_match m rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_match m (Rule m' a' # rs) = Rule (MatchAnd m m') a' # add_match m rs", "unfolding add_match_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (case_rule (\\<lambda>m'. Rule (MatchAnd m m'))) (Rule m' a' # rs) =\n    Rule (MatchAnd m m') a' #\n    map (case_rule (\\<lambda>m'. Rule (MatchAnd m m'))) rs", "by simp"], ["", "lemma add_match_distrib:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "fix m1 m2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "proof (induction rs arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 []), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n           (add_match m1 []), s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 []), s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 []), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n           (add_match m1 []), s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 []), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 []), s\\<rangle> \\<Rightarrow> t", "by (simp add: add_match_def)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 []), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ?s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "from Cons"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ?s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t", "obtain m a where r: \"r = Rule m a\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ?s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. (\\<And>m a. r = Rule m a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases r) simp"], ["proof (state)\nthis:\n  r = Rule m a\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "with Cons.prems"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t\n  r = Rule m a", "obtain ti where 1: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti\" and 2: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1 (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t\n  r = Rule m a\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                      (MatchAnd m1 (MatchAnd m2 m))\n                      a], s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n             (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(simp add: add_match_split_fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ti.\n                \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                              (MatchAnd m1 (MatchAnd m2 m))\n                              a], s\\<rangle> \\<Rightarrow> ti;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                     (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n         (MatchAnd m1 (MatchAnd m2 m)) a #\n        add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t;\n     r = Rule m a\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>ti.\n                   \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                                 (MatchAnd m1 (MatchAnd m2 m))\n                                 a], s\\<rangle> \\<Rightarrow> ti;\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                        (add_match m2\n                          rs), ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        r = Rule m a;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> thesis", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n       (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "from 1 r"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n       (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti\n  r = Rule m a", "have base: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m2 (MatchAnd m1 m)) a], s\\<rangle> \\<Rightarrow> ti\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n       (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti\n  r = Rule m a\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n         (MatchAnd m2 (MatchAnd m1 m)) a], s\\<rangle> \\<Rightarrow> ti", "by (metis matches.simps(1) matches_rule_iptables_bigstep)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n       (MatchAnd m2 (MatchAnd m1 m)) a], s\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "from 2 Cons.IH"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ?s\\<rangle> \\<Rightarrow> t", "have IH: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2 (add_match m1 rs), ti\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ?s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), ti\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ti\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "from base IH seq'_cons"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n       (MatchAnd m2 (MatchAnd m1 m)) a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ti\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[?r], ?s\\<rangle> \\<Rightarrow> ?t;\n   ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, ?t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?r #\n                          ?rs, ?s\\<rangle> \\<Rightarrow> ?t'", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule (MatchAnd m2 (MatchAnd m1 m)) a # add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n       (MatchAnd m2 (MatchAnd m1 m)) a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), ti\\<rangle> \\<Rightarrow> t\n  \\<lbrakk>?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>[?r], ?s\\<rangle> \\<Rightarrow> ?t;\n   ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?rs, ?t\\<rangle> \\<Rightarrow> ?t'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma>,?\\<gamma>,?p\\<turnstile> \\<langle>?r #\n                          ?rs, ?s\\<rangle> \\<Rightarrow> ?t'\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m2 (MatchAnd m1 m)) a #\n       add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "by fast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m2 (MatchAnd m1 m)) a #\n     add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2\n                         rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n                       (add_match m1 rs), s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m2 (add_match m1\n                                  (a # rs)), s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m2 (MatchAnd m1 m)) a #\n     add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 (r # rs)), s\\<rangle> \\<Rightarrow> t", "using r"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m2 (MatchAnd m1 m)) a #\n     add_match m2 (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\n  r = Rule m a\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 (r # rs)), s\\<rangle> \\<Rightarrow> t", "by(simp add: add_match_split_fst[symmetric])"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 (r # rs)), s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "}"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match ?m1a2\n      (add_match ?m2a2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match ?m2a2\n      (add_match ?m1a2 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match ?m1a2\n      (add_match ?m2a2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match ?m2a2\n      (add_match ?m1a2 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n        (add_match m1 rs), s\\<rangle> \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m2\n      (add_match m1 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_match_split_fst': \"add_match m (a # rs) = add_match m [a] @ add_match m rs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_match m (a # rs) = add_match m [a] @ add_match m rs", "by (simp add: add_match_split[symmetric])"], ["", "lemma matches_add_match_simp:\n  assumes m: \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "assume ?l"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "with m"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t", "show ?r"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof (induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n         [], s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      [], s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n         [], s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      [], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n      (case_rule (\\<lambda>m'. Rule (MatchAnd m m')))\n      [], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n       rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "hence IH: \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n       rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "by(simp add: add_match_split_fst)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "obtain m' a where r: \"r = Rule m' a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m' a. r = Rule m' a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases r)"], ["proof (state)\nthis:\n  r = Rule m' a\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "with Cons.prems(2)"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a", "obtain ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m') a], s\\<rangle> \\<Rightarrow> ti\" and \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, ti\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n                      (MatchAnd m m') a], s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n             rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto elim:seqE_cons simp add: add_match_split_fst)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, ti\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "with Cons.prems(1) IH"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, ti\\<rangle> \\<Rightarrow> t", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a], s\\<rangle> \\<Rightarrow> ti\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, ti\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n         a], s\\<rangle> \\<Rightarrow> ti", "by(simp add: matches_rule_and_simp)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                     rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n            (a # rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "with \\<open>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, ti\\<rangle> \\<Rightarrow> t\\<close> IH r"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, ti\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> ti", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, ti\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n       rs, s\\<rangle> \\<Rightarrow> t", "by(metis decision state.exhaust iptables_bigstep_deterministic seq_cons)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "assume ?r"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "with m"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "show ?l"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "proof (induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                          [], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                          [], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], s\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule (\\<lambda>m'. Rule (MatchAnd m m')))\n        [], s\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      [], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                        rs, s\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "hence IH: \" \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n                        rs, s\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "by(simp add: add_match_split_fst)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "obtain m' a where r: \"r = Rule m' a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m' a. r = Rule m' a \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases r)"], ["proof (state)\nthis:\n  r = Rule m' a\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "with Cons.prems(2)"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a", "obtain ti where \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m' a], s\\<rangle> \\<Rightarrow> ti\" and \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>r #\n     rs, s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a\n\ngoal (1 subgoal):\n 1. (\\<And>ti.\n        \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n                      a], s\\<rangle> \\<Rightarrow> ti;\n         \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto elim:seqE_cons simp add: add_match_split_fst)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "with Cons.prems(1) IH"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t", "have \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m') a], s\\<rangle> \\<Rightarrow> ti\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m'\n       a], s\\<rangle> \\<Rightarrow> ti\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n         a], s\\<rangle> \\<Rightarrow> ti", "by(simp add: matches_rule_and_simp)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a], s\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\nm rs, s\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>a #\n           rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             m (a # rs), s\\<rangle> \\<Rightarrow> t", "with \\<open>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\\<close> IH r"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a], s\\<rangle> \\<Rightarrow> ti", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n  r = Rule m' a\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n       a], s\\<rangle> \\<Rightarrow> ti\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        (r # rs), s\\<rangle> \\<Rightarrow> t", "apply(simp add: add_match_split_fst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n         rs, s\\<rangle> \\<Rightarrow> t;\n     r = Rule m' a;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule (MatchAnd m m')\n          a], s\\<rangle> \\<Rightarrow> ti\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                          (MatchAnd m m') a #\n                         add_match m rs, s\\<rangle> \\<Rightarrow> t", "by(metis decision state.exhaust iptables_bigstep_deterministic seq_cons)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma matches_add_match_MatchNot_simp:\n  assumes m: \"matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m) rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\" (is \"?l s \\<longleftrightarrow> ?r s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "proof (cases s)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n           rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "case Undecided"], ["proof (state)\nthis:\n  s = Undecided\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n           rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "have \"?l Undecided \\<longleftrightarrow> ?r Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t", "assume \"?l Undecided\""], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t", "with m"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t", "show \"?r Undecided\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "proof (induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n         [], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                     (MatchNot m)\n                     rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n            (a # rs), Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      [], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n         [], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                     (MatchNot m)\n                     rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n            (a # rs), Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      [], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n      (case_rule (\\<lambda>m'. Rule (MatchAnd (MatchNot m) m')))\n      [], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                     (MatchNot m)\n                     rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n            (a # rs), Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                     (MatchNot m)\n                     rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n            (a # rs), Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n       rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      (r # rs), Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                     (MatchNot m)\n                     rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n            (a # rs), Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n       rs, Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      (r # rs), Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by (cases r) (metis matches_MatchNotAnd_simp skipD seqE_cons add_match_split_fst)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t", "assume \"?r Undecided\""], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t", "with m"], ["proof (chain)\npicking this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "show \"?l Undecided\""], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> t", "proof (induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                          (MatchNot m)\n                          [], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n(MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             (MatchNot m)\n                             (a # rs), Undecided\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>matches \\<gamma> m p;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                          (MatchNot m)\n                          [], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n(MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             (MatchNot m)\n                             (a # rs), Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        [], Undecided\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\nusing this:\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule (\\<lambda>m'. Rule (MatchAnd (MatchNot m) m')))\n        [], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      [], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n(MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             (MatchNot m)\n                             (a # rs), Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n(MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             (MatchNot m)\n                             (a # rs), Undecided\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                        (MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<lbrakk>\\<lbrakk>matches \\<gamma> m p;\n                 \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n                \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n(MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t;\n        matches \\<gamma> m p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                             (MatchNot m)\n                             (a # rs), Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>matches \\<gamma> m p;\n   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\\<rbrakk>\n  \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                        (MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> t\n  matches \\<gamma> m p\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        (r # rs), Undecided\\<rangle> \\<Rightarrow> t", "by (cases r) (metis matches_MatchNotAnd_simp skipD seq'_cons add_match_split_fst)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      (r # rs), Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. s = Undecided \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n           rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "with Undecided"], ["proof (chain)\npicking this:\n  s = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "show ?thesis"], ["proof (prove)\nusing this:\n  s = Undecided\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "by fast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n           rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n           rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "case (Decision d)"], ["proof (state)\nthis:\n  s = Decision d\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       s = Decision x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n           rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = Decision d\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t", "by(metis decision decisionD)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n      rs, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_matches_add_match_simp:\n  assumes \"\\<not> matches \\<gamma> m p\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, Undecided\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "proof(induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule (\\<lambda>m'. Rule (MatchAnd m m')))\n        [], Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      [], Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), Undecided\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        (r # rs), Undecided\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t", "by (cases r) (metis assms add_match_split_fst matches.simps(1) nomatch seq'_cons nomatchD seqE_cons)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), Undecided\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], Undecided\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iptables_bigstep_add_match_notnot_simp: \n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n        (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        rs, s\\<rangle> \\<Rightarrow> t", "proof(induction rs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n        (MatchNot (MatchNot m)) [], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n        (MatchNot (MatchNot m)) [], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n        (MatchNot (MatchNot m)) [], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        [], s\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule\n          (\\<lambda>m'. Rule (MatchAnd (MatchNot (MatchNot m)) m')))\n        [], s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule (\\<lambda>m'. Rule (MatchAnd m m')))\n        [], s\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot (MatchNot m))\n      [], s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      [], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "case (Cons r rs)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot (MatchNot m))\n      rs, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) rs, s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n           (MatchNot (MatchNot m)) (a # rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot (MatchNot m))\n      rs, s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n        (MatchNot (MatchNot m)) (r # rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n        (r # rs), s\\<rangle> \\<Rightarrow> t", "by (cases r)\n         (metis decision decisionD state.exhaust matches.simps(2) matches_add_match_simp not_matches_add_match_simp)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot (MatchNot m))\n      (r # rs), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_match_match_not_cases:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m) rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow> matches \\<gamma> m p \\<or> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, Undecided\\<rangle> \\<Rightarrow> Undecided \\<Longrightarrow>\n    matches \\<gamma> m p \\<or>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> Undecided", "by (metis matches.simps(2) matches_add_match_simp)"], ["", "lemma not_matches_add_matchNot_simp:\n  \"\\<not> matches \\<gamma> m p \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m) rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> matches \\<gamma> m p \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchNot m)\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "by (simp add: matches_add_match_simp)"], ["", "lemma iptables_bigstep_add_match_and:\n  \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n        rs, s\\<rangle> \\<Rightarrow> t", "proof(induction rs arbitrary: s t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 []), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           [], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s t.\n       (\\<And>s t.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n               (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n               (MatchAnd m1 m2)\n               rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>s t.\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 []), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           [], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>a rs s t.\n       (\\<And>s t.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n               (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n               (MatchAnd m1 m2)\n               rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 []), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n        [], s\\<rangle> \\<Rightarrow> t", "unfolding add_match_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule (\\<lambda>m'. Rule (MatchAnd m1 m')))\n        (map (case_rule (\\<lambda>m'. Rule (MatchAnd m2 m')))\n          []), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>map\n        (case_rule (\\<lambda>m'. Rule (MatchAnd (MatchAnd m1 m2) m')))\n        [], s\\<rangle> \\<Rightarrow> t", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 []), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      [], s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s t.\n       (\\<And>s t.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n               (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n               (MatchAnd m1 m2)\n               rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a rs s t.\n       (\\<And>s t.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n               (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n               (MatchAnd m1 m2)\n               rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "case(Cons r rs)"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      rs, ?s\\<rangle> \\<Rightarrow> ?t\n\ngoal (1 subgoal):\n 1. \\<And>a rs s t.\n       (\\<And>s t.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n               (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n               (MatchAnd m1 m2)\n               rs, s\\<rangle> \\<Rightarrow> t) \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n           (add_match m2 (a # rs)), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n           (a # rs), s\\<rangle> \\<Rightarrow> t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n        (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n        (r # rs), s\\<rangle> \\<Rightarrow> t", "proof (cases r, simp only: add_match_split_fst)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       r = Rule x1 x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n           (MatchAnd m1 (MatchAnd m2 x1)) x2 #\n          add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n           (MatchAnd (MatchAnd m1 m2) x1) x2 #\n          add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t", "fix m a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       r = Rule x1 x2 \\<Longrightarrow>\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n           (MatchAnd m1 (MatchAnd m2 x1)) x2 #\n          add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n       \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n           (MatchAnd (MatchAnd m1 m2) x1) x2 #\n          add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t", "show \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule (MatchAnd m1 (MatchAnd m2 m)) a # add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule (MatchAnd (MatchAnd m1 m2) m) a # add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\" (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2)\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "assume ?l"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m1 (MatchAnd m2 m)) a #\n     add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1\n        (add_match m2 rs), s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2)\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "with Cons.IH"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      rs, ?s\\<rangle> \\<Rightarrow> ?t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m1 (MatchAnd m2 m)) a #\n     add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "show ?r"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      rs, ?s\\<rangle> \\<Rightarrow> ?t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m1 (MatchAnd m2 m)) a #\n     add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s t.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                    (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                    (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n         (MatchAnd m1 (MatchAnd m2 m)) a #\n        add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                          (MatchAnd (MatchAnd m1 m2) m) a #\n                         add_match (MatchAnd m1 m2)\n                          rs, s\\<rangle> \\<Rightarrow> t", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t", "apply(case_tac s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t", "apply(case_tac ti)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided; ti = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided; ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t\n 3. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t", "apply (metis matches.simps(1) matches_rule_and_simp matches_rule_and_simp_help nomatch seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided; ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t", "apply (metis add_match_split_fst matches.simps(1) matches_add_match_simp not_matches_add_match_simp seq_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd m1 (MatchAnd m2 m)) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n            (add_match m2 rs), ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd (MatchAnd m1 m2) m) a #\n                            add_match (MatchAnd m1 m2)\n                             rs, s\\<rangle> \\<Rightarrow> t", "apply (metis decision decisionD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd (MatchAnd m1 m2) m) a #\n     add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2)\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2)\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "assume ?r"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd (MatchAnd m1 m2) m) a #\n     add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd (MatchAnd m1 m2) m) a #\n       add_match (MatchAnd m1 m2)\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "with Cons.IH"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      rs, ?s\\<rangle> \\<Rightarrow> ?t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd (MatchAnd m1 m2) m) a #\n     add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t", "show ?l"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 rs), ?s\\<rangle> \\<Rightarrow> ?t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      rs, ?s\\<rangle> \\<Rightarrow> ?t\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd (MatchAnd m1 m2) m) a #\n     add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n        (MatchAnd m1 (MatchAnd m2 m)) a #\n       add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s t.\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                    (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                    (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n     \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n         (MatchAnd (MatchAnd m1 m2) m) a #\n        add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                          (MatchAnd m1 (MatchAnd m2 m)) a #\n                         add_match m1\n                          (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply(case_tac s)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n 2. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply(case_tac ti)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ti.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided; ti = Undecided\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n 2. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided; ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n 3. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply (metis matches.simps(1) matches_rule_and_simp matches_rule_and_simp_help nomatch seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Undecided; ti = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n 2. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply (metis add_match_split_fst matches.simps(1) matches_add_match_simp not_matches_add_match_simp seq_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ti x2.\n       \\<lbrakk>\\<And>s t.\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n                       (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n                   \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match\n                       (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule\n             (MatchAnd (MatchAnd m1 m2) m) a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n            rs, ti\\<rangle> \\<Rightarrow> t;\n        s = Decision x2\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n                             (MatchAnd m1 (MatchAnd m2 m)) a #\n                            add_match m1\n                             (add_match m2 rs), s\\<rangle> \\<Rightarrow> t", "apply (metis decision decisionD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m1 (MatchAnd m2 m)) a #\n     add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd m1 (MatchAnd m2 m)) a #\n     add_match m1 (add_match m2 rs), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule\n      (MatchAnd (MatchAnd m1 m2) m) a #\n     add_match (MatchAnd m1 m2) rs, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match m1\n      (add_match m2 (r # rs)), s\\<rangle> \\<Rightarrow> t =\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>add_match (MatchAnd m1 m2)\n      (r # rs), s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma optimize_matches_option_generic:\n  assumes \"\\<forall> r \\<in> set rs. P (get_match r)\"\n      and \"(\\<And>m m'. P m \\<Longrightarrow> f m = Some m' \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p)\"\n      and \"(\\<And>m. P m \\<Longrightarrow> f m = None \\<Longrightarrow> \\<not> matches \\<gamma> m p)\"\n  shows \"\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\"\n      (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t =\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t", "assume ?rhs"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (2 subgoals):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t", "from this assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  \\<forall>r\\<in>set rs. P (get_match r)\n  \\<lbrakk>P ?m; f ?m = Some ?m'\\<rbrakk>\n  \\<Longrightarrow> matches \\<gamma> ?m' p = matches \\<gamma> ?m p\n  \\<lbrakk>P ?m; f ?m = None\\<rbrakk>\n  \\<Longrightarrow> \\<not> matches \\<gamma> ?m p", "show ?lhs"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n  \\<forall>r\\<in>set rs. P (get_match r)\n  \\<lbrakk>P ?m; f ?m = Some ?m'\\<rbrakk>\n  \\<Longrightarrow> matches \\<gamma> ?m' p = matches \\<gamma> ?m p\n  \\<lbrakk>P ?m; f ?m = None\\<rbrakk>\n  \\<Longrightarrow> \\<not> matches \\<gamma> ?m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t", "apply(induction rs s t rule: iptables_bigstep_induct)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>\\<forall>r\\<in>set []. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [], t\\<rangle> \\<Rightarrow> t\n 2. \\<And>m a.\n       \\<lbrakk>matches \\<gamma> m p; a = Accept;\n        \\<forall>r\\<in>set [Rule m a]. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [Rule m\n                                 a], Undecided\\<rangle> \\<Rightarrow> Decision\n                                 FinalAllow\n 3. \\<And>m a.\n       \\<lbrakk>matches \\<gamma> m p; a = Drop \\<or> a = Reject;\n        \\<forall>r\\<in>set [Rule m a]. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [Rule m\n                                 a], Undecided\\<rangle> \\<Rightarrow> Decision\n                                 FinalDeny\n 4. \\<And>m a.\n       \\<lbrakk>matches \\<gamma> m p; a = Log \\<or> a = Empty;\n        \\<forall>r\\<in>set [Rule m a]. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [Rule m\n                                 a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 5. \\<And>m a.\n       \\<lbrakk>\\<not> matches \\<gamma> m p;\n        \\<forall>r\\<in>set [Rule m a]. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [Rule m\n                                 a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 6. \\<And>rs X.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f rs, Decision\n                                    X\\<rangle> \\<Rightarrow> Decision X\n 7. \\<And>rs rs\\<^sub>1 rs\\<^sub>2 t t'.\n       \\<lbrakk>rs = rs\\<^sub>1 @ rs\\<^sub>2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>\\<forall>r\\<in>set rs\\<^sub>1. P (get_match r);\n         \\<And>m m'.\n            \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n            \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n         \\<And>m.\n            \\<lbrakk>P m; f m = None\\<rbrakk>\n            \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                              f rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<lbrakk>\\<forall>r\\<in>set rs\\<^sub>2. P (get_match r);\n         \\<And>m m'.\n            \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n            \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n         \\<And>m.\n            \\<lbrakk>P m; f m = None\\<rbrakk>\n            \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                              f rs\\<^sub>2, t\\<rangle> \\<Rightarrow> t';\n        \\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f rs, Undecided\\<rangle> \\<Rightarrow> t'\n 8. \\<And>m a chain rs\\<^sub>1 m' rs\\<^sub>2.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some (rs\\<^sub>1 @ [Rule m' Return] @ rs\\<^sub>2);\n        matches \\<gamma> m' p;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<lbrakk>\\<forall>r\\<in>set rs\\<^sub>1. P (get_match r);\n         \\<And>m m'.\n            \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n            \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n         \\<And>m.\n            \\<lbrakk>P m; f m = None\\<rbrakk>\n            \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                              f rs\\<^sub>1, Undecided\\<rangle> \\<Rightarrow> Undecided;\n        \\<forall>r\\<in>set [Rule m a]. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [Rule m\n                                 a], Undecided\\<rangle> \\<Rightarrow> Undecided\n 9. \\<And>m a chain rs t.\n       \\<lbrakk>matches \\<gamma> m p; a = Call chain;\n        \\<Gamma> chain = Some rs;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n         \\<And>m m'.\n            \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n            \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n         \\<And>m.\n            \\<lbrakk>P m; f m = None\\<rbrakk>\n            \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                              f rs, Undecided\\<rangle> \\<Rightarrow> t;\n        \\<forall>r\\<in>set [Rule m a]. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                             f [Rule m\n                                 a], Undecided\\<rangle> \\<Rightarrow> t", "apply(auto simp: optimize_matches_option_append intro: iptables_bigstep.intros split: option.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "assume ?lhs"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n      rs, s\\<rangle> \\<Rightarrow> t\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n        rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "from this assms"], ["proof (chain)\npicking this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n      rs, s\\<rangle> \\<Rightarrow> t\n  \\<forall>r\\<in>set rs. P (get_match r)\n  \\<lbrakk>P ?m; f ?m = Some ?m'\\<rbrakk>\n  \\<Longrightarrow> matches \\<gamma> ?m' p = matches \\<gamma> ?m p\n  \\<lbrakk>P ?m; f ?m = None\\<rbrakk>\n  \\<Longrightarrow> \\<not> matches \\<gamma> ?m p", "show ?rhs"], ["proof (prove)\nusing this:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n      rs, s\\<rangle> \\<Rightarrow> t\n  \\<forall>r\\<in>set rs. P (get_match r)\n  \\<lbrakk>P ?m; f ?m = Some ?m'\\<rbrakk>\n  \\<Longrightarrow> matches \\<gamma> ?m' p = matches \\<gamma> ?m p\n  \\<lbrakk>P ?m; f ?m = None\\<rbrakk>\n  \\<Longrightarrow> \\<not> matches \\<gamma> ?m p\n\ngoal (1 subgoal):\n 1. \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(induction f rs arbitrary: s rule: optimize_matches_option.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>uu_ s.\n       \\<lbrakk>\\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                    uu_ [], s\\<rangle> \\<Rightarrow> t;\n        \\<forall>r\\<in>set []. P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; uu_ m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; uu_ m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[], s\\<rangle> \\<Rightarrow> t\n 2. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>f m = None;\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                        f rs, s\\<rangle> \\<Rightarrow> t;\n                    \\<forall>r\\<in>set rs. P (get_match r);\n                    \\<And>m m'.\n                       \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                       \\<Longrightarrow> matches \\<gamma> m' p =\n   matches \\<gamma> m p;\n                    \\<And>m.\n                       \\<lbrakk>P m; f m = None\\<rbrakk>\n                       \\<Longrightarrow> \\<not> matches \\<gamma> m\n           p\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        \\<And>x2 s.\n           \\<lbrakk>f m = Some x2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t;\n            \\<forall>r\\<in>set rs. P (get_match r);\n            \\<And>m m'.\n               \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n               \\<Longrightarrow> matches \\<gamma> m' p =\n                                 matches \\<gamma> m p;\n            \\<And>m.\n               \\<lbrakk>P m; f m = None\\<rbrakk>\n               \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            (Rule m a # rs), s\\<rangle> \\<Rightarrow> t;\n        \\<forall>r\\<in>set (Rule m a # rs). P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>f m = None;\n                    \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                        f rs, s\\<rangle> \\<Rightarrow> t;\n                    \\<forall>r\\<in>set rs. P (get_match r);\n                    \\<And>m m'.\n                       \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                       \\<Longrightarrow> matches \\<gamma> m' p =\n   matches \\<gamma> m p;\n                    \\<And>m.\n                       \\<lbrakk>P m; f m = None\\<rbrakk>\n                       \\<Longrightarrow> \\<not> matches \\<gamma> m\n           p\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        \\<And>x2 s.\n           \\<lbrakk>f m = Some x2;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t;\n            \\<forall>r\\<in>set rs. P (get_match r);\n            \\<And>m m'.\n               \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n               \\<Longrightarrow> matches \\<gamma> m' p =\n                                 matches \\<gamma> m p;\n            \\<And>m.\n               \\<lbrakk>P m; f m = None\\<rbrakk>\n               \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            (Rule m a # rs), s\\<rangle> \\<Rightarrow> t;\n        \\<forall>r\\<in>set (Rule m a # rs). P (get_match r);\n        \\<And>m m'.\n           \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n           \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(simp split: option.split_asm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n               f rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        f m = None; P m; \\<forall>r\\<in>set rs. P (get_match r);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>f m a rs s x2.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule x2 a #\n           optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(subgoal_tac \"\\<not> matches \\<gamma> m p\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n               f rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        f m = None; P m; \\<forall>r\\<in>set rs. P (get_match r);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, s\\<rangle> \\<Rightarrow> t;\n        \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n               f rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        f m = None; P m; \\<forall>r\\<in>set rs. P (get_match r);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p\n 3. \\<And>f m a rs s x2.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule x2 a #\n           optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n               f rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        f m = None; P m; \\<forall>r\\<in>set rs. P (get_match r);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p\n 2. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n               f rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        f m = None; P m; \\<forall>r\\<in>set rs. P (get_match r);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, s\\<rangle> \\<Rightarrow> t;\n        \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 3. \\<And>f m a rs s x2.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule x2 a #\n           optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f m a rs s.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>s.\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n               f rs, s\\<rangle> \\<Rightarrow> t \\<Longrightarrow>\n           \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        f m = None; P m; \\<forall>r\\<in>set rs. P (get_match r);\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, s\\<rangle> \\<Rightarrow> t;\n        \\<not> matches \\<gamma> m p\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t\n 2. \\<And>f m a rs s x2.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule x2 a #\n           optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply (metis decision nomatch seq'_cons state.exhaust)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f m a rs s x2.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule x2 a #\n           optimize_matches_option f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(erule seqE_cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f m a rs s x2 ti.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule x2\n             a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>Rule m a #\n                            rs, s\\<rangle> \\<Rightarrow> t", "apply(rule_tac t=ti in seq'_cons)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f m a rs s x2 ti.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule x2\n             a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule m\n                              a], s\\<rangle> \\<Rightarrow> ti\n 2. \\<And>f m a rs s x2 ti.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule x2\n             a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t", "apply (meson matches_rule_iptables_bigstep)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f m a rs s x2 ti.\n       \\<lbrakk>\\<And>m m'.\n                   \\<lbrakk>P m; f m = Some m'\\<rbrakk>\n                   \\<Longrightarrow> matches \\<gamma> m' p =\n                                     matches \\<gamma> m p;\n        \\<And>m.\n           \\<lbrakk>P m; f m = None\\<rbrakk>\n           \\<Longrightarrow> \\<not> matches \\<gamma> m p;\n        \\<And>x2a s.\n           \\<lbrakk>x2 = x2a;\n            \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                f rs, s\\<rangle> \\<Rightarrow> t\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t;\n        P m; \\<forall>r\\<in>set rs. P (get_match r); f m = Some x2;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>[Rule x2\n             a], s\\<rangle> \\<Rightarrow> ti;\n        \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option f\n            rs, ti\\<rangle> \\<Rightarrow> t\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, ti\\<rangle> \\<Rightarrow> t", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma optimize_matches_generic: \"\\<forall> r \\<in> set rs. P (get_match r) \\<Longrightarrow> \n      (\\<And>m. P m \\<Longrightarrow> matches \\<gamma> (f m) p = matches \\<gamma> m p) \\<Longrightarrow>\n      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches f rs, s\\<rangle> \\<Rightarrow> t \\<longleftrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n     \\<And>m.\n        P m \\<Longrightarrow>\n        matches \\<gamma> (f m) p = matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches\n                          f rs, s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "unfolding optimize_matches_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n     \\<And>m.\n        P m \\<Longrightarrow>\n        matches \\<gamma> (f m) p = matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>optimize_matches_option\n                          (\\<lambda>m.\n                              if matcheq_matchNone (f m) then None\n                              else Some (f m))\n                          rs, s\\<rangle> \\<Rightarrow> t =\n                      \\<Gamma>,\\<gamma>,p\\<turnstile> \\<langle>rs, s\\<rangle> \\<Rightarrow> t", "apply(rule optimize_matches_option_generic)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n     \\<And>m.\n        P m \\<Longrightarrow>\n        matches \\<gamma> (f m) p = matches \\<gamma> m p\\<rbrakk>\n    \\<Longrightarrow> \\<forall>r\\<in>set rs. ?P (get_match r)\n 2. \\<And>m m'.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        ?P m;\n        (if matcheq_matchNone (f m) then None else Some (f m)) =\n        Some m'\\<rbrakk>\n       \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p\n 3. \\<And>m.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        ?P m;\n        (if matcheq_matchNone (f m) then None else Some (f m)) =\n        None\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p", "apply(simp; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m m'.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m;\n        (if matcheq_matchNone (f m) then None else Some (f m)) =\n        Some m'\\<rbrakk>\n       \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p\n 2. \\<And>m.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m;\n        (if matcheq_matchNone (f m) then None else Some (f m)) =\n        None\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p", "apply(simp split: if_split_asm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m m'.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m; \\<not> matcheq_matchNone m'; f m = m'\\<rbrakk>\n       \\<Longrightarrow> matches \\<gamma> m' p = matches \\<gamma> m p\n 2. \\<And>m.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m;\n        (if matcheq_matchNone (f m) then None else Some (f m)) =\n        None\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m;\n        (if matcheq_matchNone (f m) then None else Some (f m)) =\n        None\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p", "apply(simp split: if_split_asm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m; matcheq_matchNone (f m)\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p", "using matcheq_matchNone_not_matches"], ["proof (prove)\nusing this:\n  matcheq_matchNone ?m \\<Longrightarrow> \\<not> matches ?\\<gamma> ?m ?p\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<forall>r\\<in>set rs. P (get_match r);\n        \\<And>m.\n           P m \\<Longrightarrow>\n           matches \\<gamma> (f m) p = matches \\<gamma> m p;\n        P m; matcheq_matchNone (f m)\\<rbrakk>\n       \\<Longrightarrow> \\<not> matches \\<gamma> m p", "by fast"], ["", "end"]]}