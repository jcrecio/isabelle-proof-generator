{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Primitive_Matchers/Common_Primitive_toString.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma \"ipv4addr_wordinterval_pretty_toString \n    (RangeUnion (RangeUnion (WordInterval 0x7F000000 0x7FFFFFFF) (WordInterval 0x1020304 0x1020306))\n                (WordInterval 0x8080808 0x8080808)) = ''[127.0.0.0/8, 1.2.3.4-1.2.3.6, 8.8.8.8]''\""], "translations": [["", "lemma \"ipv4addr_wordinterval_pretty_toString \n    (RangeUnion (RangeUnion (WordInterval 0x7F000000 0x7FFFFFFF) (WordInterval 0x1020304 0x1020306))\n                (WordInterval 0x8080808 0x8080808)) = ''[127.0.0.0/8, 1.2.3.4-1.2.3.6, 8.8.8.8]''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv4addr_wordinterval_pretty_toString\n     (RangeUnion\n       (RangeUnion (WordInterval 2130706432 2147483647)\n         (WordInterval 16909060 16909062))\n       (WordInterval 134744072 134744072)) =\n    ''[127.0.0.0/8, 1.2.3.4-1.2.3.6, 8.8.8.8]''", "by eval"], ["", "fun action_toString :: \"action \\<Rightarrow> string\" where\n  \"action_toString action.Accept = ''-j ACCEPT''\" |\n  \"action_toString action.Drop = ''-j DROP''\" |\n  \"action_toString action.Reject = ''-j REJECT''\" |\n  \"action_toString (action.Call target) = ''-j ''@target@'' (call)''\" |\n  \"action_toString (action.Goto target) = ''-g ''@target\" |\n  \"action_toString action.Empty = ''''\" |\n  \"action_toString action.Log = ''-j LOG''\" |\n  \"action_toString action.Return = ''-j RETURN''\" |\n  \"action_toString action.Unknown = ''!!!!!!!!!!! UNKNOWN !!!!!!!!!!!''\""], ["", "fun common_primitive_toString :: \"('i::len word \\<Rightarrow> string) \\<Rightarrow> 'i common_primitive \\<Rightarrow> string\" where\n  \"common_primitive_toString ipToStr (Src (IpAddr ip)) = ''-s ''@ipToStr ip\" |\n  \"common_primitive_toString ipToStr (Dst (IpAddr ip)) = ''-d ''@ipToStr ip\" |\n  \"common_primitive_toString ipToStr (Src (IpAddrNetmask ip n)) = ''-s ''@ipToStr ip@''/''@string_of_nat n\"  |\n  \"common_primitive_toString ipToStr (Dst (IpAddrNetmask ip n)) = ''-d ''@ipToStr ip@''/''@string_of_nat n\"  |\n  \"common_primitive_toString ipToStr (Src (IpAddrRange ip1 ip2)) = ''-m iprange --src-range ''@ipToStr ip1@''-''@ipToStr ip2\"  |\n  \"common_primitive_toString ipToStr (Dst (IpAddrRange ip1 ip2)) = ''-m iprange --dst-range ''@ipToStr ip1@''-''@ipToStr ip2\"  |\n  \"common_primitive_toString _ (IIface ifce) = iface_toString ''-i '' ifce\" |\n  \"common_primitive_toString _ (OIface ifce) = iface_toString ''-o '' ifce\" |\n  \"common_primitive_toString _ (Prot prot) = ''-p ''@protocol_toString prot\" |\n  \"common_primitive_toString _ (Src_Ports (L4Ports prot pts)) = ''-m ''@primitive_protocol_toString prot@'' --spts '' @ list_toString (ports_toString '''') pts\" |\n  \"common_primitive_toString _ (Dst_Ports (L4Ports prot pts)) = ''-m ''@primitive_protocol_toString prot@'' --dpts '' @ list_toString (ports_toString '''') pts\" |\n  \"common_primitive_toString _ (MultiportPorts (L4Ports prot pts)) = ''-p ''@primitive_protocol_toString prot@'' -m multiport --ports '' @ list_toString (ports_toString '''') pts\" |\n  \"common_primitive_toString _ (CT_State S) = ''-m state --state ''@ctstate_set_toString S\" |\n  \"common_primitive_toString _ (L4_Flags (TCP_Flags c m)) = ''--tcp-flags ''@ipt_tcp_flags_toString c@'' ''@ipt_tcp_flags_toString m\" |\n  \"common_primitive_toString _ (Extra e) = ''~~''@e@''~~''\""], ["", "definition common_primitive_ipv4_toString :: \"32 common_primitive \\<Rightarrow> string\" where\n  \"common_primitive_ipv4_toString \\<equiv> common_primitive_toString ipv4addr_toString\""], ["", "definition common_primitive_ipv6_toString :: \"128 common_primitive \\<Rightarrow> string\" where\n  \"common_primitive_ipv6_toString \\<equiv> common_primitive_toString ipv6addr_toString\""], ["", "fun common_primitive_match_expr_toString\n  :: \"('i common_primitive \\<Rightarrow> string) \\<Rightarrow> 'i common_primitive match_expr \\<Rightarrow> string\" where\n  \"common_primitive_match_expr_toString toStr MatchAny = ''''\" |\n  \"common_primitive_match_expr_toString toStr (Match m) = toStr m\" |\n  \"common_primitive_match_expr_toString toStr (MatchAnd m1 m2) =\n      common_primitive_match_expr_toString toStr m1 @'' '' @ common_primitive_match_expr_toString toStr m2\" |\n  \"common_primitive_match_expr_toString toStr (MatchNot (Match m)) = ''! ''@toStr m\" |\n  \"common_primitive_match_expr_toString toStr (MatchNot m) = ''NOT (''@common_primitive_match_expr_toString toStr m@'')''\""], ["", "definition common_primitive_match_expr_ipv4_toString :: \"32 common_primitive match_expr \\<Rightarrow> string\" where\n  \"common_primitive_match_expr_ipv4_toString \\<equiv> common_primitive_match_expr_toString common_primitive_ipv4_toString\""], ["", "definition common_primitive_match_expr_ipv6_toString :: \"128 common_primitive match_expr \\<Rightarrow> string\" where\n  \"common_primitive_match_expr_ipv6_toString \\<equiv> common_primitive_match_expr_toString common_primitive_ipv6_toString\""], ["", "fun common_primitive_rule_toString :: \"32 common_primitive rule \\<Rightarrow> string\" where\n  \"common_primitive_rule_toString (Rule m a) = common_primitive_match_expr_ipv4_toString m @'' ''@action_toString a\""], ["", "end"]]}