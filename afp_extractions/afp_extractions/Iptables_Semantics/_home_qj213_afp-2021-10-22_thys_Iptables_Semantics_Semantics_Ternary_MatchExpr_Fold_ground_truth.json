{"file_name": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics/Semantics_Ternary/MatchExpr_Fold.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Iptables_Semantics", "problem_names": ["lemma andfold_MatchExp_alist_and: \"alist_and' (map Pos ls) = andfold_MatchExp (map Match ls)\"", "lemma andfold_MatchExp_matches:\n  \"matches \\<gamma> (andfold_MatchExp ms) a p \\<longleftrightarrow> (\\<forall>m \\<in> set ms. matches \\<gamma> m a p)\"", "lemma andfold_MatchExp_not_discI:\n  \"\\<forall>m \\<in> set ms. \\<not> has_disc disc m \\<Longrightarrow> \\<not> has_disc disc (andfold_MatchExp ms)\"", "lemma andfold_MatchExp_not_disc_negatedI:\n  \"\\<forall>m \\<in> set ms. \\<not> has_disc_negated disc neg m \\<Longrightarrow> \\<not> has_disc_negated disc neg (andfold_MatchExp ms)\"", "lemma andfold_MatchExp_not_disc_negated_mapMatch:\n  \"\\<not> has_disc_negated disc False (andfold_MatchExp (map (Match \\<circ> C) ls))\"", "lemma andfold_MatchExp_not_disc_mapMatch:\n  \"\\<forall>a. \\<not> disc (C a) \\<Longrightarrow> \\<not> has_disc disc (andfold_MatchExp (map (Match \\<circ> C) ls))\"", "lemma andfold_MatchExp_normalized_nnf: \"\\<forall>m \\<in> set ms. normalized_nnf_match m \\<Longrightarrow>\n    normalized_nnf_match (andfold_MatchExp ms)\"", "lemma andfold_MatchExp_normalized_n_primitive: \"\\<forall>m \\<in> set ms. normalized_n_primitive (disc, sel) f m \\<Longrightarrow>\n    normalized_n_primitive (disc, sel) f (andfold_MatchExp ms)\"", "lemma andfold_MatchExp_normalized_normalized_n_primitive_single:\n    \"\\<forall>a. \\<not> disc (C a) \\<Longrightarrow>\n      s \\<in> set (normalize_match (andfold_MatchExp (map (Match \\<circ> C) xs))) \\<Longrightarrow>\n         normalized_n_primitive (disc, sel) f s\"", "lemma normalize_andfold_MatchExp_normalized_n_primitive:\n  \"\\<forall> m \\<in> set ms. \\<forall> s' \\<in> set (normalize_match m). normalized_n_primitive (disc, sel) f s' \\<Longrightarrow>\n        s \\<in> set (normalize_match (andfold_MatchExp ms)) \\<Longrightarrow>\n          normalized_n_primitive (disc, sel) f s\""], "translations": [["", "lemma andfold_MatchExp_alist_and: \"alist_and' (map Pos ls) = andfold_MatchExp (map Match ls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alist_and' (map Pos ls) = andfold_MatchExp (map Match ls)", "apply(induction ls)"], ["proof (prove)\ngoal (2 subgoals):\n 1. alist_and' (map Pos []) = andfold_MatchExp (map Match [])\n 2. \\<And>a ls.\n       alist_and' (map Pos ls) =\n       andfold_MatchExp (map Match ls) \\<Longrightarrow>\n       alist_and' (map Pos (a # ls)) = andfold_MatchExp (map Match (a # ls))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ls.\n       alist_and' (map Pos ls) =\n       andfold_MatchExp (map Match ls) \\<Longrightarrow>\n       alist_and' (map Pos (a # ls)) = andfold_MatchExp (map Match (a # ls))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ls.\n       alist_and' (map Pos ls) =\n       andfold_MatchExp (map Match ls) \\<Longrightarrow>\n       alist_and' (Pos a # map Pos ls) =\n       andfold_MatchExp (Match a # map Match ls)", "apply(rename_tac l ls)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l ls.\n       alist_and' (map Pos ls) =\n       andfold_MatchExp (map Match ls) \\<Longrightarrow>\n       alist_and' (Pos l # map Pos ls) =\n       andfold_MatchExp (Match l # map Match ls)", "apply(case_tac \"ls\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>l ls.\n       \\<lbrakk>alist_and' (map Pos ls) = andfold_MatchExp (map Match ls);\n        ls = []\\<rbrakk>\n       \\<Longrightarrow> alist_and' (Pos l # map Pos ls) =\n                         andfold_MatchExp (Match l # map Match ls)\n 2. \\<And>l ls a list.\n       \\<lbrakk>alist_and' (map Pos ls) = andfold_MatchExp (map Match ls);\n        ls = a # list\\<rbrakk>\n       \\<Longrightarrow> alist_and' (Pos l # map Pos ls) =\n                         andfold_MatchExp (Match l # map Match ls)", "by(simp)+"], ["", "lemma andfold_MatchExp_matches:\n  \"matches \\<gamma> (andfold_MatchExp ms) a p \\<longleftrightarrow> (\\<forall>m \\<in> set ms. matches \\<gamma> m a p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matches \\<gamma> (andfold_MatchExp ms) a p =\n    (\\<forall>m\\<in>set ms. matches \\<gamma> m a p)", "apply(induction ms rule: andfold_MatchExp.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. matches \\<gamma> (andfold_MatchExp []) a p =\n    (\\<forall>m\\<in>set []. matches \\<gamma> m a p)\n 2. \\<And>e.\n       matches \\<gamma> (andfold_MatchExp [e]) a p =\n       (\\<forall>m\\<in>set [e]. matches \\<gamma> m a p)\n 3. \\<And>e v va.\n       matches \\<gamma> (andfold_MatchExp (v # va)) a p =\n       (\\<forall>m\\<in>set (v # va).\n           matches \\<gamma> m a p) \\<Longrightarrow>\n       matches \\<gamma> (andfold_MatchExp (e # v # va)) a p =\n       (\\<forall>m\\<in>set (e # v # va). matches \\<gamma> m a p)", "apply(simp add: bunch_of_lemmata_about_matches)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma andfold_MatchExp_not_discI:\n  \"\\<forall>m \\<in> set ms. \\<not> has_disc disc m \\<Longrightarrow> \\<not> has_disc disc (andfold_MatchExp ms)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>set ms. \\<not> has_disc disc m \\<Longrightarrow>\n    \\<not> has_disc disc (andfold_MatchExp ms)", "by(induction ms rule: andfold_MatchExp.induct) (simp)+"], ["", "lemma andfold_MatchExp_not_disc_negatedI:\n  \"\\<forall>m \\<in> set ms. \\<not> has_disc_negated disc neg m \\<Longrightarrow> \\<not> has_disc_negated disc neg (andfold_MatchExp ms)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>set ms.\n       \\<not> has_disc_negated disc neg m \\<Longrightarrow>\n    \\<not> has_disc_negated disc neg (andfold_MatchExp ms)", "by(induction ms rule: andfold_MatchExp.induct) (simp)+"], ["", "lemma andfold_MatchExp_not_disc_negated_mapMatch:\n  \"\\<not> has_disc_negated disc False (andfold_MatchExp (map (Match \\<circ> C) ls))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> has_disc_negated disc False\n            (andfold_MatchExp (map (Match \\<circ> C) ls))", "apply(induction ls)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<not> has_disc_negated disc False\n            (andfold_MatchExp (map (Match \\<circ> C) []))\n 2. \\<And>a ls.\n       \\<not> has_disc_negated disc False\n               (andfold_MatchExp\n                 (map (Match \\<circ> C) ls)) \\<Longrightarrow>\n       \\<not> has_disc_negated disc False\n               (andfold_MatchExp (map (Match \\<circ> C) (a # ls)))", "apply(simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ls.\n       \\<not> has_disc_negated disc False\n               (andfold_MatchExp\n                 (map (Match \\<circ> C) ls)) \\<Longrightarrow>\n       \\<not> has_disc_negated disc False\n               (andfold_MatchExp (map (Match \\<circ> C) (a # ls)))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ls.\n       \\<not> has_disc_negated disc False\n               (andfold_MatchExp\n                 (map (\\<lambda>a. Match (C a)) ls)) \\<Longrightarrow>\n       \\<not> has_disc_negated disc False\n               (andfold_MatchExp\n                 (Match (C a) # map (\\<lambda>a. Match (C a)) ls))", "apply(rename_tac ls, case_tac ls)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ls.\n       \\<lbrakk>\\<not> has_disc_negated disc False\n                        (andfold_MatchExp\n                          (map (\\<lambda>a. Match (C a)) ls));\n        ls = []\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc_negated disc False\n                                 (andfold_MatchExp\n                                   (Match (C a) #\n                                    map (\\<lambda>a. Match (C a)) ls))\n 2. \\<And>a ls aa list.\n       \\<lbrakk>\\<not> has_disc_negated disc False\n                        (andfold_MatchExp\n                          (map (\\<lambda>a. Match (C a)) ls));\n        ls = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc_negated disc False\n                                 (andfold_MatchExp\n                                   (Match (C a) #\n                                    map (\\<lambda>a. Match (C a)) ls))", "by(simp)+"], ["", "lemma andfold_MatchExp_not_disc_mapMatch:\n  \"\\<forall>a. \\<not> disc (C a) \\<Longrightarrow> \\<not> has_disc disc (andfold_MatchExp (map (Match \\<circ> C) ls))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. \\<not> disc (C a) \\<Longrightarrow>\n    \\<not> has_disc disc (andfold_MatchExp (map (Match \\<circ> C) ls))", "apply(induction ls)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>a. \\<not> disc (C a) \\<Longrightarrow>\n    \\<not> has_disc disc (andfold_MatchExp (map (Match \\<circ> C) []))\n 2. \\<And>a ls.\n       \\<lbrakk>\\<forall>a. \\<not> disc (C a) \\<Longrightarrow>\n                \\<not> has_disc disc\n                        (andfold_MatchExp (map (Match \\<circ> C) ls));\n        \\<forall>a. \\<not> disc (C a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc disc\n                                 (andfold_MatchExp\n                                   (map (Match \\<circ> C) (a # ls)))", "apply(simp; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ls.\n       \\<lbrakk>\\<forall>a. \\<not> disc (C a) \\<Longrightarrow>\n                \\<not> has_disc disc\n                        (andfold_MatchExp (map (Match \\<circ> C) ls));\n        \\<forall>a. \\<not> disc (C a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc disc\n                                 (andfold_MatchExp\n                                   (map (Match \\<circ> C) (a # ls)))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ls.\n       \\<lbrakk>\\<not> has_disc disc\n                        (andfold_MatchExp (map (Match \\<circ> C) ls));\n        \\<forall>a. \\<not> disc (C a)\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc disc\n                                 (andfold_MatchExp\n                                   (Match (C a) # map (Match \\<circ> C) ls))", "apply(rename_tac ls, case_tac ls)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ls.\n       \\<lbrakk>\\<not> has_disc disc\n                        (andfold_MatchExp (map (Match \\<circ> C) ls));\n        \\<forall>a. \\<not> disc (C a); ls = []\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc disc\n                                 (andfold_MatchExp\n                                   (Match (C a) # map (Match \\<circ> C) ls))\n 2. \\<And>a ls aa list.\n       \\<lbrakk>\\<not> has_disc disc\n                        (andfold_MatchExp (map (Match \\<circ> C) ls));\n        \\<forall>a. \\<not> disc (C a); ls = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_disc disc\n                                 (andfold_MatchExp\n                                   (Match (C a) # map (Match \\<circ> C) ls))", "by(simp)+"], ["", "lemma andfold_MatchExp_normalized_nnf: \"\\<forall>m \\<in> set ms. normalized_nnf_match m \\<Longrightarrow>\n    normalized_nnf_match (andfold_MatchExp ms)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>set ms. normalized_nnf_match m \\<Longrightarrow>\n    normalized_nnf_match (andfold_MatchExp ms)", "by(induction ms rule: andfold_MatchExp.induct)(simp)+"], ["", "lemma andfold_MatchExp_normalized_n_primitive: \"\\<forall>m \\<in> set ms. normalized_n_primitive (disc, sel) f m \\<Longrightarrow>\n    normalized_n_primitive (disc, sel) f (andfold_MatchExp ms)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>set ms.\n       normalized_n_primitive (disc, sel) f m \\<Longrightarrow>\n    normalized_n_primitive (disc, sel) f (andfold_MatchExp ms)", "by(induction ms rule: andfold_MatchExp.induct)(simp)+"], ["", "lemma andfold_MatchExp_normalized_normalized_n_primitive_single:\n    \"\\<forall>a. \\<not> disc (C a) \\<Longrightarrow>\n      s \\<in> set (normalize_match (andfold_MatchExp (map (Match \\<circ> C) xs))) \\<Longrightarrow>\n         normalized_n_primitive (disc, sel) f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "apply(rule normalized_n_primitive_if_no_primitive)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> normalized_nnf_match s\n 2. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_disc disc s", "using normalized_nnf_match_normalize_match"], ["proof (prove)\nusing this:\n  \\<forall>m'\\<in>set (normalize_match ?m). normalized_nnf_match m'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> normalized_nnf_match s\n 2. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_disc disc s", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_disc disc s", "apply(rule normalize_match_preserves_nodisc[where m=\"(andfold_MatchExp (map (Match \\<circ> C) xs))\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_disc disc\n                              (andfold_MatchExp (map (Match \\<circ> C) xs))\n 2. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> s \\<in> set (normalize_match\n                                    (andfold_MatchExp\n(map (Match \\<circ> C) xs)))", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>a. \\<not> disc (C a);\n     s \\<in> set (normalize_match\n                   (andfold_MatchExp (map (Match \\<circ> C) xs)))\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_disc disc\n                              (andfold_MatchExp (map (Match \\<circ> C) xs))", "by (simp add: andfold_MatchExp_not_discI)"], ["", "lemma normalize_andfold_MatchExp_normalized_n_primitive:\n  \"\\<forall> m \\<in> set ms. \\<forall> s' \\<in> set (normalize_match m). normalized_n_primitive (disc, sel) f s' \\<Longrightarrow>\n        s \\<in> set (normalize_match (andfold_MatchExp ms)) \\<Longrightarrow>\n          normalized_n_primitive (disc, sel) f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m\\<in>set ms.\n                \\<forall>s'\\<in>set (normalize_match m).\n                   normalized_n_primitive (disc, sel) f s';\n     s \\<in> set (normalize_match (andfold_MatchExp ms))\\<rbrakk>\n    \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "proof(induction ms arbitrary: s rule: andfold_MatchExp.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<forall>m\\<in>set [].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp []))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 2. \\<And>e s.\n       \\<lbrakk>\\<forall>m\\<in>set [e].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp [e]))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 3. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "case 1"], ["proof (state)\nthis:\n  \\<forall>m\\<in>set [].\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp []))\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>\\<forall>m\\<in>set [].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp []))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 2. \\<And>e s.\n       \\<lbrakk>\\<forall>m\\<in>set [e].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp [e]))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 3. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>m\\<in>set [].\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp []))\n\ngoal (1 subgoal):\n 1. normalized_n_primitive (disc, sel) f s", "by simp"], ["proof (state)\nthis:\n  normalized_n_primitive (disc, sel) f s\n\ngoal (2 subgoals):\n 1. \\<And>e s.\n       \\<lbrakk>\\<forall>m\\<in>set [e].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp [e]))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 2. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e s.\n       \\<lbrakk>\\<forall>m\\<in>set [e].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp [e]))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 2. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "case 2"], ["proof (state)\nthis:\n  \\<forall>m\\<in>set [e_].\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp [e_]))\n\ngoal (2 subgoals):\n 1. \\<And>e s.\n       \\<lbrakk>\\<forall>m\\<in>set [e].\n                   Ball (set (normalize_match m))\n                    (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match (andfold_MatchExp [e]))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s\n 2. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>m\\<in>set [e_].\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp [e_]))\n\ngoal (1 subgoal):\n 1. normalized_n_primitive (disc, sel) f s", "by simp"], ["proof (state)\nthis:\n  normalized_n_primitive (disc, sel) f s\n\ngoal (1 subgoal):\n 1. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "case (3 v1 v2 va)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>m\\<in>set (v2 # va).\n              \\<forall>a\\<in>set (normalize_match m).\n                 normalized_n_primitive (disc, sel) f a;\n   ?s \\<in> set (normalize_match (andfold_MatchExp (v2 # va)))\\<rbrakk>\n  \\<Longrightarrow> normalized_n_primitive (disc, sel) f ?s\n  \\<forall>m\\<in>set (v1 # v2 # va).\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp (v1 # v2 # va)))\n\ngoal (1 subgoal):\n 1. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "have IH: \"s' \\<in> set (normalize_match (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n            normalized_n_primitive (disc, sel) f s'\" for s'"], ["proof (prove)\ngoal (1 subgoal):\n 1. s' \\<in> set (normalize_match\n                   (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n    normalized_n_primitive (disc, sel) f s'", "using 3(1)[of s']"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>m\\<in>set (v2 # va).\n              \\<forall>a\\<in>set (normalize_match m).\n                 normalized_n_primitive (disc, sel) f a;\n   s' \\<in> set (normalize_match (andfold_MatchExp (v2 # va)))\\<rbrakk>\n  \\<Longrightarrow> normalized_n_primitive (disc, sel) f s'\n\ngoal (1 subgoal):\n 1. s' \\<in> set (normalize_match\n                   (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n    normalized_n_primitive (disc, sel) f s'", "(*without this, simp loops*)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>m\\<in>set (v2 # va).\n              \\<forall>a\\<in>set (normalize_match m).\n                 normalized_n_primitive (disc, sel) f a;\n   s' \\<in> set (normalize_match (andfold_MatchExp (v2 # va)))\\<rbrakk>\n  \\<Longrightarrow> normalized_n_primitive (disc, sel) f s'\n\ngoal (1 subgoal):\n 1. s' \\<in> set (normalize_match\n                   (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n    normalized_n_primitive (disc, sel) f s'", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s' \\<in> set (normalize_match (andfold_MatchExp (v2 # va)));\n     (\\<forall>x\\<in>set (normalize_match v2).\n         normalized_n_primitive (disc, sel) f x) \\<and>\n     (\\<forall>m\\<in>set va.\n         \\<forall>x\\<in>set (normalize_match m).\n            normalized_n_primitive (disc, sel) f x) \\<Longrightarrow>\n     normalized_n_primitive (disc, sel) f s'\\<rbrakk>\n    \\<Longrightarrow> normalized_n_primitive (disc, sel) f s'", "using 3(2)"], ["proof (prove)\nusing this:\n  \\<forall>m\\<in>set (v1 # v2 # va).\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s' \\<in> set (normalize_match (andfold_MatchExp (v2 # va)));\n     (\\<forall>x\\<in>set (normalize_match v2).\n         normalized_n_primitive (disc, sel) f x) \\<and>\n     (\\<forall>m\\<in>set va.\n         \\<forall>x\\<in>set (normalize_match m).\n            normalized_n_primitive (disc, sel) f x) \\<Longrightarrow>\n     normalized_n_primitive (disc, sel) f s'\\<rbrakk>\n    \\<Longrightarrow> normalized_n_primitive (disc, sel) f s'", "by force"], ["proof (state)\nthis:\n  ?s'\n  \\<in> set (normalize_match (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n  normalized_n_primitive (disc, sel) f ?s'\n\ngoal (1 subgoal):\n 1. \\<And>e v va s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>\\<forall>m\\<in>set (v # va).\n                               Ball (set (normalize_match m))\n                                (normalized_n_primitive (disc, sel) f);\n                    s \\<in> set (normalize_match\n                                  (andfold_MatchExp (v # va)))\\<rbrakk>\n                   \\<Longrightarrow> normalized_n_primitive (disc, sel) f s;\n        \\<forall>m\\<in>set (e # v # va).\n           Ball (set (normalize_match m))\n            (normalized_n_primitive (disc, sel) f);\n        s \\<in> set (normalize_match\n                      (andfold_MatchExp (e # v # va)))\\<rbrakk>\n       \\<Longrightarrow> normalized_n_primitive (disc, sel) f s", "from 3(2,3) IH"], ["proof (chain)\npicking this:\n  \\<forall>m\\<in>set (v1 # v2 # va).\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp (v1 # v2 # va)))\n  ?s'\n  \\<in> set (normalize_match (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n  normalized_n_primitive (disc, sel) f ?s'", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m\\<in>set (v1 # v2 # va).\n     \\<forall>a\\<in>set (normalize_match m).\n        normalized_n_primitive (disc, sel) f a\n  s \\<in> set (normalize_match (andfold_MatchExp (v1 # v2 # va)))\n  ?s'\n  \\<in> set (normalize_match (andfold_MatchExp (v2 # va))) \\<Longrightarrow>\n  normalized_n_primitive (disc, sel) f ?s'\n\ngoal (1 subgoal):\n 1. normalized_n_primitive (disc, sel) f s", "by(clarsimp)"], ["proof (state)\nthis:\n  normalized_n_primitive (disc, sel) f s\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}