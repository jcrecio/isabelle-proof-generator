{"file_name": "/home/qj213/afp-2021-10-22/thys/Randomised_Social_Choice/Preference_Profiles.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Randomised_Social_Choice", "problem_names": ["lemma not_in_dom': \"i \\<notin> dom \\<Longrightarrow> R i = (\\<lambda>_ _. False)\"", "lemma finite_alts [simp]: \"finite alts\"", "lemma prefs_wf' [simp]:\n  \"i \\<in> agents \\<Longrightarrow> total_preorder_on alts (R i)\" \"i \\<in> agents \\<Longrightarrow> preorder_on alts (R i)\"", "lemma not_outside: \n  assumes \"x \\<preceq>[R i] y\"\n  shows   \"i \\<in> agents\" \"x \\<in> alts\" \"y \\<in> alts\"", "lemmas prefs_undefined' = not_in_dom'", "lemma wf_update:\n  assumes \"i \\<in> agents\" \"total_preorder_on alts Ri'\"\n  shows   \"pref_profile_wf agents alts (R(i := Ri'))\"", "lemma wf_permute_agents:\n  assumes \"\\<sigma> permutes agents\"\n  shows   \"pref_profile_wf agents alts (R \\<circ> \\<sigma>)\"", "lemma (in -) pref_profile_eqI:\n  assumes \"pref_profile_wf agents alts R1\" \"pref_profile_wf agents alts R2\"\n  assumes \"\\<And>x. x \\<in> agents \\<Longrightarrow> R1 x = R2 x\"\n  shows   \"R1 = R2\"", "lemma permute_profile_map_relation:\n  \"permute_profile \\<sigma> R = (\\<lambda>i. map_relation (inv \\<sigma>) (R i))\"", "lemma permute_profile_compose [simp]:\n  \"permute_profile \\<sigma> (R \\<circ> \\<pi>) = permute_profile \\<sigma> R \\<circ> \\<pi>\"", "lemma permute_profile_id [simp]: \"permute_profile id R = R\"", "lemma permute_profile_o:\n  assumes \"bij f\" \"bij g\"\n  shows   \"permute_profile f (permute_profile g R) = permute_profile (f \\<circ> g) R\"", "lemma (in pref_profile_wf) wf_permute_alts:\n  assumes \"\\<sigma> permutes alts\"\n  shows   \"pref_profile_wf agents alts (permute_profile \\<sigma> R)\"", "lemma permute_profile_iff [simp]:\n  fixes R :: \"('agent, 'alt) pref_profile\"\n  assumes \"\\<sigma> permutes alts\" \"x \\<in> alts\" \"y \\<in> alts\"\n  defines \"R' \\<equiv> permute_profile \\<sigma> R\"\n  shows   \"\\<sigma> x \\<preceq>[R' i] \\<sigma> y \\<longleftrightarrow> x \\<preceq>[R i] y\"", "lemma pareto_losersI [intro?, simp]: \"y \\<succ>[Pareto(R)] x \\<Longrightarrow> x \\<in> pareto_losers R\"", "lemma Pareto_iff:\n  \"x \\<preceq>[Pareto(R)] y \\<longleftrightarrow> (\\<forall>i\\<in>dom. x \\<preceq>[R i] y)\"", "lemma Pareto_strict_iff: \n  \"x \\<prec>[Pareto(R)] y \\<longleftrightarrow> (\\<forall>i\\<in>dom. x \\<preceq>[R i] y) \\<and> (\\<exists>i\\<in>dom. x \\<prec>[R i] y)\"", "lemma Pareto_strictI:\n  assumes \"\\<And>i. i \\<in> dom \\<Longrightarrow> x \\<preceq>[R i] y\" \"i \\<in> dom\" \"x \\<prec>[R i] y\"\n  shows   \"x \\<prec>[Pareto(R)] y\"", "lemma Pareto_strictI':\n  assumes \"\\<And>i. i \\<in> dom \\<Longrightarrow> x \\<preceq>[R i] y\" \"i \\<in> dom\" \"\\<not>x \\<succeq>[R i] y\"\n  shows   \"x \\<prec>[Pareto(R)] y\"", "lemma pareto_loser_in_alts: \n  assumes \"x \\<in> pareto_losers R\"\n  shows   \"x \\<in> carrier\"", "lemma pareto_losersE:\n  assumes \"x \\<in> pareto_losers R\"\n  obtains y where \"y \\<in> carrier\" \"y \\<succ>[Pareto(R)] x\"", "lemma preferred_alts_subset_alts: \"preferred_alts (R i) x \\<subseteq> alts\" (is ?A)\n  and finite_preferred_alts [simp,intro!]: \"finite (preferred_alts (R i) x)\" (is ?B)", "lemma preferred_alts_altdef: \n  \"i \\<in> agents \\<Longrightarrow> preferred_alts (R i) x = {y\\<in>alts. y \\<succeq>[R i] x}\"", "lemma favorites_altdef:\n  \"favorites R i = Max_wrt_among (R i) alts\"", "lemma favorites_no_agent [simp]: \"i \\<notin> agents \\<Longrightarrow> favorites R i = {}\"", "lemma favorites_altdef':\n  \"favorites R i = {x\\<in>alts. \\<forall>y\\<in>alts. x \\<succeq>[R i] y}\"", "lemma favorites_subset_alts: \"favorites R i \\<subseteq> alts\"", "lemma finite_favorites [simp, intro]: \"finite (favorites R i)\"", "lemma favorites_nonempty: \"i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}\"", "lemma favorites_permute: \n  assumes i: \"i \\<in> agents\" and perm: \"\\<sigma> permutes alts\"\n  shows   \"favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i\"", "lemma has_unique_favorites_altdef:\n  \"has_unique_favorites R \\<longleftrightarrow> (\\<forall>i\\<in>agents. is_singleton (favorites R i))\"", "lemma unique_favorites: \"i \\<in> agents \\<Longrightarrow> favorites R i = {favorite R i}\"", "lemma favorite_in_alts: \"i \\<in> agents \\<Longrightarrow> favorite R i \\<in> alts\"", "lemma (in pref_profile_wf) agents_eq:\n  \"agents = {i. R i \\<noteq> (\\<lambda>_ _. False)}\"", "lemma (in pref_profile_wf) anonymous_profile_def:\n  \"anonymous_profile R = image_mset (weak_ranking \\<circ> R) (mset_set agents)\"", "lemma (in pref_profile_wf) anonymous_profile_permute:\n  assumes \"\\<sigma> permutes alts\"  \"finite agents\" \n  shows   \"anonymous_profile (permute_profile \\<sigma> R) = \n             image_mset (map ((`) \\<sigma>)) (anonymous_profile R)\"", "lemma (in pref_profile_wf) anonymous_profile_update:\n  assumes i:  \"i \\<in> agents\" and fin [simp]: \"finite agents\" and \"total_preorder_on alts Ri'\"\n  shows   \"anonymous_profile (R(i := Ri')) =\n             anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}\"", "lemma prefs_from_table_wfI:\n  assumes \"agents \\<noteq> {}\" \"alts \\<noteq> {}\" \"distinct (map fst xss)\"\n  assumes \"set (map fst xss) = agents\"\n  assumes \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> \\<Union>(set xs) = alts\"\n  assumes \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> is_finite_weak_ranking xs\"\n  shows   \"prefs_from_table_wf agents alts xss\"", "lemma prefs_from_table_wfD:\n  assumes \"prefs_from_table_wf agents alts xss\"\n  shows \"agents \\<noteq> {}\" \"alts \\<noteq> {}\" \"distinct (map fst xss)\"\n    and \"set (map fst xss) = agents\"\n    and \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> \\<Union>(set xs) = alts\"\n    and \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> is_finite_weak_ranking xs\"", "lemma pref_profile_from_tableI: \n  \"prefs_from_table_wf agents alts xss \\<Longrightarrow> pref_profile_wf agents alts (prefs_from_table xss)\"", "lemma prefs_from_table_eqI:\n  assumes \"distinct (map fst xs)\" \"distinct (map fst ys)\" \"set xs = set ys\"\n  shows   \"prefs_from_table xs = prefs_from_table ys\"", "lemma prefs_from_table_undef:\n  assumes \"prefs_from_table_wf agents alts xss\" \"i \\<notin> agents\"\n  shows   \"prefs_from_table xss i = (\\<lambda>_ _. False)\"", "lemma prefs_from_table_map_of:\n  assumes \"prefs_from_table_wf agents alts xss\" \"i \\<in> agents\"\n  shows   \"prefs_from_table xss i = of_weak_ranking (the (map_of xss i))\"", "lemma prefs_from_table_update:\n  fixes x xs\n  assumes \"i \\<in> set (map fst xs)\"\n  defines \"xs' \\<equiv> map (\\<lambda>(j,y). if j = i then (j, x) else (j, y)) xs\"\n  shows   \"(prefs_from_table xs)(i := of_weak_ranking x) =\n             prefs_from_table xs'\" (is \"?lhs = ?rhs\")", "lemma prefs_from_table_swap:\n  \"x \\<noteq> y \\<Longrightarrow> prefs_from_table ((x,x')#(y,y')#xs) = prefs_from_table ((y,y')#(x,x')#xs)\"", "lemma permute_prefs_from_table:\n  assumes \"\\<sigma> permutes fst ` set xs\"\n  shows   \"prefs_from_table xs \\<circ> \\<sigma> = prefs_from_table (map (\\<lambda>(x,y). (inv \\<sigma> x, y)) xs)\"", "lemma permute_profile_from_table:\n  assumes wf: \"prefs_from_table_wf agents alts xss\"\n  assumes perm: \"\\<sigma> permutes alts\"\n  shows   \"permute_profile \\<sigma> (prefs_from_table xss) = \n             prefs_from_table (map (\\<lambda>(x,y). (x, map ((`) \\<sigma>) y)) xss)\" (is \"?f = ?g\")", "lemma eval_prefs_from_table [simp]:\n  \"prefs_from_table []i = (\\<lambda>_ _. False)\"\n  \"prefs_from_table ((i, y) # xs) i = of_weak_ranking y\"\n  \"i \\<noteq> j \\<Longrightarrow> prefs_from_table ((j, y) # xs) i = prefs_from_table xs i\"", "lemma eval_of_weak_ranking [simp]:\n  \"a \\<notin> \\<Union>(set xs) \\<Longrightarrow> \\<not>of_weak_ranking xs a b\"\n  \"b \\<in> x \\<Longrightarrow> a \\<in> \\<Union>(set (x#xs)) \\<Longrightarrow> of_weak_ranking (x # xs) a b\"\n  \"b \\<notin> x \\<Longrightarrow> of_weak_ranking (x # xs) a b \\<longleftrightarrow> of_weak_ranking xs a b\"", "lemma prefs_from_table_cong [cong]:\n  assumes \"prefs_from_table xs = prefs_from_table ys\"\n  shows   \"prefs_from_table (x#xs) = prefs_from_table (x#ys)\"", "lemma eval_Collect_of_weak_ranking:\n  \"Collect (of_weak_ranking xs x) = of_weak_ranking_Collect_ge (rev xs) x\"", "lemma of_weak_ranking_Collect_ge_empty [simp]:\n  \"of_weak_ranking_Collect_ge [] x = {}\"", "lemma of_weak_ranking_Collect_ge_Cons [simp]:\n  \"y \\<in> x \\<Longrightarrow> of_weak_ranking_Collect_ge (x#xs) y = \\<Union>(set (x#xs))\"\n  \"y \\<notin> x \\<Longrightarrow> of_weak_ranking_Collect_ge (x#xs) y = of_weak_ranking_Collect_ge xs y\"", "lemma of_weak_ranking_Collect_ge_Cons':\n  \"of_weak_ranking_Collect_ge (x#xs) = (\\<lambda>y.\n     (if y \\<in> x then \\<Union>(set (x#xs)) else of_weak_ranking_Collect_ge xs y))\"", "lemma anonymise_prefs_from_table:\n  assumes \"prefs_from_table_wf agents alts xs\"\n  shows   \"anonymous_profile (prefs_from_table xs) = mset (map snd xs)\"", "lemma prefs_from_table_agent_permutation:\n  assumes wf: \"prefs_from_table_wf agents alts xs\" \"prefs_from_table_wf agents alts ys\"\n  assumes mset_eq: \"mset (map snd xs) = mset (map snd ys)\"\n  obtains \\<pi> where \"\\<pi> permutes agents\" \"prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\"", "lemma permute_list_distinct:\n  assumes \"f ` {..<length xs} \\<subseteq> {..<length xs}\" \"distinct xs\"\n  shows   \"permute_list f xs = map (\\<lambda>x. xs ! f (index xs x)) xs\"", "lemma image_mset_eq_permutation:\n  assumes \"{#f x. x \\<in># mset_set A#} = {#g x. x \\<in># mset_set A#}\" \"finite A\"\n  obtains \\<pi> where \"\\<pi> permutes A\" \"\\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\"", "lemma anonymous_profile_agent_permutation:\n  assumes eq:  \"anonymous_profile R1 = anonymous_profile R2\"\n  assumes wf:  \"pref_profile_wf agents alts R1\" \"pref_profile_wf agents alts R2\"\n  assumes fin: \"finite agents\"\n  obtains \\<pi> where \"\\<pi> permutes agents\" \"R2 \\<circ> \\<pi> = R1\""], "translations": [["", "lemma not_in_dom': \"i \\<notin> dom \\<Longrightarrow> R i = (\\<lambda>_ _. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> dom \\<Longrightarrow> R i = (\\<lambda>_ _. False)", "by (simp add: fun_eq_iff)"], ["", "end"], ["", "locale pref_profile_wf =\n  fixes agents :: \"'agent set\" and alts :: \"'alt set\" and R :: \"('agent, 'alt) pref_profile\"\n  assumes nonempty_agents [simp]: \"agents \\<noteq> {}\" and nonempty_alts [simp]: \"alts \\<noteq> {}\"\n  assumes prefs_wf [simp]: \"i \\<in> agents \\<Longrightarrow> finite_total_preorder_on alts (R i)\"\n  assumes prefs_undefined [simp]: \"i \\<notin> agents \\<Longrightarrow> \\<not>R i x y\"\nbegin"], ["", "lemma finite_alts [simp]: \"finite alts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite alts", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite alts", "from nonempty_agents"], ["proof (chain)\npicking this:\n  agents \\<noteq> {}", "obtain i where \"i \\<in> agents\""], ["proof (prove)\nusing this:\n  agents \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> agents \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. finite alts", "then"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret finite_total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. finite alts", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite alts", "by (rule finite_carrier)"], ["proof (state)\nthis:\n  finite alts\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefs_wf' [simp]:\n  \"i \\<in> agents \\<Longrightarrow> total_preorder_on alts (R i)\" \"i \\<in> agents \\<Longrightarrow> preorder_on alts (R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> agents \\<Longrightarrow> total_preorder_on alts (R i)) &&&\n    (i \\<in> agents \\<Longrightarrow>\n     Order_Predicates.preorder_on alts (R i))", "using prefs_wf[of i]"], ["proof (prove)\nusing this:\n  i \\<in> agents \\<Longrightarrow> finite_total_preorder_on alts (R i)\n\ngoal (1 subgoal):\n 1. (i \\<in> agents \\<Longrightarrow> total_preorder_on alts (R i)) &&&\n    (i \\<in> agents \\<Longrightarrow>\n     Order_Predicates.preorder_on alts (R i))", "by (simp_all add: finite_total_preorder_on_def total_preorder_on_def del: prefs_wf)"], ["", "lemma not_outside: \n  assumes \"x \\<preceq>[R i] y\"\n  shows   \"i \\<in> agents\" \"x \\<in> alts\" \"y \\<in> alts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents &&& x \\<in> alts &&& y \\<in> alts", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. i \\<in> agents\n 2. x \\<in> alts\n 3. y \\<in> alts", "from assms"], ["proof (chain)\npicking this:\n  R i x y", "show \"i \\<in> agents\""], ["proof (prove)\nusing this:\n  R i x y\n\ngoal (1 subgoal):\n 1. i \\<in> agents", "by (cases \"i \\<in> agents\") auto"], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (2 subgoals):\n 1. x \\<in> alts\n 2. y \\<in> alts", "then"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> alts\n 2. y \\<in> alts", "from assms"], ["proof (chain)\npicking this:\n  R i x y", "show \"x \\<in> alts\" \"y \\<in> alts\""], ["proof (prove)\nusing this:\n  R i x y\n\ngoal (1 subgoal):\n 1. x \\<in> alts &&& y \\<in> alts", "by (simp_all add: not_outside)"], ["proof (state)\nthis:\n  x \\<in> alts\n  y \\<in> alts\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale preorder_family agents alts R"], ["proof (prove)\ngoal (1 subgoal):\n 1. preorder_family agents alts R", "by (intro preorder_family.intro) simp_all"], ["", "lemmas prefs_undefined' = not_in_dom'"], ["", "lemma wf_update:\n  assumes \"i \\<in> agents\" \"total_preorder_on alts Ri'\"\n  shows   \"pref_profile_wf agents alts (R(i := Ri'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R(i := Ri'))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R(i := Ri'))", "interpret total_preorder_on alts Ri'"], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on alts Ri'", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R(i := Ri'))", "from finite_alts"], ["proof (chain)\npicking this:\n  finite alts", "have \"finite_total_preorder_on alts Ri'\""], ["proof (prove)\nusing this:\n  finite alts\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts Ri'", "by unfold_locales"], ["proof (state)\nthis:\n  finite_total_preorder_on alts Ri'\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R(i := Ri'))", "with assms"], ["proof (chain)\npicking this:\n  i \\<in> agents\n  total_preorder_on alts Ri'\n  finite_total_preorder_on alts Ri'", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  total_preorder_on alts Ri'\n  finite_total_preorder_on alts Ri'\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R(i := Ri'))", "by (auto intro!: pref_profile_wf.intro split: if_splits)"], ["proof (state)\nthis:\n  pref_profile_wf agents alts (R(i := Ri'))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wf_permute_agents:\n  assumes \"\\<sigma> permutes agents\"\n  shows   \"pref_profile_wf agents alts (R \\<circ> \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R \\<circ> \\<sigma>)", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (\\<lambda>x. R (\\<sigma> x))", "using permutes_in_image[OF assms(1)]"], ["proof (prove)\nusing this:\n  (\\<sigma> ?x \\<in> agents) = (?x \\<in> agents)\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (\\<lambda>x. R (\\<sigma> x))", "by (intro pref_profile_wf.intro prefs_wf) simp_all"], ["", "lemma (in -) pref_profile_eqI:\n  assumes \"pref_profile_wf agents alts R1\" \"pref_profile_wf agents alts R2\"\n  assumes \"\\<And>x. x \\<in> agents \\<Longrightarrow> R1 x = R2 x\"\n  shows   \"R1 = R2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R1 = R2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. R1 x = R2 x", "interpret R1: pref_profile_wf agents alts R1"], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts R1", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. R1 x = R2 x", "interpret R2: pref_profile_wf agents alts R2"], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts R2", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. R1 x = R2 x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. R1 x = R2 x", "show \"R1 x = R2 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R1 x = R2 x", "by (cases \"x \\<in> agents\"; intro ext) (simp_all add: assms(3))"], ["proof (state)\nthis:\n  R1 x = R2 x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\n  Permutes a preference profile w.r.t. alternatives in the way described in the paper.\n  This is needed for the definition of neutrality.\n\\<close>"], ["", "definition permute_profile where\n  \"permute_profile \\<sigma> R = (\\<lambda>i x y. R i (inv \\<sigma> x) (inv \\<sigma> y))\""], ["", "lemma permute_profile_map_relation:\n  \"permute_profile \\<sigma> R = (\\<lambda>i. map_relation (inv \\<sigma>) (R i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> R =\n    (\\<lambda>i. map_relation (inv \\<sigma>) (R i))", "by (simp add: permute_profile_def map_relation_def)"], ["", "lemma permute_profile_compose [simp]:\n  \"permute_profile \\<sigma> (R \\<circ> \\<pi>) = permute_profile \\<sigma> R \\<circ> \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> (R \\<circ> \\<pi>) =\n    permute_profile \\<sigma> R \\<circ> \\<pi>", "by (auto simp: fun_eq_iff permute_profile_def o_def)"], ["", "lemma permute_profile_id [simp]: \"permute_profile id R = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_profile id R = R", "by (simp add: permute_profile_def)"], ["", "lemma permute_profile_o:\n  assumes \"bij f\" \"bij g\"\n  shows   \"permute_profile f (permute_profile g R) = permute_profile (f \\<circ> g) R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_profile f (permute_profile g R) =\n    permute_profile (f \\<circ> g) R", "using assms"], ["proof (prove)\nusing this:\n  bij f\n  bij g\n\ngoal (1 subgoal):\n 1. permute_profile f (permute_profile g R) =\n    permute_profile (f \\<circ> g) R", "by (simp add: permute_profile_def o_inv_distrib)"], ["", "lemma (in pref_profile_wf) wf_permute_alts:\n  assumes \"\\<sigma> permutes alts\"\n  shows   \"pref_profile_wf agents alts (permute_profile \\<sigma> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (permute_profile \\<sigma> R)", "proof (rule pref_profile_wf.intro)"], ["proof (state)\ngoal (4 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       finite_total_preorder_on alts (permute_profile \\<sigma> R i)\n 4. \\<And>i x y.\n       i \\<notin> agents \\<Longrightarrow>\n       \\<not> permute_profile \\<sigma> R i x y", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       finite_total_preorder_on alts (permute_profile \\<sigma> R i)\n 4. \\<And>i x y.\n       i \\<notin> agents \\<Longrightarrow>\n       \\<not> permute_profile \\<sigma> R i x y", "assume \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (4 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       finite_total_preorder_on alts (permute_profile \\<sigma> R i)\n 4. \\<And>i x y.\n       i \\<notin> agents \\<Longrightarrow>\n       \\<not> permute_profile \\<sigma> R i x y", "with assms"], ["proof (chain)\npicking this:\n  \\<sigma> permutes alts\n  i \\<in> agents", "interpret R: finite_total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (4 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       finite_total_preorder_on alts (permute_profile \\<sigma> R i)\n 4. \\<And>i x y.\n       i \\<notin> agents \\<Longrightarrow>\n       \\<not> permute_profile \\<sigma> R i x y", "from assms"], ["proof (chain)\npicking this:\n  \\<sigma> permutes alts", "have [simp]: \"inv \\<sigma> x \\<in> alts \\<longleftrightarrow> x \\<in> alts\" for x"], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n\ngoal (1 subgoal):\n 1. (inv \\<sigma> x \\<in> alts) = (x \\<in> alts)", "by (simp add: permutes_in_image permutes_inv)"], ["proof (state)\nthis:\n  (inv \\<sigma> ?x \\<in> alts) = (?x \\<in> alts)\n\ngoal (4 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       finite_total_preorder_on alts (permute_profile \\<sigma> R i)\n 4. \\<And>i x y.\n       i \\<notin> agents \\<Longrightarrow>\n       \\<not> permute_profile \\<sigma> R i x y", "show \"finite_total_preorder_on alts (permute_profile \\<sigma> R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (permute_profile \\<sigma> R i)", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y.\n       permute_profile \\<sigma> R i x y \\<Longrightarrow> x \\<in> alts\n 2. \\<And>x y.\n       permute_profile \\<sigma> R i x y \\<Longrightarrow> y \\<in> alts\n 3. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 4. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 6. finite alts", "fix x y"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y.\n       permute_profile \\<sigma> R i x y \\<Longrightarrow> x \\<in> alts\n 2. \\<And>x y.\n       permute_profile \\<sigma> R i x y \\<Longrightarrow> y \\<in> alts\n 3. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 4. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 6. finite alts", "assume \"permute_profile \\<sigma> R i x y\""], ["proof (state)\nthis:\n  permute_profile \\<sigma> R i x y\n\ngoal (6 subgoals):\n 1. \\<And>x y.\n       permute_profile \\<sigma> R i x y \\<Longrightarrow> x \\<in> alts\n 2. \\<And>x y.\n       permute_profile \\<sigma> R i x y \\<Longrightarrow> y \\<in> alts\n 3. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 4. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 6. finite alts", "thus \"x \\<in> alts\" \"y \\<in> alts\""], ["proof (prove)\nusing this:\n  permute_profile \\<sigma> R i x y\n\ngoal (1 subgoal):\n 1. x \\<in> alts &&& y \\<in> alts", "using R.not_outside[of \"inv \\<sigma> x\" \"inv \\<sigma> y\"]"], ["proof (prove)\nusing this:\n  permute_profile \\<sigma> R i x y\n  R i (inv \\<sigma> x) (inv \\<sigma> y) \\<Longrightarrow>\n  inv \\<sigma> x \\<in> alts\n  R i (inv \\<sigma> x) (inv \\<sigma> y) \\<Longrightarrow>\n  inv \\<sigma> y \\<in> alts\n\ngoal (1 subgoal):\n 1. x \\<in> alts &&& y \\<in> alts", "by (auto simp: permute_profile_def)"], ["proof (state)\nthis:\n  x \\<in> alts\n  y \\<in> alts\n\ngoal (4 subgoals):\n 1. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 2. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 4. finite alts", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 2. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 4. finite alts", "fix x y z"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 2. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 4. finite alts", "assume \"permute_profile \\<sigma> R i x y\" \"permute_profile \\<sigma> R i y z\""], ["proof (state)\nthis:\n  permute_profile \\<sigma> R i x y\n  permute_profile \\<sigma> R i y z\n\ngoal (4 subgoals):\n 1. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 2. \\<And>x y z.\n       \\<lbrakk>permute_profile \\<sigma> R i x y;\n        permute_profile \\<sigma> R i y z\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 4. finite alts", "thus \"permute_profile \\<sigma> R i x z\""], ["proof (prove)\nusing this:\n  permute_profile \\<sigma> R i x y\n  permute_profile \\<sigma> R i y z\n\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> R i x z", "using R.trans[of \"inv \\<sigma> x\" \"inv \\<sigma> y\" \"inv \\<sigma> z\"]"], ["proof (prove)\nusing this:\n  permute_profile \\<sigma> R i x y\n  permute_profile \\<sigma> R i y z\n  \\<lbrakk>R i (inv \\<sigma> x) (inv \\<sigma> y);\n   R i (inv \\<sigma> y) (inv \\<sigma> z)\\<rbrakk>\n  \\<Longrightarrow> R i (inv \\<sigma> x) (inv \\<sigma> z)\n\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> R i x z", "by (simp_all add: permute_profile_def)"], ["proof (state)\nthis:\n  permute_profile \\<sigma> R i x z\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> alts \\<Longrightarrow> permute_profile \\<sigma> R i x x\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> alts; y \\<in> alts\\<rbrakk>\n       \\<Longrightarrow> permute_profile \\<sigma> R i x y \\<or>\n                         permute_profile \\<sigma> R i y x\n 3. finite alts", "qed (insert R.total R.refl R.finite_carrier, simp_all add: permute_profile_def)"], ["proof (state)\nthis:\n  finite_total_preorder_on alts (permute_profile \\<sigma> R i)\n\ngoal (3 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. \\<And>i x y.\n       i \\<notin> agents \\<Longrightarrow>\n       \\<not> permute_profile \\<sigma> R i x y", "qed (insert assms, simp_all add: permute_profile_def pref_profile_wf_def)"], ["", "text \\<open>\n  This shows that the above definition is equivalent to that in the paper.  \n\\<close>"], ["", "lemma permute_profile_iff [simp]:\n  fixes R :: \"('agent, 'alt) pref_profile\"\n  assumes \"\\<sigma> permutes alts\" \"x \\<in> alts\" \"y \\<in> alts\"\n  defines \"R' \\<equiv> permute_profile \\<sigma> R\"\n  shows   \"\\<sigma> x \\<preceq>[R' i] \\<sigma> y \\<longleftrightarrow> x \\<preceq>[R i] y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R' i (\\<sigma> x) (\\<sigma> y) = R i x y", "using assms"], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n  x \\<in> alts\n  y \\<in> alts\n  R' \\<equiv> permute_profile \\<sigma> R\n\ngoal (1 subgoal):\n 1. R' i (\\<sigma> x) (\\<sigma> y) = R i x y", "by (simp add: permute_profile_def permutes_inverses)"], ["", "subsection \\<open>Pareto dominance\\<close>"], ["", "definition Pareto :: \"('agent \\<Rightarrow> 'alt relation) \\<Rightarrow> 'alt relation\" where\n  \"x \\<preceq>[Pareto(R)] y \\<longleftrightarrow> (\\<exists>j. x \\<preceq>[R j] x) \\<and> (\\<forall>i. x \\<preceq>[R i] x \\<longrightarrow> x \\<preceq>[R i] y)\""], ["", "text \\<open>\n  A Pareto loser is an alternative that is Pareto-dominated by some other alternative.\n\\<close>"], ["", "definition pareto_losers :: \"('agent, 'alt) pref_profile \\<Rightarrow> 'alt set\" where\n  \"pareto_losers R = {x. \\<exists>y. y \\<succ>[Pareto(R)] x}\""], ["", "lemma pareto_losersI [intro?, simp]: \"y \\<succ>[Pareto(R)] x \\<Longrightarrow> x \\<in> pareto_losers R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y \\<Longrightarrow> x \\<in> pareto_losers R", "by (auto simp: pareto_losers_def)"], ["", "context preorder_family\nbegin"], ["", "lemma Pareto_iff:\n  \"x \\<preceq>[Pareto(R)] y \\<longleftrightarrow> (\\<forall>i\\<in>dom. x \\<preceq>[R i] y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pareto R x y = (\\<forall>i\\<in>dom. R i x y)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Pareto R x y \\<Longrightarrow> \\<forall>i\\<in>dom. R i x y\n 2. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "assume A: \"x \\<preceq>[Pareto(R)] y\""], ["proof (state)\nthis:\n  Pareto R x y\n\ngoal (2 subgoals):\n 1. Pareto R x y \\<Longrightarrow> \\<forall>i\\<in>dom. R i x y\n 2. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "then"], ["proof (chain)\npicking this:\n  Pareto R x y", "obtain j where j: \"x \\<preceq>[R j] x\""], ["proof (prove)\nusing this:\n  Pareto R x y\n\ngoal (1 subgoal):\n 1. (\\<And>j. R j x x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: Pareto_def)"], ["proof (state)\nthis:\n  R j x x\n\ngoal (2 subgoals):\n 1. Pareto R x y \\<Longrightarrow> \\<forall>i\\<in>dom. R i x y\n 2. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "hence j': \"j \\<in> dom\""], ["proof (prove)\nusing this:\n  R j x x\n\ngoal (1 subgoal):\n 1. j \\<in> dom", "by (cases \"j \\<in> dom\") auto"], ["proof (state)\nthis:\n  j \\<in> dom\n\ngoal (2 subgoals):\n 1. Pareto R x y \\<Longrightarrow> \\<forall>i\\<in>dom. R i x y\n 2. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "then"], ["proof (chain)\npicking this:\n  j \\<in> dom", "interpret preorder_on carrier \"R j\""], ["proof (prove)\nusing this:\n  j \\<in> dom\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (R j)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. Pareto R x y \\<Longrightarrow> \\<forall>i\\<in>dom. R i x y\n 2. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "from j"], ["proof (chain)\npicking this:\n  R j x x", "have \"x \\<in> carrier\""], ["proof (prove)\nusing this:\n  R j x x\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "by (auto simp: carrier_eq)"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal (2 subgoals):\n 1. Pareto R x y \\<Longrightarrow> \\<forall>i\\<in>dom. R i x y\n 2. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "with A preorder_on.refl[OF in_dom]"], ["proof (chain)\npicking this:\n  Pareto R x y\n  \\<lbrakk>?i1 \\<in> dom; ?x \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> R ?i1 ?x ?x\n  x \\<in> carrier", "show \"(\\<forall>i\\<in>dom. x \\<preceq>[R i] y)\""], ["proof (prove)\nusing this:\n  Pareto R x y\n  \\<lbrakk>?i1 \\<in> dom; ?x \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> R ?i1 ?x ?x\n  x \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y", "by (auto simp: Pareto_def)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>dom. R i x y\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "assume A: \"(\\<forall>i\\<in>dom. x \\<preceq>[R i] y)\""], ["proof (state)\nthis:\n  \\<forall>i\\<in>dom. R i x y\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "from nonempty_dom"], ["proof (chain)\npicking this:\n  dom \\<noteq> {}", "obtain j where j: \"j \\<in> dom\""], ["proof (prove)\nusing this:\n  dom \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>j. j \\<in> dom \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> dom\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "then"], ["proof (chain)\npicking this:\n  j \\<in> dom", "interpret preorder_on carrier \"R j\""], ["proof (prove)\nusing this:\n  j \\<in> dom\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (R j)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "from j A"], ["proof (chain)\npicking this:\n  j \\<in> dom\n  \\<forall>i\\<in>dom. R i x y", "have \"x \\<preceq>[R j] y\""], ["proof (prove)\nusing this:\n  j \\<in> dom\n  \\<forall>i\\<in>dom. R i x y\n\ngoal (1 subgoal):\n 1. R j x y", "by simp"], ["proof (state)\nthis:\n  R j x y\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "hence \"x \\<preceq>[R j] x\""], ["proof (prove)\nusing this:\n  R j x y\n\ngoal (1 subgoal):\n 1. R j x x", "using not_outside refl"], ["proof (prove)\nusing this:\n  R j x y\n  R j ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  R j ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  ?x \\<in> carrier \\<Longrightarrow> R j ?x ?x\n\ngoal (1 subgoal):\n 1. R j x x", "by blast"], ["proof (state)\nthis:\n  R j x x\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>dom. R i x y \\<Longrightarrow> Pareto R x y", "with A"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>dom. R i x y\n  R j x x", "show \"x \\<preceq>[Pareto(R)] y\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>dom. R i x y\n  R j x x\n\ngoal (1 subgoal):\n 1. Pareto R x y", "by (auto simp: Pareto_def)"], ["proof (state)\nthis:\n  Pareto R x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Pareto_strict_iff: \n  \"x \\<prec>[Pareto(R)] y \\<longleftrightarrow> (\\<forall>i\\<in>dom. x \\<preceq>[R i] y) \\<and> (\\<exists>i\\<in>dom. x \\<prec>[R i] y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y =\n    ((\\<forall>i\\<in>dom. R i x y) \\<and>\n     (\\<exists>i\\<in>dom. x \\<prec>[R i] y))", "by (auto simp: strongly_preferred_def Pareto_iff nonempty_dom)"], ["", "lemma Pareto_strictI:\n  assumes \"\\<And>i. i \\<in> dom \\<Longrightarrow> x \\<preceq>[R i] y\" \"i \\<in> dom\" \"x \\<prec>[R i] y\"\n  shows   \"x \\<prec>[Pareto(R)] y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "using assms"], ["proof (prove)\nusing this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  x \\<prec>[R i] y\n\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "by (auto simp: Pareto_strict_iff)"], ["", "lemma Pareto_strictI':\n  assumes \"\\<And>i. i \\<in> dom \\<Longrightarrow> x \\<preceq>[R i] y\" \"i \\<in> dom\" \"\\<not>x \\<succeq>[R i] y\"\n  shows   \"x \\<prec>[Pareto(R)] y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "from assms"], ["proof (chain)\npicking this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  \\<not> R i y x", "interpret preorder_on carrier \"R i\""], ["proof (prove)\nusing this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  \\<not> R i y x\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (R i)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "from assms"], ["proof (chain)\npicking this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  \\<not> R i y x", "have \"x \\<prec>[R i] y\""], ["proof (prove)\nusing this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  \\<not> R i y x\n\ngoal (1 subgoal):\n 1. x \\<prec>[R i] y", "by (simp add: strongly_preferred_def)"], ["proof (state)\nthis:\n  x \\<prec>[R i] y\n\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "with assms"], ["proof (chain)\npicking this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  \\<not> R i y x\n  x \\<prec>[R i] y", "show ?thesis"], ["proof (prove)\nusing this:\n  ?i \\<in> dom \\<Longrightarrow> R ?i x y\n  i \\<in> dom\n  \\<not> R i y x\n  x \\<prec>[R i] y\n\ngoal (1 subgoal):\n 1. x \\<prec>[Pareto R] y", "by (auto simp: Pareto_strict_iff )"], ["proof (state)\nthis:\n  x \\<prec>[Pareto R] y\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale Pareto: preorder_on carrier \"Pareto(R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (Pareto R)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (Pareto R)", "have \"preorder_on carrier (R i)\" if \"i \\<in> dom\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (R i)", "using that"], ["proof (prove)\nusing this:\n  i \\<in> dom\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (R i)", "by simp_all"], ["proof (state)\nthis:\n  ?i \\<in> dom \\<Longrightarrow> Order_Predicates.preorder_on carrier (R ?i)\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (Pareto R)", "note A = preorder_on.not_outside[OF this(1)] preorder_on.refl[OF this(1)]\n           preorder_on.trans[OF this(1)]"], ["proof (state)\nthis:\n  \\<lbrakk>?i1 \\<in> dom; R ?i1 ?x ?y\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> carrier\n  \\<lbrakk>?i1 \\<in> dom; R ?i1 ?x ?y\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> carrier\n  \\<lbrakk>?i1 \\<in> dom; ?x \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> R ?i1 ?x ?x\n  \\<lbrakk>?i1 \\<in> dom; R ?i1 ?x ?y; R ?i1 ?y ?z\\<rbrakk>\n  \\<Longrightarrow> R ?i1 ?x ?z\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (Pareto R)", "from nonempty_dom"], ["proof (chain)\npicking this:\n  dom \\<noteq> {}", "obtain i where i: \"i \\<in> dom\""], ["proof (prove)\nusing this:\n  dom \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> dom \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> dom\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (Pareto R)", "show \"preorder_on carrier (Pareto R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (Pareto R)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. Pareto R x y \\<Longrightarrow> x \\<in> carrier\n 2. \\<And>x y. Pareto R x y \\<Longrightarrow> y \\<in> carrier\n 3. \\<And>x. x \\<in> carrier \\<Longrightarrow> Pareto R x x\n 4. \\<And>x y z.\n       \\<lbrakk>Pareto R x y; Pareto R y z\\<rbrakk>\n       \\<Longrightarrow> Pareto R x z", "fix x y"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y. Pareto R x y \\<Longrightarrow> x \\<in> carrier\n 2. \\<And>x y. Pareto R x y \\<Longrightarrow> y \\<in> carrier\n 3. \\<And>x. x \\<in> carrier \\<Longrightarrow> Pareto R x x\n 4. \\<And>x y z.\n       \\<lbrakk>Pareto R x y; Pareto R y z\\<rbrakk>\n       \\<Longrightarrow> Pareto R x z", "assume \"x \\<preceq>[Pareto(R)] y\""], ["proof (state)\nthis:\n  Pareto R x y\n\ngoal (4 subgoals):\n 1. \\<And>x y. Pareto R x y \\<Longrightarrow> x \\<in> carrier\n 2. \\<And>x y. Pareto R x y \\<Longrightarrow> y \\<in> carrier\n 3. \\<And>x. x \\<in> carrier \\<Longrightarrow> Pareto R x x\n 4. \\<And>x y z.\n       \\<lbrakk>Pareto R x y; Pareto R y z\\<rbrakk>\n       \\<Longrightarrow> Pareto R x z", "with A(1,2)[OF i] i"], ["proof (chain)\npicking this:\n  R i ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  R i ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  i \\<in> dom\n  Pareto R x y", "show \"x \\<in> carrier\" \"y \\<in> carrier\""], ["proof (prove)\nusing this:\n  R i ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  R i ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  i \\<in> dom\n  Pareto R x y\n\ngoal (1 subgoal):\n 1. x \\<in> carrier &&& y \\<in> carrier", "by (auto simp: Pareto_iff)"], ["proof (state)\nthis:\n  x \\<in> carrier\n  y \\<in> carrier\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> carrier \\<Longrightarrow> Pareto R x x\n 2. \\<And>x y z.\n       \\<lbrakk>Pareto R x y; Pareto R y z\\<rbrakk>\n       \\<Longrightarrow> Pareto R x z", "qed (auto simp: Pareto_iff intro: A)"], ["proof (state)\nthis:\n  Order_Predicates.preorder_on carrier (Pareto R)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pareto_loser_in_alts: \n  assumes \"x \\<in> pareto_losers R\"\n  shows   \"x \\<in> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> carrier", "from assms"], ["proof (chain)\npicking this:\n  x \\<in> pareto_losers R", "obtain y i where \"i \\<in> dom\" \"x \\<prec>[R i] y\""], ["proof (prove)\nusing this:\n  x \\<in> pareto_losers R\n\ngoal (1 subgoal):\n 1. (\\<And>i y.\n        \\<lbrakk>i \\<in> dom; x \\<prec>[R i] y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: pareto_losers_def Pareto_strict_iff)"], ["proof (state)\nthis:\n  i \\<in> dom\n  x \\<prec>[R i] y\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "then"], ["proof (chain)\npicking this:\n  i \\<in> dom\n  x \\<prec>[R i] y", "interpret preorder_on carrier \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> dom\n  x \\<prec>[R i] y\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on carrier (R i)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> carrier", "from \\<open>x \\<prec>[R i] y\\<close>"], ["proof (chain)\npicking this:\n  x \\<prec>[R i] y", "have \"x \\<preceq>[R i] y\""], ["proof (prove)\nusing this:\n  x \\<prec>[R i] y\n\ngoal (1 subgoal):\n 1. R i x y", "by (simp add: strongly_preferred_def)"], ["proof (state)\nthis:\n  R i x y\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "thus \"x \\<in> carrier\""], ["proof (prove)\nusing this:\n  R i x y\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "using not_outside"], ["proof (prove)\nusing this:\n  R i x y\n  R i ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  R i ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n\ngoal (1 subgoal):\n 1. x \\<in> carrier", "by simp"], ["proof (state)\nthis:\n  x \\<in> carrier\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pareto_losersE:\n  assumes \"x \\<in> pareto_losers R\"\n  obtains y where \"y \\<in> carrier\" \"y \\<succ>[Pareto(R)] x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier; x \\<prec>[Pareto R] y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier; x \\<prec>[Pareto R] y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  x \\<in> pareto_losers R", "obtain y where y: \"y \\<succ>[Pareto(R)] x\""], ["proof (prove)\nusing this:\n  x \\<in> pareto_losers R\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x \\<prec>[Pareto R] y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding pareto_losers_def"], ["proof (prove)\nusing this:\n  x \\<in> {x. Ex (strongly_preferred x (Pareto R))}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x \\<prec>[Pareto R] y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<prec>[Pareto R] y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier; x \\<prec>[Pareto R] y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with Pareto.not_outside[of x y]"], ["proof (chain)\npicking this:\n  Pareto R x y \\<Longrightarrow> x \\<in> carrier\n  Pareto R x y \\<Longrightarrow> y \\<in> carrier\n  x \\<prec>[Pareto R] y", "have \"y \\<in> carrier\""], ["proof (prove)\nusing this:\n  Pareto R x y \\<Longrightarrow> x \\<in> carrier\n  Pareto R x y \\<Longrightarrow> y \\<in> carrier\n  x \\<prec>[Pareto R] y\n\ngoal (1 subgoal):\n 1. y \\<in> carrier", "by (simp add: strongly_preferred_def)"], ["proof (state)\nthis:\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier; x \\<prec>[Pareto R] y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with y"], ["proof (chain)\npicking this:\n  x \\<prec>[Pareto R] y\n  y \\<in> carrier", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<prec>[Pareto R] y\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  x \\<prec>[Pareto R] y\n  y \\<in> carrier\n  \\<lbrakk>?y \\<in> carrier; x \\<prec>[Pareto R] ?y\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Preferred alternatives\\<close>"], ["", "context pref_profile_wf\nbegin"], ["", "lemma preferred_alts_subset_alts: \"preferred_alts (R i) x \\<subseteq> alts\" (is ?A)\n  and finite_preferred_alts [simp,intro!]: \"finite (preferred_alts (R i) x)\" (is ?B)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preferred_alts (R i) x \\<subseteq> alts &&&\n    finite (preferred_alts (R i) x)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. preferred_alts (R i) x \\<subseteq> alts\n 2. finite (preferred_alts (R i) x)", "have \"?A \\<and> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "proof (cases \"i \\<in> agents\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)\n 2. i \\<notin> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "assume \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)\n 2. i \\<notin> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "then"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)\n 2. i \\<notin> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "have \"preferred_alts (R i) x \\<subseteq> alts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preferred_alts (R i) x \\<subseteq> alts", "using not_outside"], ["proof (prove)\nusing this:\n  R i ?x ?y \\<Longrightarrow> ?x \\<in> alts\n  R i ?x ?y \\<Longrightarrow> ?y \\<in> alts\n\ngoal (1 subgoal):\n 1. preferred_alts (R i) x \\<subseteq> alts", "by (auto simp: preferred_alts_def)"], ["proof (state)\nthis:\n  preferred_alts (R i) x \\<subseteq> alts\n\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)\n 2. i \\<notin> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  preferred_alts (R i) x \\<subseteq> alts\n\ngoal (1 subgoal):\n 1. preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "by (auto dest: finite_subset)"], ["proof (state)\nthis:\n  preferred_alts (R i) x \\<subseteq> alts \\<and>\n  finite (preferred_alts (R i) x)\n\ngoal (1 subgoal):\n 1. i \\<notin> agents \\<Longrightarrow>\n    preferred_alts (R i) x \\<subseteq> alts \\<and>\n    finite (preferred_alts (R i) x)", "qed (auto simp: preferred_alts_def)"], ["proof (state)\nthis:\n  preferred_alts (R i) x \\<subseteq> alts \\<and>\n  finite (preferred_alts (R i) x)\n\ngoal (2 subgoals):\n 1. preferred_alts (R i) x \\<subseteq> alts\n 2. finite (preferred_alts (R i) x)", "thus ?A ?B"], ["proof (prove)\nusing this:\n  preferred_alts (R i) x \\<subseteq> alts \\<and>\n  finite (preferred_alts (R i) x)\n\ngoal (1 subgoal):\n 1. preferred_alts (R i) x \\<subseteq> alts &&&\n    finite (preferred_alts (R i) x)", "by blast+"], ["proof (state)\nthis:\n  preferred_alts (R i) x \\<subseteq> alts\n  finite (preferred_alts (R i) x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma preferred_alts_altdef: \n  \"i \\<in> agents \\<Longrightarrow> preferred_alts (R i) x = {y\\<in>alts. y \\<succeq>[R i] x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    preferred_alts (R i) x = {y \\<in> alts. R i x y}", "by (simp add: preorder_on.preferred_alts_altdef)"], ["", "end"], ["", "subsection \\<open>Favourite alternatives\\<close>"], ["", "definition favorites :: \"('agent, 'alt) pref_profile \\<Rightarrow> 'agent \\<Rightarrow> 'alt set\" where\n  \"favorites R i = Max_wrt (R i)\""], ["", "definition favorite :: \"('agent, 'alt) pref_profile \\<Rightarrow> 'agent \\<Rightarrow> 'alt\" where\n  \"favorite R i = the_elem (favorites R i)\""], ["", "definition has_unique_favorites :: \"('agent, 'alt) pref_profile \\<Rightarrow> bool\" where\n  \"has_unique_favorites R \\<longleftrightarrow> (\\<forall>i. favorites R i = {} \\<or> is_singleton (favorites R i))\""], ["", "context pref_profile_wf\nbegin"], ["", "lemma favorites_altdef:\n  \"favorites R i = Max_wrt_among (R i) alts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites R i = Max_wrt_among (R i) alts", "proof (cases \"i \\<in> agents\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts\n 2. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts", "assume \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts\n 2. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts", "then"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts\n 2. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites R i = Max_wrt_among (R i) alts", "by (simp add: favorites_def Max_wrt_total_preorder Max_wrt_among_total_preorder)"], ["proof (state)\nthis:\n  favorites R i = Max_wrt_among (R i) alts\n\ngoal (1 subgoal):\n 1. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = Max_wrt_among (R i) alts", "qed (simp_all add: favorites_def Max_wrt_def Max_wrt_among_def pref_profile_wf_def)"], ["", "lemma favorites_no_agent [simp]: \"i \\<notin> agents \\<Longrightarrow> favorites R i = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> agents \\<Longrightarrow> favorites R i = {}", "by (auto simp: favorites_def Max_wrt_def Max_wrt_among_def)"], ["", "lemma favorites_altdef':\n  \"favorites R i = {x\\<in>alts. \\<forall>y\\<in>alts. x \\<succeq>[R i] y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "proof (cases \"i \\<in> agents\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}\n 2. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "assume \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}\n 2. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "then"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret finite_total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}\n 2. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "using Max_wrt_among_nonempty[of alts] Max_wrt_among_subset[of alts]"], ["proof (prove)\nusing this:\n  \\<lbrakk>alts \\<inter> alts \\<noteq> {};\n   finite (alts \\<inter> alts)\\<rbrakk>\n  \\<Longrightarrow> Max_wrt_among (R i) alts \\<noteq> {}\n  Max_wrt_among (R i) alts \\<subseteq> alts\n  Max_wrt_among (R i) alts \\<subseteq> alts\n\ngoal (1 subgoal):\n 1. favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "by (auto simp: favorites_altdef Max_wrt_among_total_preorder)"], ["proof (state)\nthis:\n  favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}\n\ngoal (1 subgoal):\n 1. i \\<notin> agents \\<Longrightarrow>\n    favorites R i = {x \\<in> alts. \\<forall>y\\<in>alts. R i y x}", "qed simp_all"], ["", "lemma favorites_subset_alts: \"favorites R i \\<subseteq> alts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites R i \\<subseteq> alts", "by (auto simp: favorites_altdef')"], ["", "lemma finite_favorites [simp, intro]: \"finite (favorites R i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (favorites R i)", "using favorites_subset_alts finite_alts"], ["proof (prove)\nusing this:\n  favorites R ?i \\<subseteq> alts\n  finite alts\n\ngoal (1 subgoal):\n 1. finite (favorites R i)", "by (rule finite_subset)"], ["", "lemma favorites_nonempty: \"i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}", "assume \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret finite_total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites R i \\<noteq> {}", "unfolding favorites_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt (R i) \\<noteq> {}", "by (intro Max_wrt_nonempty) simp_all"], ["proof (state)\nthis:\n  favorites R i \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma favorites_permute: \n  assumes i: \"i \\<in> agents\" and perm: \"\\<sigma> permutes alts\"\n  shows   \"favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i", "from i"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret finite_total_preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i", "from perm"], ["proof (chain)\npicking this:\n  \\<sigma> permutes alts", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n\ngoal (1 subgoal):\n 1. favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i", "unfolding favorites_def"], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n\ngoal (1 subgoal):\n 1. Max_wrt (permute_profile \\<sigma> R i) = \\<sigma> ` Max_wrt (R i)", "by (subst Max_wrt_map_relation_bij)\n       (simp_all add: permute_profile_def map_relation_def permutes_bij)"], ["proof (state)\nthis:\n  favorites (permute_profile \\<sigma> R) i = \\<sigma> ` favorites R i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_unique_favorites_altdef:\n  \"has_unique_favorites R \\<longleftrightarrow> (\\<forall>i\\<in>agents. is_singleton (favorites R i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_unique_favorites R =\n    (\\<forall>i\\<in>agents. is_singleton (favorites R i))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>has_unique_favorites R; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> is_singleton (favorites R i)\n 2. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>has_unique_favorites R; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> is_singleton (favorites R i)\n 2. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "assume \"has_unique_favorites R\" \"i \\<in> agents\""], ["proof (state)\nthis:\n  has_unique_favorites R\n  i \\<in> agents\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>has_unique_favorites R; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> is_singleton (favorites R i)\n 2. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "thus \"is_singleton (favorites R i)\""], ["proof (prove)\nusing this:\n  has_unique_favorites R\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. is_singleton (favorites R i)", "using favorites_nonempty[of i]"], ["proof (prove)\nusing this:\n  has_unique_favorites R\n  i \\<in> agents\n  i \\<in> agents \\<Longrightarrow> favorites R i \\<noteq> {}\n\ngoal (1 subgoal):\n 1. is_singleton (favorites R i)", "by (auto simp: has_unique_favorites_def)"], ["proof (state)\nthis:\n  is_singleton (favorites R i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "assume \"\\<forall>i\\<in>agents. is_singleton (favorites R i)\""], ["proof (state)\nthis:\n  \\<forall>i\\<in>agents. is_singleton (favorites R i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "hence \"is_singleton (favorites R i) \\<or> favorites R i = {}\" for i"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>agents. is_singleton (favorites R i)\n\ngoal (1 subgoal):\n 1. is_singleton (favorites R i) \\<or> favorites R i = {}", "by (cases \"i \\<in> agents\") (simp add: favorites_nonempty, simp add: favorites_altdef')"], ["proof (state)\nthis:\n  is_singleton (favorites R ?i) \\<or> favorites R ?i = {}\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. is_singleton (favorites R i) \\<Longrightarrow>\n    has_unique_favorites R", "thus \"has_unique_favorites R\""], ["proof (prove)\nusing this:\n  is_singleton (favorites R ?i) \\<or> favorites R ?i = {}\n\ngoal (1 subgoal):\n 1. has_unique_favorites R", "by (auto simp: has_unique_favorites_def)"], ["proof (state)\nthis:\n  has_unique_favorites R\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale pref_profile_unique_favorites = pref_profile_wf agents alts R\n  for agents :: \"'agent set\" and alts :: \"'alt set\" and R +\n  assumes unique_favorites': \"has_unique_favorites R\"\nbegin"], ["", "lemma unique_favorites: \"i \\<in> agents \\<Longrightarrow> favorites R i = {favorite R i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorites R i = {favorite R i}", "using unique_favorites'"], ["proof (prove)\nusing this:\n  has_unique_favorites R\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorites R i = {favorite R i}", "by (auto simp: favorite_def has_unique_favorites_altdef is_singleton_the_elem)"], ["", "lemma favorite_in_alts: \"i \\<in> agents \\<Longrightarrow> favorite R i \\<in> alts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorite R i \\<in> alts", "using favorites_subset_alts[of i]"], ["proof (prove)\nusing this:\n  favorites R i \\<subseteq> alts\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow> favorite R i \\<in> alts", "by (simp add: unique_favorites)"], ["", "end"], ["", "subsection \\<open>Anonymous profiles\\<close>"], ["", "type_synonym ('agent, 'alt) apref_profile = \"'alt set list multiset\""], ["", "definition anonymous_profile :: \"('agent, 'alt) pref_profile \\<Rightarrow> ('agent, 'alt) apref_profile\" \n  where anonymous_profile_auxdef:\n    \"anonymous_profile R = image_mset (weak_ranking \\<circ> R) (mset_set {i. R i \\<noteq> (\\<lambda>_ _. False)})\""], ["", "lemma (in pref_profile_wf) agents_eq:\n  \"agents = {i. R i \\<noteq> (\\<lambda>_ _. False)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. agents = {i. R i \\<noteq> (\\<lambda>_ _. False)}", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> agents; R x = (\\<lambda>_ _. False)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> agents; R x = (\\<lambda>_ _. False)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "assume i: \"i \\<in> agents\" and Ri: \"R i = (\\<lambda>_ _. False)\""], ["proof (state)\nthis:\n  i \\<in> agents\n  R i = (\\<lambda>_ _. False)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> agents; R x = (\\<lambda>_ _. False)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "from i"], ["proof (chain)\npicking this:\n  i \\<in> agents", "interpret preorder_on alts \"R i\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on alts (R i)", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> agents; R x = (\\<lambda>_ _. False)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "from carrier_eq Ri nonempty_alts"], ["proof (chain)\npicking this:\n  alts = {x. R i x x}\n  R i = (\\<lambda>_ _. False)\n  alts \\<noteq> {}", "show False"], ["proof (prove)\nusing this:\n  alts = {x. R i x x}\n  R i = (\\<lambda>_ _. False)\n  alts \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "assume \"R i \\<noteq> (\\<lambda>_ _. False)\""], ["proof (state)\nthis:\n  R i \\<noteq> (\\<lambda>_ _. False)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       R x \\<noteq> (\\<lambda>_ _. False) \\<Longrightarrow> x \\<in> agents", "thus \"i \\<in> agents\""], ["proof (prove)\nusing this:\n  R i \\<noteq> (\\<lambda>_ _. False)\n\ngoal (1 subgoal):\n 1. i \\<in> agents", "using prefs_undefined'[of i]"], ["proof (prove)\nusing this:\n  R i \\<noteq> (\\<lambda>_ _. False)\n  i \\<notin> agents \\<Longrightarrow> R i = (\\<lambda>_ _. False)\n\ngoal (1 subgoal):\n 1. i \\<in> agents", "by (cases \"i \\<in> agents\") auto"], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in pref_profile_wf) anonymous_profile_def:\n  \"anonymous_profile R = image_mset (weak_ranking \\<circ> R) (mset_set agents)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile R =\n    image_mset (weak_ranking \\<circ> R) (mset_set agents)", "by (simp only: agents_eq anonymous_profile_auxdef)"], ["", "lemma (in pref_profile_wf) anonymous_profile_permute:\n  assumes \"\\<sigma> permutes alts\"  \"finite agents\" \n  shows   \"anonymous_profile (permute_profile \\<sigma> R) = \n             image_mset (map ((`) \\<sigma>)) (anonymous_profile R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<sigma> permutes alts", "interpret R': pref_profile_wf agents alts \"permute_profile \\<sigma> R\""], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (permute_profile \\<sigma> R)", "by (rule wf_permute_alts)"], ["proof (state)\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "have \"anonymous_profile (permute_profile \\<sigma> R) = \n          {#weak_ranking (map_relation (inv \\<sigma>) (R x)). x \\<in># mset_set agents#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n    . x \\<in># mset_set agents#}", "unfolding R'.anonymous_profile_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. image_mset (weak_ranking \\<circ> permute_profile \\<sigma> R)\n     (mset_set agents) =\n    {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n    . x \\<in># mset_set agents#}", "by (simp add:  multiset.map_comp permute_profile_map_relation o_def)"], ["proof (state)\nthis:\n  anonymous_profile (permute_profile \\<sigma> R) =\n  {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n  . x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "also"], ["proof (state)\nthis:\n  anonymous_profile (permute_profile \\<sigma> R) =\n  {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n  . x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "from assms"], ["proof (chain)\npicking this:\n  \\<sigma> permutes alts\n  finite agents", "have \"\\<dots> = {#map ((`) \\<sigma>) (weak_ranking (R x)). x \\<in># mset_set agents#}\""], ["proof (prove)\nusing this:\n  \\<sigma> permutes alts\n  finite agents\n\ngoal (1 subgoal):\n 1. {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n    . x \\<in># mset_set agents#} =\n    {#map ((`) \\<sigma>) (weak_ranking (R x)). x \\<in># mset_set agents#}", "by (intro image_mset_cong)\n       (simp add: finite_total_preorder_on.weak_ranking_permute[of alts])"], ["proof (state)\nthis:\n  {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n  . x \\<in># mset_set agents#} =\n  {#map ((`) \\<sigma>) (weak_ranking (R x)). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "also"], ["proof (state)\nthis:\n  {#weak_ranking (map_relation (inv \\<sigma>) (R x))\n  . x \\<in># mset_set agents#} =\n  {#map ((`) \\<sigma>) (weak_ranking (R x)). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "have \"\\<dots> = image_mset (map ((`) \\<sigma>)) (anonymous_profile R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#map ((`) \\<sigma>) (weak_ranking (R x)). x \\<in># mset_set agents#} =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "by (simp add: anonymous_profile_def multiset.map_comp o_def)"], ["proof (state)\nthis:\n  {#map ((`) \\<sigma>) (weak_ranking (R x)). x \\<in># mset_set agents#} =\n  image_mset (map ((`) \\<sigma>)) (anonymous_profile R)\n\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "finally"], ["proof (chain)\npicking this:\n  anonymous_profile (permute_profile \\<sigma> R) =\n  image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "show ?thesis"], ["proof (prove)\nusing this:\n  anonymous_profile (permute_profile \\<sigma> R) =\n  image_mset (map ((`) \\<sigma>)) (anonymous_profile R)\n\ngoal (1 subgoal):\n 1. anonymous_profile (permute_profile \\<sigma> R) =\n    image_mset (map ((`) \\<sigma>)) (anonymous_profile R)", "."], ["proof (state)\nthis:\n  anonymous_profile (permute_profile \\<sigma> R) =\n  image_mset (map ((`) \\<sigma>)) (anonymous_profile R)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in pref_profile_wf) anonymous_profile_update:\n  assumes i:  \"i \\<in> agents\" and fin [simp]: \"finite agents\" and \"total_preorder_on alts Ri'\"\n  shows   \"anonymous_profile (R(i := Ri')) =\n             anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "from assms"], ["proof (chain)\npicking this:\n  i \\<in> agents\n  finite agents\n  total_preorder_on alts Ri'", "interpret R': pref_profile_wf agents alts \"R(i := Ri')\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n  finite agents\n  total_preorder_on alts Ri'\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R(i := Ri'))", "by (simp add: finite_total_preorder_on_iff wf_update)"], ["proof (state)\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "have \"anonymous_profile (R(i := Ri')) = \n          {#weak_ranking (if x = i then Ri' else R x). x \\<in># mset_set agents#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    {#weak_ranking (if x = i then Ri' else R x). x \\<in># mset_set agents#}", "by (simp add: R'.anonymous_profile_def o_def)"], ["proof (state)\nthis:\n  anonymous_profile (R(i := Ri')) =\n  {#weak_ranking (if x = i then Ri' else R x). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  anonymous_profile (R(i := Ri')) =\n  {#weak_ranking (if x = i then Ri' else R x). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "have \"\\<dots> = {#if x = i then weak_ranking Ri' else weak_ranking (R x). x \\<in># mset_set agents#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#weak_ranking (if x = i then Ri' else R x)\n    . x \\<in># mset_set agents#} =\n    {#if x = i then weak_ranking Ri' else weak_ranking (R x)\n    . x \\<in># mset_set agents#}", "by (intro image_mset_cong) simp_all"], ["proof (state)\nthis:\n  {#weak_ranking (if x = i then Ri' else R x). x \\<in># mset_set agents#} =\n  {#if x = i then weak_ranking Ri' else weak_ranking (R x)\n  . x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  {#weak_ranking (if x = i then Ri' else R x). x \\<in># mset_set agents#} =\n  {#if x = i then weak_ranking Ri' else weak_ranking (R x)\n  . x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "have \"\\<dots> = {#weak_ranking Ri'. x \\<in># mset_set {x \\<in> agents. x = i}#} +\n                    {#weak_ranking (R x). x \\<in># mset_set {x \\<in> agents. x \\<noteq> i}#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#if x = i then weak_ranking Ri' else weak_ranking (R x)\n    . x \\<in># mset_set agents#} =\n    {#weak_ranking Ri'. x \\<in># mset_set {x \\<in> agents. x = i}#} +\n    {#weak_ranking (R x). x \\<in># mset_set {x \\<in> agents. x \\<noteq> i}#}", "by (subst image_mset_If) ((subst filter_mset_mset_set, simp)+, rule refl)"], ["proof (state)\nthis:\n  {#if x = i then weak_ranking Ri' else weak_ranking (R x)\n  . x \\<in># mset_set agents#} =\n  {#weak_ranking Ri'. x \\<in># mset_set {x \\<in> agents. x = i}#} +\n  {#weak_ranking (R x). x \\<in># mset_set {x \\<in> agents. x \\<noteq> i}#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  {#if x = i then weak_ranking Ri' else weak_ranking (R x)\n  . x \\<in># mset_set agents#} =\n  {#weak_ranking Ri'. x \\<in># mset_set {x \\<in> agents. x = i}#} +\n  {#weak_ranking (R x). x \\<in># mset_set {x \\<in> agents. x \\<noteq> i}#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "from i"], ["proof (chain)\npicking this:\n  i \\<in> agents", "have \"{x \\<in> agents. x = i} = {i}\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. {x \\<in> agents. x = i} = {i}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> agents. x = i} = {i}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  {x \\<in> agents. x = i} = {i}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "have \"{x \\<in> agents. x \\<noteq> i} = agents - {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> agents. x \\<noteq> i} = agents - {i}", "by auto"], ["proof (state)\nthis:\n  {x \\<in> agents. x \\<noteq> i} = agents - {i}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  {x \\<in> agents. x \\<noteq> i} = agents - {i}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "have \"{#weak_ranking Ri'. x \\<in># mset_set {i}#} = {#weak_ranking Ri'#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#weak_ranking Ri'. x \\<in># mset_set {i}#} = {#weak_ranking Ri'#}", "by simp"], ["proof (state)\nthis:\n  {#weak_ranking Ri'. x \\<in># mset_set {i}#} = {#weak_ranking Ri'#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  {#weak_ranking Ri'. x \\<in># mset_set {i}#} = {#weak_ranking Ri'#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "from i"], ["proof (chain)\npicking this:\n  i \\<in> agents", "have \"mset_set (agents - {i}) = mset_set agents - {#i#}\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. mset_set (agents - {i}) = mset_set agents - {#i#}", "by (simp add: mset_set_Diff)"], ["proof (state)\nthis:\n  mset_set (agents - {i}) = mset_set agents - {#i#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  mset_set (agents - {i}) = mset_set agents - {#i#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "from i"], ["proof (chain)\npicking this:\n  i \\<in> agents", "have \"{#weak_ranking (R x). x \\<in># \\<dots>#} =\n            {#weak_ranking (R x). x \\<in># mset_set agents#} - {#weak_ranking (R i)#}\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. {#weak_ranking (R x). x \\<in># mset_set agents - {#i#}#} =\n    {#weak_ranking (R x). x \\<in># mset_set agents#} -\n    {#weak_ranking (R i)#}", "by (subst image_mset_Diff) (simp_all add: in_multiset_in_set mset_subset_eq_single)"], ["proof (state)\nthis:\n  {#weak_ranking (R x). x \\<in># mset_set agents - {#i#}#} =\n  {#weak_ranking (R x). x \\<in># mset_set agents#} - {#weak_ranking (R i)#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "also"], ["proof (state)\nthis:\n  {#weak_ranking (R x). x \\<in># mset_set agents - {#i#}#} =\n  {#weak_ranking (R x). x \\<in># mset_set agents#} - {#weak_ranking (R i)#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "have \"{#weak_ranking Ri'#} + \\<dots> = \n               anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#weak_ranking Ri'#} +\n    ({#weak_ranking (R x). x \\<in># mset_set agents#} -\n     {#weak_ranking (R i)#}) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "by (simp add: anonymous_profile_def add_ac o_def)"], ["proof (state)\nthis:\n  {#weak_ranking Ri'#} +\n  ({#weak_ranking (R x). x \\<in># mset_set agents#} -\n   {#weak_ranking (R i)#}) =\n  anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "finally"], ["proof (chain)\npicking this:\n  anonymous_profile (R(i := Ri')) =\n  anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "show ?thesis"], ["proof (prove)\nusing this:\n  anonymous_profile (R(i := Ri')) =\n  anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (R(i := Ri')) =\n    anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}", "."], ["proof (state)\nthis:\n  anonymous_profile (R(i := Ri')) =\n  anonymous_profile R - {#weak_ranking (R i)#} + {#weak_ranking Ri'#}\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Preference profiles from lists\\<close>"], ["", "definition prefs_from_table :: \"('agent \\<times> 'alt set list) list \\<Rightarrow> ('agent, 'alt) pref_profile\" where\n  \"prefs_from_table xss = (\\<lambda>i. case_option (\\<lambda>_ _. False) of_weak_ranking (map_of xss i))\""], ["", "definition prefs_from_table_wf where\n  \"prefs_from_table_wf agents alts xss \\<longleftrightarrow> agents \\<noteq> {} \\<and> alts \\<noteq> {} \\<and> distinct (map fst xss) \\<and> \n       set (map fst xss) = agents \\<and> (\\<forall>xs\\<in>set (map snd xss). \\<Union>(set xs) = alts \\<and> \n       is_finite_weak_ranking xs)\""], ["", "lemma prefs_from_table_wfI:\n  assumes \"agents \\<noteq> {}\" \"alts \\<noteq> {}\" \"distinct (map fst xss)\"\n  assumes \"set (map fst xss) = agents\"\n  assumes \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> \\<Union>(set xs) = alts\"\n  assumes \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> is_finite_weak_ranking xs\"\n  shows   \"prefs_from_table_wf agents alts xss\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table_wf agents alts xss", "using assms"], ["proof (prove)\nusing this:\n  agents \\<noteq> {}\n  alts \\<noteq> {}\n  distinct (map fst xss)\n  set (map fst xss) = agents\n  ?xs \\<in> set (map snd xss) \\<Longrightarrow> \\<Union> (set ?xs) = alts\n  ?xs \\<in> set (map snd xss) \\<Longrightarrow> is_finite_weak_ranking ?xs\n\ngoal (1 subgoal):\n 1. prefs_from_table_wf agents alts xss", "unfolding prefs_from_table_wf_def"], ["proof (prove)\nusing this:\n  agents \\<noteq> {}\n  alts \\<noteq> {}\n  distinct (map fst xss)\n  set (map fst xss) = agents\n  ?xs \\<in> set (map snd xss) \\<Longrightarrow> \\<Union> (set ?xs) = alts\n  ?xs \\<in> set (map snd xss) \\<Longrightarrow> is_finite_weak_ranking ?xs\n\ngoal (1 subgoal):\n 1. agents \\<noteq> {} \\<and>\n    alts \\<noteq> {} \\<and>\n    distinct (map fst xss) \\<and>\n    set (map fst xss) = agents \\<and>\n    (\\<forall>xs\\<in>set (map snd xss).\n        \\<Union> (set xs) = alts \\<and> is_finite_weak_ranking xs)", "by auto"], ["", "lemma prefs_from_table_wfD:\n  assumes \"prefs_from_table_wf agents alts xss\"\n  shows \"agents \\<noteq> {}\" \"alts \\<noteq> {}\" \"distinct (map fst xss)\"\n    and \"set (map fst xss) = agents\"\n    and \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> \\<Union>(set xs) = alts\"\n    and \"\\<And>xs. xs \\<in> set (map snd xss) \\<Longrightarrow> is_finite_weak_ranking xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((agents \\<noteq> {} &&&\n      alts \\<noteq> {} &&& distinct (map fst xss)) &&&\n     set (map fst xss) = agents) &&&\n    (\\<And>xs.\n        xs \\<in> set (map snd xss) \\<Longrightarrow>\n        \\<Union> (set xs) = alts) &&&\n    (\\<And>xs.\n        xs \\<in> set (map snd xss) \\<Longrightarrow>\n        is_finite_weak_ranking xs)", "using assms"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n\ngoal (1 subgoal):\n 1. ((agents \\<noteq> {} &&&\n      alts \\<noteq> {} &&& distinct (map fst xss)) &&&\n     set (map fst xss) = agents) &&&\n    (\\<And>xs.\n        xs \\<in> set (map snd xss) \\<Longrightarrow>\n        \\<Union> (set xs) = alts) &&&\n    (\\<And>xs.\n        xs \\<in> set (map snd xss) \\<Longrightarrow>\n        is_finite_weak_ranking xs)", "unfolding prefs_from_table_wf_def"], ["proof (prove)\nusing this:\n  agents \\<noteq> {} \\<and>\n  alts \\<noteq> {} \\<and>\n  distinct (map fst xss) \\<and>\n  set (map fst xss) = agents \\<and>\n  (\\<forall>xs\\<in>set (map snd xss).\n      \\<Union> (set xs) = alts \\<and> is_finite_weak_ranking xs)\n\ngoal (1 subgoal):\n 1. ((agents \\<noteq> {} &&&\n      alts \\<noteq> {} &&& distinct (map fst xss)) &&&\n     set (map fst xss) = agents) &&&\n    (\\<And>xs.\n        xs \\<in> set (map snd xss) \\<Longrightarrow>\n        \\<Union> (set xs) = alts) &&&\n    (\\<And>xs.\n        xs \\<in> set (map snd xss) \\<Longrightarrow>\n        is_finite_weak_ranking xs)", "by auto"], ["", "lemma pref_profile_from_tableI: \n  \"prefs_from_table_wf agents alts xss \\<Longrightarrow> pref_profile_wf agents alts (prefs_from_table xss)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow>\n    pref_profile_wf agents alts (prefs_from_table xss)", "proof (intro pref_profile_wf.intro)"], ["proof (state)\ngoal (4 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>prefs_from_table_wf agents alts xss; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> finite_total_preorder_on alts\n                          (prefs_from_table xss i)\n 4. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "assume wf: \"prefs_from_table_wf agents alts xss\""], ["proof (state)\nthis:\n  prefs_from_table_wf agents alts xss\n\ngoal (4 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>prefs_from_table_wf agents alts xss; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> finite_total_preorder_on alts\n                          (prefs_from_table xss i)\n 4. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "fix i"], ["proof (state)\ngoal (4 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>prefs_from_table_wf agents alts xss; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> finite_total_preorder_on alts\n                          (prefs_from_table xss i)\n 4. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "assume i: \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (4 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>prefs_from_table_wf agents alts xss; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> finite_total_preorder_on alts\n                          (prefs_from_table xss i)\n 4. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "with wf"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  i \\<in> agents", "have \"i \\<in> set (map fst xss)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. i \\<in> set (map fst xss)", "by (simp add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  i \\<in> set (map fst xss)\n\ngoal (4 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>prefs_from_table_wf agents alts xss; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> finite_total_preorder_on alts\n                          (prefs_from_table xss i)\n 4. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "then"], ["proof (chain)\npicking this:\n  i \\<in> set (map fst xss)", "obtain xs where xs: \"xs \\<in> set (map snd xss)\" \"prefs_from_table xss i = of_weak_ranking xs\""], ["proof (prove)\nusing this:\n  i \\<in> set (map fst xss)\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>xs \\<in> set (map snd xss);\n         prefs_from_table xss i = of_weak_ranking xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"map_of xss i\")\n       (fastforce dest: map_of_SomeD simp: prefs_from_table_def map_of_eq_None_iff)+"], ["proof (state)\nthis:\n  xs \\<in> set (map snd xss)\n  prefs_from_table xss i = of_weak_ranking xs\n\ngoal (4 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i.\n       \\<lbrakk>prefs_from_table_wf agents alts xss; i \\<in> agents\\<rbrakk>\n       \\<Longrightarrow> finite_total_preorder_on alts\n                          (prefs_from_table xss i)\n 4. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "with wf"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  xs \\<in> set (map snd xss)\n  prefs_from_table xss i = of_weak_ranking xs", "show \"finite_total_preorder_on alts (prefs_from_table xss i)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  xs \\<in> set (map snd xss)\n  prefs_from_table xss i = of_weak_ranking xs\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on alts (prefs_from_table xss i)", "by (auto simp: prefs_from_table_wf_def intro!: finite_total_preorder_of_weak_ranking)"], ["proof (state)\nthis:\n  finite_total_preorder_on alts (prefs_from_table xss i)\n\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "assume wf: \"prefs_from_table_wf agents alts xss\""], ["proof (state)\nthis:\n  prefs_from_table_wf agents alts xss\n\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "fix i x y"], ["proof (state)\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "assume i: \"i \\<notin> agents\""], ["proof (state)\nthis:\n  i \\<notin> agents\n\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "with wf"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  i \\<notin> agents", "have \"i \\<notin> set (map fst xss)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  i \\<notin> agents\n\ngoal (1 subgoal):\n 1. i \\<notin> set (map fst xss)", "by (simp add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  i \\<notin> set (map fst xss)\n\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "hence \"map_of xss i = None\""], ["proof (prove)\nusing this:\n  i \\<notin> set (map fst xss)\n\ngoal (1 subgoal):\n 1. map_of xss i = None", "by (simp add: map_of_eq_None_iff)"], ["proof (state)\nthis:\n  map_of xss i = None\n\ngoal (3 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}\n 3. \\<And>i x y.\n       \\<lbrakk>prefs_from_table_wf agents alts xss;\n        i \\<notin> agents\\<rbrakk>\n       \\<Longrightarrow> \\<not> prefs_from_table xss i x y", "thus \"\\<not>prefs_from_table xss i x y\""], ["proof (prove)\nusing this:\n  map_of xss i = None\n\ngoal (1 subgoal):\n 1. \\<not> prefs_from_table xss i x y", "by (simp add: prefs_from_table_def)"], ["proof (state)\nthis:\n  \\<not> prefs_from_table xss i x y\n\ngoal (2 subgoals):\n 1. prefs_from_table_wf agents alts xss \\<Longrightarrow> agents \\<noteq> {}\n 2. prefs_from_table_wf agents alts xss \\<Longrightarrow> alts \\<noteq> {}", "qed (simp_all add: prefs_from_table_wf_def)"], ["", "lemma prefs_from_table_eqI:\n  assumes \"distinct (map fst xs)\" \"distinct (map fst ys)\" \"set xs = set ys\"\n  shows   \"prefs_from_table xs = prefs_from_table ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table xs = prefs_from_table ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prefs_from_table xs = prefs_from_table ys", "from assms"], ["proof (chain)\npicking this:\n  distinct (map fst xs)\n  distinct (map fst ys)\n  set xs = set ys", "have \"map_of xs = map_of ys\""], ["proof (prove)\nusing this:\n  distinct (map fst xs)\n  distinct (map fst ys)\n  set xs = set ys\n\ngoal (1 subgoal):\n 1. map_of xs = map_of ys", "by (subst map_of_inject_set) simp_all"], ["proof (state)\nthis:\n  map_of xs = map_of ys\n\ngoal (1 subgoal):\n 1. prefs_from_table xs = prefs_from_table ys", "thus ?thesis"], ["proof (prove)\nusing this:\n  map_of xs = map_of ys\n\ngoal (1 subgoal):\n 1. prefs_from_table xs = prefs_from_table ys", "by (simp add: prefs_from_table_def)"], ["proof (state)\nthis:\n  prefs_from_table xs = prefs_from_table ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefs_from_table_undef:\n  assumes \"prefs_from_table_wf agents alts xss\" \"i \\<notin> agents\"\n  shows   \"prefs_from_table xss i = (\\<lambda>_ _. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table xss i = (\\<lambda>_ _. False)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prefs_from_table xss i = (\\<lambda>_ _. False)", "from assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  i \\<notin> agents", "have \"i \\<notin> fst ` set xss\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  i \\<notin> agents\n\ngoal (1 subgoal):\n 1. i \\<notin> fst ` set xss", "by (simp add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  i \\<notin> fst ` set xss\n\ngoal (1 subgoal):\n 1. prefs_from_table xss i = (\\<lambda>_ _. False)", "hence \"map_of xss i = None\""], ["proof (prove)\nusing this:\n  i \\<notin> fst ` set xss\n\ngoal (1 subgoal):\n 1. map_of xss i = None", "by (simp add: map_of_eq_None_iff)"], ["proof (state)\nthis:\n  map_of xss i = None\n\ngoal (1 subgoal):\n 1. prefs_from_table xss i = (\\<lambda>_ _. False)", "thus ?thesis"], ["proof (prove)\nusing this:\n  map_of xss i = None\n\ngoal (1 subgoal):\n 1. prefs_from_table xss i = (\\<lambda>_ _. False)", "by (simp add: prefs_from_table_def)"], ["proof (state)\nthis:\n  prefs_from_table xss i = (\\<lambda>_ _. False)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefs_from_table_map_of:\n  assumes \"prefs_from_table_wf agents alts xss\" \"i \\<in> agents\"\n  shows   \"prefs_from_table xss i = of_weak_ranking (the (map_of xss i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table xss i = of_weak_ranking (the (map_of xss i))", "using assms"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. prefs_from_table xss i = of_weak_ranking (the (map_of xss i))", "by (auto simp: prefs_from_table_def map_of_eq_None_iff prefs_from_table_wf_def\n           split: option.splits)"], ["", "lemma prefs_from_table_update:\n  fixes x xs\n  assumes \"i \\<in> set (map fst xs)\"\n  defines \"xs' \\<equiv> map (\\<lambda>(j,y). if j = i then (j, x) else (j, y)) xs\"\n  shows   \"(prefs_from_table xs)(i := of_weak_ranking x) =\n             prefs_from_table xs'\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (prefs_from_table xs)(i := of_weak_ranking x) = prefs_from_table xs'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((prefs_from_table xs)(i := of_weak_ranking x)) xa =\n       prefs_from_table xs' xa", "have xs': \"set (map fst xs') = set (map fst xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map fst xs') = set (map fst xs)", "by (force simp: xs'_def)"], ["proof (state)\nthis:\n  set (map fst xs') = set (map fst xs)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((prefs_from_table xs)(i := of_weak_ranking x)) xa =\n       prefs_from_table xs' xa", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((prefs_from_table xs)(i := of_weak_ranking x)) xa =\n       prefs_from_table xs' xa", "consider \"k = i\" | \"k \\<notin> set (map fst xs)\" | \"k \\<noteq> i\" \"k \\<in> set (map fst xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k = i \\<Longrightarrow> thesis;\n     k \\<notin> set (map fst xs) \\<Longrightarrow> thesis;\n     \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>k = i \\<Longrightarrow> ?thesis;\n   k \\<notin> set (map fst xs) \\<Longrightarrow> ?thesis;\n   \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((prefs_from_table xs)(i := of_weak_ranking x)) xa =\n       prefs_from_table xs' xa", "thus \"?lhs k = ?rhs k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k = i \\<Longrightarrow> ?thesis;\n   k \\<notin> set (map fst xs) \\<Longrightarrow> ?thesis;\n   \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n   \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. k = i \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 3. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "assume k: \"k = i\""], ["proof (state)\nthis:\n  k = i\n\ngoal (3 subgoals):\n 1. k = i \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 3. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "moreover"], ["proof (state)\nthis:\n  k = i\n\ngoal (3 subgoals):\n 1. k = i \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 3. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "from k"], ["proof (chain)\npicking this:\n  k = i", "have \"y = x\" if \"(i, y) \\<in> set xs'\" for y"], ["proof (prove)\nusing this:\n  k = i\n\ngoal (1 subgoal):\n 1. y = x", "using that"], ["proof (prove)\nusing this:\n  k = i\n  (i, y) \\<in> set xs'\n\ngoal (1 subgoal):\n 1. y = x", "by (auto simp: xs'_def split: if_splits)"], ["proof (state)\nthis:\n  (i, ?y) \\<in> set xs' \\<Longrightarrow> ?y = x\n\ngoal (3 subgoals):\n 1. k = i \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 3. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "ultimately"], ["proof (chain)\npicking this:\n  k = i\n  (i, ?y) \\<in> set xs' \\<Longrightarrow> ?y = x", "show ?thesis"], ["proof (prove)\nusing this:\n  k = i\n  (i, ?y) \\<in> set xs' \\<Longrightarrow> ?y = x\n\ngoal (1 subgoal):\n 1. ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k", "using assms(1) k xs'"], ["proof (prove)\nusing this:\n  k = i\n  (i, ?y) \\<in> set xs' \\<Longrightarrow> ?y = x\n  i \\<in> set (map fst xs)\n  k = i\n  set (map fst xs') = set (map fst xs)\n\ngoal (1 subgoal):\n 1. ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k", "by (auto simp add: prefs_from_table_def map_of_eq_None_iff \n               dest!: map_of_SomeD split: option.splits)"], ["proof (state)\nthis:\n  ((prefs_from_table xs)(i := of_weak_ranking x)) k = prefs_from_table xs' k\n\ngoal (2 subgoals):\n 1. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "assume k: \"k \\<notin> set (map fst xs)\""], ["proof (state)\nthis:\n  k \\<notin> set (map fst xs)\n\ngoal (2 subgoals):\n 1. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "with assms(1)"], ["proof (chain)\npicking this:\n  i \\<in> set (map fst xs)\n  k \\<notin> set (map fst xs)", "have k': \"k \\<noteq> i\""], ["proof (prove)\nusing this:\n  i \\<in> set (map fst xs)\n  k \\<notin> set (map fst xs)\n\ngoal (1 subgoal):\n 1. k \\<noteq> i", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> i\n\ngoal (2 subgoals):\n 1. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "with k xs'"], ["proof (chain)\npicking this:\n  k \\<notin> set (map fst xs)\n  set (map fst xs') = set (map fst xs)\n  k \\<noteq> i", "have \"map_of xs k = None\" \"map_of xs' k = None\""], ["proof (prove)\nusing this:\n  k \\<notin> set (map fst xs)\n  set (map fst xs') = set (map fst xs)\n  k \\<noteq> i\n\ngoal (1 subgoal):\n 1. map_of xs k = None &&& map_of xs' k = None", "by (simp_all add: map_of_eq_None_iff)"], ["proof (state)\nthis:\n  map_of xs k = None\n  map_of xs' k = None\n\ngoal (2 subgoals):\n 1. k \\<notin> set (map fst xs) \\<Longrightarrow>\n    ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k\n 2. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "thus ?thesis"], ["proof (prove)\nusing this:\n  map_of xs k = None\n  map_of xs' k = None\n\ngoal (1 subgoal):\n 1. ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k", "by (simp add: prefs_from_table_def k')"], ["proof (state)\nthis:\n  ((prefs_from_table xs)(i := of_weak_ranking x)) k = prefs_from_table xs' k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "assume k: \"k \\<noteq> i\" \"k \\<in> set (map fst xs)\""], ["proof (state)\nthis:\n  k \\<noteq> i\n  k \\<in> set (map fst xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "with k(1)"], ["proof (chain)\npicking this:\n  k \\<noteq> i\n  k \\<noteq> i\n  k \\<in> set (map fst xs)", "have \"map_of xs k = map_of xs' k\""], ["proof (prove)\nusing this:\n  k \\<noteq> i\n  k \\<noteq> i\n  k \\<in> set (map fst xs)\n\ngoal (1 subgoal):\n 1. map_of xs k = map_of xs' k", "unfolding xs'_def"], ["proof (prove)\nusing this:\n  k \\<noteq> i\n  k \\<noteq> i\n  k \\<in> set (map fst xs)\n\ngoal (1 subgoal):\n 1. map_of xs k =\n    map_of (map (\\<lambda>(j, y). if j = i then (j, x) else (j, y)) xs) k", "by (induction xs) fastforce+"], ["proof (state)\nthis:\n  map_of xs k = map_of xs' k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> i; k \\<in> set (map fst xs)\\<rbrakk>\n    \\<Longrightarrow> ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n                      prefs_from_table xs' k", "with k"], ["proof (chain)\npicking this:\n  k \\<noteq> i\n  k \\<in> set (map fst xs)\n  map_of xs k = map_of xs' k", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<noteq> i\n  k \\<in> set (map fst xs)\n  map_of xs k = map_of xs' k\n\ngoal (1 subgoal):\n 1. ((prefs_from_table xs)(i := of_weak_ranking x)) k =\n    prefs_from_table xs' k", "by (simp add: prefs_from_table_def)"], ["proof (state)\nthis:\n  ((prefs_from_table xs)(i := of_weak_ranking x)) k = prefs_from_table xs' k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((prefs_from_table xs)(i := of_weak_ranking x)) k = prefs_from_table xs' k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefs_from_table_swap:\n  \"x \\<noteq> y \\<Longrightarrow> prefs_from_table ((x,x')#(y,y')#xs) = prefs_from_table ((y,y')#(x,x')#xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    prefs_from_table ((x, x') # (y, y') # xs) =\n    prefs_from_table ((y, y') # (x, x') # xs)", "by (intro ext) (auto simp: prefs_from_table_def)"], ["", "lemma permute_prefs_from_table:\n  assumes \"\\<sigma> permutes fst ` set xs\"\n  shows   \"prefs_from_table xs \\<circ> \\<sigma> = prefs_from_table (map (\\<lambda>(x,y). (inv \\<sigma> x, y)) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table xs \\<circ> \\<sigma> =\n    prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (prefs_from_table xs \\<circ> \\<sigma>) x =\n       prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) x", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (prefs_from_table xs \\<circ> \\<sigma>) x =\n       prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) x", "have \"(prefs_from_table xs \\<circ> \\<sigma>) i = \n          (case map_of xs (\\<sigma> i) of\n             None \\<Rightarrow> \\<lambda>_ _. False\n           | Some x \\<Rightarrow> of_weak_ranking x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (prefs_from_table xs \\<circ> \\<sigma>) i =\n    (case map_of xs (\\<sigma> i) of None \\<Rightarrow> \\<lambda>_ _. False\n     | Some x \\<Rightarrow> of_weak_ranking x)", "by (simp add: prefs_from_table_def o_def)"], ["proof (state)\nthis:\n  (prefs_from_table xs \\<circ> \\<sigma>) i =\n  (case map_of xs (\\<sigma> i) of None \\<Rightarrow> \\<lambda>_ _. False\n   | Some x \\<Rightarrow> of_weak_ranking x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (prefs_from_table xs \\<circ> \\<sigma>) x =\n       prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) x", "also"], ["proof (state)\nthis:\n  (prefs_from_table xs \\<circ> \\<sigma>) i =\n  (case map_of xs (\\<sigma> i) of None \\<Rightarrow> \\<lambda>_ _. False\n   | Some x \\<Rightarrow> of_weak_ranking x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (prefs_from_table xs \\<circ> \\<sigma>) x =\n       prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) x", "have \"map_of xs (\\<sigma> i) = map_of (map (\\<lambda>(x,y). (inv \\<sigma> x, y)) xs) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of xs (\\<sigma> i) =\n    map_of (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i", "using map_of_permute[OF assms]"], ["proof (prove)\nusing this:\n  map_of xs \\<circ> \\<sigma> =\n  map_of (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs)\n\ngoal (1 subgoal):\n 1. map_of xs (\\<sigma> i) =\n    map_of (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i", "by (simp add: o_def fun_eq_iff)"], ["proof (state)\nthis:\n  map_of xs (\\<sigma> i) =\n  map_of (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (prefs_from_table xs \\<circ> \\<sigma>) x =\n       prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) x", "finally"], ["proof (chain)\npicking this:\n  (prefs_from_table xs \\<circ> \\<sigma>) i =\n  (case map_of (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i of\n   None \\<Rightarrow> \\<lambda>_ _. False\n   | Some x \\<Rightarrow> of_weak_ranking x)", "show \"(prefs_from_table xs \\<circ> \\<sigma>) i = prefs_from_table (map (\\<lambda>(x,y). (inv \\<sigma> x, y)) xs) i\""], ["proof (prove)\nusing this:\n  (prefs_from_table xs \\<circ> \\<sigma>) i =\n  (case map_of (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i of\n   None \\<Rightarrow> \\<lambda>_ _. False\n   | Some x \\<Rightarrow> of_weak_ranking x)\n\ngoal (1 subgoal):\n 1. (prefs_from_table xs \\<circ> \\<sigma>) i =\n    prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i", "by (simp only: prefs_from_table_def)"], ["proof (state)\nthis:\n  (prefs_from_table xs \\<circ> \\<sigma>) i =\n  prefs_from_table (map (\\<lambda>(x, y). (inv \\<sigma> x, y)) xs) i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permute_profile_from_table:\n  assumes wf: \"prefs_from_table_wf agents alts xss\"\n  assumes perm: \"\\<sigma> permutes alts\"\n  shows   \"permute_profile \\<sigma> (prefs_from_table xss) = \n             prefs_from_table (map (\\<lambda>(x,y). (x, map ((`) \\<sigma>) y)) xss)\" (is \"?f = ?g\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> (prefs_from_table xss) =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       permute_profile \\<sigma> (prefs_from_table xss) x =\n       prefs_from_table\n        (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) x", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       permute_profile \\<sigma> (prefs_from_table xss) x =\n       prefs_from_table\n        (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) x", "have wf': \"prefs_from_table_wf agents alts (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table_wf agents alts\n     (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)", "proof (intro prefs_from_table_wfI, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       \\<Union> (set xs) = alts\n 6. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "case (5 xs)"], ["proof (state)\nthis:\n  xs \\<in> set (map snd\n                 (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n\ngoal (6 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       \\<Union> (set xs) = alts\n 6. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "then"], ["proof (chain)\npicking this:\n  xs \\<in> set (map snd\n                 (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))", "obtain y where \"y \\<in> set xss\" \"xs = map ((`) \\<sigma>) (snd y)\""], ["proof (prove)\nusing this:\n  xs \\<in> set (map snd\n                 (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> set xss; xs = map ((`) \\<sigma>) (snd y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: o_def case_prod_unfold)"], ["proof (state)\nthis:\n  y \\<in> set xss\n  xs = map ((`) \\<sigma>) (snd y)\n\ngoal (6 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       \\<Union> (set xs) = alts\n 6. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "with assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  \\<sigma> permutes alts\n  y \\<in> set xss\n  xs = map ((`) \\<sigma>) (snd y)", "show ?case"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  \\<sigma> permutes alts\n  y \\<in> set xss\n  xs = map ((`) \\<sigma>) (snd y)\n\ngoal (1 subgoal):\n 1. \\<Union> (set xs) = alts", "by (simp add: image_Union [symmetric] prefs_from_table_wf_def permutes_image o_def case_prod_unfold)"], ["proof (state)\nthis:\n  \\<Union> (set xs) = alts\n\ngoal (5 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "case (6 xs)"], ["proof (state)\nthis:\n  xs \\<in> set (map snd\n                 (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n\ngoal (5 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "then"], ["proof (chain)\npicking this:\n  xs \\<in> set (map snd\n                 (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))", "obtain y where \"y \\<in> set xss\" \"xs = map ((`) \\<sigma>) (snd y)\""], ["proof (prove)\nusing this:\n  xs \\<in> set (map snd\n                 (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> set xss; xs = map ((`) \\<sigma>) (snd y)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: o_def case_prod_unfold)"], ["proof (state)\nthis:\n  y \\<in> set xss\n  xs = map ((`) \\<sigma>) (snd y)\n\ngoal (5 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents\n 5. \\<And>xs.\n       xs \\<in> set (map snd\n                      (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y))\n                        xss)) \\<Longrightarrow>\n       is_finite_weak_ranking xs", "with assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  \\<sigma> permutes alts\n  y \\<in> set xss\n  xs = map ((`) \\<sigma>) (snd y)", "show ?case"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  \\<sigma> permutes alts\n  y \\<in> set xss\n  xs = map ((`) \\<sigma>) (snd y)\n\ngoal (1 subgoal):\n 1. is_finite_weak_ranking xs", "by (auto simp: is_finite_weak_ranking_def is_weak_ranking_iff prefs_from_table_wf_def\n            distinct_map permutes_inj_on inj_on_image intro!: disjoint_image)"], ["proof (state)\nthis:\n  is_finite_weak_ranking xs\n\ngoal (4 subgoals):\n 1. agents \\<noteq> {}\n 2. alts \\<noteq> {}\n 3. distinct\n     (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss))\n 4. set (map fst (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)) =\n    agents", "qed (insert assms, simp_all add: image_Union [symmetric] prefs_from_table_wf_def permutes_image o_def case_prod_unfold)"], ["proof (state)\nthis:\n  prefs_from_table_wf agents alts\n   (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       permute_profile \\<sigma> (prefs_from_table xss) x =\n       prefs_from_table\n        (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) x", "show \"?f i = ?g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "proof (cases \"i \\<in> agents\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i\n 2. i \\<notin> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "assume \"i \\<notin> agents\""], ["proof (state)\nthis:\n  i \\<notin> agents\n\ngoal (2 subgoals):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i\n 2. i \\<notin> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "with assms wf'"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  \\<sigma> permutes alts\n  prefs_from_table_wf agents alts\n   (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n  i \\<notin> agents", "show ?thesis"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  \\<sigma> permutes alts\n  prefs_from_table_wf agents alts\n   (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n  i \\<notin> agents\n\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "by (simp add: permute_profile_def prefs_from_table_undef)"], ["proof (state)\nthis:\n  permute_profile \\<sigma> (prefs_from_table xss) i =\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "assume i: \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "define xs where \"xs = the (map_of xss i)\""], ["proof (state)\nthis:\n  xs = the (map_of xss i)\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "from i wf"], ["proof (chain)\npicking this:\n  i \\<in> agents\n  prefs_from_table_wf agents alts xss", "have xs: \"map_of xss i = Some xs\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n  prefs_from_table_wf agents alts xss\n\ngoal (1 subgoal):\n 1. map_of xss i = Some xs", "by (cases \"map_of xss i\") (auto simp: prefs_from_table_wf_def xs_def)"], ["proof (state)\nthis:\n  map_of xss i = Some xs\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "have xs_in_xss: \"xs \\<in> snd ` set xss\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> snd ` set xss", "using xs"], ["proof (prove)\nusing this:\n  map_of xss i = Some xs\n\ngoal (1 subgoal):\n 1. xs \\<in> snd ` set xss", "by (force dest!: map_of_SomeD)"], ["proof (state)\nthis:\n  xs \\<in> snd ` set xss\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "with wf"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xss\n  xs \\<in> snd ` set xss", "have set_xs: \"\\<Union>(set xs) = alts\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xss\n  xs \\<in> snd ` set xss\n\ngoal (1 subgoal):\n 1. \\<Union> (set xs) = alts", "by (simp add: prefs_from_table_wfD)"], ["proof (state)\nthis:\n  \\<Union> (set xs) = alts\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "from i"], ["proof (chain)\npicking this:\n  i \\<in> agents", "have \"prefs_from_table (map (\\<lambda>(x,y). (x, map ((`) \\<sigma>) y)) xss) i =\n                   of_weak_ranking (the (map_of (map (\\<lambda>(x,y). (x, map ((`) \\<sigma>) y)) xss) i))\""], ["proof (prove)\nusing this:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i =\n    of_weak_ranking\n     (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i))", "using wf'"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  prefs_from_table_wf agents alts\n   (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n\ngoal (1 subgoal):\n 1. prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i =\n    of_weak_ranking\n     (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i))", "by (intro prefs_from_table_map_of) simp_all"], ["proof (state)\nthis:\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n   i =\n  of_weak_ranking\n   (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i))\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "also"], ["proof (state)\nthis:\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n   i =\n  of_weak_ranking\n   (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i))\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "have \"\\<dots> = of_weak_ranking (map ((`) \\<sigma>) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking\n     (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n            i)) =\n    of_weak_ranking (map ((`) \\<sigma>) xs)", "by (subst map_of_map) (simp add: xs)"], ["proof (state)\nthis:\n  of_weak_ranking\n   (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i)) =\n  of_weak_ranking (map ((`) \\<sigma>) xs)\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "also"], ["proof (state)\nthis:\n  of_weak_ranking\n   (the (map_of (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i)) =\n  of_weak_ranking (map ((`) \\<sigma>) xs)\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "have \"\\<dots> = (\\<lambda>a b. of_weak_ranking xs (inv \\<sigma> a) (inv \\<sigma> b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (map ((`) \\<sigma>) xs) =\n    (\\<lambda>a b. of_weak_ranking xs (inv \\<sigma> a) (inv \\<sigma> b))", "by (intro ext) (simp add: of_weak_ranking_permute map_relation_def set_xs perm)"], ["proof (state)\nthis:\n  of_weak_ranking (map ((`) \\<sigma>) xs) =\n  (\\<lambda>a b. of_weak_ranking xs (inv \\<sigma> a) (inv \\<sigma> b))\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "also"], ["proof (state)\nthis:\n  of_weak_ranking (map ((`) \\<sigma>) xs) =\n  (\\<lambda>a b. of_weak_ranking xs (inv \\<sigma> a) (inv \\<sigma> b))\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "have \"\\<dots> = permute_profile \\<sigma> (prefs_from_table xss) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a b. of_weak_ranking xs (inv \\<sigma> a) (inv \\<sigma> b)) =\n    permute_profile \\<sigma> (prefs_from_table xss) i", "by (simp add: prefs_from_table_def xs permute_profile_def)"], ["proof (state)\nthis:\n  (\\<lambda>a b. of_weak_ranking xs (inv \\<sigma> a) (inv \\<sigma> b)) =\n  permute_profile \\<sigma> (prefs_from_table xss) i\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", "finally"], ["proof (chain)\npicking this:\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n   i =\n  permute_profile \\<sigma> (prefs_from_table xss) i", "show ?thesis"], ["proof (prove)\nusing this:\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n   i =\n  permute_profile \\<sigma> (prefs_from_table xss) i\n\ngoal (1 subgoal):\n 1. permute_profile \\<sigma> (prefs_from_table xss) i =\n    prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss)\n     i", ".."], ["proof (state)\nthis:\n  permute_profile \\<sigma> (prefs_from_table xss) i =\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  permute_profile \\<sigma> (prefs_from_table xss) i =\n  prefs_from_table (map (\\<lambda>(x, y). (x, map ((`) \\<sigma>) y)) xss) i\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Automatic evaluation of preference profiles\\<close>"], ["", "lemma eval_prefs_from_table [simp]:\n  \"prefs_from_table []i = (\\<lambda>_ _. False)\"\n  \"prefs_from_table ((i, y) # xs) i = of_weak_ranking y\"\n  \"i \\<noteq> j \\<Longrightarrow> prefs_from_table ((j, y) # xs) i = prefs_from_table xs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table [] i = (\\<lambda>_ _. False) &&&\n    prefs_from_table ((i, y) # xs) i = of_weak_ranking y &&&\n    (i \\<noteq> j \\<Longrightarrow>\n     prefs_from_table ((j, y) # xs) i = prefs_from_table xs i)", "by (simp_all add: prefs_from_table_def)"], ["", "lemma eval_of_weak_ranking [simp]:\n  \"a \\<notin> \\<Union>(set xs) \\<Longrightarrow> \\<not>of_weak_ranking xs a b\"\n  \"b \\<in> x \\<Longrightarrow> a \\<in> \\<Union>(set (x#xs)) \\<Longrightarrow> of_weak_ranking (x # xs) a b\"\n  \"b \\<notin> x \\<Longrightarrow> of_weak_ranking (x # xs) a b \\<longleftrightarrow> of_weak_ranking xs a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<notin> \\<Union> (set xs) \\<Longrightarrow>\n     \\<not> of_weak_ranking xs a b) &&&\n    (\\<lbrakk>b \\<in> x; a \\<in> \\<Union> (set (x # xs))\\<rbrakk>\n     \\<Longrightarrow> of_weak_ranking (x # xs) a b) &&&\n    (b \\<notin> x \\<Longrightarrow>\n     of_weak_ranking (x # xs) a b = of_weak_ranking xs a b)", "by (induction xs) (simp_all add: of_weak_ranking_Cons)"], ["", "lemma prefs_from_table_cong [cong]:\n  assumes \"prefs_from_table xs = prefs_from_table ys\"\n  shows   \"prefs_from_table (x#xs) = prefs_from_table (x#ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table (x # xs) = prefs_from_table (x # ys)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. prefs_from_table (x # xs) xa = prefs_from_table (x # ys) xa", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. prefs_from_table (x # xs) xa = prefs_from_table (x # ys) xa", "show \"prefs_from_table (x # xs) i = prefs_from_table (x # ys) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefs_from_table (x # xs) i = prefs_from_table (x # ys) i", "using assms"], ["proof (prove)\nusing this:\n  prefs_from_table xs = prefs_from_table ys\n\ngoal (1 subgoal):\n 1. prefs_from_table (x # xs) i = prefs_from_table (x # ys) i", "by (cases x, cases \"i = fst x\") simp_all"], ["proof (state)\nthis:\n  prefs_from_table (x # xs) i = prefs_from_table (x # ys) i\n\ngoal:\nNo subgoals!", "qed"], ["", "definition of_weak_ranking_Collect_ge where\n  \"of_weak_ranking_Collect_ge xs x = {y. of_weak_ranking xs y x}\""], ["", "lemma eval_Collect_of_weak_ranking:\n  \"Collect (of_weak_ranking xs x) = of_weak_ranking_Collect_ge (rev xs) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (of_weak_ranking xs x) = of_weak_ranking_Collect_ge (rev xs) x", "by (simp add: of_weak_ranking_Collect_ge_def)"], ["", "lemma of_weak_ranking_Collect_ge_empty [simp]:\n  \"of_weak_ranking_Collect_ge [] x = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking_Collect_ge [] x = {}", "by (simp add: of_weak_ranking_Collect_ge_def)"], ["", "lemma of_weak_ranking_Collect_ge_Cons [simp]:\n  \"y \\<in> x \\<Longrightarrow> of_weak_ranking_Collect_ge (x#xs) y = \\<Union>(set (x#xs))\"\n  \"y \\<notin> x \\<Longrightarrow> of_weak_ranking_Collect_ge (x#xs) y = of_weak_ranking_Collect_ge xs y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<in> x \\<Longrightarrow>\n     of_weak_ranking_Collect_ge (x # xs) y = \\<Union> (set (x # xs))) &&&\n    (y \\<notin> x \\<Longrightarrow>\n     of_weak_ranking_Collect_ge (x # xs) y =\n     of_weak_ranking_Collect_ge xs y)", "by (auto simp: of_weak_ranking_Cons of_weak_ranking_Collect_ge_def)"], ["", "lemma of_weak_ranking_Collect_ge_Cons':\n  \"of_weak_ranking_Collect_ge (x#xs) = (\\<lambda>y.\n     (if y \\<in> x then \\<Union>(set (x#xs)) else of_weak_ranking_Collect_ge xs y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking_Collect_ge (x # xs) =\n    (\\<lambda>y.\n        if y \\<in> x then \\<Union> (set (x # xs))\n        else of_weak_ranking_Collect_ge xs y)", "by (auto simp: of_weak_ranking_Cons of_weak_ranking_Collect_ge_def fun_eq_iff)"], ["", "lemma anonymise_prefs_from_table:\n  assumes \"prefs_from_table_wf agents alts xs\"\n  shows   \"anonymous_profile (prefs_from_table xs) = mset (map snd xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "from assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "interpret pref_profile_wf agents alts \"prefs_from_table xs\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (prefs_from_table xs)", "by (simp add: pref_profile_from_tableI)"], ["proof (state)\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "from assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "have agents: \"agents = fst ` set xs\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. agents = fst ` set xs", "by (simp add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  agents = fst ` set xs\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "hence [simp]: \"finite agents\""], ["proof (prove)\nusing this:\n  agents = fst ` set xs\n\ngoal (1 subgoal):\n 1. finite agents", "by auto"], ["proof (state)\nthis:\n  finite agents\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "have \"anonymous_profile (prefs_from_table xs) = \n          {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) =\n    {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#}", "by (simp add: o_def anonymous_profile_def)"], ["proof (state)\nthis:\n  anonymous_profile (prefs_from_table xs) =\n  {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "also"], ["proof (state)\nthis:\n  anonymous_profile (prefs_from_table xs) =\n  {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "from assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "have \"\\<dots> = {#the (map_of xs i). i \\<in># mset_set agents#}\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#} =\n    {#the (map_of xs i). i \\<in># mset_set agents#}", "proof (intro image_mset_cong)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>prefs_from_table_wf agents alts xs;\n        x \\<in># mset_set agents\\<rbrakk>\n       \\<Longrightarrow> weak_ranking (prefs_from_table xs x) =\n                         the (map_of xs x)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>prefs_from_table_wf agents alts xs;\n        x \\<in># mset_set agents\\<rbrakk>\n       \\<Longrightarrow> weak_ranking (prefs_from_table xs x) =\n                         the (map_of xs x)", "assume i: \"i \\<in># mset_set agents\""], ["proof (state)\nthis:\n  i \\<in># mset_set agents\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>prefs_from_table_wf agents alts xs;\n        x \\<in># mset_set agents\\<rbrakk>\n       \\<Longrightarrow> weak_ranking (prefs_from_table xs x) =\n                         the (map_of xs x)", "from i assms"], ["proof (chain)\npicking this:\n  i \\<in># mset_set agents\n  prefs_from_table_wf agents alts xs", "have \"weak_ranking (prefs_from_table xs i) = \n              weak_ranking (of_weak_ranking (the (map_of xs i))) \""], ["proof (prove)\nusing this:\n  i \\<in># mset_set agents\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. weak_ranking (prefs_from_table xs i) =\n    weak_ranking (of_weak_ranking (the (map_of xs i)))", "by (simp add: prefs_from_table_map_of)"], ["proof (state)\nthis:\n  weak_ranking (prefs_from_table xs i) =\n  weak_ranking (of_weak_ranking (the (map_of xs i)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>prefs_from_table_wf agents alts xs;\n        x \\<in># mset_set agents\\<rbrakk>\n       \\<Longrightarrow> weak_ranking (prefs_from_table xs x) =\n                         the (map_of xs x)", "also"], ["proof (state)\nthis:\n  weak_ranking (prefs_from_table xs i) =\n  weak_ranking (of_weak_ranking (the (map_of xs i)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>prefs_from_table_wf agents alts xs;\n        x \\<in># mset_set agents\\<rbrakk>\n       \\<Longrightarrow> weak_ranking (prefs_from_table xs x) =\n                         the (map_of xs x)", "from assms i"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs\n  i \\<in># mset_set agents", "have \"\\<dots> = the (map_of xs i)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n  i \\<in># mset_set agents\n\ngoal (1 subgoal):\n 1. weak_ranking (of_weak_ranking (the (map_of xs i))) = the (map_of xs i)", "by (intro weak_ranking_of_weak_ranking)\n         (auto simp: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  weak_ranking (of_weak_ranking (the (map_of xs i))) = the (map_of xs i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>prefs_from_table_wf agents alts xs;\n        x \\<in># mset_set agents\\<rbrakk>\n       \\<Longrightarrow> weak_ranking (prefs_from_table xs x) =\n                         the (map_of xs x)", "finally"], ["proof (chain)\npicking this:\n  weak_ranking (prefs_from_table xs i) = the (map_of xs i)", "show \"weak_ranking (prefs_from_table xs i) = the (map_of xs i)\""], ["proof (prove)\nusing this:\n  weak_ranking (prefs_from_table xs i) = the (map_of xs i)\n\ngoal (1 subgoal):\n 1. weak_ranking (prefs_from_table xs i) = the (map_of xs i)", "."], ["proof (state)\nthis:\n  weak_ranking (prefs_from_table xs i) = the (map_of xs i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#} =\n  {#the (map_of xs i). i \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "also"], ["proof (state)\nthis:\n  {#weak_ranking (prefs_from_table xs x). x \\<in># mset_set agents#} =\n  {#the (map_of xs i). i \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "from agents"], ["proof (chain)\npicking this:\n  agents = fst ` set xs", "have \"mset_set agents = mset_set (set (map fst xs))\""], ["proof (prove)\nusing this:\n  agents = fst ` set xs\n\ngoal (1 subgoal):\n 1. mset_set agents = mset_set (set (map fst xs))", "by simp"], ["proof (state)\nthis:\n  mset_set agents = mset_set (set (map fst xs))\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "also"], ["proof (state)\nthis:\n  mset_set agents = mset_set (set (map fst xs))\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "from assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "have \"\\<dots> = mset (map fst xs)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. mset_set (set (map fst xs)) = mset (map fst xs)", "by (intro mset_set_set) (simp_all add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  mset_set (set (map fst xs)) = mset (map fst xs)\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "also"], ["proof (state)\nthis:\n  mset_set (set (map fst xs)) = mset (map fst xs)\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "from assms"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "have \"{#the (map_of xs i). i \\<in># mset (map fst xs)#} = mset (map snd xs)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. {#the (map_of xs i). i \\<in># mset (map fst xs)#} = mset (map snd xs)", "by (intro image_mset_map_of) (simp_all add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  {#the (map_of xs i). i \\<in># mset (map fst xs)#} = mset (map snd xs)\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "finally"], ["proof (chain)\npicking this:\n  anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  anonymous_profile (prefs_from_table xs) = mset (map snd xs)\n\ngoal (1 subgoal):\n 1. anonymous_profile (prefs_from_table xs) = mset (map snd xs)", "."], ["proof (state)\nthis:\n  anonymous_profile (prefs_from_table xs) = mset (map snd xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prefs_from_table_agent_permutation:\n  assumes wf: \"prefs_from_table_wf agents alts xs\" \"prefs_from_table_wf agents alts ys\"\n  assumes mset_eq: \"mset (map snd xs) = mset (map snd ys)\"\n  obtains \\<pi> where \"\\<pi> permutes agents\" \"prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wf(1)"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "have agents: \"agents = set (map fst xs)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. agents = set (map fst xs)", "by (simp_all add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  agents = set (map fst xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wf(2)"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts ys", "have agents': \"agents = set (map fst ys)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts ys\n\ngoal (1 subgoal):\n 1. agents = set (map fst ys)", "by (simp_all add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  agents = set (map fst ys)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from agents agents' wf(1) wf(2)"], ["proof (chain)\npicking this:\n  agents = set (map fst xs)\n  agents = set (map fst ys)\n  prefs_from_table_wf agents alts xs\n  prefs_from_table_wf agents alts ys", "have \"mset (map fst xs) = mset (map fst ys)\""], ["proof (prove)\nusing this:\n  agents = set (map fst xs)\n  agents = set (map fst ys)\n  prefs_from_table_wf agents alts xs\n  prefs_from_table_wf agents alts ys\n\ngoal (1 subgoal):\n 1. mset (map fst xs) = mset (map fst ys)", "by (subst set_eq_iff_mset_eq_distinct [symmetric]) (simp_all add: prefs_from_table_wfD)"], ["proof (state)\nthis:\n  mset (map fst xs) = mset (map fst ys)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence same_length: \"length xs = length ys\""], ["proof (prove)\nusing this:\n  mset (map fst xs) = mset (map fst ys)\n\ngoal (1 subgoal):\n 1. length xs = length ys", "by (auto dest: mset_eq_length simp del: mset_map)"], ["proof (state)\nthis:\n  length xs = length ys\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>mset (map fst xs) = mset (map fst ys)\\<close>"], ["proof (chain)\npicking this:\n  mset (map fst xs) = mset (map fst ys)", "obtain g where g: \"g permutes {..<length ys}\" \"permute_list g (map fst ys) = map fst xs\""], ["proof (prove)\nusing this:\n  mset (map fst xs) = mset (map fst ys)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g permutes {..<length ys};\n         permute_list g (map fst ys) = map fst xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: mset_eq_permutation simp: same_length simp del: mset_map)"], ["proof (state)\nthis:\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from mset_eq g"], ["proof (chain)\npicking this:\n  mset (map snd xs) = mset (map snd ys)\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs", "have \"mset (map snd ys) = mset (permute_list g (map snd ys))\""], ["proof (prove)\nusing this:\n  mset (map snd xs) = mset (map snd ys)\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs\n\ngoal (1 subgoal):\n 1. mset (map snd ys) = mset (permute_list g (map snd ys))", "by simp"], ["proof (state)\nthis:\n  mset (map snd ys) = mset (permute_list g (map snd ys))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with mset_eq"], ["proof (chain)\npicking this:\n  mset (map snd xs) = mset (map snd ys)\n  mset (map snd ys) = mset (permute_list g (map snd ys))", "obtain f \n    where f: \"f permutes {..<length xs}\" \n             \"permute_list f (permute_list g (map snd ys)) = map snd xs\""], ["proof (prove)\nusing this:\n  mset (map snd xs) = mset (map snd ys)\n  mset (map snd ys) = mset (permute_list g (map snd ys))\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f permutes {..<length xs};\n         permute_list f (permute_list g (map snd ys)) = map snd xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: mset_eq_permutation simp: same_length simp del: mset_map)"], ["proof (state)\nthis:\n  f permutes {..<length xs}\n  permute_list f (permute_list g (map snd ys)) = map snd xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from permutes_in_image[OF f(1)]"], ["proof (chain)\npicking this:\n  (f ?x \\<in> {..<length xs}) = (?x \\<in> {..<length xs})", "have [simp]: \"f x < length xs \\<longleftrightarrow> x < length xs\" \n                 \"f x < length ys \\<longleftrightarrow> x < length ys\" for x"], ["proof (prove)\nusing this:\n  (f ?x \\<in> {..<length xs}) = (?x \\<in> {..<length xs})\n\ngoal (1 subgoal):\n 1. (f x < length xs) = (x < length xs) &&&\n    (f x < length ys) = (x < length ys)", "by (simp_all add: same_length)"], ["proof (state)\nthis:\n  (f ?x < length xs) = (?x < length xs)\n  (f ?x < length ys) = (?x < length ys)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define idx unidx where \"idx = index (map fst xs)\" and \"unidx i = map fst xs ! i\" for i"], ["proof (state)\nthis:\n  idx = index (map fst xs)\n  unidx ?i = map fst xs ! ?i\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wf(1)"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs", "have \"bij_betw idx agents {0..<length xs}\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. bij_betw idx agents {0..<length xs}", "unfolding idx_def"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n\ngoal (1 subgoal):\n 1. bij_betw (index (map fst xs)) agents {0..<length xs}", "by (intro bij_betw_index) (simp_all add: prefs_from_table_wf_def)"], ["proof (state)\nthis:\n  bij_betw idx agents {0..<length xs}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence bij_betw_idx: \"bij_betw idx agents {..<length xs}\""], ["proof (prove)\nusing this:\n  bij_betw idx agents {0..<length xs}\n\ngoal (1 subgoal):\n 1. bij_betw idx agents {..<length xs}", "by (simp add: atLeast0LessThan)"], ["proof (state)\nthis:\n  bij_betw idx agents {..<length xs}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"idx x < length xs\" if \"x \\<in> agents\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. idx x < length xs", "using that"], ["proof (prove)\nusing this:\n  x \\<in> agents\n\ngoal (1 subgoal):\n 1. idx x < length xs", "by (simp add: idx_def agents)"], ["proof (state)\nthis:\n  ?x \\<in> agents \\<Longrightarrow> idx ?x < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"unidx i \\<in> agents\" if \"i < length xs\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. unidx i \\<in> agents", "using that"], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. unidx i \\<in> agents", "by (simp add: agents unidx_def)"], ["proof (state)\nthis:\n  ?i < length xs \\<Longrightarrow> unidx ?i \\<in> agents\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have unidx_idx: \"unidx (idx x) = x\" if x: \"x \\<in> agents\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. unidx (idx x) = x", "using x"], ["proof (prove)\nusing this:\n  x \\<in> agents\n\ngoal (1 subgoal):\n 1. unidx (idx x) = x", "unfolding idx_def unidx_def"], ["proof (prove)\nusing this:\n  x \\<in> agents\n\ngoal (1 subgoal):\n 1. map fst xs ! index (map fst xs) x = x", "using nth_index[of x \"map fst xs\"]"], ["proof (prove)\nusing this:\n  x \\<in> agents\n  x \\<in> set (map fst xs) \\<Longrightarrow>\n  map fst xs ! index (map fst xs) x = x\n\ngoal (1 subgoal):\n 1. map fst xs ! index (map fst xs) x = x", "by (simp add: agents set_map [symmetric] nth_map [symmetric] del: set_map)"], ["proof (state)\nthis:\n  ?x \\<in> agents \\<Longrightarrow> unidx (idx ?x) = ?x\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have idx_unidx: \"idx (unidx i) = i\" if i: \"i < length xs\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. idx (unidx i) = i", "unfolding idx_def unidx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. index (map fst xs) (map fst xs ! i) = i", "using wf(1) index_nth_id[of \"map fst xs\" i] i"], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n  \\<lbrakk>distinct (map fst xs); i < length (map fst xs)\\<rbrakk>\n  \\<Longrightarrow> index (map fst xs) (map fst xs ! i) = i\n  i < length xs\n\ngoal (1 subgoal):\n 1. index (map fst xs) (map fst xs ! i) = i", "by (simp add: prefs_from_table_wfD(3))"], ["proof (state)\nthis:\n  ?i < length xs \\<Longrightarrow> idx (unidx ?i) = ?i\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<pi> where \"\\<pi> x = (if x \\<in> agents then (unidx \\<circ> f \\<circ> idx) x else x)\" for x"], ["proof (state)\nthis:\n  \\<pi> ?x =\n  (if ?x \\<in> agents then (unidx \\<circ> f \\<circ> idx) ?x else ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<pi>' where \"\\<pi>' x = (if x \\<in> agents then (unidx \\<circ> inv f \\<circ> idx) x else x)\" for x"], ["proof (state)\nthis:\n  \\<pi>' ?x =\n  (if ?x \\<in> agents then (unidx \\<circ> inv f \\<circ> idx) ?x else ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"bij_betw (unidx \\<circ> f \\<circ> idx) agents agents\" (is \"?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (unidx \\<circ> f \\<circ> idx) agents agents", "unfolding unidx_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((!) (map fst xs) \\<circ> f \\<circ> idx) agents agents", "by (rule bij_betw_trans bij_betw_idx permutes_imp_bij f g bij_betw_nth)+\n       (insert wf(1) g, simp_all add: prefs_from_table_wf_def same_length)"], ["proof (state)\nthis:\n  bij_betw (unidx \\<circ> f \\<circ> idx) agents agents\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  bij_betw (unidx \\<circ> f \\<circ> idx) agents agents\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?P \\<longleftrightarrow> bij_betw \\<pi> agents agents\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (unidx \\<circ> f \\<circ> idx) agents agents =\n    bij_betw \\<pi> agents agents", "by (intro bij_betw_cong) (simp add: \\<pi>_def)"], ["proof (state)\nthis:\n  bij_betw (unidx \\<circ> f \\<circ> idx) agents agents =\n  bij_betw \\<pi> agents agents\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  bij_betw \\<pi> agents agents", "have perm: \"\\<pi> permutes agents\""], ["proof (prove)\nusing this:\n  bij_betw \\<pi> agents agents\n\ngoal (1 subgoal):\n 1. \\<pi> permutes agents", "by (intro bij_imp_permutes) (simp_all add: \\<pi>_def)"], ["proof (state)\nthis:\n  \\<pi> permutes agents\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define h where \"h = g \\<circ> f\""], ["proof (state)\nthis:\n  h = g \\<circ> f\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from f g"], ["proof (chain)\npicking this:\n  f permutes {..<length xs}\n  permute_list f (permute_list g (map snd ys)) = map snd xs\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs", "have h: \"h permutes {..<length ys}\""], ["proof (prove)\nusing this:\n  f permutes {..<length xs}\n  permute_list f (permute_list g (map snd ys)) = map snd xs\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs\n\ngoal (1 subgoal):\n 1. h permutes {..<length ys}", "unfolding h_def"], ["proof (prove)\nusing this:\n  f permutes {..<length xs}\n  permute_list f (permute_list g (map snd ys)) = map snd xs\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs\n\ngoal (1 subgoal):\n 1. g \\<circ> f permutes {..<length ys}", "by (intro permutes_compose) (simp_all add: same_length)"], ["proof (state)\nthis:\n  h permutes {..<length ys}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have inv_\\<pi>: \"inv \\<pi> = \\<pi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv \\<pi> = \\<pi>'", "proof (rule permutes_invI[OF perm])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> \\<pi>' (\\<pi> x) = x\n 2. \\<And>x. x \\<notin> agents \\<Longrightarrow> \\<pi>' x = x", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> \\<pi>' (\\<pi> x) = x\n 2. \\<And>x. x \\<notin> agents \\<Longrightarrow> \\<pi>' x = x", "assume \"x \\<in> agents\""], ["proof (state)\nthis:\n  x \\<in> agents\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> \\<pi>' (\\<pi> x) = x\n 2. \\<And>x. x \\<notin> agents \\<Longrightarrow> \\<pi>' x = x", "with f(1)"], ["proof (chain)\npicking this:\n  f permutes {..<length xs}\n  x \\<in> agents", "show \"\\<pi>' (\\<pi> x) = x\""], ["proof (prove)\nusing this:\n  f permutes {..<length xs}\n  x \\<in> agents\n\ngoal (1 subgoal):\n 1. \\<pi>' (\\<pi> x) = x", "by (simp add: \\<pi>_def \\<pi>'_def idx_unidx unidx_idx inv_f_f permutes_inj)"], ["proof (state)\nthis:\n  \\<pi>' (\\<pi> x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> agents \\<Longrightarrow> \\<pi>' x = x", "qed (simp add: \\<pi>_def \\<pi>'_def)"], ["proof (state)\nthis:\n  inv \\<pi> = \\<pi>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with perm"], ["proof (chain)\npicking this:\n  \\<pi> permutes agents\n  inv \\<pi> = \\<pi>'", "have inv_\\<pi>': \"inv \\<pi>' = \\<pi>\""], ["proof (prove)\nusing this:\n  \\<pi> permutes agents\n  inv \\<pi> = \\<pi>'\n\ngoal (1 subgoal):\n 1. inv \\<pi>' = \\<pi>", "by (auto simp: inv_inv_eq permutes_bij)"], ["proof (state)\nthis:\n  inv \\<pi>' = \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from wf h"], ["proof (chain)\npicking this:\n  prefs_from_table_wf agents alts xs\n  prefs_from_table_wf agents alts ys\n  h permutes {..<length ys}", "have \"prefs_from_table ys = prefs_from_table (permute_list h ys)\""], ["proof (prove)\nusing this:\n  prefs_from_table_wf agents alts xs\n  prefs_from_table_wf agents alts ys\n  h permutes {..<length ys}\n\ngoal (1 subgoal):\n 1. prefs_from_table ys = prefs_from_table (permute_list h ys)", "by (intro prefs_from_table_eqI)\n       (simp_all add: prefs_from_table_wfD permute_list_map [symmetric])"], ["proof (state)\nthis:\n  prefs_from_table ys = prefs_from_table (permute_list h ys)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  prefs_from_table ys = prefs_from_table (permute_list h ys)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"permute_list h ys = permute_list h (zip (map fst ys) (map snd ys))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_list h ys = permute_list h (zip (map fst ys) (map snd ys))", "by (simp add: zip_map_fst_snd)"], ["proof (state)\nthis:\n  permute_list h ys = permute_list h (zip (map fst ys) (map snd ys))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  permute_list h ys = permute_list h (zip (map fst ys) (map snd ys))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from same_length f g"], ["proof (chain)\npicking this:\n  length xs = length ys\n  f permutes {..<length xs}\n  permute_list f (permute_list g (map snd ys)) = map snd xs\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs", "have \"permute_list h (zip (map fst ys) (map snd ys)) = \n            zip (permute_list f (map fst xs)) (map snd xs)\""], ["proof (prove)\nusing this:\n  length xs = length ys\n  f permutes {..<length xs}\n  permute_list f (permute_list g (map snd ys)) = map snd xs\n  g permutes {..<length ys}\n  permute_list g (map fst ys) = map fst xs\n\ngoal (1 subgoal):\n 1. permute_list h (zip (map fst ys) (map snd ys)) =\n    zip (permute_list f (map fst xs)) (map snd xs)", "by (subst permute_list_zip[OF h]) (simp_all add: h_def permute_list_compose)"], ["proof (state)\nthis:\n  permute_list h (zip (map fst ys) (map snd ys)) =\n  zip (permute_list f (map fst xs)) (map snd xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  permute_list h (zip (map fst ys) (map snd ys)) =\n  zip (permute_list f (map fst xs)) (map snd xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  permute_list h (zip (map fst ys) (map snd ys)) =\n  zip (permute_list f (map fst xs)) (map snd xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume i: \"i < length xs\""], ["proof (state)\nthis:\n  i < length xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from i"], ["proof (chain)\npicking this:\n  i < length xs", "have \"permute_list f (map fst xs) ! i = unidx (f i)\""], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. permute_list f (map fst xs) ! i = unidx (f i)", "using permutes_in_image[OF f(1)] f(1)"], ["proof (prove)\nusing this:\n  i < length xs\n  (f ?x \\<in> {..<length xs}) = (?x \\<in> {..<length xs})\n  f permutes {..<length xs}\n\ngoal (1 subgoal):\n 1. permute_list f (map fst xs) ! i = unidx (f i)", "by (subst permute_list_nth) (simp_all add: same_length unidx_def)"], ["proof (state)\nthis:\n  permute_list f (map fst xs) ! i = unidx (f i)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  permute_list f (map fst xs) ! i = unidx (f i)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from i"], ["proof (chain)\npicking this:\n  i < length xs", "have \"\\<dots> = \\<pi> (unidx i)\""], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. unidx (f i) = \\<pi> (unidx i)", "by (simp add: \\<pi>_def idx_unidx)"], ["proof (state)\nthis:\n  unidx (f i) = \\<pi> (unidx i)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  unidx (f i) = \\<pi> (unidx i)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from i"], ["proof (chain)\npicking this:\n  i < length xs", "have \"\\<dots> = map \\<pi> (map fst xs) ! i\""], ["proof (prove)\nusing this:\n  i < length xs\n\ngoal (1 subgoal):\n 1. \\<pi> (unidx i) = map \\<pi> (map fst xs) ! i", "by (simp add: unidx_def)"], ["proof (state)\nthis:\n  \\<pi> (unidx i) = map \\<pi> (map fst xs) ! i\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  permute_list f (map fst xs) ! i = map \\<pi> (map fst xs) ! i", "have \"permute_list f (map fst xs) ! i = map \\<pi> (map fst xs) ! i\""], ["proof (prove)\nusing this:\n  permute_list f (map fst xs) ! i = map \\<pi> (map fst xs) ! i\n\ngoal (1 subgoal):\n 1. permute_list f (map fst xs) ! i = map \\<pi> (map fst xs) ! i", "."], ["proof (state)\nthis:\n  permute_list f (map fst xs) ! i = map \\<pi> (map fst xs) ! i\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?i2 < length xs \\<Longrightarrow>\n  permute_list f (map fst xs) ! ?i2 = map \\<pi> (map fst xs) ! ?i2\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"permute_list f (map fst xs) = map \\<pi> (map fst xs)\""], ["proof (prove)\nusing this:\n  ?i2 < length xs \\<Longrightarrow>\n  permute_list f (map fst xs) ! ?i2 = map \\<pi> (map fst xs) ! ?i2\n\ngoal (1 subgoal):\n 1. permute_list f (map fst xs) = map \\<pi> (map fst xs)", "by (intro nth_equalityI) simp_all"], ["proof (state)\nthis:\n  permute_list f (map fst xs) = map \\<pi> (map fst xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  permute_list f (map fst xs) = map \\<pi> (map fst xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"zip (map \\<pi> (map fst xs)) (map snd xs) = map (\\<lambda>(x,y). (inv \\<pi>' x, y)) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zip (map \\<pi> (map fst xs)) (map snd xs) =\n    map (\\<lambda>(x, y). (inv \\<pi>' x, y)) xs", "by (induction xs) (simp_all add: case_prod_unfold inv_\\<pi>')"], ["proof (state)\nthis:\n  zip (map \\<pi> (map fst xs)) (map snd xs) =\n  map (\\<lambda>(x, y). (inv \\<pi>' x, y)) xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  zip (map \\<pi> (map fst xs)) (map snd xs) =\n  map (\\<lambda>(x, y). (inv \\<pi>' x, y)) xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from permutes_inv[OF perm] inv_\\<pi>"], ["proof (chain)\npicking this:\n  inv \\<pi> permutes agents\n  inv \\<pi> = \\<pi>'", "have \"prefs_from_table \\<dots> = prefs_from_table xs \\<circ> \\<pi>'\""], ["proof (prove)\nusing this:\n  inv \\<pi> permutes agents\n  inv \\<pi> = \\<pi>'\n\ngoal (1 subgoal):\n 1. prefs_from_table (map (\\<lambda>(x, y). (inv \\<pi>' x, y)) xs) =\n    prefs_from_table xs \\<circ> \\<pi>'", "by (intro permute_prefs_from_table [symmetric]) (simp_all add: agents)"], ["proof (state)\nthis:\n  prefs_from_table (map (\\<lambda>(x, y). (inv \\<pi>' x, y)) xs) =\n  prefs_from_table xs \\<circ> \\<pi>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  prefs_from_table ys = prefs_from_table xs \\<circ> \\<pi>'", "have \"prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys\""], ["proof (prove)\nusing this:\n  prefs_from_table ys = prefs_from_table xs \\<circ> \\<pi>'\n\ngoal (1 subgoal):\n 1. prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys", ".."], ["proof (state)\nthis:\n  prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents;\n         prefs_from_table xs \\<circ> \\<pi> = prefs_from_table ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with that[of \\<pi>'] permutes_inv[OF perm] inv_\\<pi>"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<pi>' permutes agents;\n   prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys\\<rbrakk>\n  \\<Longrightarrow> thesis\n  inv \\<pi> permutes agents\n  inv \\<pi> = \\<pi>'\n  prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<pi>' permutes agents;\n   prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys\\<rbrakk>\n  \\<Longrightarrow> thesis\n  inv \\<pi> permutes agents\n  inv \\<pi> = \\<pi>'\n  prefs_from_table xs \\<circ> \\<pi>' = prefs_from_table ys\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permute_list_distinct:\n  assumes \"f ` {..<length xs} \\<subseteq> {..<length xs}\" \"distinct xs\"\n  shows   \"permute_list f xs = map (\\<lambda>x. xs ! f (index xs x)) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. permute_list f xs = map (\\<lambda>x. xs ! f (index xs x)) xs", "using assms"], ["proof (prove)\nusing this:\n  f ` {..<length xs} \\<subseteq> {..<length xs}\n  distinct xs\n\ngoal (1 subgoal):\n 1. permute_list f xs = map (\\<lambda>x. xs ! f (index xs x)) xs", "by (intro nth_equalityI) (auto simp: index_nth_id permute_list_def)"], ["", "lemma image_mset_eq_permutation:\n  assumes \"{#f x. x \\<in># mset_set A#} = {#g x. x \\<in># mset_set A#}\" \"finite A\"\n  obtains \\<pi> where \"\\<pi> permutes A\" \"\\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms(2)"], ["proof (chain)\npicking this:\n  finite A", "obtain xs where xs: \"A = set xs\" \"distinct xs\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>A = set xs; distinct xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_distinct_list"], ["proof (prove)\nusing this:\n  finite A\n  finite ?A \\<Longrightarrow> \\<exists>xs. set xs = ?A \\<and> distinct xs\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>A = set xs; distinct xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  A = set xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  image_mset f (mset_set A) = image_mset g (mset_set A)\n  finite A\n  A = set xs\n  distinct xs", "have \"mset (map f xs) = mset (map g xs)\""], ["proof (prove)\nusing this:\n  image_mset f (mset_set A) = image_mset g (mset_set A)\n  finite A\n  A = set xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. mset (map f xs) = mset (map g xs)", "by (simp add: mset_set_set)"], ["proof (state)\nthis:\n  mset (map f xs) = mset (map g xs)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from mset_eq_permutation[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>p.\n      \\<lbrakk>p permutes {..<length (map g xs)};\n       permute_list p (map g xs) = map f xs\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain \\<pi> where\n    \\<pi>: \"\\<pi> permutes {0..<length xs}\" \"permute_list \\<pi> (map g xs) = map f xs\""], ["proof (prove)\nusing this:\n  (\\<And>p.\n      \\<lbrakk>p permutes {..<length (map g xs)};\n       permute_list p (map g xs) = map f xs\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes {0..<length xs};\n         permute_list \\<pi> (map g xs) = map f xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: atLeast0LessThan)"], ["proof (state)\nthis:\n  \\<pi> permutes {0..<length xs}\n  permute_list \\<pi> (map g xs) = map f xs\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<pi>' where \"\\<pi>' x = (if x \\<in> A then ((!) xs \\<circ> \\<pi> \\<circ> index xs) x else x)\" for x"], ["proof (state)\nthis:\n  \\<pi>' ?x =\n  (if ?x \\<in> A then ((!) xs \\<circ> \\<pi> \\<circ> index xs) ?x else ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"bij_betw ((!) xs \\<circ> \\<pi> \\<circ> index xs) A A\" (is \"?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((!) xs \\<circ> \\<pi> \\<circ> index xs) A A", "by (rule bij_betw_trans bij_betw_index xs refl permutes_imp_bij \\<pi> bij_betw_nth)+\n       (simp_all add: atLeast0LessThan xs)"], ["proof (state)\nthis:\n  bij_betw ((!) xs \\<circ> \\<pi> \\<circ> index xs) A A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  bij_betw ((!) xs \\<circ> \\<pi> \\<circ> index xs) A A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?P \\<longleftrightarrow> bij_betw \\<pi>' A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((!) xs \\<circ> \\<pi> \\<circ> index xs) A A =\n    bij_betw \\<pi>' A A", "by (intro bij_betw_cong) (simp_all add: \\<pi>'_def)"], ["proof (state)\nthis:\n  bij_betw ((!) xs \\<circ> \\<pi> \\<circ> index xs) A A = bij_betw \\<pi>' A A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  bij_betw \\<pi>' A A", "have \"\\<pi>' permutes A\""], ["proof (prove)\nusing this:\n  bij_betw \\<pi>' A A\n\ngoal (1 subgoal):\n 1. \\<pi>' permutes A", "by (rule bij_imp_permutes) (simp_all add: \\<pi>'_def)"], ["proof (state)\nthis:\n  \\<pi>' permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<pi>' permutes A\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<pi> xs(1)[symmetric] xs(2)"], ["proof (chain)\npicking this:\n  \\<pi> permutes {0..<length xs}\n  permute_list \\<pi> (map g xs) = map f xs\n  set xs = A\n  distinct xs", "have \"g (\\<pi>' x) = f x\" if \"x \\<in> A\" for x"], ["proof (prove)\nusing this:\n  \\<pi> permutes {0..<length xs}\n  permute_list \\<pi> (map g xs) = map f xs\n  set xs = A\n  distinct xs\n\ngoal (1 subgoal):\n 1. g (\\<pi>' x) = f x", "by (simp add: permute_list_map permute_list_distinct\n          permutes_image \\<pi>'_def that atLeast0LessThan)"], ["proof (state)\nthis:\n  ?x \\<in> A \\<Longrightarrow> g (\\<pi>' ?x) = f ?x\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes A;\n         \\<And>x. x \\<in> A \\<Longrightarrow> g (\\<pi> x) = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>' permutes A\n  ?x \\<in> A \\<Longrightarrow> g (\\<pi>' ?x) = f ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>' permutes A\n  ?x \\<in> A \\<Longrightarrow> g (\\<pi>' ?x) = f ?x\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma anonymous_profile_agent_permutation:\n  assumes eq:  \"anonymous_profile R1 = anonymous_profile R2\"\n  assumes wf:  \"pref_profile_wf agents alts R1\" \"pref_profile_wf agents alts R2\"\n  assumes fin: \"finite agents\"\n  obtains \\<pi> where \"\\<pi> permutes agents\" \"R2 \\<circ> \\<pi> = R1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret R1: pref_profile_wf agents alts R1"], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts R1", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret R2: pref_profile_wf agents alts R2"], ["proof (prove)\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts R2", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from eq"], ["proof (chain)\npicking this:\n  anonymous_profile R1 = anonymous_profile R2", "have \"{#weak_ranking (R1 x). x \\<in># mset_set agents#} = \n                  {#weak_ranking (R2 x). x \\<in># mset_set agents#}\""], ["proof (prove)\nusing this:\n  anonymous_profile R1 = anonymous_profile R2\n\ngoal (1 subgoal):\n 1. {#weak_ranking (R1 x). x \\<in># mset_set agents#} =\n    {#weak_ranking (R2 x). x \\<in># mset_set agents#}", "by (simp add: R1.anonymous_profile_def R2.anonymous_profile_def o_def)"], ["proof (state)\nthis:\n  {#weak_ranking (R1 x). x \\<in># mset_set agents#} =\n  {#weak_ranking (R2 x). x \\<in># mset_set agents#}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from image_mset_eq_permutation[OF this fin]"], ["proof (chain)\npicking this:\n  (\\<And>\\<pi>.\n      \\<lbrakk>\\<pi> permutes agents;\n       \\<And>x.\n          x \\<in> agents \\<Longrightarrow>\n          weak_ranking (R2 (\\<pi> x)) = weak_ranking (R1 x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "guess \\<pi>"], ["proof (prove)\nusing this:\n  (\\<And>\\<pi>.\n      \\<lbrakk>\\<pi> permutes agents;\n       \\<And>x.\n          x \\<in> agents \\<Longrightarrow>\n          weak_ranking (R2 (\\<pi> x)) = weak_ranking (R1 x)\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "."], ["proof (state)\nthis:\n  \\<pi> permutes agents\n  ?x \\<in> agents \\<Longrightarrow>\n  weak_ranking (R2 (\\<pi> ?x)) = weak_ranking (R1 ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note \\<pi> = this"], ["proof (state)\nthis:\n  \\<pi> permutes agents\n  ?x \\<in> agents \\<Longrightarrow>\n  weak_ranking (R2 (\\<pi> ?x)) = weak_ranking (R1 ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<pi>"], ["proof (chain)\npicking this:\n  \\<pi> permutes agents\n  ?x \\<in> agents \\<Longrightarrow>\n  weak_ranking (R2 (\\<pi> ?x)) = weak_ranking (R1 ?x)", "have wf': \"pref_profile_wf agents alts (R2 \\<circ> \\<pi>)\""], ["proof (prove)\nusing this:\n  \\<pi> permutes agents\n  ?x \\<in> agents \\<Longrightarrow>\n  weak_ranking (R2 (\\<pi> ?x)) = weak_ranking (R1 ?x)\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R2 \\<circ> \\<pi>)", "by (intro R2.wf_permute_agents)"], ["proof (state)\nthis:\n  pref_profile_wf agents alts (R2 \\<circ> \\<pi>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  pref_profile_wf agents alts (R2 \\<circ> \\<pi>)", "interpret R2': pref_profile_wf agents alts \"R2 \\<circ> \\<pi>\""], ["proof (prove)\nusing this:\n  pref_profile_wf agents alts (R2 \\<circ> \\<pi>)\n\ngoal (1 subgoal):\n 1. pref_profile_wf agents alts (R2 \\<circ> \\<pi>)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"R2 \\<circ> \\<pi> = R1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R2 \\<circ> \\<pi> = R1", "proof (intro pref_profile_eqI[OF wf' wf(1)])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> (R2 \\<circ> \\<pi>) x = R1 x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> (R2 \\<circ> \\<pi>) x = R1 x", "assume x: \"x \\<in> agents\""], ["proof (state)\nthis:\n  x \\<in> agents\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> (R2 \\<circ> \\<pi>) x = R1 x", "with \\<pi>"], ["proof (chain)\npicking this:\n  \\<pi> permutes agents\n  ?x \\<in> agents \\<Longrightarrow>\n  weak_ranking (R2 (\\<pi> ?x)) = weak_ranking (R1 ?x)\n  x \\<in> agents", "have \"weak_ranking ((R2 o \\<pi>) x) = weak_ranking (R1 x)\""], ["proof (prove)\nusing this:\n  \\<pi> permutes agents\n  ?x \\<in> agents \\<Longrightarrow>\n  weak_ranking (R2 (\\<pi> ?x)) = weak_ranking (R1 ?x)\n  x \\<in> agents\n\ngoal (1 subgoal):\n 1. weak_ranking ((R2 \\<circ> \\<pi>) x) = weak_ranking (R1 x)", "by simp"], ["proof (state)\nthis:\n  weak_ranking ((R2 \\<circ> \\<pi>) x) = weak_ranking (R1 x)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> agents \\<Longrightarrow> (R2 \\<circ> \\<pi>) x = R1 x", "with wf' wf(1) x"], ["proof (chain)\npicking this:\n  pref_profile_wf agents alts (R2 \\<circ> \\<pi>)\n  pref_profile_wf agents alts R1\n  x \\<in> agents\n  weak_ranking ((R2 \\<circ> \\<pi>) x) = weak_ranking (R1 x)", "show \"(R2 \\<circ> \\<pi>) x = R1 x\""], ["proof (prove)\nusing this:\n  pref_profile_wf agents alts (R2 \\<circ> \\<pi>)\n  pref_profile_wf agents alts R1\n  x \\<in> agents\n  weak_ranking ((R2 \\<circ> \\<pi>) x) = weak_ranking (R1 x)\n\ngoal (1 subgoal):\n 1. (R2 \\<circ> \\<pi>) x = R1 x", "by (intro weak_ranking_eqD[of alts] R2'.prefs_wf) simp_all"], ["proof (state)\nthis:\n  (R2 \\<circ> \\<pi>) x = R1 x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R2 \\<circ> \\<pi> = R1\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>\\<pi> permutes agents; R2 \\<circ> \\<pi> = R1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<pi>(1) and this"], ["proof (chain)\npicking this:\n  \\<pi> permutes agents\n  R2 \\<circ> \\<pi> = R1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi> permutes agents\n  R2 \\<circ> \\<pi> = R1\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}