{"file_name": "/home/qj213/afp-2021-10-22/thys/Randomised_Social_Choice/Order_Predicates.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Randomised_Social_Choice", "problem_names": ["lemma restrict_relation_restrict_relation [simp]:\n  \"restrict_relation A (restrict_relation B R) = restrict_relation (A \\<inter> B) R\"", "lemma restrict_relation_empty [simp]: \"restrict_relation {} R = (\\<lambda>_ _. False)\"", "lemma restrict_relation_UNIV [simp]: \"restrict_relation UNIV R = R\"", "lemma carrier_eq: \"carrier = {x. le x x}\"", "lemma preorder_on_map:\n  \"preorder_on (f -` carrier) (map_relation f le)\"", "lemma preorder_on_restrict:\n  \"preorder_on (carrier \\<inter> A) (restrict_relation A le)\"", "lemma preorder_on_restrict_subset:\n  \"A \\<subseteq> carrier \\<Longrightarrow> preorder_on A (restrict_relation A le)\"", "lemma restrict_relation_carrier [simp]:\n  \"restrict_relation carrier le = le\"", "lemma total': \"\\<not>le x y \\<Longrightarrow> x \\<in> carrier \\<Longrightarrow> y \\<in> carrier \\<Longrightarrow> le y x\"", "lemma total_preorder_on_map:\n  \"total_preorder_on (f -` carrier) (map_relation f le)\"", "lemma total_preorder_on_restrict:\n  \"total_preorder_on (carrier \\<inter> A) (restrict_relation A le)\"", "lemma total_preorder_on_restrict_subset:\n  \"A \\<subseteq> carrier \\<Longrightarrow> total_preorder_on A (restrict_relation A le)\"", "lemma strict_trans: \"a \\<prec>[le] b \\<Longrightarrow> b \\<prec>[le] c \\<Longrightarrow> a \\<prec>[le] c\"", "lemma weak_strict_trans: \"a \\<preceq>[le] b \\<Longrightarrow> b \\<prec>[le] c \\<Longrightarrow> a \\<prec>[le] c\"", "lemma strict_weak_trans: \"a \\<prec>[le] b \\<Longrightarrow> b \\<preceq>[le] c \\<Longrightarrow> a \\<prec>[le] c\"", "lemma (in total_preorder_on) not_weakly_preferred_iff:\n  \"a \\<in> carrier \\<Longrightarrow> b \\<in> carrier \\<Longrightarrow> \\<not>a \\<preceq>[le] b \\<longleftrightarrow> b \\<prec>[le] a\"", "lemma (in total_preorder_on) not_strongly_preferred_iff:\n  \"a \\<in> carrier \\<Longrightarrow> b \\<in> carrier \\<Longrightarrow> \\<not>a \\<prec>[le] b \\<longleftrightarrow> b \\<preceq>[le] a\"", "lemma Max_wrt_among_cong:\n  assumes \"restrict_relation A R = restrict_relation A R'\"\n  shows   \"Max_wrt_among R A = Max_wrt_among R' A\"", "lemma Max_wrt_altdef: \"Max_wrt R = {x. R x x \\<and> (\\<forall>y. R x y \\<longrightarrow> R y x)}\"", "lemma Max_wrt_among_preorder:\n  \"Max_wrt_among le A = {x\\<in>carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}\"", "lemma Max_wrt_preorder:\n  \"Max_wrt le = {x\\<in>carrier. \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x}\"", "lemma Max_wrt_among_subset:\n  \"Max_wrt_among le A \\<subseteq> carrier\" \"Max_wrt_among le A \\<subseteq> A\"", "lemma Max_wrt_subset:\n  \"Max_wrt le \\<subseteq> carrier\"", "lemma Max_wrt_among_nonempty:\n  assumes \"B \\<inter> carrier \\<noteq> {}\" \"finite (B \\<inter> carrier)\"\n  shows   \"Max_wrt_among le B \\<noteq> {}\"", "lemma Max_wrt_nonempty:\n  \"carrier \\<noteq> {} \\<Longrightarrow> finite carrier \\<Longrightarrow> Max_wrt le \\<noteq> {}\"", "lemma Max_wrt_among_map_relation_vimage:\n  \"f -` Max_wrt_among le A \\<subseteq> Max_wrt_among (map_relation f le) (f -` A)\"", "lemma Max_wrt_map_relation_vimage:\n  \"f -` Max_wrt le \\<subseteq> Max_wrt (map_relation f le)\"", "lemma image_subset_vimage_the_inv_into: \n  assumes \"inj_on f A\" \"B \\<subseteq> A\"\n  shows   \"f ` B \\<subseteq> the_inv_into A f -` B\"", "lemma Max_wrt_among_map_relation_bij_subset:\n  assumes \"bij (f :: 'a \\<Rightarrow> 'b)\"\n  shows   \"f ` Max_wrt_among le A \\<subseteq> \n             Max_wrt_among (map_relation (inv f) le) (f ` A)\"", "lemma Max_wrt_among_map_relation_bij:\n  assumes \"bij f\"\n  shows   \"f ` Max_wrt_among le A = Max_wrt_among (map_relation (inv f) le) (f ` A)\"", "lemma Max_wrt_map_relation_bij:\n  \"bij f \\<Longrightarrow> f ` Max_wrt le = Max_wrt (map_relation (inv f) le)\"", "lemma Max_wrt_among_mono:\n  \"le x y \\<Longrightarrow> x \\<in> Max_wrt_among le A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> y \\<in> Max_wrt_among le A\"", "lemma Max_wrt_mono:\n  \"le x y \\<Longrightarrow> x \\<in> Max_wrt le \\<Longrightarrow> y \\<in> Max_wrt le\"", "lemma Max_wrt_among_total_preorder:\n  \"Max_wrt_among le A = {x\\<in>carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le y x}\"", "lemma Max_wrt_total_preorder:\n  \"Max_wrt le = {x\\<in>carrier. \\<forall>y\\<in>carrier. le y x}\"", "lemma decompose_Max:\n  assumes A: \"A \\<subseteq> carrier\"\n  defines \"M \\<equiv> Max_wrt_among le A\"\n  shows   \"restrict_relation A le = (\\<lambda>x y. x \\<in> A \\<and> y \\<in> M \\<or> (y \\<notin> M \\<and> restrict_relation (A - M) le x y))\"", "lemma of_weak_ranking_Nil [simp]: \"of_weak_ranking [] = (\\<lambda>_ _. False)\"", "lemma of_weak_ranking_Nil' [code]: \"of_weak_ranking [] x y = False\"", "lemma of_weak_ranking_Cons [code]:\n  \"x \\<succeq>[of_weak_ranking (z#zs)] y \\<longleftrightarrow> x \\<in> z \\<and> y \\<in> \\<Union>(set (z#zs)) \\<or> x \\<succeq>[of_weak_ranking zs] y\" \n      (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma of_weak_ranking_indifference:\n  assumes \"A \\<in> set xs\" \"x \\<in> A\" \"y \\<in> A\"\n  shows   \"x \\<preceq>[of_weak_ranking xs] y\"", "lemma of_weak_ranking_map:\n  \"map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)\"", "lemma of_weak_ranking_permute':\n  assumes \"f permutes (\\<Union>(set xs))\"\n  shows   \"map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((`) (inv f)) xs)\"", "lemma of_weak_ranking_permute:\n  assumes \"f permutes (\\<Union>(set xs))\"\n  shows   \"of_weak_ranking (map ((`) f) xs) = map_relation (inv f) (of_weak_ranking xs)\"", "lemma is_weak_rankingI [intro?]:\n  assumes \"{} \\<notin> set xs\" \"\\<And>i j. i < length xs \\<Longrightarrow> j < length xs \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> xs ! i \\<inter> xs ! j = {}\"\n  shows   \"is_weak_ranking xs\"", "lemma is_weak_ranking_nonempty: \"is_weak_ranking xs \\<Longrightarrow> {} \\<notin> set xs\"", "lemma is_weak_rankingD:\n  assumes \"is_weak_ranking xs\" \"i < length xs\" \"j < length xs\" \"i \\<noteq> j\"\n  shows   \"xs ! i \\<inter> xs ! j = {}\"", "lemma is_weak_ranking_iff:\n  \"is_weak_ranking xs \\<longleftrightarrow> distinct xs \\<and> disjoint (set xs) \\<and> {} \\<notin> set xs\"", "lemma is_weak_ranking_rev [simp]: \"is_weak_ranking (rev xs) \\<longleftrightarrow> is_weak_ranking xs\"", "lemma is_weak_ranking_map_inj:\n  assumes \"is_weak_ranking xs\" \"inj_on f (\\<Union>(set xs))\"\n  shows   \"is_weak_ranking (map ((`) f) xs)\"", "lemma of_weak_ranking_rev [simp]:\n  \"of_weak_ranking (rev xs) (x::'a) y \\<longleftrightarrow> of_weak_ranking xs y x\"", "lemma is_weak_ranking_Nil [simp, code]: \"is_weak_ranking []\"", "lemma is_finite_weak_ranking_Nil [simp, code]: \"is_finite_weak_ranking []\"", "lemma is_weak_ranking_Cons_empty [simp]:\n  \"\\<not>is_weak_ranking ({} # xs)\"", "lemma is_finite_weak_ranking_Cons_empty [simp]:\n  \"\\<not>is_finite_weak_ranking ({} # xs)\"", "lemma is_weak_ranking_singleton [simp]:\n  \"is_weak_ranking [x] \\<longleftrightarrow> x \\<noteq> {}\"", "lemma is_finite_weak_ranking_singleton [simp]:\n  \"is_finite_weak_ranking [x] \\<longleftrightarrow> x \\<noteq> {} \\<and> finite x\"", "lemma is_weak_ranking_append:\n  \"is_weak_ranking (xs @ ys) \\<longleftrightarrow> \n      is_weak_ranking xs \\<and> is_weak_ranking ys \\<and>\n      (set xs \\<inter> set ys = {} \\<and> \\<Union>(set xs) \\<inter> \\<Union>(set ys) = {})\"", "lemma is_weak_ranking_Cons [code]:\n  \"is_weak_ranking (x # xs) \\<longleftrightarrow> \n      x \\<noteq> {} \\<and> is_weak_ranking xs \\<and> x \\<inter> \\<Union>(set xs) = {}\"", "lemma is_finite_weak_ranking_Cons [code]:\n  \"is_finite_weak_ranking (x # xs) \\<longleftrightarrow> \n      x \\<noteq> {} \\<and> finite x \\<and> is_finite_weak_ranking xs \\<and> x \\<inter> \\<Union>(set xs) = {}\"", "lemma is_weak_ranking_aux:\n  \"is_weak_ranking_aux A xs \\<longleftrightarrow> A \\<inter> \\<Union>(set xs) = {} \\<and> is_weak_ranking xs\"", "lemma is_weak_ranking_code [code]:\n  \"is_weak_ranking xs \\<longleftrightarrow> is_weak_ranking_aux {} xs\"", "lemma of_weak_ranking_altdef:\n  assumes \"is_weak_ranking xs\" \"x \\<in> \\<Union>(set xs)\" \"y \\<in> \\<Union>(set xs)\"\n  shows   \"of_weak_ranking xs x y \\<longleftrightarrow> \n             find_index ((\\<in>) x) xs \\<ge> find_index ((\\<in>) y) xs\"", "lemma total_preorder_of_weak_ranking:\n  assumes \"\\<Union>(set xs) = A\"\n  assumes \"is_weak_ranking xs\"\n  shows   \"total_preorder_on A (of_weak_ranking xs)\"", "lemma restrict_relation_of_weak_ranking_Cons:\n  assumes \"is_weak_ranking (A # As)\"\n  shows   \"restrict_relation (\\<Union>(set As)) (of_weak_ranking (A # As)) = of_weak_ranking As\"", "lemmas of_weak_ranking_wf = \n  total_preorder_of_weak_ranking is_weak_ranking_code insert_commute", "lemma \"total_preorder_on {1,2,3,4::nat} (of_weak_ranking [{1,3},{2},{4}])\"", "lemma of_weak_ranking_imp_in_set:\n  assumes \"of_weak_ranking xs a b\"\n  shows   \"a \\<in> \\<Union>(set xs)\" \"b \\<in> \\<Union>(set xs)\"", "lemma of_weak_ranking_Cons':\n  assumes \"a \\<in> \\<Union>(set (x#xs))\" \"b \\<in> \\<Union>(set (x#xs))\"\n  shows   \"of_weak_ranking (x#xs) a b \\<longleftrightarrow> b \\<in> x \\<or> (a \\<notin> x \\<and> of_weak_ranking xs a b)\"", "lemma Max_wrt_among_of_weak_ranking_Cons1:\n  assumes \"x \\<inter> A = {}\"\n  shows   \"Max_wrt_among (of_weak_ranking (x#xs)) A = Max_wrt_among (of_weak_ranking xs) A\"", "lemma Max_wrt_among_of_weak_ranking_Cons2:\n  assumes \"x \\<inter> A \\<noteq> {}\"\n  shows   \"Max_wrt_among (of_weak_ranking (x#xs)) A = x \\<inter> A\"", "lemma Max_wrt_among_of_weak_ranking_Cons:\n  \"Max_wrt_among (of_weak_ranking (x#xs)) A =\n     (if x \\<inter> A = {} then Max_wrt_among (of_weak_ranking xs) A else x \\<inter> A)\"", "lemma Max_wrt_of_weak_ranking_Cons:\n  \"Max_wrt (of_weak_ranking (x#xs)) = x\"", "lemma Max_wrt_of_weak_ranking:\n  assumes \"is_weak_ranking xs\"\n  shows   \"Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\"", "lemma finite_total_preorder_on_map:\n  assumes \"finite (f -` carrier)\"\n  shows   \"finite_total_preorder_on (f -` carrier) (map_relation f le)\"", "lemma weak_ranking_aux_Union:\n  \"A \\<subseteq> carrier \\<Longrightarrow> \\<Union>(set (weak_ranking_aux A)) = A\"", "lemma weak_ranking_aux_wf:\n  \"A \\<subseteq> carrier \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)\"", "lemma of_weak_ranking_weak_ranking_aux':\n  assumes \"A \\<subseteq> carrier\" \"x \\<in> A\" \"y \\<in> A\"\n  shows   \"of_weak_ranking (weak_ranking_aux A) x y \\<longleftrightarrow> restrict_relation A le x y\"", "lemma of_weak_ranking_weak_ranking_aux:\n  \"of_weak_ranking (weak_ranking_aux carrier) = le\"", "lemma weak_ranking_aux_unique':\n  assumes \"\\<Union>(set As) \\<subseteq> carrier\" \"is_weak_ranking As\"\n          \"of_weak_ranking As = restrict_relation (\\<Union>(set As)) le\"\n  shows   \"As = weak_ranking_aux (\\<Union>(set As))\"", "lemma weak_ranking_aux_unique:\n  assumes \"is_weak_ranking As\" \"of_weak_ranking As = le\"\n  shows   \"As = weak_ranking_aux carrier\"", "lemma weak_ranking_total_preorder:\n  \"is_weak_ranking (weak_ranking le)\" \"of_weak_ranking (weak_ranking le) = le\"", "lemma weak_ranking_altdef:\n  \"weak_ranking le = weak_ranking_aux carrier\"", "lemma weak_ranking_Union: \"\\<Union>(set (weak_ranking le)) = carrier\"", "lemma weak_ranking_unique:\n  assumes \"is_weak_ranking As\" \"of_weak_ranking As = le\"\n  shows   \"As = weak_ranking le\"", "lemma weak_ranking_permute:\n  assumes \"f permutes carrier\"\n  shows   \"weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)\"", "lemma weak_ranking_index_unique:\n  assumes \"is_weak_ranking xs\" \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"x \\<in> xs ! j\"\n  shows   \"i = j\"", "lemma weak_ranking_index_unique':\n  assumes \"is_weak_ranking xs\" \"i < length xs\" \"x \\<in> xs ! i\"\n  shows   \"i = find_index ((\\<in>) x) xs\"", "lemma weak_ranking_eqclass1:\n  assumes \"A \\<in> set (weak_ranking le)\" \"x \\<in> A\" \"y \\<in> A\"\n  shows   \"le x y\"", "lemma weak_ranking_eqclass2:\n  assumes A: \"A \\<in> set (weak_ranking le)\" \"x \\<in> A\" and le: \"le x y\" \"le y x\"\n  shows   \"y \\<in> A\"", "lemma hd_weak_ranking:\n  assumes \"x \\<in> hd (weak_ranking le)\" \"y \\<in> carrier\"\n  shows   \"le y x\"", "lemma last_weak_ranking:\n  assumes \"x \\<in> last (weak_ranking le)\" \"y \\<in> carrier\"\n  shows   \"le x y\"", "lemma nth_weak_ranking_index:\n  assumes \"x \\<in> carrier\"\n  shows   \"weak_ranking_index x < length (weak_ranking le)\" \n          \"x \\<in> weak_ranking le ! weak_ranking_index x\"", "lemma ranking_index_eqI:\n  \"i < length (weak_ranking le) \\<Longrightarrow> x \\<in> weak_ranking le ! i \\<Longrightarrow> weak_ranking_index x = i\"", "lemma ranking_index_le_iff [simp]:\n  assumes \"x \\<in> carrier\" \"y \\<in> carrier\"\n  shows   \"weak_ranking_index x \\<ge> weak_ranking_index y \\<longleftrightarrow> le x y\"", "lemma weak_ranking_False [simp]: \"weak_ranking (\\<lambda>_ _. False) = []\"", "lemmas of_weak_ranking_weak_ranking = \n  finite_total_preorder_on.weak_ranking_total_preorder(2)", "lemma finite_total_preorder_on_iff:\n  \"finite_total_preorder_on A R \\<longleftrightarrow> total_preorder_on A R \\<and> finite A\"", "lemma finite_total_preorder_of_weak_ranking:\n  assumes \"\\<Union>(set xs) = A\" \"is_finite_weak_ranking xs\"\n  shows   \"finite_total_preorder_on A (of_weak_ranking xs)\"", "lemma weak_ranking_of_weak_ranking:\n  assumes \"is_finite_weak_ranking xs\"\n  shows   \"weak_ranking (of_weak_ranking xs) = xs\"", "lemma weak_ranking_eqD:\n  assumes \"finite_total_preorder_on alts R1\"\n  assumes \"finite_total_preorder_on alts R2\"\n  assumes \"weak_ranking R1 = weak_ranking R2\"\n  shows   \"R1 = R2\"", "lemma weak_ranking_eq_iff:\n  assumes \"finite_total_preorder_on alts R1\"\n  assumes \"finite_total_preorder_on alts R2\"\n  shows   \"weak_ranking R1 = weak_ranking R2 \\<longleftrightarrow> R1 = R2\"", "lemma (in preorder_on) preferred_alts_refl [simp]: \"x \\<in> carrier \\<Longrightarrow> x \\<in> preferred_alts le x\"", "lemma (in preorder_on) preferred_alts_altdef:\n  \"preferred_alts le x = {y\\<in>carrier. y \\<succeq>[le] x}\"", "lemma (in preorder_on) preferred_alts_subset: \"preferred_alts le x \\<subseteq> carrier\"", "lemma singleton_weak_ranking:\n  assumes \"A \\<in> set (weak_ranking le)\"\n  shows   \"is_singleton A\"", "lemma weak_ranking_ranking: \"weak_ranking le = map (\\<lambda>x. {x}) (ranking le)\""], "translations": [["", "lemma restrict_relation_restrict_relation [simp]:\n  \"restrict_relation A (restrict_relation B R) = restrict_relation (A \\<inter> B) R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation A (restrict_relation B R) =\n    restrict_relation (A \\<inter> B) R", "by (intro ext) (auto simp add: restrict_relation_def)"], ["", "lemma restrict_relation_empty [simp]: \"restrict_relation {} R = (\\<lambda>_ _. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation {} R = (\\<lambda>_ _. False)", "by (simp add: restrict_relation_def)"], ["", "lemma restrict_relation_UNIV [simp]: \"restrict_relation UNIV R = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation UNIV R = R", "by (simp add: restrict_relation_def)"], ["", "subsection \\<open>Preorders\\<close>"], ["", "text \\<open>Preorders are reflexive and transitive binary relations.\\<close>"], ["", "locale preorder_on =\n  fixes carrier :: \"'a set\"\n  fixes le :: \"'a relation\"\n  assumes not_outside: \"le x y \\<Longrightarrow> x \\<in> carrier\" \"le x y \\<Longrightarrow> y \\<in> carrier\"\n  assumes refl: \"x \\<in> carrier \\<Longrightarrow> le x x\"\n  assumes trans: \"le x y \\<Longrightarrow> le y z \\<Longrightarrow> le x z\"\nbegin"], ["", "lemma carrier_eq: \"carrier = {x. le x x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier = {x. le x x}", "using not_outside refl"], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  ?x \\<in> carrier \\<Longrightarrow> le ?x ?x\n\ngoal (1 subgoal):\n 1. carrier = {x. le x x}", "by auto"], ["", "lemma preorder_on_map:\n  \"preorder_on (f -` carrier) (map_relation f le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f -` carrier) (map_relation f le)", "by unfold_locales (auto dest: not_outside simp: map_relation_def refl elim: trans)"], ["", "lemma preorder_on_restrict:\n  \"preorder_on (carrier \\<inter> A) (restrict_relation A le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (carrier \\<inter> A)\n     (restrict_relation A le)", "by unfold_locales (auto simp: restrict_relation_def refl intro: trans not_outside)"], ["", "lemma preorder_on_restrict_subset:\n  \"A \\<subseteq> carrier \\<Longrightarrow> preorder_on A (restrict_relation A le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier \\<Longrightarrow>\n    Order_Predicates.preorder_on A (restrict_relation A le)", "using preorder_on_restrict[of A]"], ["proof (prove)\nusing this:\n  Order_Predicates.preorder_on (carrier \\<inter> A) (restrict_relation A le)\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier \\<Longrightarrow>\n    Order_Predicates.preorder_on A (restrict_relation A le)", "by (simp add: Int_absorb1)"], ["", "lemma restrict_relation_carrier [simp]:\n  \"restrict_relation carrier le = le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation carrier le = le", "using not_outside"], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n\ngoal (1 subgoal):\n 1. restrict_relation carrier le = le", "by (intro ext) (auto simp add: restrict_relation_def)"], ["", "end"], ["", "subsection \\<open>Total preorders\\<close>"], ["", "text \\<open>Total preorders are preorders where any two elements are comparable.\\<close>"], ["", "locale total_preorder_on = preorder_on +\n  assumes total: \"x \\<in> carrier \\<Longrightarrow> y \\<in> carrier \\<Longrightarrow> le x y \\<or> le y x\"\nbegin"], ["", "lemma total': \"\\<not>le x y \\<Longrightarrow> x \\<in> carrier \\<Longrightarrow> y \\<in> carrier \\<Longrightarrow> le y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> le x y; x \\<in> carrier; y \\<in> carrier\\<rbrakk>\n    \\<Longrightarrow> le y x", "using total[of x y]"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> carrier; y \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le x y \\<or> le y x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> le x y; x \\<in> carrier; y \\<in> carrier\\<rbrakk>\n    \\<Longrightarrow> le y x", "by blast"], ["", "lemma total_preorder_on_map:\n  \"total_preorder_on (f -` carrier) (map_relation f le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on (f -` carrier) (map_relation f le)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. total_preorder_on (f -` carrier) (map_relation f le)", "interpret R': preorder_on \"f -` carrier\" \"map_relation f le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f -` carrier) (map_relation f le)", "using preorder_on_map[of f]"], ["proof (prove)\nusing this:\n  Order_Predicates.preorder_on (f -` carrier) (map_relation f le)\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f -` carrier) (map_relation f le)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. total_preorder_on (f -` carrier) (map_relation f le)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on (f -` carrier) (map_relation f le)", "by unfold_locales (simp add: map_relation_def total)"], ["proof (state)\nthis:\n  total_preorder_on (f -` carrier) (map_relation f le)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma total_preorder_on_restrict:\n  \"total_preorder_on (carrier \\<inter> A) (restrict_relation A le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on (carrier \\<inter> A) (restrict_relation A le)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. total_preorder_on (carrier \\<inter> A) (restrict_relation A le)", "interpret R': preorder_on \"carrier \\<inter> A\" \"restrict_relation A le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (carrier \\<inter> A)\n     (restrict_relation A le)", "by (rule preorder_on_restrict)"], ["proof (state)\ngoal (1 subgoal):\n 1. total_preorder_on (carrier \\<inter> A) (restrict_relation A le)", "from total"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> carrier; ?y \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le ?x ?y \\<or> le ?y ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier; ?y \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le ?x ?y \\<or> le ?y ?x\n\ngoal (1 subgoal):\n 1. total_preorder_on (carrier \\<inter> A) (restrict_relation A le)", "by unfold_locales (auto simp: restrict_relation_def)"], ["proof (state)\nthis:\n  total_preorder_on (carrier \\<inter> A) (restrict_relation A le)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma total_preorder_on_restrict_subset:\n  \"A \\<subseteq> carrier \\<Longrightarrow> total_preorder_on A (restrict_relation A le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier \\<Longrightarrow>\n    total_preorder_on A (restrict_relation A le)", "using total_preorder_on_restrict[of A]"], ["proof (prove)\nusing this:\n  total_preorder_on (carrier \\<inter> A) (restrict_relation A le)\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier \\<Longrightarrow>\n    total_preorder_on A (restrict_relation A le)", "by (simp add: Int_absorb1)"], ["", "end"], ["", "text \\<open>Some fancy notation for order relations\\<close>"], ["", "abbreviation (input) weakly_preferred :: \"'a \\<Rightarrow> 'a relation \\<Rightarrow> 'a \\<Rightarrow> bool\"\n    (\"_ \\<preceq>[_] _\" [51,10,51] 60) where\n  \"a \\<preceq>[R] b \\<equiv> R a b\""], ["", "definition strongly_preferred (\"_ \\<prec>[_] _\" [51,10,51] 60) where\n  \"a \\<prec>[R] b \\<equiv> (a \\<preceq>[R] b) \\<and> \\<not>(b \\<preceq>[R] a)\""], ["", "definition indifferent (\"_ \\<sim>[_] _\" [51,10,51] 60) where\n  \"a \\<sim>[R] b \\<equiv> (a \\<preceq>[R] b) \\<and> (b \\<preceq>[R] a)\""], ["", "abbreviation (input) weakly_not_preferred (\"_ \\<succeq>[_] _\" [51,10,51] 60) where\n  \"a \\<succeq>[R] b \\<equiv> b \\<preceq>[R] a\""], ["", "term \"a \\<succeq>[R] b \\<longleftrightarrow> b \\<preceq>[R] a\""], ["", "abbreviation (input) strongly_not_preferred (\"_ \\<succ>[_] _\" [51,10,51] 60) where\n  \"a \\<succ>[R] b \\<equiv> b \\<prec>[R] a\""], ["", "context preorder_on\nbegin"], ["", "lemma strict_trans: \"a \\<prec>[le] b \\<Longrightarrow> b \\<prec>[le] c \\<Longrightarrow> a \\<prec>[le] c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<prec>[le] b; b \\<prec>[le] c\\<rbrakk>\n    \\<Longrightarrow> a \\<prec>[le] c", "unfolding strongly_preferred_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le a b \\<and> \\<not> le b a;\n     le b c \\<and> \\<not> le c b\\<rbrakk>\n    \\<Longrightarrow> le a c \\<and> \\<not> le c a", "by (blast intro: trans)"], ["", "lemma weak_strict_trans: \"a \\<preceq>[le] b \\<Longrightarrow> b \\<prec>[le] c \\<Longrightarrow> a \\<prec>[le] c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le a b; b \\<prec>[le] c\\<rbrakk>\n    \\<Longrightarrow> a \\<prec>[le] c", "unfolding strongly_preferred_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le a b; le b c \\<and> \\<not> le c b\\<rbrakk>\n    \\<Longrightarrow> le a c \\<and> \\<not> le c a", "by (blast intro: trans)"], ["", "lemma strict_weak_trans: \"a \\<prec>[le] b \\<Longrightarrow> b \\<preceq>[le] c \\<Longrightarrow> a \\<prec>[le] c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<prec>[le] b; le b c\\<rbrakk>\n    \\<Longrightarrow> a \\<prec>[le] c", "unfolding strongly_preferred_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le a b \\<and> \\<not> le b a; le b c\\<rbrakk>\n    \\<Longrightarrow> le a c \\<and> \\<not> le c a", "by (blast intro: trans)"], ["", "end"], ["", "lemma (in total_preorder_on) not_weakly_preferred_iff:\n  \"a \\<in> carrier \\<Longrightarrow> b \\<in> carrier \\<Longrightarrow> \\<not>a \\<preceq>[le] b \\<longleftrightarrow> b \\<prec>[le] a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier; b \\<in> carrier\\<rbrakk>\n    \\<Longrightarrow> (\\<not> le a b) = b \\<prec>[le] a", "using total[of a b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<in> carrier; b \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le a b \\<or> le b a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier; b \\<in> carrier\\<rbrakk>\n    \\<Longrightarrow> (\\<not> le a b) = b \\<prec>[le] a", "by (auto simp: strongly_preferred_def)"], ["", "lemma (in total_preorder_on) not_strongly_preferred_iff:\n  \"a \\<in> carrier \\<Longrightarrow> b \\<in> carrier \\<Longrightarrow> \\<not>a \\<prec>[le] b \\<longleftrightarrow> b \\<preceq>[le] a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier; b \\<in> carrier\\<rbrakk>\n    \\<Longrightarrow> (\\<not> a \\<prec>[le] b) = le b a", "using total[of a b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<in> carrier; b \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le a b \\<or> le b a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier; b \\<in> carrier\\<rbrakk>\n    \\<Longrightarrow> (\\<not> a \\<prec>[le] b) = le b a", "by (auto simp: strongly_preferred_def)"], ["", "subsection \\<open>Orders\\<close>"], ["", "locale order_on = preorder_on +\n  assumes antisymmetric: \"le x y \\<Longrightarrow> le y x \\<Longrightarrow> x = y\""], ["", "locale linorder_on = order_on carrier le + total_preorder_on carrier le for carrier le"], ["", "subsection \\<open>Maximal elements\\<close>"], ["", "text \\<open>\n  Maximal elements are elements in a preorder for which there exists no strictly greater element.\n\\<close>"], ["", "definition Max_wrt_among :: \"'a relation \\<Rightarrow> 'a set \\<Rightarrow> 'a set\" where\n  \"Max_wrt_among R A = {x\\<in>A. R x x \\<and> (\\<forall>y\\<in>A. R x y \\<longrightarrow> R y x)}\""], ["", "lemma Max_wrt_among_cong:\n  assumes \"restrict_relation A R = restrict_relation A R'\"\n  shows   \"Max_wrt_among R A = Max_wrt_among R' A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among R A = Max_wrt_among R' A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among R A = Max_wrt_among R' A", "from assms"], ["proof (chain)\npicking this:\n  restrict_relation A R = restrict_relation A R'", "have \"R x y \\<longleftrightarrow> R' x y\" if \"x \\<in> A\" \"y \\<in> A\" for x y"], ["proof (prove)\nusing this:\n  restrict_relation A R = restrict_relation A R'\n\ngoal (1 subgoal):\n 1. R x y = R' x y", "using that"], ["proof (prove)\nusing this:\n  restrict_relation A R = restrict_relation A R'\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. R x y = R' x y", "by (auto simp: restrict_relation_def fun_eq_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> R ?x ?y = R' ?x ?y\n\ngoal (1 subgoal):\n 1. Max_wrt_among R A = Max_wrt_among R' A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> R ?x ?y = R' ?x ?y\n\ngoal (1 subgoal):\n 1. Max_wrt_among R A = Max_wrt_among R' A", "unfolding Max_wrt_among_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> R ?x ?y = R' ?x ?y\n\ngoal (1 subgoal):\n 1. {x \\<in> A.\n     R x x \\<and> (\\<forall>y\\<in>A. R x y \\<longrightarrow> R y x)} =\n    {x \\<in> A.\n     R' x x \\<and> (\\<forall>y\\<in>A. R' x y \\<longrightarrow> R' y x)}", "by blast"], ["proof (state)\nthis:\n  Max_wrt_among R A = Max_wrt_among R' A\n\ngoal:\nNo subgoals!", "qed"], ["", "definition Max_wrt :: \"'a relation \\<Rightarrow> 'a set\" where\n  \"Max_wrt R = Max_wrt_among R UNIV\""], ["", "lemma Max_wrt_altdef: \"Max_wrt R = {x. R x x \\<and> (\\<forall>y. R x y \\<longrightarrow> R y x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt R =\n    {x. R x x \\<and> (\\<forall>y. R x y \\<longrightarrow> R y x)}", "unfolding Max_wrt_def Max_wrt_among_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> UNIV.\n     R x x \\<and> (\\<forall>y\\<in>UNIV. R x y \\<longrightarrow> R y x)} =\n    {x. R x x \\<and> (\\<forall>y. R x y \\<longrightarrow> R y x)}", "by simp"], ["", "context preorder_on\nbegin"], ["", "lemma Max_wrt_among_preorder:\n  \"Max_wrt_among le A = {x\\<in>carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among le A =\n    {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}", "unfolding Max_wrt_among_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A.\n     le x x \\<and> (\\<forall>y\\<in>A. le x y \\<longrightarrow> le y x)} =\n    {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}", "using not_outside refl"], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  ?x \\<in> carrier \\<Longrightarrow> le ?x ?x\n\ngoal (1 subgoal):\n 1. {x \\<in> A.\n     le x x \\<and> (\\<forall>y\\<in>A. le x y \\<longrightarrow> le y x)} =\n    {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}", "by blast"], ["", "lemma Max_wrt_preorder:\n  \"Max_wrt le = {x\\<in>carrier. \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt le =\n    {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x}", "unfolding Max_wrt_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. le x x \\<and> (\\<forall>y. le x y \\<longrightarrow> le y x)} =\n    {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x}", "using not_outside refl"], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  ?x \\<in> carrier \\<Longrightarrow> le ?x ?x\n\ngoal (1 subgoal):\n 1. {x. le x x \\<and> (\\<forall>y. le x y \\<longrightarrow> le y x)} =\n    {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x}", "by blast"], ["", "lemma Max_wrt_among_subset:\n  \"Max_wrt_among le A \\<subseteq> carrier\" \"Max_wrt_among le A \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<subseteq> carrier &&&\n    Max_wrt_among le A \\<subseteq> A", "unfolding Max_wrt_among_preorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}\n    \\<subseteq> carrier &&&\n    {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x}\n    \\<subseteq> A", "by auto"], ["", "lemma Max_wrt_subset:\n  \"Max_wrt le \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt le \\<subseteq> carrier", "unfolding Max_wrt_preorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x}\n    \\<subseteq> carrier", "by auto"], ["", "lemma Max_wrt_among_nonempty:\n  assumes \"B \\<inter> carrier \\<noteq> {}\" \"finite (B \\<inter> carrier)\"\n  shows   \"Max_wrt_among le B \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among le B \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among le B \\<noteq> {}", "define A where \"A = B \\<inter> carrier\""], ["proof (state)\nthis:\n  A = B \\<inter> carrier\n\ngoal (1 subgoal):\n 1. Max_wrt_among le B \\<noteq> {}", "have \"A \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier", "by (simp add: A_def)"], ["proof (state)\nthis:\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. Max_wrt_among le B \\<noteq> {}", "from assms(2,1)[folded A_def] this"], ["proof (chain)\npicking this:\n  finite A\n  A \\<noteq> {}\n  A \\<subseteq> carrier", "have \"{x\\<in>A. (\\<forall>y\\<in>A. le x y \\<longrightarrow> le y x)} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. {x \\<in> A. \\<forall>y\\<in>A. le x y \\<longrightarrow> le y x} \\<noteq>\n    {}", "proof (induction A rule: finite_ne_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       {x} \\<subseteq> carrier \\<Longrightarrow>\n       {xa \\<in> {x}.\n        \\<forall>y\\<in>{x}. le xa y \\<longrightarrow> le y xa} \\<noteq>\n       {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        F \\<subseteq> carrier \\<Longrightarrow>\n        {x \\<in> F.\n         \\<forall>y\\<in>F. le x y \\<longrightarrow> le y x} \\<noteq>\n        {};\n        insert x F \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> {xa \\<in> insert x F.\n                          \\<forall>y\\<in>insert x F.\n                             le xa y \\<longrightarrow> le y xa} \\<noteq>\n                         {}", "case (singleton x)"], ["proof (state)\nthis:\n  {x} \\<subseteq> carrier\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       {x} \\<subseteq> carrier \\<Longrightarrow>\n       {xa \\<in> {x}.\n        \\<forall>y\\<in>{x}. le xa y \\<longrightarrow> le y xa} \\<noteq>\n       {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        F \\<subseteq> carrier \\<Longrightarrow>\n        {x \\<in> F.\n         \\<forall>y\\<in>F. le x y \\<longrightarrow> le y x} \\<noteq>\n        {};\n        insert x F \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> {xa \\<in> insert x F.\n                          \\<forall>y\\<in>insert x F.\n                             le xa y \\<longrightarrow> le y xa} \\<noteq>\n                         {}", "thus ?case"], ["proof (prove)\nusing this:\n  {x} \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. {xa \\<in> {x}.\n     \\<forall>y\\<in>{x}. le xa y \\<longrightarrow> le y xa} \\<noteq>\n    {}", "by (auto simp: refl)"], ["proof (state)\nthis:\n  {xa \\<in> {x}.\n   \\<forall>y\\<in>{x}. le xa y \\<longrightarrow> le y xa} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        F \\<subseteq> carrier \\<Longrightarrow>\n        {x \\<in> F.\n         \\<forall>y\\<in>F. le x y \\<longrightarrow> le y x} \\<noteq>\n        {};\n        insert x F \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> {xa \\<in> insert x F.\n                          \\<forall>y\\<in>insert x F.\n                             le xa y \\<longrightarrow> le y xa} \\<noteq>\n                         {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        F \\<subseteq> carrier \\<Longrightarrow>\n        {x \\<in> F.\n         \\<forall>y\\<in>F. le x y \\<longrightarrow> le y x} \\<noteq>\n        {};\n        insert x F \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> {xa \\<in> insert x F.\n                          \\<forall>y\\<in>insert x F.\n                             le xa y \\<longrightarrow> le y xa} \\<noteq>\n                         {}", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  A \\<noteq> {}\n  x \\<notin> A\n  A \\<subseteq> carrier \\<Longrightarrow>\n  {x \\<in> A. \\<forall>y\\<in>A. le x y \\<longrightarrow> le y x} \\<noteq> {}\n  insert x A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        F \\<subseteq> carrier \\<Longrightarrow>\n        {x \\<in> F.\n         \\<forall>y\\<in>F. le x y \\<longrightarrow> le y x} \\<noteq>\n        {};\n        insert x F \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> {xa \\<in> insert x F.\n                          \\<forall>y\\<in>insert x F.\n                             le xa y \\<longrightarrow> le y xa} \\<noteq>\n                         {}", "then"], ["proof (chain)\npicking this:\n  finite A\n  A \\<noteq> {}\n  x \\<notin> A\n  A \\<subseteq> carrier \\<Longrightarrow>\n  {x \\<in> A. \\<forall>y\\<in>A. le x y \\<longrightarrow> le y x} \\<noteq> {}\n  insert x A \\<subseteq> carrier", "obtain y where y: \"y \\<in> A\" \"\\<And>z. z \\<in> A \\<Longrightarrow> le y z \\<Longrightarrow> le z y\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<noteq> {}\n  x \\<notin> A\n  A \\<subseteq> carrier \\<Longrightarrow>\n  {x \\<in> A. \\<forall>y\\<in>A. le x y \\<longrightarrow> le y x} \\<noteq> {}\n  insert x A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> A;\n         \\<And>z.\n            \\<lbrakk>z \\<in> A; le y z\\<rbrakk>\n            \\<Longrightarrow> le z y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in> A\n  \\<lbrakk>?z \\<in> A; le y ?z\\<rbrakk> \\<Longrightarrow> le ?z y\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; F \\<noteq> {}; x \\<notin> F;\n        F \\<subseteq> carrier \\<Longrightarrow>\n        {x \\<in> F.\n         \\<forall>y\\<in>F. le x y \\<longrightarrow> le y x} \\<noteq>\n        {};\n        insert x F \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> {xa \\<in> insert x F.\n                          \\<forall>y\\<in>insert x F.\n                             le xa y \\<longrightarrow> le y xa} \\<noteq>\n                         {}", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<in> A\n  \\<lbrakk>?z \\<in> A; le y ?z\\<rbrakk> \\<Longrightarrow> le ?z y\n\ngoal (1 subgoal):\n 1. {xa \\<in> insert x A.\n     \\<forall>y\\<in>insert x A. le xa y \\<longrightarrow> le y xa} \\<noteq>\n    {}", "using insert.prems"], ["proof (prove)\nusing this:\n  y \\<in> A\n  \\<lbrakk>?z \\<in> A; le y ?z\\<rbrakk> \\<Longrightarrow> le ?z y\n  insert x A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. {xa \\<in> insert x A.\n     \\<forall>y\\<in>insert x A. le xa y \\<longrightarrow> le y xa} \\<noteq>\n    {}", "by (cases \"le y x\") (blast intro: trans)+"], ["proof (state)\nthis:\n  {xa \\<in> insert x A.\n   \\<forall>y\\<in>insert x A. le xa y \\<longrightarrow> le y xa} \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> A. \\<forall>y\\<in>A. le x y \\<longrightarrow> le y x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max_wrt_among le B \\<noteq> {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x \\<in> A. \\<forall>y\\<in>A. le x y \\<longrightarrow> le y x} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max_wrt_among le B \\<noteq> {}", "by (simp add: A_def Max_wrt_among_preorder Int_commute)"], ["proof (state)\nthis:\n  Max_wrt_among le B \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_wrt_nonempty:\n  \"carrier \\<noteq> {} \\<Longrightarrow> finite carrier \\<Longrightarrow> Max_wrt le \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>carrier \\<noteq> {}; finite carrier\\<rbrakk>\n    \\<Longrightarrow> Max_wrt le \\<noteq> {}", "using Max_wrt_among_nonempty[of UNIV]"], ["proof (prove)\nusing this:\n  \\<lbrakk>UNIV \\<inter> carrier \\<noteq> {};\n   finite (UNIV \\<inter> carrier)\\<rbrakk>\n  \\<Longrightarrow> Max_wrt_among le UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>carrier \\<noteq> {}; finite carrier\\<rbrakk>\n    \\<Longrightarrow> Max_wrt le \\<noteq> {}", "by (simp add: Max_wrt_def)"], ["", "lemma Max_wrt_among_map_relation_vimage:\n  \"f -` Max_wrt_among le A \\<subseteq> Max_wrt_among (map_relation f le) (f -` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` Max_wrt_among le A\n    \\<subseteq> Max_wrt_among (map_relation f le) (f -` A)", "by (auto simp: Max_wrt_among_def map_relation_def)"], ["", "lemma Max_wrt_map_relation_vimage:\n  \"f -` Max_wrt le \\<subseteq> Max_wrt (map_relation f le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` Max_wrt le \\<subseteq> Max_wrt (map_relation f le)", "by (auto simp: Max_wrt_altdef map_relation_def)"], ["", "lemma image_subset_vimage_the_inv_into: \n  assumes \"inj_on f A\" \"B \\<subseteq> A\"\n  shows   \"f ` B \\<subseteq> the_inv_into A f -` B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` B \\<subseteq> the_inv_into A f -` B", "using assms"], ["proof (prove)\nusing this:\n  inj_on f A\n  B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. f ` B \\<subseteq> the_inv_into A f -` B", "by (auto simp: the_inv_into_f_f)"], ["", "lemma Max_wrt_among_map_relation_bij_subset:\n  assumes \"bij (f :: 'a \\<Rightarrow> 'b)\"\n  shows   \"f ` Max_wrt_among le A \\<subseteq> \n             Max_wrt_among (map_relation (inv f) le) (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` Max_wrt_among le A\n    \\<subseteq> Max_wrt_among (map_relation (inv f) le) (f ` A)", "using assms Max_wrt_among_map_relation_vimage[of \"inv f\" A]"], ["proof (prove)\nusing this:\n  bij f\n  inv f -` Max_wrt_among le A\n  \\<subseteq> Max_wrt_among (map_relation (inv f) le) (inv f -` A)\n\ngoal (1 subgoal):\n 1. f ` Max_wrt_among le A\n    \\<subseteq> Max_wrt_among (map_relation (inv f) le) (f ` A)", "by (simp add: bij_imp_bij_inv inv_inv_eq bij_vimage_eq_inv_image)"], ["", "lemma Max_wrt_among_map_relation_bij:\n  assumes \"bij f\"\n  shows   \"f ` Max_wrt_among le A = Max_wrt_among (map_relation (inv f) le) (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` Max_wrt_among le A = Max_wrt_among (map_relation (inv f) le) (f ` A)", "proof (intro equalityI Max_wrt_among_map_relation_bij_subset assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among (map_relation (inv f) le) (f ` A)\n    \\<subseteq> f ` Max_wrt_among le A", "interpret R: preorder_on \"f ` carrier\" \"map_relation (inv f) le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f ` carrier) (map_relation (inv f) le)", "using preorder_on_map[of \"inv f\"] assms"], ["proof (prove)\nusing this:\n  Order_Predicates.preorder_on (inv f -` carrier) (map_relation (inv f) le)\n  bij f\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f ` carrier) (map_relation (inv f) le)", "by (simp add: bij_imp_bij_inv bij_vimage_eq_inv_image inv_inv_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among (map_relation (inv f) le) (f ` A)\n    \\<subseteq> f ` Max_wrt_among le A", "show \"Max_wrt_among (map_relation (inv f) le) (f ` A) \\<subseteq> f ` Max_wrt_among le A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among (map_relation (inv f) le) (f ` A)\n    \\<subseteq> f ` Max_wrt_among le A", "unfolding Max_wrt_among_preorder R.Max_wrt_among_preorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> f ` carrier \\<inter> f ` A.\n     \\<forall>y\\<in>f ` carrier \\<inter> f ` A.\n        map_relation (inv f) le x y \\<longrightarrow>\n        map_relation (inv f) le y x}\n    \\<subseteq> f `\n                {x \\<in> carrier \\<inter> A.\n                 \\<forall>y\\<in>carrier \\<inter> A.\n                    le x y \\<longrightarrow> le y x}", "using assms bij_is_inj[OF assms]"], ["proof (prove)\nusing this:\n  bij f\n  inj f\n\ngoal (1 subgoal):\n 1. {x \\<in> f ` carrier \\<inter> f ` A.\n     \\<forall>y\\<in>f ` carrier \\<inter> f ` A.\n        map_relation (inv f) le x y \\<longrightarrow>\n        map_relation (inv f) le y x}\n    \\<subseteq> f `\n                {x \\<in> carrier \\<inter> A.\n                 \\<forall>y\\<in>carrier \\<inter> A.\n                    le x y \\<longrightarrow> le y x}", "by (auto simp: map_relation_def inv_f_f image_Int [symmetric])"], ["proof (state)\nthis:\n  Max_wrt_among (map_relation (inv f) le) (f ` A)\n  \\<subseteq> f ` Max_wrt_among le A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_wrt_map_relation_bij:\n  \"bij f \\<Longrightarrow> f ` Max_wrt le = Max_wrt (map_relation (inv f) le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij f \\<Longrightarrow>\n    f ` Max_wrt le = Max_wrt (map_relation (inv f) le)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij f \\<Longrightarrow>\n    f ` Max_wrt le = Max_wrt (map_relation (inv f) le)", "assume bij: \"bij f\""], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. bij f \\<Longrightarrow>\n    f ` Max_wrt le = Max_wrt (map_relation (inv f) le)", "interpret R: preorder_on \"f ` carrier\" \"map_relation (inv f) le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f ` carrier) (map_relation (inv f) le)", "using preorder_on_map[of \"inv f\"] bij"], ["proof (prove)\nusing this:\n  Order_Predicates.preorder_on (inv f -` carrier) (map_relation (inv f) le)\n  bij f\n\ngoal (1 subgoal):\n 1. Order_Predicates.preorder_on (f ` carrier) (map_relation (inv f) le)", "by (simp add: bij_imp_bij_inv bij_vimage_eq_inv_image inv_inv_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. bij f \\<Longrightarrow>\n    f ` Max_wrt le = Max_wrt (map_relation (inv f) le)", "from bij"], ["proof (chain)\npicking this:\n  bij f", "show ?thesis"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. f ` Max_wrt le = Max_wrt (map_relation (inv f) le)", "unfolding R.Max_wrt_preorder Max_wrt_preorder"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. f `\n    {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x} =\n    {x \\<in> f ` carrier.\n     \\<forall>y\\<in>f ` carrier.\n        map_relation (inv f) le x y \\<longrightarrow>\n        map_relation (inv f) le y x}", "by (auto simp: map_relation_def inv_f_f bij_is_inj)"], ["proof (state)\nthis:\n  f ` Max_wrt le = Max_wrt (map_relation (inv f) le)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_wrt_among_mono:\n  \"le x y \\<Longrightarrow> x \\<in> Max_wrt_among le A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> y \\<in> Max_wrt_among le A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le x y; x \\<in> Max_wrt_among le A; y \\<in> A\\<rbrakk>\n    \\<Longrightarrow> y \\<in> Max_wrt_among le A", "using not_outside"], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n\ngoal (1 subgoal):\n 1. \\<lbrakk>le x y; x \\<in> Max_wrt_among le A; y \\<in> A\\<rbrakk>\n    \\<Longrightarrow> y \\<in> Max_wrt_among le A", "by (auto simp: Max_wrt_among_preorder intro: trans)"], ["", "lemma Max_wrt_mono:\n  \"le x y \\<Longrightarrow> x \\<in> Max_wrt le \\<Longrightarrow> y \\<in> Max_wrt le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le x y; x \\<in> Max_wrt le\\<rbrakk>\n    \\<Longrightarrow> y \\<in> Max_wrt le", "unfolding Max_wrt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le x y; x \\<in> Max_wrt_among le UNIV\\<rbrakk>\n    \\<Longrightarrow> y \\<in> Max_wrt_among le UNIV", "using Max_wrt_among_mono[of x y UNIV]"], ["proof (prove)\nusing this:\n  \\<lbrakk>le x y; x \\<in> Max_wrt_among le UNIV; y \\<in> UNIV\\<rbrakk>\n  \\<Longrightarrow> y \\<in> Max_wrt_among le UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>le x y; x \\<in> Max_wrt_among le UNIV\\<rbrakk>\n    \\<Longrightarrow> y \\<in> Max_wrt_among le UNIV", "by blast"], ["", "end"], ["", "context total_preorder_on\nbegin"], ["", "lemma Max_wrt_among_total_preorder:\n  \"Max_wrt_among le A = {x\\<in>carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le y x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among le A =\n    {x \\<in> carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le y x}", "unfolding Max_wrt_among_preorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x} =\n    {x \\<in> carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le y x}", "using total"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier; ?y \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le ?x ?y \\<or> le ?y ?x\n\ngoal (1 subgoal):\n 1. {x \\<in> carrier \\<inter> A.\n     \\<forall>y\\<in>carrier \\<inter> A. le x y \\<longrightarrow> le y x} =\n    {x \\<in> carrier \\<inter> A. \\<forall>y\\<in>carrier \\<inter> A. le y x}", "by blast"], ["", "lemma Max_wrt_total_preorder:\n  \"Max_wrt le = {x\\<in>carrier. \\<forall>y\\<in>carrier. le y x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt le = {x \\<in> carrier. \\<forall>y\\<in>carrier. le y x}", "unfolding Max_wrt_preorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x} =\n    {x \\<in> carrier. \\<forall>y\\<in>carrier. le y x}", "using total"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier; ?y \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> le ?x ?y \\<or> le ?y ?x\n\ngoal (1 subgoal):\n 1. {x \\<in> carrier.\n     \\<forall>y\\<in>carrier. le x y \\<longrightarrow> le y x} =\n    {x \\<in> carrier. \\<forall>y\\<in>carrier. le y x}", "by blast"], ["", "lemma decompose_Max:\n  assumes A: \"A \\<subseteq> carrier\"\n  defines \"M \\<equiv> Max_wrt_among le A\"\n  shows   \"restrict_relation A le = (\\<lambda>x y. x \\<in> A \\<and> y \\<in> M \\<or> (y \\<notin> M \\<and> restrict_relation (A - M) le x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation A le =\n    (\\<lambda>x y.\n        x \\<in> A \\<and> y \\<in> M \\<or>\n        y \\<notin> M \\<and> restrict_relation (A - M) le x y)", "using A"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. restrict_relation A le =\n    (\\<lambda>x y.\n        x \\<in> A \\<and> y \\<in> M \\<or>\n        y \\<notin> M \\<and> restrict_relation (A - M) le x y)", "by (intro ext) (auto simp: M_def Max_wrt_among_total_preorder \n                            restrict_relation_def Int_absorb1 intro: trans)"], ["", "end"], ["", "subsection \\<open>Weak rankings\\<close>"], ["", "inductive of_weak_ranking :: \"'alt set list \\<Rightarrow> 'alt relation\" where\n  \"i \\<le> j \\<Longrightarrow> i < length xs \\<Longrightarrow> j < length xs \\<Longrightarrow> x \\<in> xs ! i \\<Longrightarrow> y \\<in> xs ! j \\<Longrightarrow> \n     x \\<succeq>[of_weak_ranking xs] y\""], ["", "lemma of_weak_ranking_Nil [simp]: \"of_weak_ranking [] = (\\<lambda>_ _. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking [] = (\\<lambda>_ _. False)", "by (intro ext) (simp add: of_weak_ranking.simps)"], ["", "lemma of_weak_ranking_Nil' [code]: \"of_weak_ranking [] x y = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking [] x y = False", "by simp"], ["", "lemma of_weak_ranking_Cons [code]:\n  \"x \\<succeq>[of_weak_ranking (z#zs)] y \\<longleftrightarrow> x \\<in> z \\<and> y \\<in> \\<Union>(set (z#zs)) \\<or> x \\<succeq>[of_weak_ranking zs] y\" \n      (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (z # zs) y x =\n    (x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n     of_weak_ranking zs y x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. of_weak_ranking (z # zs) y x \\<Longrightarrow>\n    x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x\n 2. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x \\<Longrightarrow>\n    of_weak_ranking (z # zs) y x", "assume ?lhs"], ["proof (state)\nthis:\n  of_weak_ranking (z # zs) y x\n\ngoal (2 subgoals):\n 1. of_weak_ranking (z # zs) y x \\<Longrightarrow>\n    x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x\n 2. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x \\<Longrightarrow>\n    of_weak_ranking (z # zs) y x", "then"], ["proof (chain)\npicking this:\n  of_weak_ranking (z # zs) y x", "obtain i j \n    where ij: \"i < length (z#zs)\" \"j < length (z#zs)\" \"i \\<le> j\" \"x \\<in> (z#zs) ! i\" \"y \\<in> (z#zs) ! j\""], ["proof (prove)\nusing this:\n  of_weak_ranking (z # zs) y x\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < length (z # zs); j < length (z # zs); i \\<le> j;\n         x \\<in> (z # zs) ! i; y \\<in> (z # zs) ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  i < length (z # zs)\n  j < length (z # zs)\n  i \\<le> j\n  x \\<in> (z # zs) ! i\n  y \\<in> (z # zs) ! j\n\ngoal (2 subgoals):\n 1. of_weak_ranking (z # zs) y x \\<Longrightarrow>\n    x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x\n 2. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x \\<Longrightarrow>\n    of_weak_ranking (z # zs) y x", "thus ?rhs"], ["proof (prove)\nusing this:\n  i < length (z # zs)\n  j < length (z # zs)\n  i \\<le> j\n  x \\<in> (z # zs) ! i\n  y \\<in> (z # zs) ! j\n\ngoal (1 subgoal):\n 1. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x", "by (cases i; cases j) (force intro: of_weak_ranking.intros)+"], ["proof (state)\nthis:\n  x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n  of_weak_ranking zs y x\n\ngoal (1 subgoal):\n 1. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x \\<Longrightarrow>\n    of_weak_ranking (z # zs) y x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x \\<Longrightarrow>\n    of_weak_ranking (z # zs) y x", "assume ?rhs"], ["proof (state)\nthis:\n  x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n  of_weak_ranking zs y x\n\ngoal (1 subgoal):\n 1. x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n    of_weak_ranking zs y x \\<Longrightarrow>\n    of_weak_ranking (z # zs) y x", "thus ?lhs"], ["proof (prove)\nusing this:\n  x \\<in> z \\<and> y \\<in> \\<Union> (set (z # zs)) \\<or>\n  of_weak_ranking zs y x\n\ngoal (1 subgoal):\n 1. of_weak_ranking (z # zs) y x", "proof (elim disjE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> z; y \\<in> \\<Union> (set (z # zs))\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (z # zs) y x\n 2. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "assume \"x \\<in> z\" \"y \\<in> \\<Union>(set (z # zs))\""], ["proof (state)\nthis:\n  x \\<in> z\n  y \\<in> \\<Union> (set (z # zs))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> z; y \\<in> \\<Union> (set (z # zs))\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (z # zs) y x\n 2. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "then"], ["proof (chain)\npicking this:\n  x \\<in> z\n  y \\<in> \\<Union> (set (z # zs))", "obtain j where \"j < length (z # zs)\" \"y \\<in> (z # zs) ! j\""], ["proof (prove)\nusing this:\n  x \\<in> z\n  y \\<in> \\<Union> (set (z # zs))\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j < length (z # zs); y \\<in> (z # zs) ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (subst (asm) set_conv_nth) auto"], ["proof (state)\nthis:\n  j < length (z # zs)\n  y \\<in> (z # zs) ! j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<in> z; y \\<in> \\<Union> (set (z # zs))\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (z # zs) y x\n 2. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "with \\<open>x \\<in> z\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> z\n  j < length (z # zs)\n  y \\<in> (z # zs) ! j", "show \"of_weak_ranking (z # zs) y x\""], ["proof (prove)\nusing this:\n  x \\<in> z\n  j < length (z # zs)\n  y \\<in> (z # zs) ! j\n\ngoal (1 subgoal):\n 1. of_weak_ranking (z # zs) y x", "by (intro of_weak_ranking.intros[of 0 j]) auto"], ["proof (state)\nthis:\n  of_weak_ranking (z # zs) y x\n\ngoal (1 subgoal):\n 1. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "assume \"of_weak_ranking zs y x\""], ["proof (state)\nthis:\n  of_weak_ranking zs y x\n\ngoal (1 subgoal):\n 1. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "then"], ["proof (chain)\npicking this:\n  of_weak_ranking zs y x", "obtain i j where \"i < length zs\" \"j < length zs\" \"i \\<le> j\" \"x \\<in> zs ! i\" \"y \\<in> zs ! j\""], ["proof (prove)\nusing this:\n  of_weak_ranking zs y x\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < length zs; j < length zs; i \\<le> j; x \\<in> zs ! i;\n         y \\<in> zs ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast elim: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  i < length zs\n  j < length zs\n  i \\<le> j\n  x \\<in> zs ! i\n  y \\<in> zs ! j\n\ngoal (1 subgoal):\n 1. of_weak_ranking zs y x \\<Longrightarrow> of_weak_ranking (z # zs) y x", "thus \"of_weak_ranking (z # zs) y x\""], ["proof (prove)\nusing this:\n  i < length zs\n  j < length zs\n  i \\<le> j\n  x \\<in> zs ! i\n  y \\<in> zs ! j\n\ngoal (1 subgoal):\n 1. of_weak_ranking (z # zs) y x", "by (intro of_weak_ranking.intros[of \"Suc i\" \"Suc j\"]) auto"], ["proof (state)\nthis:\n  of_weak_ranking (z # zs) y x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_weak_ranking (z # zs) y x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_weak_ranking_indifference:\n  assumes \"A \\<in> set xs\" \"x \\<in> A\" \"y \\<in> A\"\n  shows   \"x \\<preceq>[of_weak_ranking xs] y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> set xs\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y", "by (induction xs) (auto simp: of_weak_ranking_Cons)"], ["", "lemma of_weak_ranking_map:\n  \"map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)", "by (intro ext, induction xs)\n     (simp_all add: map_relation_def of_weak_ranking_Cons)"], ["", "lemma of_weak_ranking_permute':\n  assumes \"f permutes (\\<Union>(set xs))\"\n  shows   \"map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((`) (inv f)) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) =\n    of_weak_ranking (map ((`) (inv f)) xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) =\n    of_weak_ranking (map ((`) (inv f)) xs)", "have \"map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)", "by (rule of_weak_ranking_map)"], ["proof (state)\nthis:\n  map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)\n\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) =\n    of_weak_ranking (map ((`) (inv f)) xs)", "also"], ["proof (state)\nthis:\n  map_relation f (of_weak_ranking xs) = of_weak_ranking (map ((-`) f) xs)\n\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) =\n    of_weak_ranking (map ((`) (inv f)) xs)", "from assms"], ["proof (chain)\npicking this:\n  f permutes \\<Union> (set xs)", "have \"map ((-`) f) xs = map ((`) (inv f)) xs\""], ["proof (prove)\nusing this:\n  f permutes \\<Union> (set xs)\n\ngoal (1 subgoal):\n 1. map ((-`) f) xs = map ((`) (inv f)) xs", "by (intro map_cong refl) (simp_all add: bij_vimage_eq_inv_image permutes_bij)"], ["proof (state)\nthis:\n  map ((-`) f) xs = map ((`) (inv f)) xs\n\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) =\n    of_weak_ranking (map ((`) (inv f)) xs)", "finally"], ["proof (chain)\npicking this:\n  map_relation f (of_weak_ranking xs) =\n  of_weak_ranking (map ((`) (inv f)) xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  map_relation f (of_weak_ranking xs) =\n  of_weak_ranking (map ((`) (inv f)) xs)\n\ngoal (1 subgoal):\n 1. map_relation f (of_weak_ranking xs) =\n    of_weak_ranking (map ((`) (inv f)) xs)", "."], ["proof (state)\nthis:\n  map_relation f (of_weak_ranking xs) =\n  of_weak_ranking (map ((`) (inv f)) xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_weak_ranking_permute:\n  assumes \"f permutes (\\<Union>(set xs))\"\n  shows   \"of_weak_ranking (map ((`) f) xs) = map_relation (inv f) (of_weak_ranking xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (map ((`) f) xs) =\n    map_relation (inv f) (of_weak_ranking xs)", "using of_weak_ranking_permute'[OF permutes_inv[OF assms]] assms"], ["proof (prove)\nusing this:\n  map_relation (inv f) (of_weak_ranking xs) =\n  of_weak_ranking (map ((`) (inv (inv f))) xs)\n  f permutes \\<Union> (set xs)\n\ngoal (1 subgoal):\n 1. of_weak_ranking (map ((`) f) xs) =\n    map_relation (inv f) (of_weak_ranking xs)", "by (simp add: inv_inv_eq permutes_bij)"], ["", "definition is_weak_ranking where\n  \"is_weak_ranking xs \\<longleftrightarrow> ({} \\<notin> set xs) \\<and>\n     (\\<forall>i j. i < length xs \\<and> j < length xs \\<and> i \\<noteq> j \\<longrightarrow> xs ! i \\<inter> xs ! j = {})\""], ["", "definition is_finite_weak_ranking where\n  \"is_finite_weak_ranking xs \\<longleftrightarrow> is_weak_ranking xs \\<and> (\\<forall>x\\<in>set xs. finite x)\""], ["", "definition weak_ranking :: \"'alt relation \\<Rightarrow> 'alt set list\" where\n  \"weak_ranking R = (SOME xs. is_weak_ranking xs \\<and> R = of_weak_ranking xs)\""], ["", "lemma is_weak_rankingI [intro?]:\n  assumes \"{} \\<notin> set xs\" \"\\<And>i j. i < length xs \\<Longrightarrow> j < length xs \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> xs ! i \\<inter> xs ! j = {}\"\n  shows   \"is_weak_ranking xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking xs", "using assms"], ["proof (prove)\nusing this:\n  {} \\<notin> set xs\n  \\<lbrakk>?i < length xs; ?j < length xs; ?i \\<noteq> ?j\\<rbrakk>\n  \\<Longrightarrow> xs ! ?i \\<inter> xs ! ?j = {}\n\ngoal (1 subgoal):\n 1. is_weak_ranking xs", "by (auto simp add: is_weak_ranking_def)"], ["", "lemma is_weak_ranking_nonempty: \"is_weak_ranking xs \\<Longrightarrow> {} \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking xs \\<Longrightarrow> {} \\<notin> set xs", "by (simp add: is_weak_ranking_def)"], ["", "lemma is_weak_rankingD:\n  assumes \"is_weak_ranking xs\" \"i < length xs\" \"j < length xs\" \"i \\<noteq> j\"\n  shows   \"xs ! i \\<inter> xs ! j = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! i \\<inter> xs ! j = {}", "using assms"], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. xs ! i \\<inter> xs ! j = {}", "by (simp add: is_weak_ranking_def)"], ["", "lemma is_weak_ranking_iff:\n  \"is_weak_ranking xs \\<longleftrightarrow> distinct xs \\<and> disjoint (set xs) \\<and> {} \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking xs =\n    (distinct xs \\<and> disjoint (set xs) \\<and> {} \\<notin> set xs)", "proof safe"], ["proof (state)\ngoal (4 subgoals):\n 1. is_weak_ranking xs \\<Longrightarrow> distinct xs\n 2. is_weak_ranking xs \\<Longrightarrow> disjoint (set xs)\n 3. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>distinct xs; disjoint (set xs); {} \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> is_weak_ranking xs", "assume wf: \"is_weak_ranking xs\""], ["proof (state)\nthis:\n  is_weak_ranking xs\n\ngoal (4 subgoals):\n 1. is_weak_ranking xs \\<Longrightarrow> distinct xs\n 2. is_weak_ranking xs \\<Longrightarrow> disjoint (set xs)\n 3. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>distinct xs; disjoint (set xs); {} \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> is_weak_ranking xs", "from wf"], ["proof (chain)\npicking this:\n  is_weak_ranking xs", "show \"disjoint (set xs)\""], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n\ngoal (1 subgoal):\n 1. disjoint (set xs)", "by (auto simp: disjoint_def is_weak_ranking_def set_conv_nth)"], ["proof (state)\nthis:\n  disjoint (set xs)\n\ngoal (3 subgoals):\n 1. is_weak_ranking xs \\<Longrightarrow> distinct xs\n 2. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>distinct xs; disjoint (set xs); {} \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> is_weak_ranking xs", "show \"distinct xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs", "proof (subst distinct_conv_nth, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "assume ij: \"i < length xs\" \"j < length xs\" \"i \\<noteq> j\" \"xs ! i = xs ! j\""], ["proof (state)\nthis:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j", "have \"xs ! i \\<inter> xs ! j = {}\""], ["proof (prove)\nusing this:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n\ngoal (1 subgoal):\n 1. xs ! i \\<inter> xs ! j = {}", "by (intro is_weak_rankingD wf)"], ["proof (state)\nthis:\n  xs ! i \\<inter> xs ! j = {}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "with ij"], ["proof (chain)\npicking this:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n  xs ! i \\<inter> xs ! j = {}", "have \"xs ! i = {}\""], ["proof (prove)\nusing this:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n  xs ! i \\<inter> xs ! j = {}\n\ngoal (1 subgoal):\n 1. xs ! i = {}", "by simp"], ["proof (state)\nthis:\n  xs ! i = {}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "with ij"], ["proof (chain)\npicking this:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n  xs ! i = {}", "have \"{} \\<in> set xs\""], ["proof (prove)\nusing this:\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n  xs ! i = {}\n\ngoal (1 subgoal):\n 1. {} \\<in> set xs", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  {} \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  {} \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "from wf ij"], ["proof (chain)\npicking this:\n  is_weak_ranking xs\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j", "have \"{} \\<notin> set xs\""], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  i < length xs\n  j < length xs\n  i \\<noteq> j\n  xs ! i = xs ! j\n\ngoal (1 subgoal):\n 1. {} \\<notin> set xs", "by (intro is_weak_ranking_nonempty wf)"], ["proof (state)\nthis:\n  {} \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < length xs; j < length xs; i \\<noteq> j;\n        xs ! i = xs ! j\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  {} \\<in> set xs\n  {} \\<notin> set xs", "show False"], ["proof (prove)\nusing this:\n  {} \\<in> set xs\n  {} \\<notin> set xs\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>distinct xs; disjoint (set xs); {} \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> is_weak_ranking xs", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>distinct xs; disjoint (set xs); {} \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> is_weak_ranking xs", "assume A: \"distinct xs\" \"disjoint (set xs)\" \"{} \\<notin> set xs\""], ["proof (state)\nthis:\n  distinct xs\n  disjoint (set xs)\n  {} \\<notin> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>distinct xs; disjoint (set xs); {} \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> is_weak_ranking xs", "thus \"is_weak_ranking xs\""], ["proof (prove)\nusing this:\n  distinct xs\n  disjoint (set xs)\n  {} \\<notin> set xs\n\ngoal (1 subgoal):\n 1. is_weak_ranking xs", "by (intro is_weak_rankingI) (auto simp: disjoint_def distinct_conv_nth)"], ["proof (state)\nthis:\n  is_weak_ranking xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_weak_ranking xs; {} \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> False", "qed (simp_all add: is_weak_ranking_nonempty)"], ["", "lemma is_weak_ranking_rev [simp]: \"is_weak_ranking (rev xs) \\<longleftrightarrow> is_weak_ranking xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking (rev xs) = is_weak_ranking xs", "by (simp add: is_weak_ranking_iff)"], ["", "lemma is_weak_ranking_map_inj:\n  assumes \"is_weak_ranking xs\" \"inj_on f (\\<Union>(set xs))\"\n  shows   \"is_weak_ranking (map ((`) f) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking (map ((`) f) xs)", "using assms"], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  inj_on f (\\<Union> (set xs))\n\ngoal (1 subgoal):\n 1. is_weak_ranking (map ((`) f) xs)", "by (auto simp: is_weak_ranking_iff distinct_map inj_on_image disjoint_image)"], ["", "lemma of_weak_ranking_rev [simp]:\n  \"of_weak_ranking (rev xs) (x::'a) y \\<longleftrightarrow> of_weak_ranking xs y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) x y = of_weak_ranking xs y x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) x y = of_weak_ranking xs y x", "have \"of_weak_ranking (rev xs) y x\" if \"of_weak_ranking xs x y\" for xs and x y :: 'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) y x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) y x", "from that"], ["proof (chain)\npicking this:\n  of_weak_ranking xs x y", "obtain i j where \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"y \\<in> xs ! j\" \"i \\<ge> j\""], ["proof (prove)\nusing this:\n  of_weak_ranking xs x y\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < length xs; j < length xs; x \\<in> xs ! i;\n         y \\<in> xs ! j; j \\<le> i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim of_weak_ranking.cases) simp_all"], ["proof (state)\nthis:\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) y x", "thus ?thesis"], ["proof (prove)\nusing this:\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) y x", "by (intro of_weak_ranking.intros[of \"length xs - i - 1\" \"length xs - j - 1\"] diff_le_mono2)\n         (auto simp: diff_le_mono2 rev_nth)"], ["proof (state)\nthis:\n  of_weak_ranking (rev xs) y x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_weak_ranking ?xs ?x ?y \\<Longrightarrow>\n  of_weak_ranking (rev ?xs) ?y ?x\n\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) x y = of_weak_ranking xs y x", "from this[of xs y x] this[of \"rev xs\" x y]"], ["proof (chain)\npicking this:\n  of_weak_ranking xs y x \\<Longrightarrow> of_weak_ranking (rev xs) x y\n  of_weak_ranking (rev xs) x y \\<Longrightarrow>\n  of_weak_ranking (rev (rev xs)) y x", "show ?thesis"], ["proof (prove)\nusing this:\n  of_weak_ranking xs y x \\<Longrightarrow> of_weak_ranking (rev xs) x y\n  of_weak_ranking (rev xs) x y \\<Longrightarrow>\n  of_weak_ranking (rev (rev xs)) y x\n\ngoal (1 subgoal):\n 1. of_weak_ranking (rev xs) x y = of_weak_ranking xs y x", "by (intro iffI) simp_all"], ["proof (state)\nthis:\n  of_weak_ranking (rev xs) x y = of_weak_ranking xs y x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_weak_ranking_Nil [simp, code]: \"is_weak_ranking []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking []", "by (auto simp: is_weak_ranking_def)"], ["", "lemma is_finite_weak_ranking_Nil [simp, code]: \"is_finite_weak_ranking []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_finite_weak_ranking []", "by (auto simp: is_finite_weak_ranking_def)"], ["", "lemma is_weak_ranking_Cons_empty [simp]:\n  \"\\<not>is_weak_ranking ({} # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_weak_ranking ({} # xs)", "by (simp add: is_weak_ranking_def)"], ["", "lemma is_finite_weak_ranking_Cons_empty [simp]:\n  \"\\<not>is_finite_weak_ranking ({} # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_finite_weak_ranking ({} # xs)", "by (simp add: is_finite_weak_ranking_def)"], ["", "lemma is_weak_ranking_singleton [simp]:\n  \"is_weak_ranking [x] \\<longleftrightarrow> x \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking [x] = (x \\<noteq> {})", "by (auto simp add: is_weak_ranking_def)"], ["", "lemma is_finite_weak_ranking_singleton [simp]:\n  \"is_finite_weak_ranking [x] \\<longleftrightarrow> x \\<noteq> {} \\<and> finite x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_finite_weak_ranking [x] = (x \\<noteq> {} \\<and> finite x)", "by (auto simp add: is_finite_weak_ranking_def)"], ["", "lemma is_weak_ranking_append:\n  \"is_weak_ranking (xs @ ys) \\<longleftrightarrow> \n      is_weak_ranking xs \\<and> is_weak_ranking ys \\<and>\n      (set xs \\<inter> set ys = {} \\<and> \\<Union>(set xs) \\<inter> \\<Union>(set ys) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking (xs @ ys) =\n    (is_weak_ranking xs \\<and>\n     is_weak_ranking ys \\<and>\n     set xs \\<inter> set ys = {} \\<and>\n     \\<Union> (set xs) \\<inter> \\<Union> (set ys) = {})", "by (simp only: is_weak_ranking_iff)\n     (auto dest: disjointD disjoint_unionD1 disjoint_unionD2 intro: disjoint_union)"], ["", "lemma is_weak_ranking_Cons [code]:\n  \"is_weak_ranking (x # xs) \\<longleftrightarrow> \n      x \\<noteq> {} \\<and> is_weak_ranking xs \\<and> x \\<inter> \\<Union>(set xs) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking (x # xs) =\n    (x \\<noteq> {} \\<and>\n     is_weak_ranking xs \\<and> x \\<inter> \\<Union> (set xs) = {})", "using is_weak_ranking_append[of \"[x]\" xs]"], ["proof (prove)\nusing this:\n  is_weak_ranking ([x] @ xs) =\n  (is_weak_ranking [x] \\<and>\n   is_weak_ranking xs \\<and>\n   set [x] \\<inter> set xs = {} \\<and>\n   \\<Union> (set [x]) \\<inter> \\<Union> (set xs) = {})\n\ngoal (1 subgoal):\n 1. is_weak_ranking (x # xs) =\n    (x \\<noteq> {} \\<and>\n     is_weak_ranking xs \\<and> x \\<inter> \\<Union> (set xs) = {})", "by auto"], ["", "lemma is_finite_weak_ranking_Cons [code]:\n  \"is_finite_weak_ranking (x # xs) \\<longleftrightarrow> \n      x \\<noteq> {} \\<and> finite x \\<and> is_finite_weak_ranking xs \\<and> x \\<inter> \\<Union>(set xs) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_finite_weak_ranking (x # xs) =\n    (x \\<noteq> {} \\<and>\n     finite x \\<and>\n     is_finite_weak_ranking xs \\<and> x \\<inter> \\<Union> (set xs) = {})", "by (auto simp add: is_finite_weak_ranking_def is_weak_ranking_Cons)"], ["", "primrec is_weak_ranking_aux where\n  \"is_weak_ranking_aux A [] \\<longleftrightarrow> True\"\n| \"is_weak_ranking_aux A (x#xs) \\<longleftrightarrow> x \\<noteq> {} \\<and>\n       A \\<inter> x = {} \\<and> is_weak_ranking_aux (A \\<union> x) xs\""], ["", "lemma is_weak_ranking_aux:\n  \"is_weak_ranking_aux A xs \\<longleftrightarrow> A \\<inter> \\<Union>(set xs) = {} \\<and> is_weak_ranking xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking_aux A xs =\n    (A \\<inter> \\<Union> (set xs) = {} \\<and> is_weak_ranking xs)", "by (induction xs arbitrary: A) (auto simp: is_weak_ranking_Cons)"], ["", "lemma is_weak_ranking_code [code]:\n  \"is_weak_ranking xs \\<longleftrightarrow> is_weak_ranking_aux {} xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking xs = is_weak_ranking_aux {} xs", "by (subst is_weak_ranking_aux) auto"], ["", "lemma of_weak_ranking_altdef:\n  assumes \"is_weak_ranking xs\" \"x \\<in> \\<Union>(set xs)\" \"y \\<in> \\<Union>(set xs)\"\n  shows   \"of_weak_ranking xs x y \\<longleftrightarrow> \n             find_index ((\\<in>) x) xs \\<ge> find_index ((\\<in>) y) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y =\n    (find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y =\n    (find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs)", "from assms"], ["proof (chain)\npicking this:\n  is_weak_ranking xs\n  x \\<in> \\<Union> (set xs)\n  y \\<in> \\<Union> (set xs)", "have A: \"find_index ((\\<in>) x) xs < length xs\" \"find_index ((\\<in>) y) xs < length xs\""], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  x \\<in> \\<Union> (set xs)\n  y \\<in> \\<Union> (set xs)\n\ngoal (1 subgoal):\n 1. find_index ((\\<in>) x) xs < length xs &&&\n    find_index ((\\<in>) y) xs < length xs", "by (simp_all add: find_index_less_size_conv)"], ["proof (state)\nthis:\n  find_index ((\\<in>) x) xs < length xs\n  find_index ((\\<in>) y) xs < length xs\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y =\n    (find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs)", "from this[THEN nth_find_index]"], ["proof (chain)\npicking this:\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs", "have B: \"x \\<in> xs ! find_index ((\\<in>) x) xs\" \"y \\<in> xs ! find_index ((\\<in>) y) xs\""], ["proof (prove)\nusing this:\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n\ngoal (1 subgoal):\n 1. x \\<in> xs ! find_index ((\\<in>) x) xs &&&\n    y \\<in> xs ! find_index ((\\<in>) y) xs", "."], ["proof (state)\nthis:\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y =\n    (find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y =\n    (find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. of_weak_ranking xs x y \\<Longrightarrow>\n    find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n 2. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "assume \"of_weak_ranking xs x y\""], ["proof (state)\nthis:\n  of_weak_ranking xs x y\n\ngoal (2 subgoals):\n 1. of_weak_ranking xs x y \\<Longrightarrow>\n    find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n 2. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "then"], ["proof (chain)\npicking this:\n  of_weak_ranking xs x y", "obtain i j where ij: \"j \\<le> i\" \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"y \\<in> xs !j\""], ["proof (prove)\nusing this:\n  of_weak_ranking xs x y\n\ngoal (1 subgoal):\n 1. (\\<And>j i.\n        \\<lbrakk>j \\<le> i; i < length xs; j < length xs; x \\<in> xs ! i;\n         y \\<in> xs ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases rule: of_weak_ranking.cases) simp_all"], ["proof (state)\nthis:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n\ngoal (2 subgoals):\n 1. of_weak_ranking xs x y \\<Longrightarrow>\n    find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n 2. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "with A B"], ["proof (chain)\npicking this:\n  find_index ((\\<in>) x) xs < length xs\n  find_index ((\\<in>) y) xs < length xs\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j", "have \"i = find_index ((\\<in>) x) xs\" \"j = find_index ((\\<in>) y) xs\""], ["proof (prove)\nusing this:\n  find_index ((\\<in>) x) xs < length xs\n  find_index ((\\<in>) y) xs < length xs\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. i = find_index ((\\<in>) x) xs &&& j = find_index ((\\<in>) y) xs", "using assms(1)"], ["proof (prove)\nusing this:\n  find_index ((\\<in>) x) xs < length xs\n  find_index ((\\<in>) y) xs < length xs\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  is_weak_ranking xs\n\ngoal (1 subgoal):\n 1. i = find_index ((\\<in>) x) xs &&& j = find_index ((\\<in>) y) xs", "unfolding is_weak_ranking_def"], ["proof (prove)\nusing this:\n  find_index ((\\<in>) x) xs < length xs\n  find_index ((\\<in>) y) xs < length xs\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  {} \\<notin> set xs \\<and>\n  (\\<forall>i j.\n      i < length xs \\<and>\n      j < length xs \\<and> i \\<noteq> j \\<longrightarrow>\n      xs ! i \\<inter> xs ! j = {})\n\ngoal (1 subgoal):\n 1. i = find_index ((\\<in>) x) xs &&& j = find_index ((\\<in>) y) xs", "by blast+"], ["proof (state)\nthis:\n  i = find_index ((\\<in>) x) xs\n  j = find_index ((\\<in>) y) xs\n\ngoal (2 subgoals):\n 1. of_weak_ranking xs x y \\<Longrightarrow>\n    find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n 2. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "with ij"], ["proof (chain)\npicking this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  i = find_index ((\\<in>) x) xs\n  j = find_index ((\\<in>) y) xs", "show \"find_index ((\\<in>) x) xs \\<ge> find_index ((\\<in>) y) xs\""], ["proof (prove)\nusing this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  i = find_index ((\\<in>) x) xs\n  j = find_index ((\\<in>) y) xs\n\ngoal (1 subgoal):\n 1. find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs", "by simp"], ["proof (state)\nthis:\n  find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n\ngoal (1 subgoal):\n 1. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "assume \"find_index ((\\<in>) x) xs \\<ge> find_index ((\\<in>) y) xs\""], ["proof (state)\nthis:\n  find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n\ngoal (1 subgoal):\n 1. find_index ((\\<in>) y) xs\n    \\<le> find_index ((\\<in>) x) xs \\<Longrightarrow>\n    of_weak_ranking xs x y", "from this A(2,1) B(2,1)"], ["proof (chain)\npicking this:\n  find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n  find_index ((\\<in>) y) xs < length xs\n  find_index ((\\<in>) x) xs < length xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n  x \\<in> xs ! find_index ((\\<in>) x) xs", "show \"of_weak_ranking xs x y\""], ["proof (prove)\nusing this:\n  find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs\n  find_index ((\\<in>) y) xs < length xs\n  find_index ((\\<in>) x) xs < length xs\n  y \\<in> xs ! find_index ((\\<in>) y) xs\n  x \\<in> xs ! find_index ((\\<in>) x) xs\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y", "by (rule of_weak_ranking.intros)"], ["proof (state)\nthis:\n  of_weak_ranking xs x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_weak_ranking xs x y =\n  (find_index ((\\<in>) y) xs \\<le> find_index ((\\<in>) x) xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma total_preorder_of_weak_ranking:\n  assumes \"\\<Union>(set xs) = A\"\n  assumes \"is_weak_ranking xs\"\n  shows   \"total_preorder_on A (of_weak_ranking xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on A (of_weak_ranking xs)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. of_weak_ranking xs x y \\<Longrightarrow> x \\<in> A\n 2. \\<And>x y. of_weak_ranking xs x y \\<Longrightarrow> y \\<in> A\n 3. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 4. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "fix x y"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. of_weak_ranking xs x y \\<Longrightarrow> x \\<in> A\n 2. \\<And>x y. of_weak_ranking xs x y \\<Longrightarrow> y \\<in> A\n 3. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 4. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "assume \"x \\<preceq>[of_weak_ranking xs] y\""], ["proof (state)\nthis:\n  of_weak_ranking xs x y\n\ngoal (5 subgoals):\n 1. \\<And>x y. of_weak_ranking xs x y \\<Longrightarrow> x \\<in> A\n 2. \\<And>x y. of_weak_ranking xs x y \\<Longrightarrow> y \\<in> A\n 3. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 4. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "with assms"], ["proof (chain)\npicking this:\n  \\<Union> (set xs) = A\n  is_weak_ranking xs\n  of_weak_ranking xs x y", "show \"x \\<in> A\" \"y \\<in> A\""], ["proof (prove)\nusing this:\n  \\<Union> (set xs) = A\n  is_weak_ranking xs\n  of_weak_ranking xs x y\n\ngoal (1 subgoal):\n 1. x \\<in> A &&& y \\<in> A", "by (auto elim!: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 2. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 2. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 2. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 2. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "with assms(1)"], ["proof (chain)\npicking this:\n  \\<Union> (set xs) = A\n  x \\<in> A", "obtain i where \"i < length xs\" \"x \\<in> xs ! i\""], ["proof (prove)\nusing this:\n  \\<Union> (set xs) = A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length xs; x \\<in> xs ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  i < length xs\n  x \\<in> xs ! i\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> of_weak_ranking xs x x\n 2. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "thus \"x \\<preceq>[of_weak_ranking xs] x\""], ["proof (prove)\nusing this:\n  i < length xs\n  x \\<in> xs ! i\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x x", "by (auto intro: of_weak_ranking.intros)"], ["proof (state)\nthis:\n  of_weak_ranking xs x x\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "assume \"x \\<in> A\" \"y \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "with assms(1)"], ["proof (chain)\npicking this:\n  \\<Union> (set xs) = A\n  x \\<in> A\n  y \\<in> A", "obtain i j where ij: \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"y \\<in> xs ! j\""], ["proof (prove)\nusing this:\n  \\<Union> (set xs) = A\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < length xs; j < length xs; x \\<in> xs ! i;\n         y \\<in> xs ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "consider \"i \\<le> j\" | \"j \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> j \\<Longrightarrow> thesis;\n     j \\<le> i \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> j \\<Longrightarrow> ?thesis;\n   j \\<le> i \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "thus \"x \\<preceq>[of_weak_ranking xs] y \\<or> y \\<preceq>[of_weak_ranking xs] x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> j \\<Longrightarrow> ?thesis;\n   j \\<le> i \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y \\<or> of_weak_ranking xs y x", "by cases (insert ij, (blast intro: of_weak_ranking.intros)+)"], ["proof (state)\nthis:\n  of_weak_ranking xs x y \\<or> of_weak_ranking xs y x\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "assume A: \"x \\<preceq>[of_weak_ranking xs] y\" and B: \"y \\<preceq>[of_weak_ranking xs] z\""], ["proof (state)\nthis:\n  of_weak_ranking xs x y\n  of_weak_ranking xs y z\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "from A"], ["proof (chain)\npicking this:\n  of_weak_ranking xs x y", "obtain i j \n    where ij: \"i \\<ge> j\" \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"y \\<in> xs ! j\""], ["proof (prove)\nusing this:\n  of_weak_ranking xs x y\n\ngoal (1 subgoal):\n 1. (\\<And>j i.\n        \\<lbrakk>j \\<le> i; i < length xs; j < length xs; x \\<in> xs ! i;\n         y \\<in> xs ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "moreover"], ["proof (state)\nthis:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "from B"], ["proof (chain)\npicking this:\n  of_weak_ranking xs y z", "obtain j' k \n    where j'k: \"j' \\<ge> k\" \"j' < length xs\" \"k < length xs\" \"y \\<in> xs ! j'\" \"z \\<in> xs ! k\""], ["proof (prove)\nusing this:\n  of_weak_ranking xs y z\n\ngoal (1 subgoal):\n 1. (\\<And>k j'.\n        \\<lbrakk>k \\<le> j'; j' < length xs; k < length xs; y \\<in> xs ! j';\n         z \\<in> xs ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  k \\<le> j'\n  j' < length xs\n  k < length xs\n  y \\<in> xs ! j'\n  z \\<in> xs ! k\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "moreover"], ["proof (state)\nthis:\n  k \\<le> j'\n  j' < length xs\n  k < length xs\n  y \\<in> xs ! j'\n  z \\<in> xs ! k\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "from ij j'k is_weak_rankingD[OF assms(2), of j j']"], ["proof (chain)\npicking this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  k \\<le> j'\n  j' < length xs\n  k < length xs\n  y \\<in> xs ! j'\n  z \\<in> xs ! k\n  \\<lbrakk>j < length xs; j' < length xs; j \\<noteq> j'\\<rbrakk>\n  \\<Longrightarrow> xs ! j \\<inter> xs ! j' = {}", "have \"j = j'\""], ["proof (prove)\nusing this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  k \\<le> j'\n  j' < length xs\n  k < length xs\n  y \\<in> xs ! j'\n  z \\<in> xs ! k\n  \\<lbrakk>j < length xs; j' < length xs; j \\<noteq> j'\\<rbrakk>\n  \\<Longrightarrow> xs ! j \\<inter> xs ! j' = {}\n\ngoal (1 subgoal):\n 1. j = j'", "by blast"], ["proof (state)\nthis:\n  j = j'\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>of_weak_ranking xs x y; of_weak_ranking xs y z\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking xs x z", "ultimately"], ["proof (chain)\npicking this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  k \\<le> j'\n  j' < length xs\n  k < length xs\n  y \\<in> xs ! j'\n  z \\<in> xs ! k\n  j = j'", "show \"x \\<preceq>[of_weak_ranking xs] z\""], ["proof (prove)\nusing this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  k \\<le> j'\n  j' < length xs\n  k < length xs\n  y \\<in> xs ! j'\n  z \\<in> xs ! k\n  j = j'\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x z", "by (auto intro: of_weak_ranking.intros[of k i])"], ["proof (state)\nthis:\n  of_weak_ranking xs x z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restrict_relation_of_weak_ranking_Cons:\n  assumes \"is_weak_ranking (A # As)\"\n  shows   \"restrict_relation (\\<Union>(set As)) (of_weak_ranking (A # As)) = of_weak_ranking As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n    of_weak_ranking As", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n    of_weak_ranking As", "from assms"], ["proof (chain)\npicking this:\n  is_weak_ranking (A # As)", "interpret R: total_preorder_on \"\\<Union>(set As)\" \"of_weak_ranking As\""], ["proof (prove)\nusing this:\n  is_weak_ranking (A # As)\n\ngoal (1 subgoal):\n 1. total_preorder_on (\\<Union> (set As)) (of_weak_ranking As)", "by (intro total_preorder_of_weak_ranking)\n       (simp_all add: is_weak_ranking_Cons)"], ["proof (state)\ngoal (1 subgoal):\n 1. restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n    of_weak_ranking As", "from assms"], ["proof (chain)\npicking this:\n  is_weak_ranking (A # As)", "show ?thesis"], ["proof (prove)\nusing this:\n  is_weak_ranking (A # As)\n\ngoal (1 subgoal):\n 1. restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n    of_weak_ranking As", "using R.not_outside"], ["proof (prove)\nusing this:\n  is_weak_ranking (A # As)\n  of_weak_ranking As ?x ?y \\<Longrightarrow> ?x \\<in> \\<Union> (set As)\n  of_weak_ranking As ?x ?y \\<Longrightarrow> ?y \\<in> \\<Union> (set As)\n\ngoal (1 subgoal):\n 1. restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n    of_weak_ranking As", "by (intro ext) (auto simp: restrict_relation_def of_weak_ranking_Cons\n                     is_weak_ranking_Cons)"], ["proof (state)\nthis:\n  restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n  of_weak_ranking As\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas of_weak_ranking_wf = \n  total_preorder_of_weak_ranking is_weak_ranking_code insert_commute"], ["", "(* Test *)"], ["", "lemma \"total_preorder_on {1,2,3,4::nat} (of_weak_ranking [{1,3},{2},{4}])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on {1, 2, 3, 4} (of_weak_ranking [{1, 3}, {2}, {4}])", "by (simp add: of_weak_ranking_wf)"], ["", "context\n  fixes x :: \"'alt set\" and xs :: \"'alt set list\"\n  assumes wf: \"is_weak_ranking (x#xs)\"\nbegin"], ["", "interpretation R: total_preorder_on \"\\<Union>(set (x#xs))\" \"of_weak_ranking (x#xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on (\\<Union> (set (x # xs))) (of_weak_ranking (x # xs))", "by (intro total_preorder_of_weak_ranking) (simp_all add: wf)"], ["", "lemma of_weak_ranking_imp_in_set:\n  assumes \"of_weak_ranking xs a b\"\n  shows   \"a \\<in> \\<Union>(set xs)\" \"b \\<in> \\<Union>(set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<Union> (set xs) &&& b \\<in> \\<Union> (set xs)", "using assms"], ["proof (prove)\nusing this:\n  of_weak_ranking xs a b\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Union> (set xs) &&& b \\<in> \\<Union> (set xs)", "by (fastforce elim!: of_weak_ranking.cases)+"], ["", "lemma of_weak_ranking_Cons':\n  assumes \"a \\<in> \\<Union>(set (x#xs))\" \"b \\<in> \\<Union>(set (x#xs))\"\n  shows   \"of_weak_ranking (x#xs) a b \\<longleftrightarrow> b \\<in> x \\<or> (a \\<notin> x \\<and> of_weak_ranking xs a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (x # xs) a b =\n    (b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. of_weak_ranking (x # xs) a b \\<Longrightarrow>\n    b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b\n 2. b \\<in> x \\<or>\n    a \\<notin> x \\<and> of_weak_ranking xs a b \\<Longrightarrow>\n    of_weak_ranking (x # xs) a b", "assume \"of_weak_ranking (x # xs) a b\""], ["proof (state)\nthis:\n  of_weak_ranking (x # xs) a b\n\ngoal (2 subgoals):\n 1. of_weak_ranking (x # xs) a b \\<Longrightarrow>\n    b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b\n 2. b \\<in> x \\<or>\n    a \\<notin> x \\<and> of_weak_ranking xs a b \\<Longrightarrow>\n    of_weak_ranking (x # xs) a b", "with wf of_weak_ranking_imp_in_set[of a b]"], ["proof (chain)\npicking this:\n  is_weak_ranking (x # xs)\n  of_weak_ranking xs a b \\<Longrightarrow> a \\<in> \\<Union> (set xs)\n  of_weak_ranking xs a b \\<Longrightarrow> b \\<in> \\<Union> (set xs)\n  of_weak_ranking (x # xs) a b", "show \"(b \\<in> x \\<or>  a \\<notin> x \\<and> of_weak_ranking xs a b)\""], ["proof (prove)\nusing this:\n  is_weak_ranking (x # xs)\n  of_weak_ranking xs a b \\<Longrightarrow> a \\<in> \\<Union> (set xs)\n  of_weak_ranking xs a b \\<Longrightarrow> b \\<in> \\<Union> (set xs)\n  of_weak_ranking (x # xs) a b\n\ngoal (1 subgoal):\n 1. b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b", "by (auto simp: is_weak_ranking_Cons of_weak_ranking_Cons)"], ["proof (state)\nthis:\n  b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b\n\ngoal (1 subgoal):\n 1. b \\<in> x \\<or>\n    a \\<notin> x \\<and> of_weak_ranking xs a b \\<Longrightarrow>\n    of_weak_ranking (x # xs) a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<in> x \\<or>\n    a \\<notin> x \\<and> of_weak_ranking xs a b \\<Longrightarrow>\n    of_weak_ranking (x # xs) a b", "assume \"b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b\""], ["proof (state)\nthis:\n  b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b\n\ngoal (1 subgoal):\n 1. b \\<in> x \\<or>\n    a \\<notin> x \\<and> of_weak_ranking xs a b \\<Longrightarrow>\n    of_weak_ranking (x # xs) a b", "with assms"], ["proof (chain)\npicking this:\n  a \\<in> \\<Union> (set (x # xs))\n  b \\<in> \\<Union> (set (x # xs))\n  b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b", "show \"of_weak_ranking (x#xs) a b\""], ["proof (prove)\nusing this:\n  a \\<in> \\<Union> (set (x # xs))\n  b \\<in> \\<Union> (set (x # xs))\n  b \\<in> x \\<or> a \\<notin> x \\<and> of_weak_ranking xs a b\n\ngoal (1 subgoal):\n 1. of_weak_ranking (x # xs) a b", "by (fastforce simp: of_weak_ranking_Cons)"], ["proof (state)\nthis:\n  of_weak_ranking (x # xs) a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_wrt_among_of_weak_ranking_Cons1:\n  assumes \"x \\<inter> A = {}\"\n  shows   \"Max_wrt_among (of_weak_ranking (x#xs)) A = Max_wrt_among (of_weak_ranking xs) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A =\n    Max_wrt_among (of_weak_ranking xs) A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A =\n    Max_wrt_among (of_weak_ranking xs) A", "from wf"], ["proof (chain)\npicking this:\n  is_weak_ranking (x # xs)", "interpret R': total_preorder_on \"\\<Union>(set xs)\" \"of_weak_ranking xs\""], ["proof (prove)\nusing this:\n  is_weak_ranking (x # xs)\n\ngoal (1 subgoal):\n 1. total_preorder_on (\\<Union> (set xs)) (of_weak_ranking xs)", "by (intro total_preorder_of_weak_ranking) (simp_all add: is_weak_ranking_Cons)"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A =\n    Max_wrt_among (of_weak_ranking xs) A", "from assms"], ["proof (chain)\npicking this:\n  x \\<inter> A = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A =\n    Max_wrt_among (of_weak_ranking xs) A", "by (auto simp: R.Max_wrt_among_total_preorder\n          R'.Max_wrt_among_total_preorder of_weak_ranking_Cons)"], ["proof (state)\nthis:\n  Max_wrt_among (of_weak_ranking (x # xs)) A =\n  Max_wrt_among (of_weak_ranking xs) A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_wrt_among_of_weak_ranking_Cons2:\n  assumes \"x \\<inter> A \\<noteq> {}\"\n  shows   \"Max_wrt_among (of_weak_ranking (x#xs)) A = x \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A = x \\<inter> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A = x \\<inter> A", "from wf"], ["proof (chain)\npicking this:\n  is_weak_ranking (x # xs)", "interpret R': total_preorder_on \"\\<Union>(set xs)\" \"of_weak_ranking xs\""], ["proof (prove)\nusing this:\n  is_weak_ranking (x # xs)\n\ngoal (1 subgoal):\n 1. total_preorder_on (\\<Union> (set xs)) (of_weak_ranking xs)", "by (intro total_preorder_of_weak_ranking) (simp_all add: is_weak_ranking_Cons)"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A = x \\<inter> A", "from assms"], ["proof (chain)\npicking this:\n  x \\<inter> A \\<noteq> {}", "obtain a where \"a \\<in> x \\<inter> A\""], ["proof (prove)\nusing this:\n  x \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> x \\<inter> A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> x \\<inter> A\n\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A = x \\<inter> A", "with wf R'.not_outside(1)[of a]"], ["proof (chain)\npicking this:\n  is_weak_ranking (x # xs)\n  of_weak_ranking xs a ?y \\<Longrightarrow> a \\<in> \\<Union> (set xs)\n  a \\<in> x \\<inter> A", "show ?thesis"], ["proof (prove)\nusing this:\n  is_weak_ranking (x # xs)\n  of_weak_ranking xs a ?y \\<Longrightarrow> a \\<in> \\<Union> (set xs)\n  a \\<in> x \\<inter> A\n\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A = x \\<inter> A", "by (auto simp: R.Max_wrt_among_total_preorder is_weak_ranking_Cons\n          R'.Max_wrt_among_total_preorder of_weak_ranking_Cons)"], ["proof (state)\nthis:\n  Max_wrt_among (of_weak_ranking (x # xs)) A = x \\<inter> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Max_wrt_among_of_weak_ranking_Cons:\n  \"Max_wrt_among (of_weak_ranking (x#xs)) A =\n     (if x \\<inter> A = {} then Max_wrt_among (of_weak_ranking xs) A else x \\<inter> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A =\n    (if x \\<inter> A = {} then Max_wrt_among (of_weak_ranking xs) A\n     else x \\<inter> A)", "using Max_wrt_among_of_weak_ranking_Cons1 Max_wrt_among_of_weak_ranking_Cons2"], ["proof (prove)\nusing this:\n  x \\<inter> ?A = {} \\<Longrightarrow>\n  Max_wrt_among (of_weak_ranking (x # xs)) ?A =\n  Max_wrt_among (of_weak_ranking xs) ?A\n  x \\<inter> ?A \\<noteq> {} \\<Longrightarrow>\n  Max_wrt_among (of_weak_ranking (x # xs)) ?A = x \\<inter> ?A\n\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (x # xs)) A =\n    (if x \\<inter> A = {} then Max_wrt_among (of_weak_ranking xs) A\n     else x \\<inter> A)", "by simp"], ["", "lemma Max_wrt_of_weak_ranking_Cons:\n  \"Max_wrt (of_weak_ranking (x#xs)) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt (of_weak_ranking (x # xs)) = x", "using wf"], ["proof (prove)\nusing this:\n  is_weak_ranking (x # xs)\n\ngoal (1 subgoal):\n 1. Max_wrt (of_weak_ranking (x # xs)) = x", "by (simp add: is_weak_ranking_Cons Max_wrt_def Max_wrt_among_of_weak_ranking_Cons)"], ["", "end"], ["", "lemma Max_wrt_of_weak_ranking:\n  assumes \"is_weak_ranking xs\"\n  shows   \"Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "proof (cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "case Nil"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "hence \"of_weak_ranking xs = (\\<lambda>_ _. False)\""], ["proof (prove)\nusing this:\n  xs = []\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs = (\\<lambda>_ _. False)", "by (intro ext) simp_all"], ["proof (state)\nthis:\n  of_weak_ranking xs = (\\<lambda>_ _. False)\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "with Nil"], ["proof (chain)\npicking this:\n  xs = []\n  of_weak_ranking xs = (\\<lambda>_ _. False)", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = []\n  of_weak_ranking xs = (\\<lambda>_ _. False)\n\ngoal (1 subgoal):\n 1. Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "by (simp add: Max_wrt_def Max_wrt_among_def)"], ["proof (state)\nthis:\n  Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "case (Cons x xs')"], ["proof (state)\nthis:\n  xs = x # xs'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "with assms"], ["proof (chain)\npicking this:\n  is_weak_ranking xs\n  xs = x # xs'", "show ?thesis"], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  xs = x # xs'\n\ngoal (1 subgoal):\n 1. Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)", "by (simp add: Max_wrt_of_weak_ranking_Cons)"], ["proof (state)\nthis:\n  Max_wrt (of_weak_ranking xs) = (if xs = [] then {} else hd xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "locale finite_total_preorder_on = total_preorder_on +\n  assumes finite_carrier [intro]: \"finite carrier\"\nbegin"], ["", "lemma finite_total_preorder_on_map:\n  assumes \"finite (f -` carrier)\"\n  shows   \"finite_total_preorder_on (f -` carrier) (map_relation f le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_total_preorder_on (f -` carrier) (map_relation f le)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_total_preorder_on (f -` carrier) (map_relation f le)", "interpret R': total_preorder_on \"f -` carrier\" \"map_relation f le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on (f -` carrier) (map_relation f le)", "using total_preorder_on_map[of f]"], ["proof (prove)\nusing this:\n  total_preorder_on (f -` carrier) (map_relation f le)\n\ngoal (1 subgoal):\n 1. total_preorder_on (f -` carrier) (map_relation f le)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. finite_total_preorder_on (f -` carrier) (map_relation f le)", "from assms"], ["proof (chain)\npicking this:\n  finite (f -` carrier)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (f -` carrier)\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on (f -` carrier) (map_relation f le)", "by unfold_locales simp"], ["proof (state)\nthis:\n  finite_total_preorder_on (f -` carrier) (map_relation f le)\n\ngoal:\nNo subgoals!", "qed"], ["", "function weak_ranking_aux :: \"'a set \\<Rightarrow> 'a set list\" where\n  \"weak_ranking_aux {} = []\"\n| \"A \\<noteq> {} \\<Longrightarrow> A \\<subseteq> carrier \\<Longrightarrow> weak_ranking_aux A =\n     Max_wrt_among le A # weak_ranking_aux (A - Max_wrt_among le A)\"\n| \"\\<not>(A \\<subseteq> carrier) \\<Longrightarrow> weak_ranking_aux A = undefined\""], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>x = {} \\<Longrightarrow> P;\n        \\<And>A.\n           \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier; x = A\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>A.\n           \\<lbrakk>\\<not> A \\<subseteq> carrier; x = A\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. {} = {} \\<Longrightarrow> [] = []\n 3. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier; {} = A\\<rbrakk>\n       \\<Longrightarrow> [] =\n                         Max_wrt_among le A #\n                         weak_ranking_aux_sumC (A - Max_wrt_among le A)\n 4. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; {} = A\\<rbrakk>\n       \\<Longrightarrow> [] = undefined\n 5. \\<And>A Aa.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier; Aa \\<noteq> {};\n        Aa \\<subseteq> carrier; A = Aa\\<rbrakk>\n       \\<Longrightarrow> Max_wrt_among le A #\n                         weak_ranking_aux_sumC (A - Max_wrt_among le A) =\n                         Max_wrt_among le Aa #\n                         weak_ranking_aux_sumC (Aa - Max_wrt_among le Aa)\n 6. \\<And>A Aa.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<not> Aa \\<subseteq> carrier; A = Aa\\<rbrakk>\n       \\<Longrightarrow> Max_wrt_among le A #\n                         weak_ranking_aux_sumC (A - Max_wrt_among le A) =\n                         undefined\n 7. \\<And>A Aa.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; \\<not> Aa \\<subseteq> carrier;\n        A = Aa\\<rbrakk>\n       \\<Longrightarrow> undefined = undefined", "by blast simp_all"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All weak_ranking_aux_dom", "proof (relation \"Wellfounded.measure card\")"], ["proof (state)\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "fix A"], ["proof (state)\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "let ?B = \"Max_wrt_among le A\""], ["proof (state)\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "assume A: \"A \\<noteq> {}\" \"A \\<subseteq> carrier\""], ["proof (state)\nthis:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "moreover"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "from A(2)"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier", "have \"finite A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. finite A", "by (rule finite_subset) blast"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "moreover"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "from A"], ["proof (chain)\npicking this:\n  A \\<noteq> {}\n  A \\<subseteq> carrier", "have \"?B \\<noteq> {}\" \"?B \\<subseteq> A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<noteq> {} &&& Max_wrt_among le A \\<subseteq> A", "by (intro Max_wrt_among_nonempty Max_wrt_among_subset; force)+"], ["proof (state)\nthis:\n  Max_wrt_among le A \\<noteq> {}\n  Max_wrt_among le A \\<subseteq> A\n\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "ultimately"], ["proof (chain)\npicking this:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  finite A\n  Max_wrt_among le A \\<noteq> {}\n  Max_wrt_among le A \\<subseteq> A", "have \"card (A - ?B) < card A\""], ["proof (prove)\nusing this:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  finite A\n  Max_wrt_among le A \\<noteq> {}\n  Max_wrt_among le A \\<subseteq> A\n\ngoal (1 subgoal):\n 1. card (A - Max_wrt_among le A) < card A", "by (intro psubset_card_mono) auto"], ["proof (state)\nthis:\n  card (A - Max_wrt_among le A) < card A\n\ngoal (2 subgoals):\n 1. wf (measure card)\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> (A - Max_wrt_among le A, A) \\<in> measure card", "thus \"(A - ?B, A) \\<in> measure card\""], ["proof (prove)\nusing this:\n  card (A - Max_wrt_among le A) < card A\n\ngoal (1 subgoal):\n 1. (A - Max_wrt_among le A, A) \\<in> measure card", "by simp"], ["proof (state)\nthis:\n  (A - Max_wrt_among le A, A) \\<in> measure card\n\ngoal (1 subgoal):\n 1. wf (measure card)", "qed simp_all"], ["", "lemma weak_ranking_aux_Union:\n  \"A \\<subseteq> carrier \\<Longrightarrow> \\<Union>(set (weak_ranking_aux A)) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier \\<Longrightarrow>\n    \\<Union> (set (weak_ranking_aux A)) = A", "proof (induction A rule: weak_ranking_aux.induct [case_names empty nonempty])"], ["proof (state)\ngoal (3 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    \\<Union> (set (weak_ranking_aux {})) = {}\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n        \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n        A - Max_wrt_among le A;\n        A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (set (weak_ranking_aux A)) = A\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (set (weak_ranking_aux A)) = A", "case (nonempty A)"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  A - Max_wrt_among le A\n  A \\<subseteq> carrier\n\ngoal (3 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    \\<Union> (set (weak_ranking_aux {})) = {}\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n        \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n        A - Max_wrt_among le A;\n        A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (set (weak_ranking_aux A)) = A\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (set (weak_ranking_aux A)) = A", "with Max_wrt_among_subset[of A]"], ["proof (chain)\npicking this:\n  Max_wrt_among le A \\<subseteq> carrier\n  Max_wrt_among le A \\<subseteq> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  A - Max_wrt_among le A\n  A \\<subseteq> carrier", "show ?case"], ["proof (prove)\nusing this:\n  Max_wrt_among le A \\<subseteq> carrier\n  Max_wrt_among le A \\<subseteq> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  A - Max_wrt_among le A\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<Union> (set (weak_ranking_aux A)) = A", "by auto"], ["proof (state)\nthis:\n  \\<Union> (set (weak_ranking_aux A)) = A\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    \\<Union> (set (weak_ranking_aux {})) = {}\n 2. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (set (weak_ranking_aux A)) = A", "qed simp_all"], ["", "lemma weak_ranking_aux_wf:\n  \"A \\<subseteq> carrier \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier \\<Longrightarrow>\n    is_weak_ranking (weak_ranking_aux A)", "proof (induction A rule: weak_ranking_aux.induct [case_names empty nonempty])"], ["proof (state)\ngoal (3 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    is_weak_ranking (weak_ranking_aux {})\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n        is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A));\n        A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)", "case (nonempty A)"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n  is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))\n  A \\<subseteq> carrier\n\ngoal (3 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    is_weak_ranking (weak_ranking_aux {})\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n        is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A));\n        A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)", "have \"is_weak_ranking (Max_wrt_among le A # weak_ranking_aux (A - Max_wrt_among le A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking\n     (Max_wrt_among le A # weak_ranking_aux (A - Max_wrt_among le A))", "unfolding is_weak_ranking_Cons"], ["proof (prove)\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<noteq> {} \\<and>\n    is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A)) \\<and>\n    Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. Max_wrt_among le A \\<noteq> {}\n 2. is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))\n 3. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "from nonempty.prems nonempty.hyps"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  A \\<noteq> {}\n  A \\<subseteq> carrier", "show \"Max_wrt_among le A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<noteq> {}", "by (intro Max_wrt_among_nonempty) auto"], ["proof (state)\nthis:\n  Max_wrt_among le A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))\n 2. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))\n 2. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "from nonempty.prems"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier", "show \"is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))", "by (intro nonempty.IH) blast"], ["proof (state)\nthis:\n  is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A))\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "from nonempty.prems nonempty.hyps"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  A \\<noteq> {}\n  A \\<subseteq> carrier", "have \"Max_wrt_among le A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<noteq> {}", "by (intro Max_wrt_among_nonempty) auto"], ["proof (state)\nthis:\n  Max_wrt_among le A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "moreover"], ["proof (state)\nthis:\n  Max_wrt_among le A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "from nonempty.prems"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier", "have \"\\<Union>(set (weak_ranking_aux (A - Max_wrt_among le A))) = A - Max_wrt_among le A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    A - Max_wrt_among le A", "by (intro weak_ranking_aux_Union) auto"], ["proof (state)\nthis:\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  A - Max_wrt_among le A\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "ultimately"], ["proof (chain)\npicking this:\n  Max_wrt_among le A \\<noteq> {}\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  A - Max_wrt_among le A", "show \"Max_wrt_among le A \\<inter> \\<Union>(set (weak_ranking_aux (A - Max_wrt_among le A))) = {}\""], ["proof (prove)\nusing this:\n  Max_wrt_among le A \\<noteq> {}\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  A - Max_wrt_among le A\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<inter>\n    \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n    {}", "by blast+"], ["proof (state)\nthis:\n  Max_wrt_among le A \\<inter>\n  \\<Union> (set (weak_ranking_aux (A - Max_wrt_among le A))) =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_weak_ranking\n   (Max_wrt_among le A # weak_ranking_aux (A - Max_wrt_among le A))\n\ngoal (3 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    is_weak_ranking (weak_ranking_aux {})\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        A - Max_wrt_among le A \\<subseteq> carrier \\<Longrightarrow>\n        is_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A));\n        A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)", "with nonempty.prems nonempty.hyps"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  is_weak_ranking\n   (Max_wrt_among le A # weak_ranking_aux (A - Max_wrt_among le A))", "show ?case"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  is_weak_ranking\n   (Max_wrt_among le A # weak_ranking_aux (A - Max_wrt_among le A))\n\ngoal (1 subgoal):\n 1. is_weak_ranking (weak_ranking_aux A)", "by simp"], ["proof (state)\nthis:\n  is_weak_ranking (weak_ranking_aux A)\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> carrier \\<Longrightarrow>\n    is_weak_ranking (weak_ranking_aux {})\n 2. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier\\<rbrakk>\n       \\<Longrightarrow> is_weak_ranking (weak_ranking_aux A)", "qed simp_all"], ["", "lemma of_weak_ranking_weak_ranking_aux':\n  assumes \"A \\<subseteq> carrier\" \"x \\<in> A\" \"y \\<in> A\"\n  shows   \"of_weak_ranking (weak_ranking_aux A) x y \\<longleftrightarrow> restrict_relation A le x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux A) x y = restrict_relation A le x y", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux A) x y = restrict_relation A le x y", "proof (induction A rule: weak_ranking_aux.induct [case_names empty nonempty])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "case (nonempty A)"], ["proof (state)\nthis:\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n   x \\<in> A - Max_wrt_among le A; y \\<in> A - Max_wrt_among le A\\<rbrakk>\n  \\<Longrightarrow> of_weak_ranking\n                     (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                    restrict_relation (A - Max_wrt_among le A) le x y\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "define M where \"M = Max_wrt_among le A\""], ["proof (state)\nthis:\n  M = Max_wrt_among le A\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "from nonempty.prems nonempty.hyps"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier", "have M: \"M \\<subseteq> A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. M \\<subseteq> A", "unfolding M_def"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. Max_wrt_among le A \\<subseteq> A", "by (intro Max_wrt_among_subset)"], ["proof (state)\nthis:\n  M \\<subseteq> A\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "from nonempty.prems"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A", "have in_MD: \"le x y\" if \"x \\<in> A\" \"y \\<in> M\" for x y"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. le x y", "using that"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  x \\<in> A\n  y \\<in> M\n\ngoal (1 subgoal):\n 1. le x y", "unfolding M_def Max_wrt_among_total_preorder"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  x \\<in> A\n  y \\<in> {x \\<in> carrier \\<inter> A.\n           \\<forall>y\\<in>carrier \\<inter> A. le y x}\n\ngoal (1 subgoal):\n 1. le x y", "by (auto simp: Int_absorb1)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> M\\<rbrakk> \\<Longrightarrow> le ?x ?y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "from nonempty.prems"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A", "have in_MI: \"x \\<in> M\" if \"y \\<in> M\" \"x \\<in> A\"  \"le y x\" for x y"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> M", "using that"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  y \\<in> M\n  x \\<in> A\n  le y x\n\ngoal (1 subgoal):\n 1. x \\<in> M", "unfolding M_def Max_wrt_among_total_preorder"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  y \\<in> {x \\<in> carrier \\<inter> A.\n           \\<forall>y\\<in>carrier \\<inter> A. le y x}\n  x \\<in> A\n  le y x\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier \\<inter> A.\n             \\<forall>y\\<in>carrier \\<inter> A. le y x}", "by (auto simp: Int_absorb1 intro: trans)"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<in> M; ?x \\<in> A; le ?y ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> M\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "from nonempty.prems nonempty.hyps"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier", "have IH: \"of_weak_ranking (weak_ranking_aux (A - M)) x y = \n                restrict_relation (A - M) le x y\" if \"x \\<notin> M\" \"y \\<notin> M\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux (A - M)) x y =\n    restrict_relation (A - M) le x y", "using that"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  x \\<notin> M\n  y \\<notin> M\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux (A - M)) x y =\n    restrict_relation (A - M) le x y", "unfolding M_def"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  x \\<notin> Max_wrt_among le A\n  y \\<notin> Max_wrt_among le A\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n    restrict_relation (A - Max_wrt_among le A) le x y", "by (intro nonempty.IH) auto"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<notin> M; y \\<notin> M\\<rbrakk>\n  \\<Longrightarrow> of_weak_ranking (weak_ranking_aux (A - M)) x y =\n                    restrict_relation (A - M) le x y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "from nonempty.prems"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A", "interpret R': total_preorder_on \"A - M\" \"of_weak_ranking (weak_ranking_aux (A - M))\""], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. total_preorder_on (A - M) (of_weak_ranking (weak_ranking_aux (A - M)))", "by (intro total_preorder_of_weak_ranking weak_ranking_aux_wf weak_ranking_aux_Union) auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>A \\<noteq> {}; A \\<subseteq> carrier;\n        \\<lbrakk>A - Max_wrt_among le A \\<subseteq> carrier;\n         x \\<in> A - Max_wrt_among le A;\n         y \\<in> A - Max_wrt_among le A\\<rbrakk>\n        \\<Longrightarrow> of_weak_ranking\n                           (weak_ranking_aux (A - Max_wrt_among le A)) x y =\n                          restrict_relation (A - Max_wrt_among le A) le x y;\n        A \\<subseteq> carrier; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y\n 3. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "from nonempty.prems nonempty.hyps M weak_ranking_aux_Union[of A] R'.not_outside[of x y]"], ["proof (chain)\npicking this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  M \\<subseteq> A\n  A \\<subseteq> carrier \\<Longrightarrow>\n  \\<Union> (set (weak_ranking_aux A)) = A\n  of_weak_ranking (weak_ranking_aux (A - M)) x y \\<Longrightarrow>\n  x \\<in> A - M\n  of_weak_ranking (weak_ranking_aux (A - M)) x y \\<Longrightarrow>\n  y \\<in> A - M", "show ?case"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier\n  x \\<in> A\n  y \\<in> A\n  A \\<noteq> {}\n  A \\<subseteq> carrier\n  M \\<subseteq> A\n  A \\<subseteq> carrier \\<Longrightarrow>\n  \\<Union> (set (weak_ranking_aux A)) = A\n  of_weak_ranking (weak_ranking_aux (A - M)) x y \\<Longrightarrow>\n  x \\<in> A - M\n  of_weak_ranking (weak_ranking_aux (A - M)) x y \\<Longrightarrow>\n  y \\<in> A - M\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux A) x y = restrict_relation A le x y", "by (cases \"x \\<in> M\"; cases \"y \\<in> M\")\n       (auto simp: restrict_relation_def of_weak_ranking_Cons IH M_def [symmetric]\n             intro: in_MD dest: in_MI)"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking_aux A) x y = restrict_relation A le x y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier; x \\<in> {}; y \\<in> {}\\<rbrakk>\n    \\<Longrightarrow> of_weak_ranking (weak_ranking_aux {}) x y =\n                      restrict_relation {} le x y\n 2. \\<And>A.\n       \\<lbrakk>\\<not> A \\<subseteq> carrier; A \\<subseteq> carrier;\n        x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> of_weak_ranking (weak_ranking_aux A) x y =\n                         restrict_relation A le x y", "qed simp_all"], ["", "lemma of_weak_ranking_weak_ranking_aux:\n  \"of_weak_ranking (weak_ranking_aux carrier) = le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux carrier) = le", "proof (intro ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. of_weak_ranking (weak_ranking_aux carrier) x xa = le x xa", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. of_weak_ranking (weak_ranking_aux carrier) x xa = le x xa", "have \"is_weak_ranking (weak_ranking_aux carrier)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking (weak_ranking_aux carrier)", "by (rule weak_ranking_aux_wf) simp"], ["proof (state)\nthis:\n  is_weak_ranking (weak_ranking_aux carrier)\n\ngoal (1 subgoal):\n 1. \\<And>x xa. of_weak_ranking (weak_ranking_aux carrier) x xa = le x xa", "then"], ["proof (chain)\npicking this:\n  is_weak_ranking (weak_ranking_aux carrier)", "interpret R: total_preorder_on carrier \"of_weak_ranking (weak_ranking_aux carrier)\""], ["proof (prove)\nusing this:\n  is_weak_ranking (weak_ranking_aux carrier)\n\ngoal (1 subgoal):\n 1. total_preorder_on carrier (of_weak_ranking (weak_ranking_aux carrier))", "by (intro total_preorder_of_weak_ranking weak_ranking_aux_wf weak_ranking_aux_Union)\n       (simp_all add: weak_ranking_aux_Union)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa. of_weak_ranking (weak_ranking_aux carrier) x xa = le x xa", "show \"of_weak_ranking (weak_ranking_aux carrier) x y = le x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "proof (cases \"x \\<in> carrier \\<and> y \\<in> carrier\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> carrier \\<and> y \\<in> carrier \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y\n 2. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "case True"], ["proof (state)\nthis:\n  x \\<in> carrier \\<and> y \\<in> carrier\n\ngoal (2 subgoals):\n 1. x \\<in> carrier \\<and> y \\<in> carrier \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y\n 2. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> carrier \\<and> y \\<in> carrier\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "using of_weak_ranking_weak_ranking_aux'[of carrier x y]"], ["proof (prove)\nusing this:\n  x \\<in> carrier \\<and> y \\<in> carrier\n  \\<lbrakk>carrier \\<subseteq> carrier; x \\<in> carrier;\n   y \\<in> carrier\\<rbrakk>\n  \\<Longrightarrow> of_weak_ranking (weak_ranking_aux carrier) x y =\n                    restrict_relation carrier le x y\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "by simp"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking_aux carrier) x y = le x y\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "case False"], ["proof (state)\nthis:\n  \\<not> (x \\<in> carrier \\<and> y \\<in> carrier)\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "with R.not_outside"], ["proof (chain)\npicking this:\n  of_weak_ranking (weak_ranking_aux carrier) ?x ?y \\<Longrightarrow>\n  ?x \\<in> carrier\n  of_weak_ranking (weak_ranking_aux carrier) ?x ?y \\<Longrightarrow>\n  ?y \\<in> carrier\n  \\<not> (x \\<in> carrier \\<and> y \\<in> carrier)", "have \"of_weak_ranking (weak_ranking_aux carrier) x y = False\""], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking_aux carrier) ?x ?y \\<Longrightarrow>\n  ?x \\<in> carrier\n  of_weak_ranking (weak_ranking_aux carrier) ?x ?y \\<Longrightarrow>\n  ?y \\<in> carrier\n  \\<not> (x \\<in> carrier \\<and> y \\<in> carrier)\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux carrier) x y = False", "by auto"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking_aux carrier) x y = False\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "also"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking_aux carrier) x y = False\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "from not_outside False"], ["proof (chain)\npicking this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  \\<not> (x \\<in> carrier \\<and> y \\<in> carrier)", "have \"\\<dots> = le x y\""], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  \\<not> (x \\<in> carrier \\<and> y \\<in> carrier)\n\ngoal (1 subgoal):\n 1. False = le x y", "by auto"], ["proof (state)\nthis:\n  False = le x y\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<in> carrier \\<and> y \\<in> carrier) \\<Longrightarrow>\n    of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "finally"], ["proof (chain)\npicking this:\n  of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "show ?thesis"], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking_aux carrier) x y = le x y\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking_aux carrier) x y = le x y", "."], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking_aux carrier) x y = le x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking_aux carrier) x y = le x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_aux_unique':\n  assumes \"\\<Union>(set As) \\<subseteq> carrier\" \"is_weak_ranking As\"\n          \"of_weak_ranking As = restrict_relation (\\<Union>(set As)) le\"\n  shows   \"As = weak_ranking_aux (\\<Union>(set As))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. As = weak_ranking_aux (\\<Union> (set As))", "using assms"], ["proof (prove)\nusing this:\n  \\<Union> (set As) \\<subseteq> carrier\n  is_weak_ranking As\n  of_weak_ranking As = restrict_relation (\\<Union> (set As)) le\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux (\\<Union> (set As))", "proof (induction As)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "case (Cons A As)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<Union> (set As) \\<subseteq> carrier; is_weak_ranking As;\n   of_weak_ranking As = restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n  \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As))\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "have \"restrict_relation (\\<Union>(set As)) (of_weak_ranking (A # As)) = of_weak_ranking As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n    of_weak_ranking As", "by (intro restrict_relation_of_weak_ranking_Cons Cons.prems)"], ["proof (state)\nthis:\n  restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n  of_weak_ranking As\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "also"], ["proof (state)\nthis:\n  restrict_relation (\\<Union> (set As)) (of_weak_ranking (A # As)) =\n  of_weak_ranking As\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "have eq1: \"of_weak_ranking (A # As) = restrict_relation (\\<Union>(set (A # As))) le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (A # As) =\n    restrict_relation (\\<Union> (set (A # As))) le", "by fact"], ["proof (state)\nthis:\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "finally"], ["proof (chain)\npicking this:\n  restrict_relation (\\<Union> (set As))\n   (restrict_relation (\\<Union> (set (A # As))) le) =\n  of_weak_ranking As", "have eq: \"of_weak_ranking As = restrict_relation (\\<Union>(set As)) le\""], ["proof (prove)\nusing this:\n  restrict_relation (\\<Union> (set As))\n   (restrict_relation (\\<Union> (set (A # As))) le) =\n  of_weak_ranking As\n\ngoal (1 subgoal):\n 1. of_weak_ranking As = restrict_relation (\\<Union> (set As)) le", "by (simp add: Int_absorb2)"], ["proof (state)\nthis:\n  of_weak_ranking As = restrict_relation (\\<Union> (set As)) le\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "with Cons.prems"], ["proof (chain)\npicking this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n  of_weak_ranking As = restrict_relation (\\<Union> (set As)) le", "have eq2: \"weak_ranking_aux (\\<Union>(set As)) = As\""], ["proof (prove)\nusing this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n  of_weak_ranking As = restrict_relation (\\<Union> (set As)) le\n\ngoal (1 subgoal):\n 1. weak_ranking_aux (\\<Union> (set As)) = As", "by (intro sym [OF Cons.IH]) (auto simp: is_weak_ranking_Cons)"], ["proof (state)\nthis:\n  weak_ranking_aux (\\<Union> (set As)) = As\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "from eq1"], ["proof (chain)\npicking this:\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le", "have \n    \"Max_wrt_among le (\\<Union>(set (A # As))) = \n       Max_wrt_among (of_weak_ranking (A#As)) (\\<Union>(set (A#As)))\""], ["proof (prove)\nusing this:\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (1 subgoal):\n 1. Max_wrt_among le (\\<Union> (set (A # As))) =\n    Max_wrt_among (of_weak_ranking (A # As)) (\\<Union> (set (A # As)))", "by (intro Max_wrt_among_cong) simp_all"], ["proof (state)\nthis:\n  Max_wrt_among le (\\<Union> (set (A # As))) =\n  Max_wrt_among (of_weak_ranking (A # As)) (\\<Union> (set (A # As)))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "also"], ["proof (state)\nthis:\n  Max_wrt_among le (\\<Union> (set (A # As))) =\n  Max_wrt_among (of_weak_ranking (A # As)) (\\<Union> (set (A # As)))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le", "have \"\\<dots> = A\""], ["proof (prove)\nusing this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (1 subgoal):\n 1. Max_wrt_among (of_weak_ranking (A # As)) (\\<Union> (set (A # As))) = A", "by (subst Max_wrt_among_of_weak_ranking_Cons2)\n       (simp_all add: is_weak_ranking_Cons)"], ["proof (state)\nthis:\n  Max_wrt_among (of_weak_ranking (A # As)) (\\<Union> (set (A # As))) = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "finally"], ["proof (chain)\npicking this:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A", "have Max: \"Max_wrt_among le (\\<Union>(set (A # As))) = A\""], ["proof (prove)\nusing this:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A\n\ngoal (1 subgoal):\n 1. Max_wrt_among le (\\<Union> (set (A # As))) = A", "."], ["proof (state)\nthis:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "moreover"], ["proof (state)\nthis:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le", "have \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by (simp add: is_weak_ranking_Cons)"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "ultimately"], ["proof (chain)\npicking this:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A\n  A \\<noteq> {}", "have \"weak_ranking_aux (\\<Union>(set (A # As))) = A # weak_ranking_aux (A \\<union> \\<Union>(set As) - A)\""], ["proof (prove)\nusing this:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. weak_ranking_aux (\\<Union> (set (A # As))) =\n    A # weak_ranking_aux (A \\<union> \\<Union> (set As) - A)", "using Cons.prems"], ["proof (prove)\nusing this:\n  Max_wrt_among le (\\<Union> (set (A # As))) = A\n  A \\<noteq> {}\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (1 subgoal):\n 1. weak_ranking_aux (\\<Union> (set (A # As))) =\n    A # weak_ranking_aux (A \\<union> \\<Union> (set As) - A)", "by simp"], ["proof (state)\nthis:\n  weak_ranking_aux (\\<Union> (set (A # As))) =\n  A # weak_ranking_aux (A \\<union> \\<Union> (set As) - A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "also"], ["proof (state)\nthis:\n  weak_ranking_aux (\\<Union> (set (A # As))) =\n  A # weak_ranking_aux (A \\<union> \\<Union> (set As) - A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "from Cons.prems"], ["proof (chain)\npicking this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le", "have \"A \\<union> \\<Union>(set As) - A = \\<Union>(set As)\""], ["proof (prove)\nusing this:\n  \\<Union> (set (A # As)) \\<subseteq> carrier\n  is_weak_ranking (A # As)\n  of_weak_ranking (A # As) = restrict_relation (\\<Union> (set (A # As))) le\n\ngoal (1 subgoal):\n 1. A \\<union> \\<Union> (set As) - A = \\<Union> (set As)", "by (auto simp: is_weak_ranking_Cons)"], ["proof (state)\nthis:\n  A \\<union> \\<Union> (set As) - A = \\<Union> (set As)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "also"], ["proof (state)\nthis:\n  A \\<union> \\<Union> (set As) - A = \\<Union> (set As)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "from eq2"], ["proof (chain)\npicking this:\n  weak_ranking_aux (\\<Union> (set As)) = As", "have \"weak_ranking_aux \\<dots> = As\""], ["proof (prove)\nusing this:\n  weak_ranking_aux (\\<Union> (set As)) = As\n\ngoal (1 subgoal):\n 1. weak_ranking_aux (\\<Union> (set As)) = As", "."], ["proof (state)\nthis:\n  weak_ranking_aux (\\<Union> (set As)) = As\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))\n 2. \\<And>a As.\n       \\<lbrakk>\\<lbrakk>\\<Union> (set As) \\<subseteq> carrier;\n                 is_weak_ranking As;\n                 of_weak_ranking As =\n                 restrict_relation (\\<Union> (set As)) le\\<rbrakk>\n                \\<Longrightarrow> As = weak_ranking_aux (\\<Union> (set As));\n        \\<Union> (set (a # As)) \\<subseteq> carrier;\n        is_weak_ranking (a # As);\n        of_weak_ranking (a # As) =\n        restrict_relation (\\<Union> (set (a # As))) le\\<rbrakk>\n       \\<Longrightarrow> a # As = weak_ranking_aux (\\<Union> (set (a # As)))", "finally"], ["proof (chain)\npicking this:\n  weak_ranking_aux (\\<Union> (set (A # As))) = A # As", "show ?case"], ["proof (prove)\nusing this:\n  weak_ranking_aux (\\<Union> (set (A # As))) = A # As\n\ngoal (1 subgoal):\n 1. A # As = weak_ranking_aux (\\<Union> (set (A # As)))", ".."], ["proof (state)\nthis:\n  A # As = weak_ranking_aux (\\<Union> (set (A # As)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Union> (set []) \\<subseteq> carrier; is_weak_ranking [];\n     of_weak_ranking [] = restrict_relation (\\<Union> (set [])) le\\<rbrakk>\n    \\<Longrightarrow> [] = weak_ranking_aux (\\<Union> (set []))", "qed simp_all"], ["", "lemma weak_ranking_aux_unique:\n  assumes \"is_weak_ranking As\" \"of_weak_ranking As = le\"\n  shows   \"As = weak_ranking_aux carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "interpret R: total_preorder_on \"\\<Union>(set As)\" \"of_weak_ranking As\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total_preorder_on (\\<Union> (set As)) (of_weak_ranking As)", "by (intro total_preorder_of_weak_ranking assms) simp_all"], ["proof (state)\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "from assms"], ["proof (chain)\npicking this:\n  is_weak_ranking As\n  of_weak_ranking As = le", "have \"x \\<in> \\<Union>(set As) \\<longleftrightarrow> x \\<in> carrier\" for x"], ["proof (prove)\nusing this:\n  is_weak_ranking As\n  of_weak_ranking As = le\n\ngoal (1 subgoal):\n 1. (x \\<in> \\<Union> (set As)) = (x \\<in> carrier)", "using R.not_outside not_outside R.refl[of x] refl[of x]"], ["proof (prove)\nusing this:\n  is_weak_ranking As\n  of_weak_ranking As = le\n  of_weak_ranking As ?x ?y \\<Longrightarrow> ?x \\<in> \\<Union> (set As)\n  of_weak_ranking As ?x ?y \\<Longrightarrow> ?y \\<in> \\<Union> (set As)\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n  x \\<in> \\<Union> (set As) \\<Longrightarrow> of_weak_ranking As x x\n  x \\<in> carrier \\<Longrightarrow> le x x\n\ngoal (1 subgoal):\n 1. (x \\<in> \\<Union> (set As)) = (x \\<in> carrier)", "by blast"], ["proof (state)\nthis:\n  (?x \\<in> \\<Union> (set As)) = (?x \\<in> carrier)\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "hence eq: \"\\<Union>(set As) = carrier\""], ["proof (prove)\nusing this:\n  (?x \\<in> \\<Union> (set As)) = (?x \\<in> carrier)\n\ngoal (1 subgoal):\n 1. \\<Union> (set As) = carrier", "by blast"], ["proof (state)\nthis:\n  \\<Union> (set As) = carrier\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "from assms eq"], ["proof (chain)\npicking this:\n  is_weak_ranking As\n  of_weak_ranking As = le\n  \\<Union> (set As) = carrier", "have \"As = weak_ranking_aux (\\<Union>(set As))\""], ["proof (prove)\nusing this:\n  is_weak_ranking As\n  of_weak_ranking As = le\n  \\<Union> (set As) = carrier\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux (\\<Union> (set As))", "by (intro weak_ranking_aux_unique') simp_all"], ["proof (state)\nthis:\n  As = weak_ranking_aux (\\<Union> (set As))\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "with eq"], ["proof (chain)\npicking this:\n  \\<Union> (set As) = carrier\n  As = weak_ranking_aux (\\<Union> (set As))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> (set As) = carrier\n  As = weak_ranking_aux (\\<Union> (set As))\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "by simp"], ["proof (state)\nthis:\n  As = weak_ranking_aux carrier\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_total_preorder:\n  \"is_weak_ranking (weak_ranking le)\" \"of_weak_ranking (weak_ranking le) = le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking (weak_ranking le) &&&\n    of_weak_ranking (weak_ranking le) = le", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. is_weak_ranking (weak_ranking le)\n 2. of_weak_ranking (weak_ranking le) = le", "from weak_ranking_aux_wf[of carrier] of_weak_ranking_weak_ranking_aux"], ["proof (chain)\npicking this:\n  carrier \\<subseteq> carrier \\<Longrightarrow>\n  is_weak_ranking (weak_ranking_aux carrier)\n  of_weak_ranking (weak_ranking_aux carrier) = le", "have \"\\<exists>x. is_weak_ranking x \\<and> le = of_weak_ranking x\""], ["proof (prove)\nusing this:\n  carrier \\<subseteq> carrier \\<Longrightarrow>\n  is_weak_ranking (weak_ranking_aux carrier)\n  of_weak_ranking (weak_ranking_aux carrier) = le\n\ngoal (1 subgoal):\n 1. \\<exists>x. is_weak_ranking x \\<and> le = of_weak_ranking x", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. is_weak_ranking x \\<and> le = of_weak_ranking x\n\ngoal (2 subgoals):\n 1. is_weak_ranking (weak_ranking le)\n 2. of_weak_ranking (weak_ranking le) = le", "hence \"is_weak_ranking (weak_ranking le) \\<and> le = of_weak_ranking (weak_ranking le)\""], ["proof (prove)\nusing this:\n  \\<exists>x. is_weak_ranking x \\<and> le = of_weak_ranking x\n\ngoal (1 subgoal):\n 1. is_weak_ranking (weak_ranking le) \\<and>\n    le = of_weak_ranking (weak_ranking le)", "unfolding weak_ranking_def"], ["proof (prove)\nusing this:\n  \\<exists>x. is_weak_ranking x \\<and> le = of_weak_ranking x\n\ngoal (1 subgoal):\n 1. is_weak_ranking\n     (SOME xs. is_weak_ranking xs \\<and> le = of_weak_ranking xs) \\<and>\n    le =\n    of_weak_ranking\n     (SOME xs. is_weak_ranking xs \\<and> le = of_weak_ranking xs)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  is_weak_ranking (weak_ranking le) \\<and>\n  le = of_weak_ranking (weak_ranking le)\n\ngoal (2 subgoals):\n 1. is_weak_ranking (weak_ranking le)\n 2. of_weak_ranking (weak_ranking le) = le", "thus \"is_weak_ranking (weak_ranking le)\" \"of_weak_ranking (weak_ranking le) = le\""], ["proof (prove)\nusing this:\n  is_weak_ranking (weak_ranking le) \\<and>\n  le = of_weak_ranking (weak_ranking le)\n\ngoal (1 subgoal):\n 1. is_weak_ranking (weak_ranking le) &&&\n    of_weak_ranking (weak_ranking le) = le", "by simp_all"], ["proof (state)\nthis:\n  is_weak_ranking (weak_ranking le)\n  of_weak_ranking (weak_ranking le) = le\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_altdef:\n  \"weak_ranking le = weak_ranking_aux carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking le = weak_ranking_aux carrier", "by (intro weak_ranking_aux_unique weak_ranking_total_preorder)"], ["", "lemma weak_ranking_Union: \"\\<Union>(set (weak_ranking le)) = carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (set (weak_ranking le)) = carrier", "by (simp add: weak_ranking_altdef weak_ranking_aux_Union)"], ["", "lemma weak_ranking_unique:\n  assumes \"is_weak_ranking As\" \"of_weak_ranking As = le\"\n  shows   \"As = weak_ranking le\""], ["proof (prove)\ngoal (1 subgoal):\n 1. As = weak_ranking le", "using assms"], ["proof (prove)\nusing this:\n  is_weak_ranking As\n  of_weak_ranking As = le\n\ngoal (1 subgoal):\n 1. As = weak_ranking le", "unfolding weak_ranking_altdef"], ["proof (prove)\nusing this:\n  is_weak_ranking As\n  of_weak_ranking As = le\n\ngoal (1 subgoal):\n 1. As = weak_ranking_aux carrier", "by (rule weak_ranking_aux_unique)"], ["", "lemma weak_ranking_permute:\n  assumes \"f permutes carrier\"\n  shows   \"weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)", "from assms"], ["proof (chain)\npicking this:\n  f permutes carrier", "have \"inv f -` carrier = carrier\""], ["proof (prove)\nusing this:\n  f permutes carrier\n\ngoal (1 subgoal):\n 1. inv f -` carrier = carrier", "by (simp add: permutes_vimage permutes_inv)"], ["proof (state)\nthis:\n  inv f -` carrier = carrier\n\ngoal (1 subgoal):\n 1. weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)", "then"], ["proof (chain)\npicking this:\n  inv f -` carrier = carrier", "interpret R: finite_total_preorder_on \"inv f -` carrier\" \"map_relation (inv f) le\""], ["proof (prove)\nusing this:\n  inv f -` carrier = carrier\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on (inv f -` carrier) (map_relation (inv f) le)", "by (intro finite_total_preorder_on_map) (simp_all add: finite_carrier)"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)", "from assms"], ["proof (chain)\npicking this:\n  f permutes carrier", "have \"is_weak_ranking (map ((`) f) (weak_ranking le))\""], ["proof (prove)\nusing this:\n  f permutes carrier\n\ngoal (1 subgoal):\n 1. is_weak_ranking (map ((`) f) (weak_ranking le))", "by (intro is_weak_ranking_map_inj) \n       (simp_all add: weak_ranking_total_preorder permutes_inj_on)"], ["proof (state)\nthis:\n  is_weak_ranking (map ((`) f) (weak_ranking le))\n\ngoal (1 subgoal):\n 1. weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)", "with assms"], ["proof (chain)\npicking this:\n  f permutes carrier\n  is_weak_ranking (map ((`) f) (weak_ranking le))", "show ?thesis"], ["proof (prove)\nusing this:\n  f permutes carrier\n  is_weak_ranking (map ((`) f) (weak_ranking le))\n\ngoal (1 subgoal):\n 1. weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)", "by (intro sym[OF R.weak_ranking_unique])\n       (simp_all add: of_weak_ranking_permute weak_ranking_Union weak_ranking_total_preorder)"], ["proof (state)\nthis:\n  weak_ranking (map_relation (inv f) le) = map ((`) f) (weak_ranking le)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_index_unique:\n  assumes \"is_weak_ranking xs\" \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"x \\<in> xs ! j\"\n  shows   \"i = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = j", "using assms"], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  x \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. i = j", "unfolding is_weak_ranking_def"], ["proof (prove)\nusing this:\n  {} \\<notin> set xs \\<and>\n  (\\<forall>i j.\n      i < length xs \\<and>\n      j < length xs \\<and> i \\<noteq> j \\<longrightarrow>\n      xs ! i \\<inter> xs ! j = {})\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  x \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. i = j", "by auto"], ["", "lemma weak_ranking_index_unique':\n  assumes \"is_weak_ranking xs\" \"i < length xs\" \"x \\<in> xs ! i\"\n  shows   \"i = find_index ((\\<in>) x) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = find_index ((\\<in>) x) xs", "using assms find_index_less_size_conv nth_mem"], ["proof (prove)\nusing this:\n  is_weak_ranking xs\n  i < length xs\n  x \\<in> xs ! i\n  (find_index ?P ?xs < length ?xs) = (\\<exists>x\\<in>set ?xs. ?P x)\n  ?n < length ?xs \\<Longrightarrow> ?xs ! ?n \\<in> set ?xs\n\ngoal (1 subgoal):\n 1. i = find_index ((\\<in>) x) xs", "by (intro weak_ranking_index_unique[OF assms(1,2) _ assms(3)]\n        nth_find_index[of \"(\\<in>) x\"]) blast+"], ["", "lemma weak_ranking_eqclass1:\n  assumes \"A \\<in> set (weak_ranking le)\" \"x \\<in> A\" \"y \\<in> A\"\n  shows   \"le x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. le x y", "from assms"], ["proof (chain)\npicking this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n  y \\<in> A", "obtain i where \"weak_ranking le ! i = A\" \"i < length (weak_ranking le)\""], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>weak_ranking le ! i = A;\n         i < length (weak_ranking le)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  weak_ranking le ! i = A\n  i < length (weak_ranking le)\n\ngoal (1 subgoal):\n 1. le x y", "with assms"], ["proof (chain)\npicking this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n  y \\<in> A\n  weak_ranking le ! i = A\n  i < length (weak_ranking le)", "have \"of_weak_ranking (weak_ranking le) x y\""], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n  y \\<in> A\n  weak_ranking le ! i = A\n  i < length (weak_ranking le)\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y", "by (intro of_weak_ranking.intros[of i i]) auto"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. le x y", "thus ?thesis"], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. le x y", "by (simp add: weak_ranking_total_preorder)"], ["proof (state)\nthis:\n  le x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_eqclass2:\n  assumes A: \"A \\<in> set (weak_ranking le)\" \"x \\<in> A\" and le: \"le x y\" \"le y x\"\n  shows   \"y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> A", "define xs where \"xs = weak_ranking le\""], ["proof (state)\nthis:\n  xs = weak_ranking le\n\ngoal (1 subgoal):\n 1. y \\<in> A", "have wf: \"is_weak_ranking xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_ranking xs", "by (simp add: xs_def weak_ranking_total_preorder)"], ["proof (state)\nthis:\n  is_weak_ranking xs\n\ngoal (1 subgoal):\n 1. y \\<in> A", "let ?le' = \"of_weak_ranking xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> A", "from le"], ["proof (chain)\npicking this:\n  le x y\n  le y x", "have le': \"?le' x y\" \"?le' y x\""], ["proof (prove)\nusing this:\n  le x y\n  le y x\n\ngoal (1 subgoal):\n 1. of_weak_ranking xs x y &&& of_weak_ranking xs y x", "by (simp_all add: weak_ranking_total_preorder xs_def)"], ["proof (state)\nthis:\n  of_weak_ranking xs x y\n  of_weak_ranking xs y x\n\ngoal (1 subgoal):\n 1. y \\<in> A", "from le'(1)"], ["proof (chain)\npicking this:\n  of_weak_ranking xs x y", "obtain i j\n    where ij: \"j \\<le> i\" \"i < length xs\" \"j < length xs\" \"x \\<in> xs ! i\" \"y \\<in> xs ! j\""], ["proof (prove)\nusing this:\n  of_weak_ranking xs x y\n\ngoal (1 subgoal):\n 1. (\\<And>j i.\n        \\<lbrakk>j \\<le> i; i < length xs; j < length xs; x \\<in> xs ! i;\n         y \\<in> xs ! j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases rule: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n\ngoal (1 subgoal):\n 1. y \\<in> A", "from le'(2)"], ["proof (chain)\npicking this:\n  of_weak_ranking xs y x", "obtain i' j'\n    where i'j': \"j' \\<le> i'\" \"i' < length xs\" \"j' < length xs\" \"x \\<in> xs ! j'\" \"y \\<in> xs ! i'\""], ["proof (prove)\nusing this:\n  of_weak_ranking xs y x\n\ngoal (1 subgoal):\n 1. (\\<And>j' i'.\n        \\<lbrakk>j' \\<le> i'; i' < length xs; j' < length xs;\n         x \\<in> xs ! j'; y \\<in> xs ! i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases rule: of_weak_ranking.cases)"], ["proof (state)\nthis:\n  j' \\<le> i'\n  i' < length xs\n  j' < length xs\n  x \\<in> xs ! j'\n  y \\<in> xs ! i'\n\ngoal (1 subgoal):\n 1. y \\<in> A", "from ij i'j'"], ["proof (chain)\npicking this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j' \\<le> i'\n  i' < length xs\n  j' < length xs\n  x \\<in> xs ! j'\n  y \\<in> xs ! i'", "have eq: \"i = j'\" \"j = i'\""], ["proof (prove)\nusing this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j' \\<le> i'\n  i' < length xs\n  j' < length xs\n  x \\<in> xs ! j'\n  y \\<in> xs ! i'\n\ngoal (1 subgoal):\n 1. i = j' &&& j = i'", "by (intro weak_ranking_index_unique[OF wf]; simp)+"], ["proof (state)\nthis:\n  i = j'\n  j = i'\n\ngoal (1 subgoal):\n 1. y \\<in> A", "moreover"], ["proof (state)\nthis:\n  i = j'\n  j = i'\n\ngoal (1 subgoal):\n 1. y \\<in> A", "from A"], ["proof (chain)\npicking this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A", "obtain k where k: \"k < length xs\" \"A = xs ! k\""], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k < length xs; A = xs ! k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: xs_def set_conv_nth)"], ["proof (state)\nthis:\n  k < length xs\n  A = xs ! k\n\ngoal (1 subgoal):\n 1. y \\<in> A", "ultimately"], ["proof (chain)\npicking this:\n  i = j'\n  j = i'\n  k < length xs\n  A = xs ! k", "have \"k = i\""], ["proof (prove)\nusing this:\n  i = j'\n  j = i'\n  k < length xs\n  A = xs ! k\n\ngoal (1 subgoal):\n 1. k = i", "using ij i'j' A"], ["proof (prove)\nusing this:\n  i = j'\n  j = i'\n  k < length xs\n  A = xs ! k\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j' \\<le> i'\n  i' < length xs\n  j' < length xs\n  x \\<in> xs ! j'\n  y \\<in> xs ! i'\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. k = i", "by (intro weak_ranking_index_unique[OF wf, of _ _ x]) auto"], ["proof (state)\nthis:\n  k = i\n\ngoal (1 subgoal):\n 1. y \\<in> A", "with ij i'j' k eq"], ["proof (chain)\npicking this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j' \\<le> i'\n  i' < length xs\n  j' < length xs\n  x \\<in> xs ! j'\n  y \\<in> xs ! i'\n  k < length xs\n  A = xs ! k\n  i = j'\n  j = i'\n  k = i", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> i\n  i < length xs\n  j < length xs\n  x \\<in> xs ! i\n  y \\<in> xs ! j\n  j' \\<le> i'\n  i' < length xs\n  j' < length xs\n  x \\<in> xs ! j'\n  y \\<in> xs ! i'\n  k < length xs\n  A = xs ! k\n  i = j'\n  j = i'\n  k = i\n\ngoal (1 subgoal):\n 1. y \\<in> A", "by (auto simp: xs_def)"], ["proof (state)\nthis:\n  y \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma hd_weak_ranking:\n  assumes \"x \\<in> hd (weak_ranking le)\" \"y \\<in> carrier\"\n  shows   \"le y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le y x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. le y x", "from weak_ranking_Union assms"], ["proof (chain)\npicking this:\n  \\<Union> (set (weak_ranking le)) = carrier\n  x \\<in> hd (weak_ranking le)\n  y \\<in> carrier", "obtain i\n    where \"i < length (weak_ranking le)\" \"y \\<in> weak_ranking le ! i\""], ["proof (prove)\nusing this:\n  \\<Union> (set (weak_ranking le)) = carrier\n  x \\<in> hd (weak_ranking le)\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length (weak_ranking le);\n         y \\<in> weak_ranking le ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n\ngoal (1 subgoal):\n 1. le y x", "moreover"], ["proof (state)\nthis:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n\ngoal (1 subgoal):\n 1. le y x", "from assms(2) weak_ranking_Union"], ["proof (chain)\npicking this:\n  y \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier", "have \"weak_ranking le \\<noteq> []\""], ["proof (prove)\nusing this:\n  y \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier\n\ngoal (1 subgoal):\n 1. weak_ranking le \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  weak_ranking le \\<noteq> []\n\ngoal (1 subgoal):\n 1. le y x", "ultimately"], ["proof (chain)\npicking this:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n  weak_ranking le \\<noteq> []", "have \"of_weak_ranking (weak_ranking le) y x\""], ["proof (prove)\nusing this:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n  weak_ranking le \\<noteq> []\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) y x", "using assms(1)"], ["proof (prove)\nusing this:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n  weak_ranking le \\<noteq> []\n  x \\<in> hd (weak_ranking le)\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) y x", "by (intro of_weak_ranking.intros[of 0 i]) (auto simp: hd_conv_nth)"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) y x\n\ngoal (1 subgoal):\n 1. le y x", "thus ?thesis"], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking le) y x\n\ngoal (1 subgoal):\n 1. le y x", "by (simp add: weak_ranking_total_preorder)"], ["proof (state)\nthis:\n  le y x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma last_weak_ranking:\n  assumes \"x \\<in> last (weak_ranking le)\" \"y \\<in> carrier\"\n  shows   \"le x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. le x y", "from weak_ranking_Union assms"], ["proof (chain)\npicking this:\n  \\<Union> (set (weak_ranking le)) = carrier\n  x \\<in> last (weak_ranking le)\n  y \\<in> carrier", "obtain i\n    where \"i < length (weak_ranking le)\" \"y \\<in> weak_ranking le ! i\""], ["proof (prove)\nusing this:\n  \\<Union> (set (weak_ranking le)) = carrier\n  x \\<in> last (weak_ranking le)\n  y \\<in> carrier\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < length (weak_ranking le);\n         y \\<in> weak_ranking le ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_conv_nth)"], ["proof (state)\nthis:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n\ngoal (1 subgoal):\n 1. le x y", "moreover"], ["proof (state)\nthis:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n\ngoal (1 subgoal):\n 1. le x y", "from assms(2) weak_ranking_Union"], ["proof (chain)\npicking this:\n  y \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier", "have \"weak_ranking le \\<noteq> []\""], ["proof (prove)\nusing this:\n  y \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier\n\ngoal (1 subgoal):\n 1. weak_ranking le \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  weak_ranking le \\<noteq> []\n\ngoal (1 subgoal):\n 1. le x y", "ultimately"], ["proof (chain)\npicking this:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n  weak_ranking le \\<noteq> []", "have \"of_weak_ranking (weak_ranking le) x y\""], ["proof (prove)\nusing this:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n  weak_ranking le \\<noteq> []\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y", "using assms(1)"], ["proof (prove)\nusing this:\n  i < length (weak_ranking le)\n  y \\<in> weak_ranking le ! i\n  weak_ranking le \\<noteq> []\n  x \\<in> last (weak_ranking le)\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y", "by (intro of_weak_ranking.intros[of i \"length (weak_ranking le) - 1\"])\n       (auto simp: last_conv_nth)"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. le x y", "thus ?thesis"], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. le x y", "by (simp add: weak_ranking_total_preorder)"], ["proof (state)\nthis:\n  le x y\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The index in weak ranking of a given alternative. An element with index 0 is \n  first-ranked; larger indices correspond to less-preferred alternatives.\n\\<close>"], ["", "definition weak_ranking_index :: \"'a \\<Rightarrow> nat\" where\n  \"weak_ranking_index x = find_index (\\<lambda>A. x \\<in> A) (weak_ranking le)\""], ["", "lemma nth_weak_ranking_index:\n  assumes \"x \\<in> carrier\"\n  shows   \"weak_ranking_index x < length (weak_ranking le)\" \n          \"x \\<in> weak_ranking le ! weak_ranking_index x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking_index x < length (weak_ranking le) &&&\n    x \\<in> weak_ranking le ! weak_ranking_index x", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. weak_ranking_index x < length (weak_ranking le)\n 2. x \\<in> weak_ranking le ! weak_ranking_index x", "from assms weak_ranking_Union"], ["proof (chain)\npicking this:\n  x \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier", "show \"weak_ranking_index x < length (weak_ranking le)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier\n\ngoal (1 subgoal):\n 1. weak_ranking_index x < length (weak_ranking le)", "unfolding weak_ranking_index_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n  \\<Union> (set (weak_ranking le)) = carrier\n\ngoal (1 subgoal):\n 1. find_index ((\\<in>) x) (weak_ranking le) < length (weak_ranking le)", "by (auto simp add: find_index_less_size_conv)"], ["proof (state)\nthis:\n  weak_ranking_index x < length (weak_ranking le)\n\ngoal (1 subgoal):\n 1. x \\<in> weak_ranking le ! weak_ranking_index x", "thus \"x \\<in> weak_ranking le ! weak_ranking_index x\""], ["proof (prove)\nusing this:\n  weak_ranking_index x < length (weak_ranking le)\n\ngoal (1 subgoal):\n 1. x \\<in> weak_ranking le ! weak_ranking_index x", "unfolding weak_ranking_index_def"], ["proof (prove)\nusing this:\n  find_index ((\\<in>) x) (weak_ranking le) < length (weak_ranking le)\n\ngoal (1 subgoal):\n 1. x \\<in> weak_ranking le ! find_index ((\\<in>) x) (weak_ranking le)", "by (rule nth_find_index)"], ["proof (state)\nthis:\n  x \\<in> weak_ranking le ! weak_ranking_index x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ranking_index_eqI:\n  \"i < length (weak_ranking le) \\<Longrightarrow> x \\<in> weak_ranking le ! i \\<Longrightarrow> weak_ranking_index x = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length (weak_ranking le);\n     x \\<in> weak_ranking le ! i\\<rbrakk>\n    \\<Longrightarrow> weak_ranking_index x = i", "using weak_ranking_index_unique'[of \"weak_ranking le\" i x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_weak_ranking (weak_ranking le); i < length (weak_ranking le);\n   x \\<in> weak_ranking le ! i\\<rbrakk>\n  \\<Longrightarrow> i = find_index ((\\<in>) x) (weak_ranking le)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length (weak_ranking le);\n     x \\<in> weak_ranking le ! i\\<rbrakk>\n    \\<Longrightarrow> weak_ranking_index x = i", "by (simp add: weak_ranking_index_def weak_ranking_total_preorder)"], ["", "lemma ranking_index_le_iff [simp]:\n  assumes \"x \\<in> carrier\" \"y \\<in> carrier\"\n  shows   \"weak_ranking_index x \\<ge> weak_ranking_index y \\<longleftrightarrow> le x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (weak_ranking_index y \\<le> weak_ranking_index x) = le x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (weak_ranking_index y \\<le> weak_ranking_index x) = le x y", "have \"le x y \\<longleftrightarrow> of_weak_ranking (weak_ranking le) x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le x y = of_weak_ranking (weak_ranking le) x y", "by (simp add: weak_ranking_total_preorder)"], ["proof (state)\nthis:\n  le x y = of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. (weak_ranking_index y \\<le> weak_ranking_index x) = le x y", "also"], ["proof (state)\nthis:\n  le x y = of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. (weak_ranking_index y \\<le> weak_ranking_index x) = le x y", "have \"\\<dots> \\<longleftrightarrow> weak_ranking_index x \\<ge> weak_ranking_index y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y =\n    (weak_ranking_index y \\<le> weak_ranking_index x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. of_weak_ranking (weak_ranking le) x y \\<Longrightarrow>\n    weak_ranking_index y \\<le> weak_ranking_index x\n 2. weak_ranking_index y \\<le> weak_ranking_index x \\<Longrightarrow>\n    of_weak_ranking (weak_ranking le) x y", "assume \"weak_ranking_index x \\<ge> weak_ranking_index y\""], ["proof (state)\nthis:\n  weak_ranking_index y \\<le> weak_ranking_index x\n\ngoal (2 subgoals):\n 1. of_weak_ranking (weak_ranking le) x y \\<Longrightarrow>\n    weak_ranking_index y \\<le> weak_ranking_index x\n 2. weak_ranking_index y \\<le> weak_ranking_index x \\<Longrightarrow>\n    of_weak_ranking (weak_ranking le) x y", "thus \"of_weak_ranking (weak_ranking le) x y\""], ["proof (prove)\nusing this:\n  weak_ranking_index y \\<le> weak_ranking_index x\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y", "by (rule of_weak_ranking.intros) (simp_all add: nth_weak_ranking_index assms)"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y \\<Longrightarrow>\n    weak_ranking_index y \\<le> weak_ranking_index x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y \\<Longrightarrow>\n    weak_ranking_index y \\<le> weak_ranking_index x", "assume \"of_weak_ranking (weak_ranking le) x y\""], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y \\<Longrightarrow>\n    weak_ranking_index y \\<le> weak_ranking_index x", "then"], ["proof (chain)\npicking this:\n  of_weak_ranking (weak_ranking le) x y", "obtain i j where \n      \"i \\<le> j\" \"i < length (weak_ranking le)\" \"j < length (weak_ranking le)\"\n      \"x \\<in> weak_ranking le ! j\" \"y \\<in> weak_ranking le ! i\""], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking le) x y\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i \\<le> j; i < length (weak_ranking le);\n         j < length (weak_ranking le); x \\<in> weak_ranking le ! j;\n         y \\<in> weak_ranking le ! i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (elim of_weak_ranking.cases) blast"], ["proof (state)\nthis:\n  i \\<le> j\n  i < length (weak_ranking le)\n  j < length (weak_ranking le)\n  x \\<in> weak_ranking le ! j\n  y \\<in> weak_ranking le ! i\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y \\<Longrightarrow>\n    weak_ranking_index y \\<le> weak_ranking_index x", "with ranking_index_eqI[of i] ranking_index_eqI[of j]"], ["proof (chain)\npicking this:\n  \\<lbrakk>i < length (weak_ranking le);\n   ?x \\<in> weak_ranking le ! i\\<rbrakk>\n  \\<Longrightarrow> weak_ranking_index ?x = i\n  \\<lbrakk>j < length (weak_ranking le);\n   ?x \\<in> weak_ranking le ! j\\<rbrakk>\n  \\<Longrightarrow> weak_ranking_index ?x = j\n  i \\<le> j\n  i < length (weak_ranking le)\n  j < length (weak_ranking le)\n  x \\<in> weak_ranking le ! j\n  y \\<in> weak_ranking le ! i", "show \"weak_ranking_index x \\<ge> weak_ranking_index y\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i < length (weak_ranking le);\n   ?x \\<in> weak_ranking le ! i\\<rbrakk>\n  \\<Longrightarrow> weak_ranking_index ?x = i\n  \\<lbrakk>j < length (weak_ranking le);\n   ?x \\<in> weak_ranking le ! j\\<rbrakk>\n  \\<Longrightarrow> weak_ranking_index ?x = j\n  i \\<le> j\n  i < length (weak_ranking le)\n  j < length (weak_ranking le)\n  x \\<in> weak_ranking le ! j\n  y \\<in> weak_ranking le ! i\n\ngoal (1 subgoal):\n 1. weak_ranking_index y \\<le> weak_ranking_index x", "by simp"], ["proof (state)\nthis:\n  weak_ranking_index y \\<le> weak_ranking_index x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) x y =\n  (weak_ranking_index y \\<le> weak_ranking_index x)\n\ngoal (1 subgoal):\n 1. (weak_ranking_index y \\<le> weak_ranking_index x) = le x y", "finally"], ["proof (chain)\npicking this:\n  le x y = (weak_ranking_index y \\<le> weak_ranking_index x)", "show ?thesis"], ["proof (prove)\nusing this:\n  le x y = (weak_ranking_index y \\<le> weak_ranking_index x)\n\ngoal (1 subgoal):\n 1. (weak_ranking_index y \\<le> weak_ranking_index x) = le x y", ".."], ["proof (state)\nthis:\n  (weak_ranking_index y \\<le> weak_ranking_index x) = le x y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma weak_ranking_False [simp]: \"weak_ranking (\\<lambda>_ _. False) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking (\\<lambda>_ _. False) = []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_ranking (\\<lambda>_ _. False) = []", "interpret finite_total_preorder_on \"{}\" \"\\<lambda>_ _. False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_total_preorder_on {} (\\<lambda>_ _. False)", "by unfold_locales simp_all"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_ranking (\\<lambda>_ _. False) = []", "have \"[] = weak_ranking (\\<lambda>_ _. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] = weak_ranking (\\<lambda>_ _. False)", "by (rule weak_ranking_unique) simp_all"], ["proof (state)\nthis:\n  [] = weak_ranking (\\<lambda>_ _. False)\n\ngoal (1 subgoal):\n 1. weak_ranking (\\<lambda>_ _. False) = []", "thus ?thesis"], ["proof (prove)\nusing this:\n  [] = weak_ranking (\\<lambda>_ _. False)\n\ngoal (1 subgoal):\n 1. weak_ranking (\\<lambda>_ _. False) = []", ".."], ["proof (state)\nthis:\n  weak_ranking (\\<lambda>_ _. False) = []\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas of_weak_ranking_weak_ranking = \n  finite_total_preorder_on.weak_ranking_total_preorder(2)"], ["", "lemma finite_total_preorder_on_iff:\n  \"finite_total_preorder_on A R \\<longleftrightarrow> total_preorder_on A R \\<and> finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_total_preorder_on A R = (total_preorder_on A R \\<and> finite A)", "by (simp add: finite_total_preorder_on_def finite_total_preorder_on_axioms_def)"], ["", "lemma finite_total_preorder_of_weak_ranking:\n  assumes \"\\<Union>(set xs) = A\" \"is_finite_weak_ranking xs\"\n  shows   \"finite_total_preorder_on A (of_weak_ranking xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_total_preorder_on A (of_weak_ranking xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_total_preorder_on A (of_weak_ranking xs)", "from assms(2)"], ["proof (chain)\npicking this:\n  is_finite_weak_ranking xs", "have \"is_weak_ranking xs\""], ["proof (prove)\nusing this:\n  is_finite_weak_ranking xs\n\ngoal (1 subgoal):\n 1. is_weak_ranking xs", "by (simp add: is_finite_weak_ranking_def)"], ["proof (state)\nthis:\n  is_weak_ranking xs\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on A (of_weak_ranking xs)", "from assms(1) and this"], ["proof (chain)\npicking this:\n  \\<Union> (set xs) = A\n  is_weak_ranking xs", "interpret total_preorder_on A \"of_weak_ranking xs\""], ["proof (prove)\nusing this:\n  \\<Union> (set xs) = A\n  is_weak_ranking xs\n\ngoal (1 subgoal):\n 1. total_preorder_on A (of_weak_ranking xs)", "by (rule total_preorder_of_weak_ranking)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_total_preorder_on A (of_weak_ranking xs)", "from assms(2)"], ["proof (chain)\npicking this:\n  is_finite_weak_ranking xs", "show ?thesis"], ["proof (prove)\nusing this:\n  is_finite_weak_ranking xs\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on A (of_weak_ranking xs)", "by unfold_locales (simp add: assms(1)[symmetric] is_finite_weak_ranking_def)"], ["proof (state)\nthis:\n  finite_total_preorder_on A (of_weak_ranking xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_of_weak_ranking:\n  assumes \"is_finite_weak_ranking xs\"\n  shows   \"weak_ranking (of_weak_ranking xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking (of_weak_ranking xs) = xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_ranking (of_weak_ranking xs) = xs", "from assms"], ["proof (chain)\npicking this:\n  is_finite_weak_ranking xs", "interpret finite_total_preorder_on \"\\<Union>(set xs)\" \"of_weak_ranking xs\""], ["proof (prove)\nusing this:\n  is_finite_weak_ranking xs\n\ngoal (1 subgoal):\n 1. finite_total_preorder_on (\\<Union> (set xs)) (of_weak_ranking xs)", "by (intro finite_total_preorder_of_weak_ranking) simp_all"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_ranking (of_weak_ranking xs) = xs", "from assms"], ["proof (chain)\npicking this:\n  is_finite_weak_ranking xs", "show ?thesis"], ["proof (prove)\nusing this:\n  is_finite_weak_ranking xs\n\ngoal (1 subgoal):\n 1. weak_ranking (of_weak_ranking xs) = xs", "by (intro sym[OF weak_ranking_unique]) (simp_all add: is_finite_weak_ranking_def)"], ["proof (state)\nthis:\n  weak_ranking (of_weak_ranking xs) = xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_eqD:\n  assumes \"finite_total_preorder_on alts R1\"\n  assumes \"finite_total_preorder_on alts R2\"\n  assumes \"weak_ranking R1 = weak_ranking R2\"\n  shows   \"R1 = R2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R1 = R2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R1 = R2", "from assms"], ["proof (chain)\npicking this:\n  finite_total_preorder_on alts R1\n  finite_total_preorder_on alts R2\n  weak_ranking R1 = weak_ranking R2", "have \"of_weak_ranking (weak_ranking R1) = of_weak_ranking (weak_ranking R2)\""], ["proof (prove)\nusing this:\n  finite_total_preorder_on alts R1\n  finite_total_preorder_on alts R2\n  weak_ranking R1 = weak_ranking R2\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking R1) = of_weak_ranking (weak_ranking R2)", "by simp"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking R1) = of_weak_ranking (weak_ranking R2)\n\ngoal (1 subgoal):\n 1. R1 = R2", "with assms(1,2)"], ["proof (chain)\npicking this:\n  finite_total_preorder_on alts R1\n  finite_total_preorder_on alts R2\n  of_weak_ranking (weak_ranking R1) = of_weak_ranking (weak_ranking R2)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite_total_preorder_on alts R1\n  finite_total_preorder_on alts R2\n  of_weak_ranking (weak_ranking R1) = of_weak_ranking (weak_ranking R2)\n\ngoal (1 subgoal):\n 1. R1 = R2", "by (simp add: of_weak_ranking_weak_ranking)"], ["proof (state)\nthis:\n  R1 = R2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_eq_iff:\n  assumes \"finite_total_preorder_on alts R1\"\n  assumes \"finite_total_preorder_on alts R2\"\n  shows   \"weak_ranking R1 = weak_ranking R2 \\<longleftrightarrow> R1 = R2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (weak_ranking R1 = weak_ranking R2) = (R1 = R2)", "using assms weak_ranking_eqD"], ["proof (prove)\nusing this:\n  finite_total_preorder_on alts R1\n  finite_total_preorder_on alts R2\n  \\<lbrakk>finite_total_preorder_on ?alts ?R1.0;\n   finite_total_preorder_on ?alts ?R2.0;\n   weak_ranking ?R1.0 = weak_ranking ?R2.0\\<rbrakk>\n  \\<Longrightarrow> ?R1.0 = ?R2.0\n\ngoal (1 subgoal):\n 1. (weak_ranking R1 = weak_ranking R2) = (R1 = R2)", "by auto"], ["", "definition preferred_alts :: \"'alt relation \\<Rightarrow> 'alt \\<Rightarrow> 'alt set\" where\n  \"preferred_alts R x = {y. y \\<succeq>[R] x}\""], ["", "lemma (in preorder_on) preferred_alts_refl [simp]: \"x \\<in> carrier \\<Longrightarrow> x \\<in> preferred_alts le x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier \\<Longrightarrow> x \\<in> preferred_alts le x", "by (simp add: preferred_alts_def refl)"], ["", "lemma (in preorder_on) preferred_alts_altdef:\n  \"preferred_alts le x = {y\\<in>carrier. y \\<succeq>[le] x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preferred_alts le x = {y \\<in> carrier. le x y}", "by (auto simp: preferred_alts_def intro: not_outside)"], ["", "lemma (in preorder_on) preferred_alts_subset: \"preferred_alts le x \\<subseteq> carrier\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preferred_alts le x \\<subseteq> carrier", "unfolding preferred_alts_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (le x) \\<subseteq> carrier", "using not_outside"], ["proof (prove)\nusing this:\n  le ?x ?y \\<Longrightarrow> ?x \\<in> carrier\n  le ?x ?y \\<Longrightarrow> ?y \\<in> carrier\n\ngoal (1 subgoal):\n 1. Collect (le x) \\<subseteq> carrier", "by blast"], ["", "subsection \\<open>Rankings\\<close>"], ["", "(* TODO: Extend theory on rankings. Can probably mostly be based on\n   existing theory on weak rankings. *)"], ["", "definition ranking :: \"'a relation \\<Rightarrow> 'a list\" where\n  \"ranking R = map the_elem (weak_ranking R)\""], ["", "locale finite_linorder_on = linorder_on +\n  assumes finite_carrier [intro]: \"finite carrier\"\nbegin"], ["", "sublocale finite_total_preorder_on carrier le"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_total_preorder_on carrier le", "by unfold_locales (fact finite_carrier)"], ["", "lemma singleton_weak_ranking:\n  assumes \"A \\<in> set (weak_ranking le)\"\n  shows   \"is_singleton A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_singleton A", "proof (rule is_singletonI')"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<noteq> {}\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y", "from assms"], ["proof (chain)\npicking this:\n  A \\<in> set (weak_ranking le)", "show \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "using weak_ranking_total_preorder(1) is_weak_ranking_iff"], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n  is_weak_ranking (weak_ranking le)\n  is_weak_ranking ?xs =\n  (distinct ?xs \\<and> disjoint (set ?xs) \\<and> {} \\<notin> set ?xs)\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y", "assume \"x \\<in> A\" \"y \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y", "with assms"], ["proof (chain)\npicking this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n  y \\<in> A", "have \"x \\<preceq>[of_weak_ranking (weak_ranking le)] y\" \"y \\<preceq>[of_weak_ranking (weak_ranking le)] x\""], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. of_weak_ranking (weak_ranking le) x y &&&\n    of_weak_ranking (weak_ranking le) y x", "by (auto intro!: of_weak_ranking_indifference)"], ["proof (state)\nthis:\n  of_weak_ranking (weak_ranking le) x y\n  of_weak_ranking (weak_ranking le) y x\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y", "with weak_ranking_total_preorder(2)"], ["proof (chain)\npicking this:\n  of_weak_ranking (weak_ranking le) = le\n  of_weak_ranking (weak_ranking le) x y\n  of_weak_ranking (weak_ranking le) y x", "show \"x = y\""], ["proof (prove)\nusing this:\n  of_weak_ranking (weak_ranking le) = le\n  of_weak_ranking (weak_ranking le) x y\n  of_weak_ranking (weak_ranking le) y x\n\ngoal (1 subgoal):\n 1. x = y", "by (intro antisymmetric) simp_all"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_ranking_ranking: \"weak_ranking le = map (\\<lambda>x. {x}) (ranking le)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking le = map (\\<lambda>x. {x}) (ranking le)", "unfolding ranking_def map_map o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_ranking le = map (\\<lambda>x. {the_elem x}) (weak_ranking le)", "proof (rule sym, rule map_idI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (weak_ranking le) \\<Longrightarrow> {the_elem x} = x", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (weak_ranking le) \\<Longrightarrow> {the_elem x} = x", "assume \"A \\<in> set (weak_ranking le)\""], ["proof (state)\nthis:\n  A \\<in> set (weak_ranking le)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (weak_ranking le) \\<Longrightarrow> {the_elem x} = x", "hence \"is_singleton A\""], ["proof (prove)\nusing this:\n  A \\<in> set (weak_ranking le)\n\ngoal (1 subgoal):\n 1. is_singleton A", "by (rule singleton_weak_ranking)"], ["proof (state)\nthis:\n  is_singleton A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (weak_ranking le) \\<Longrightarrow> {the_elem x} = x", "thus \"{the_elem A} = A\""], ["proof (prove)\nusing this:\n  is_singleton A\n\ngoal (1 subgoal):\n 1. {the_elem A} = A", "by (auto elim: is_singletonE)"], ["proof (state)\nthis:\n  {the_elem A} = A\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}