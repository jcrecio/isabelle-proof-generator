{"file_name": "/home/qj213/afp-2021-10-22/thys/Refine_Monadic/Autoref_Monadic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Refine_Monadic", "problem_names": ["lemma autoref_monadicI1:\n  assumes \"(b,a)\\<in>\\<langle>R\\<rangle>nres_rel\"\n  assumes \"RETURN c \\<le> b\"\n  shows \"(RETURN c, a)\\<in>\\<langle>R\\<rangle>nres_rel\" \"RETURN c \\<le>\\<Down>R a\"", "lemma autoref_monadicI2:\n  assumes \"(b,a)\\<in>\\<langle>R\\<rangle>nres_rel\"\n  assumes \"nres_of c \\<le> b\"\n  shows \"(nres_of c, a)\\<in>\\<langle>R\\<rangle>nres_rel\" \"nres_of c \\<le> \\<Down>R a\"", "lemmas autoref_monadicI = autoref_monadicI1 autoref_monadicI2"], "translations": [["", "lemma autoref_monadicI1:\n  assumes \"(b,a)\\<in>\\<langle>R\\<rangle>nres_rel\"\n  assumes \"RETURN c \\<le> b\"\n  shows \"(RETURN c, a)\\<in>\\<langle>R\\<rangle>nres_rel\" \"RETURN c \\<le>\\<Down>R a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (RETURN c, a) \\<in> \\<langle>R\\<rangle>nres_rel &&&\n    RETURN c \\<le> \\<Down> R a", "using assms"], ["proof (prove)\nusing this:\n  (b, a) \\<in> \\<langle>R\\<rangle>nres_rel\n  RETURN c \\<le> b\n\ngoal (1 subgoal):\n 1. (RETURN c, a) \\<in> \\<langle>R\\<rangle>nres_rel &&&\n    RETURN c \\<le> \\<Down> R a", "unfolding nres_rel_def"], ["proof (prove)\nusing this:\n  (b, a) \\<in> {(c, a). c \\<le> \\<Down> R a}\n  RETURN c \\<le> b\n\ngoal (1 subgoal):\n 1. (RETURN c, a) \\<in> {(c, a). c \\<le> \\<Down> R a} &&&\n    RETURN c \\<le> \\<Down> R a", "by simp_all"], ["", "lemma autoref_monadicI2:\n  assumes \"(b,a)\\<in>\\<langle>R\\<rangle>nres_rel\"\n  assumes \"nres_of c \\<le> b\"\n  shows \"(nres_of c, a)\\<in>\\<langle>R\\<rangle>nres_rel\" \"nres_of c \\<le> \\<Down>R a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (nres_of c, a) \\<in> \\<langle>R\\<rangle>nres_rel &&&\n    nres_of c \\<le> \\<Down> R a", "using assms"], ["proof (prove)\nusing this:\n  (b, a) \\<in> \\<langle>R\\<rangle>nres_rel\n  nres_of c \\<le> b\n\ngoal (1 subgoal):\n 1. (nres_of c, a) \\<in> \\<langle>R\\<rangle>nres_rel &&&\n    nres_of c \\<le> \\<Down> R a", "unfolding nres_rel_def"], ["proof (prove)\nusing this:\n  (b, a) \\<in> {(c, a). c \\<le> \\<Down> R a}\n  nres_of c \\<le> b\n\ngoal (1 subgoal):\n 1. (nres_of c, a) \\<in> {(c, a). c \\<le> \\<Down> R a} &&&\n    nres_of c \\<le> \\<Down> R a", "by simp_all"], ["", "lemmas autoref_monadicI = autoref_monadicI1 autoref_monadicI2"], ["", "ML \\<open>\n  structure Autoref_Monadic = struct\n\n    val cfg_plain = Attrib.setup_config_bool @{binding autoref_plain} (K false)\n\n    fun autoref_monadic_tac ctxt = let\n      open Autoref_Tacticals\n      val ctxt = Autoref_Phases.init_data ctxt\n      val plain = Config.get ctxt cfg_plain\n      val trans_thms = if plain then [] else @{thms the_resI}\n  \n    in\n      resolve_tac ctxt @{thms autoref_monadicI}\n      THEN' \n      IF_SOLVED (Autoref_Phases.all_phases_tac ctxt)\n        (RefineG_Transfer.post_transfer_tac trans_thms ctxt)\n        (K all_tac) (* Autoref failed *)\n\n    end\n  end\n\\<close>"], ["", "method_setup autoref_monadic = \\<open>let\n    open Refine_Util Autoref_Monadic\n    val autoref_flags = \n          parse_bool_config \"trace\" Autoref_Phases.cfg_trace\n      ||  parse_bool_config \"debug\" Autoref_Phases.cfg_debug\n      ||  parse_bool_config \"plain\" Autoref_Monadic.cfg_plain\n\n  in\n    parse_paren_lists autoref_flags \n    >>\n    ( fn _ => fn ctxt => SIMPLE_METHOD' (\n      let \n        val ctxt = Config.put Autoref_Phases.cfg_keep_goal true ctxt\n      in autoref_monadic_tac ctxt end\n    ))\n\n  end\n\n\\<close> \n \"Automatic Refinement and Determinization for the Monadic Refinement Framework\""], ["", "end"]]}