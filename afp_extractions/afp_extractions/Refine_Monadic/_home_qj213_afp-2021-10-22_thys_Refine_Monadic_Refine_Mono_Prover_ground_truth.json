{"file_name": "/home/qj213/afp-2021-10-22/thys/Refine_Monadic/Refine_Mono_Prover.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Refine_Monadic", "problem_names": ["lemma monoI: \"(\\<And>f g x. (\\<And>x. le (f x) (g x)) \\<Longrightarrow> le (B f x) (B g x)) \n      \\<Longrightarrow> monotone (fun_ord le) (fun_ord le) B\"", "lemma mono_if: \"\\<lbrakk>le t t'; le e e'\\<rbrakk> \\<Longrightarrow> le (If b t e) (If b t' e')\"", "lemma mono_let: \"(\\<And>x. le (f x) (f' x)) \\<Longrightarrow> le (Let x f) (Let x f')\"", "lemmas mono_thms[refine_mono] = monoI mono_if mono_let refl", "lemmas [refine_mono] = \n    lfp_mono[OF le_funI, THEN le_funD] \n    gfp_mono[OF le_funI, THEN le_funD]"], "translations": [["", "lemma monoI: \"(\\<And>f g x. (\\<And>x. le (f x) (g x)) \\<Longrightarrow> le (B f x) (B g x)) \n      \\<Longrightarrow> monotone (fun_ord le) (fun_ord le) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f g x.\n        (\\<And>x. le (f x) (g x)) \\<Longrightarrow>\n        le (B f x) (B g x)) \\<Longrightarrow>\n    monotone (fun_ord le) (fun_ord le) B", "unfolding monotone_def fun_ord_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f g x.\n        (\\<And>x. le (f x) (g x)) \\<Longrightarrow>\n        le (B f x) (B g x)) \\<Longrightarrow>\n    \\<forall>x y.\n       (\\<forall>xa. le (x xa) (y xa)) \\<longrightarrow>\n       (\\<forall>xa. le (B x xa) (B y xa))", "by blast"], ["", "lemma mono_if: \"\\<lbrakk>le t t'; le e e'\\<rbrakk> \\<Longrightarrow> le (If b t e) (If b t' e')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le t t'; le e e'\\<rbrakk>\n    \\<Longrightarrow> le (if b then t else e) (if b then t' else e')", "by auto"], ["", "lemma mono_let: \"(\\<And>x. le (f x) (f' x)) \\<Longrightarrow> le (Let x f) (Let x f')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. le (f x) (f' x)) \\<Longrightarrow> le (Let x f) (Let x f')", "by auto"], ["", "lemmas mono_thms[refine_mono] = monoI mono_if mono_let refl"], ["", "declaration \\<open>Refine_Mono_Prover.declare_mono_triggers @{thms monoI}\\<close>"], ["", "end"], ["", "interpretation order_mono_setup: mono_setup_loc \"(\\<le>) :: 'a::preorder \\<Rightarrow> _\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono_setup_loc (\\<le>)", "by standard auto"], ["", "declaration \\<open>Refine_Mono_Prover.declare_mono_triggers @{thms Orderings.monoI}\\<close>"], ["", "lemmas [refine_mono] = \n    lfp_mono[OF le_funI, THEN le_funD] \n    gfp_mono[OF le_funI, THEN le_funD]"], ["", "end"]]}