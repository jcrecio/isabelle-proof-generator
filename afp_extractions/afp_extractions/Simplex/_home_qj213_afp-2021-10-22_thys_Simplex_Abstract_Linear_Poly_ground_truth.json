{"file_name": "/home/qj213/afp-2021-10-22/thys/Simplex/Abstract_Linear_Poly.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Simplex", "problem_names": ["lemma inv_fun_zero [simp]: \n  \"inv fun_zero\"", "lemma inv_fun_plus [simp]: \n  \"\\<lbrakk>inv (f1 :: nat \\<Rightarrow> 'a::monoid_add); inv f2\\<rbrakk> \\<Longrightarrow> inv (fun_plus f1 f2)\"", "lemma inv_fun_scale [simp]: \n  \"inv (f :: nat \\<Rightarrow> 'a::ring) \\<Longrightarrow> inv (fun_scale r f)\"", "lemma coeff_plus [simp] : \"coeff (lp1 + lp2) var = coeff lp1 var + coeff lp2 var\"", "lemma coeff_scaleRat [simp]: \"coeff (k *R lp1) var = k * coeff lp1 var\"", "lemma coeff_uminus [simp]: \"coeff (-lp) var = - coeff lp var\"", "lemma coeff_minus [simp]: \"coeff (lp1 - lp2) var = coeff lp1 var - coeff lp2 var\"", "lemma coeff_zero: \"coeff p x \\<noteq> 0 \\<longleftrightarrow> x \\<in> vars p\"", "lemma finite_vars: \"finite (vars p)\"", "lemma set_vars_list: \"set (vars_list lp) = vars lp\"", "lemma valuate_zero: \"(0 \\<lbrace>v\\<rbrace>) = 0\"", "lemma \n  valuate_diff: \"(p \\<lbrace>v1\\<rbrace>) - (p \\<lbrace>v2\\<rbrace>) = (p \\<lbrace> \\<lambda> x. v1 x - v2 x \\<rbrace>)\"", "lemma valuate_opposite_val: \n  shows \"p \\<lbrace> \\<lambda> x. - v x \\<rbrace> = - (p \\<lbrace> v \\<rbrace>)\"", "lemma valuate_nonneg:\n  fixes v :: \"'a::linordered_rational_vector valuation\"\n  assumes \"\\<forall> x \\<in> vars p. (coeff p x > 0 \\<longrightarrow> v x \\<ge> 0) \\<and> (coeff p x < 0 \\<longrightarrow> v x \\<le> 0)\"\n  shows \"p \\<lbrace> v \\<rbrace> \\<ge> 0\"", "lemma valuate_nonpos:\n  fixes v :: \"'a::linordered_rational_vector valuation\"\n  assumes \"\\<forall> x \\<in> vars p. (coeff p x > 0 \\<longrightarrow> v x \\<le> 0) \\<and> (coeff p x < 0 \\<longrightarrow> v x \\<ge> 0)\"\n  shows \"p \\<lbrace> v \\<rbrace> \\<le> 0\"", "lemma valuate_uminus: \"(-p) \\<lbrace>v\\<rbrace> = - (p \\<lbrace>v\\<rbrace>)\"", "lemma valuate_add_lemma:\n  fixes v :: \"'a \\<Rightarrow> 'b::rational_vector\"\n  assumes \"finite {v. f1 v \\<noteq> 0}\" \"finite {v. f2 v \\<noteq> 0}\"\n  shows\n    \"(\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n   (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\"", "lemma valuate_add:  \"(p1 + p2) \\<lbrace>v\\<rbrace> = (p1 \\<lbrace>v\\<rbrace>) + (p2 \\<lbrace>v\\<rbrace>)\"", "lemma valuate_minus: \"(p1 - p2) \\<lbrace>v\\<rbrace> = (p1 \\<lbrace>v\\<rbrace>) - (p2 \\<lbrace>v\\<rbrace>)\"", "lemma valuate_scaleRat:\n  \"(c *R lp) \\<lbrace> v \\<rbrace> = c *R ( lp\\<lbrace>v\\<rbrace> )\"", "lemma valuate_Var: \"(Var x) \\<lbrace>v\\<rbrace> = v x\"", "lemma valuate_sum: \"((\\<Sum>x\\<in>A. f x) \\<lbrace> v \\<rbrace>) = (\\<Sum>x\\<in>A. ((f x) \\<lbrace> v \\<rbrace>))\"", "lemma distinct_vars_list: \n  \"distinct (vars_list p)\"", "lemma zero_coeff_zero: \"p = 0 \\<longleftrightarrow> (\\<forall> v. coeff p v = 0)\"", "lemma all_val: \n  assumes \"\\<forall> (v::var \\<Rightarrow> 'a::lrv). \\<exists> v'. (\\<forall> x \\<in> vars p. v' x = v x) \\<and> (p \\<lbrace>v'\\<rbrace> = 0)\"\n  shows \"p = 0\"", "lemma valuate_lp_monom: \"((lp_monom c x) \\<lbrace>v\\<rbrace>) = c * (v x)\"", "lemma valuate_lp_monom_1[simp]: \"((lp_monom 1 x) \\<lbrace>v\\<rbrace>) = v x\"", "lemma coeff_lp_monom [simp]:\n  shows \"coeff (lp_monom c v) v' = (if v = v' then c else 0)\"", "lemma vars_uminus [simp]: \"vars (-p) = vars p\"", "lemma vars_plus [simp]: \"vars (p1 + p2) \\<subseteq> vars p1 \\<union> vars p2\"", "lemma vars_minus [simp]: \"vars (p1 - p2) \\<subseteq> vars p1 \\<union> vars p2\"", "lemma vars_lp_monom: \"vars (lp_monom r x) = (if r = 0 then {} else {x})\"", "lemma vars_scaleRat1: \"vars (c *R p) \\<subseteq> vars p\"", "lemma vars_scaleRat: \"c \\<noteq> 0 \\<Longrightarrow> vars(c *R p) = vars p\"", "lemma vars_Var [simp]: \"vars (Var x) = {x}\"", "lemma coeff_Var1 [simp]: \"coeff (Var x) x = 1\"", "lemma coeff_Var2: \"x \\<noteq> y \\<Longrightarrow> coeff (Var x) y = 0\"", "lemma valuate_depend:\n  assumes \"\\<forall> x \\<in> vars p. v x = v' x\"\n  shows \"(p \\<lbrace>v\\<rbrace>) = (p \\<lbrace>v'\\<rbrace>)\"", "lemma valuate_update_x_lemma:\n  fixes v1 v2 :: \"'a::rational_vector valuation\"\n  assumes\n    \"\\<forall>y. f y \\<noteq> 0 \\<longrightarrow> y \\<noteq> x \\<longrightarrow> v1 y = v2 y\"\n    \"finite {v. f v \\<noteq> 0}\"\n  shows\n    \"(\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) = (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\"", "lemma valuate_update_x:\n  fixes v1 v2 :: \"'a::rational_vector valuation\"\n  assumes \"\\<forall>y \\<in> vars lp. y\\<noteq>x \\<longrightarrow> v1 y = v2 y\"\n  shows \"lp \\<lbrace>v1\\<rbrace>  + coeff lp x *R (v2 x - v1 x) = (lp \\<lbrace>v2\\<rbrace>)\"", "lemma vars_zero: \"vars 0 = {}\"", "lemma vars_empty_zero: \"vars lp = {} \\<longleftrightarrow> lp = 0\"", "lemma max_var_max:\n  assumes \"a \\<in> vars lp\"\n  shows \"max_var lp \\<ge> a\"", "lemma max_var_code[code]: \n  \"max_var lp = (let vl = vars_list lp \n                in if vl = [] then 0 else foldl max (hd vl) (tl vl))\"", "lemma is_monom_vars_not_empty:\n  \"is_monom l \\<Longrightarrow> vars l \\<noteq> {}\"", "lemma monom_var_in_vars:\n  \"is_monom l \\<Longrightarrow> monom_var l \\<in> vars l\"", "lemma zero_is_no_monom[simp]: \"\\<not> is_monom 0\"", "lemma is_monom_monom_coeff_not_zero:\n  \"is_monom l \\<Longrightarrow> monom_coeff l \\<noteq> 0\"", "lemma list_two_elements:\n  \"\\<lbrakk>y \\<in> set l; x \\<in> set l; length l = Suc 0; y \\<noteq> x\\<rbrakk> \\<Longrightarrow> False\"", "lemma is_monom_vars_monom_var:\n  assumes \"is_monom l\"\n  shows \"vars l = {monom_var l}\"", "lemma monom_valuate:\n  assumes \"is_monom m\"\n  shows \"m\\<lbrace>v\\<rbrace> = (monom_coeff m) *R v (monom_var m)\"", "lemma coeff_zero_simp [simp]:\n  \"coeff 0 v = 0\"", "lemma poly_eq_iff: \"p = q \\<longleftrightarrow> (\\<forall> v. coeff p v = coeff q v)\"", "lemma poly_eqI:\n  assumes \"\\<And>v. coeff p v = coeff q v\"\n  shows \"p = q\"", "lemma coeff_sum_list:\n  assumes \"distinct xs\"\n  shows \"coeff (\\<Sum>x\\<leftarrow>xs. f x *R lp_monom 1 x) v = (if v \\<in> set xs then f v else 0)\"", "lemma linear_poly_sum:\n  \"p \\<lbrace> v \\<rbrace> = (\\<Sum>x\\<in>vars p. coeff p x *R v x)\"", "lemma all_valuate_zero: assumes \"\\<And>(v::'a::lrv valuation). p \\<lbrace>v\\<rbrace> = 0\"\n  shows \"p = 0\"", "lemma linear_poly_eqI: assumes \"\\<And>(v::'a::lrv valuation). (p \\<lbrace>v\\<rbrace>) = (q \\<lbrace>v\\<rbrace>)\"\n  shows \"p = q\"", "lemma monom_poly_assemble:\n  assumes \"is_monom p\"\n  shows \"monom_coeff p *R lp_monom 1 (monom_var p) = p\"", "lemma coeff_sum: \"coeff (sum (f :: _ \\<Rightarrow> linear_poly) is) x = sum (\\<lambda> i. coeff (f i) x) is\""], "translations": [["", "lemma inv_fun_zero [simp]: \n  \"inv fun_zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv fun_zero", "by simp"], ["", "lemma inv_fun_plus [simp]: \n  \"\\<lbrakk>inv (f1 :: nat \\<Rightarrow> 'a::monoid_add); inv f2\\<rbrakk> \\<Longrightarrow> inv (fun_plus f1 f2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Abstract_Linear_Poly.inv f1;\n     Abstract_Linear_Poly.inv f2\\<rbrakk>\n    \\<Longrightarrow> Abstract_Linear_Poly.inv (fun_plus f1 f2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Abstract_Linear_Poly.inv f1;\n     Abstract_Linear_Poly.inv f2\\<rbrakk>\n    \\<Longrightarrow> Abstract_Linear_Poly.inv (fun_plus f1 f2)", "have *: \"{v. f1 v + f2 v \\<noteq> (0 :: 'a)} \\<subseteq> {v. f1 v \\<noteq> (0 :: 'a)} \\<union> {v. f2 v \\<noteq> (0 :: 'a)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. f1 v + f2 v \\<noteq> (0::'a)}\n    \\<subseteq> {v. f1 v \\<noteq> (0::'a)} \\<union>\n                {v. f2 v \\<noteq> (0::'a)}", "by auto"], ["proof (state)\nthis:\n  {v. f1 v + f2 v \\<noteq> (0::'a)}\n  \\<subseteq> {v. f1 v \\<noteq> (0::'a)} \\<union> {v. f2 v \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Abstract_Linear_Poly.inv f1;\n     Abstract_Linear_Poly.inv f2\\<rbrakk>\n    \\<Longrightarrow> Abstract_Linear_Poly.inv (fun_plus f1 f2)", "assume \"inv f1\" \"inv f2\""], ["proof (state)\nthis:\n  Abstract_Linear_Poly.inv f1\n  Abstract_Linear_Poly.inv f2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Abstract_Linear_Poly.inv f1;\n     Abstract_Linear_Poly.inv f2\\<rbrakk>\n    \\<Longrightarrow> Abstract_Linear_Poly.inv (fun_plus f1 f2)", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.inv f1\n  Abstract_Linear_Poly.inv f2", "show ?thesis"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.inv f1\n  Abstract_Linear_Poly.inv f2\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv (fun_plus f1 f2)", "using *"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.inv f1\n  Abstract_Linear_Poly.inv f2\n  {v. f1 v + f2 v \\<noteq> (0::'a)}\n  \\<subseteq> {v. f1 v \\<noteq> (0::'a)} \\<union> {v. f2 v \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv (fun_plus f1 f2)", "by (auto simp add: finite_subset)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.inv (fun_plus f1 f2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_fun_scale [simp]: \n  \"inv (f :: nat \\<Rightarrow> 'a::ring) \\<Longrightarrow> inv (fun_scale r f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv f \\<Longrightarrow>\n    Abstract_Linear_Poly.inv (fun_scale r f)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv f \\<Longrightarrow>\n    Abstract_Linear_Poly.inv (fun_scale r f)", "have *: \"{v. r * (f v) \\<noteq> 0} \\<subseteq> {v. f v \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. r * f v \\<noteq> (0::'a)} \\<subseteq> {v. f v \\<noteq> (0::'a)}", "by auto"], ["proof (state)\nthis:\n  {v. r * f v \\<noteq> (0::'a)} \\<subseteq> {v. f v \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv f \\<Longrightarrow>\n    Abstract_Linear_Poly.inv (fun_scale r f)", "assume \"inv f\""], ["proof (state)\nthis:\n  Abstract_Linear_Poly.inv f\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv f \\<Longrightarrow>\n    Abstract_Linear_Poly.inv (fun_scale r f)", "then"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.inv f", "show ?thesis"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.inv f\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv (fun_scale r f)", "using *"], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.inv f\n  {v. r * f v \\<noteq> (0::'a)} \\<subseteq> {v. f v \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv (fun_scale r f)", "by (auto simp add: finite_subset)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.inv (fun_scale r f)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>linear-poly type -- rat coeffs\\<close>"], ["", "(* TODO: change rat to arbitrary ring *)"], ["", "typedef  linear_poly = \"{c :: var \\<Rightarrow> rat. inv c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {c. Abstract_Linear_Poly.inv c}", "by (rule_tac x=\"\\<lambda> v. 0\" in exI) auto"], ["", "text\\<open>Linear polynomials are of the form $a_1 \\cdot x_1 + ... + a_n\n\\cdot x_n$. Their formalization follows the data-refinement approach\nof Isabelle/HOL \\cite{florian-refinement}. Abstract representation of\npolynomials are functions mapping variables to their coefficients,\nwhere only finitely many variables have non-zero\ncoefficients. Operations on polynomials are defined as operations on\nfunctions. For example, the sum of @{term \"p\\<^sub>1\"} and \\<open>p\\<^sub>2\\<close> is\ndefined by @{term \"\\<lambda> v. p\\<^sub>1 v + p\\<^sub>2 v\"} and the value of a polynomial\n@{term \"p\"} for a valuation @{term \"v\"} (denoted by \\<open>p\\<lbrace>v\\<rbrace>\\<close>),\nis defined by @{term \"\\<Sum>x\\<in>{x. p x \\<noteq> 0}. p x * v x\"}. Executable\nrepresentation of polynomials uses RBT mappings instead of functions.\n\\<close>"], ["", "setup_lifting type_definition_linear_poly"], ["", "text\\<open>Vector space operations on polynomials\\<close>"], ["", "instantiation linear_poly :: rational_vector\nbegin"], ["", "lift_definition zero_linear_poly :: \"linear_poly\" is fun_zero"], ["proof (prove)\ngoal (1 subgoal):\n 1. Abstract_Linear_Poly.inv fun_zero", "by (rule inv_fun_zero)"], ["", "lift_definition plus_linear_poly :: \"linear_poly \\<Rightarrow> linear_poly \\<Rightarrow> linear_poly\" is fun_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fun1 fun2.\n       \\<lbrakk>Abstract_Linear_Poly.inv fun1;\n        Abstract_Linear_Poly.inv fun2\\<rbrakk>\n       \\<Longrightarrow> Abstract_Linear_Poly.inv (fun_plus fun1 fun2)", "by (rule inv_fun_plus)"], ["", "lift_definition scaleRat_linear_poly :: \"rat \\<Rightarrow> linear_poly \\<Rightarrow> linear_poly\" is fun_scale"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rat fun.\n       Abstract_Linear_Poly.inv fun \\<Longrightarrow>\n       Abstract_Linear_Poly.inv (fun_scale rat fun)", "by (rule inv_fun_scale)"], ["", "definition uminus_linear_poly :: \"linear_poly \\<Rightarrow> linear_poly\" where \n  \"uminus_linear_poly lp = -1 *R lp\""], ["", "definition minus_linear_poly :: \"linear_poly \\<Rightarrow> linear_poly \\<Rightarrow> linear_poly\" where\n  \"minus_linear_poly lp1 lp2 = lp1 + (- lp2)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(linear_poly, rational_vector_class)", "proof"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a b. a + b = b + a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. - a + a = 0\n 5. \\<And>a b. a - b = a + - b\n 6. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 7. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 8. \\<And>a b x. a *R b *R x = (a * b) *R x\n 9. \\<And>x. 1 *R x = x", "fix a b c::linear_poly"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>a b c. a + b + c = a + (b + c)\n 2. \\<And>a b. a + b = b + a\n 3. \\<And>a. 0 + a = a\n 4. \\<And>a. - a + a = 0\n 5. \\<And>a b. a - b = a + - b\n 6. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 7. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 8. \\<And>a b x. a *R b *R x = (a * b) *R x\n 9. \\<And>x. 1 *R x = x", "show \"a + b + c = a + (b + c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b + c = a + (b + c)", "by (transfer, auto)"], ["proof (state)\nthis:\n  a + b + c = a + (b + c)\n\ngoal (8 subgoals):\n 1. \\<And>a b. a + b = b + a\n 2. \\<And>a. 0 + a = a\n 3. \\<And>a. - a + a = 0\n 4. \\<And>a b. a - b = a + - b\n 5. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 6. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 7. \\<And>a b x. a *R b *R x = (a * b) *R x\n 8. \\<And>x. 1 *R x = x", "show \"a + b = b + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b = b + a", "by (transfer, auto)"], ["proof (state)\nthis:\n  a + b = b + a\n\ngoal (7 subgoals):\n 1. \\<And>a. 0 + a = a\n 2. \\<And>a. - a + a = 0\n 3. \\<And>a b. a - b = a + - b\n 4. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 5. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 6. \\<And>a b x. a *R b *R x = (a * b) *R x\n 7. \\<And>x. 1 *R x = x", "show \"0 + a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 + a = a", "by (transfer, auto)"], ["proof (state)\nthis:\n  0 + a = a\n\ngoal (6 subgoals):\n 1. \\<And>a. - a + a = 0\n 2. \\<And>a b. a - b = a + - b\n 3. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 4. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 5. \\<And>a b x. a *R b *R x = (a * b) *R x\n 6. \\<And>x. 1 *R x = x", "show \"-a + a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - a + a = 0", "unfolding uminus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 *R a + a = 0", "by (transfer, auto)"], ["proof (state)\nthis:\n  - a + a = 0\n\ngoal (5 subgoals):\n 1. \\<And>a b. a - b = a + - b\n 2. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 3. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 4. \\<And>a b x. a *R b *R x = (a * b) *R x\n 5. \\<And>x. 1 *R x = x", "show \"a - b = a + (- b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a - b = a + - b", "unfolding minus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + - b = a + - b", ".."], ["proof (state)\nthis:\n  a - b = a + - b\n\ngoal (4 subgoals):\n 1. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 2. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 3. \\<And>a b x. a *R b *R x = (a * b) *R x\n 4. \\<And>x. 1 *R x = x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 2. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 3. \\<And>a b x. a *R b *R x = (a * b) *R x\n 4. \\<And>x. 1 *R x = x", "fix a :: rat and x y :: linear_poly"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a x y. a *R (x + y) = a *R x + a *R y\n 2. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 3. \\<And>a b x. a *R b *R x = (a * b) *R x\n 4. \\<And>x. 1 *R x = x", "show \"a *R (x + y) = a *R x + a *R y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a *R (x + y) = a *R x + a *R y", "by (transfer, auto simp: field_simps)"], ["proof (state)\nthis:\n  a *R (x + y) = a *R x + a *R y\n\ngoal (3 subgoals):\n 1. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 2. \\<And>a b x. a *R b *R x = (a * b) *R x\n 3. \\<And>x. 1 *R x = x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 2. \\<And>a b x. a *R b *R x = (a * b) *R x\n 3. \\<And>x. 1 *R x = x", "fix a b::rat and x::linear_poly"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b x. (a + b) *R x = a *R x + b *R x\n 2. \\<And>a b x. a *R b *R x = (a * b) *R x\n 3. \\<And>x. 1 *R x = x", "show \"(a + b) *R x = a *R x + b *R x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a + b) *R x = a *R x + b *R x", "by (transfer, auto simp: field_simps)"], ["proof (state)\nthis:\n  (a + b) *R x = a *R x + b *R x\n\ngoal (2 subgoals):\n 1. \\<And>a b x. a *R b *R x = (a * b) *R x\n 2. \\<And>x. 1 *R x = x", "show \"a *R b *R x = (a * b) *R x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a *R b *R x = (a * b) *R x", "by (transfer, auto simp: field_simps)"], ["proof (state)\nthis:\n  a *R b *R x = (a * b) *R x\n\ngoal (1 subgoal):\n 1. \\<And>x. 1 *R x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. 1 *R x = x", "fix x::linear_poly"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. 1 *R x = x", "show \"1 *R x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 *R x = x", "by (transfer, auto)"], ["proof (state)\nthis:\n  1 *R x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text\\<open>Coefficient\\<close>"], ["", "lift_definition coeff :: \"linear_poly \\<Rightarrow> var \\<Rightarrow> rat\" is fun_coeff"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma coeff_plus [simp] : \"coeff (lp1 + lp2) var = coeff lp1 var + coeff lp2 var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (lp1 + lp2) var = coeff lp1 var + coeff lp2 var", "by transfer auto"], ["", "lemma coeff_scaleRat [simp]: \"coeff (k *R lp1) var = k * coeff lp1 var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (k *R lp1) var = k * coeff lp1 var", "by transfer auto"], ["", "lemma coeff_uminus [simp]: \"coeff (-lp) var = - coeff lp var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (- lp) var = - coeff lp var", "unfolding uminus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (- 1 *R lp) var = - coeff lp var", "by transfer auto"], ["", "lemma coeff_minus [simp]: \"coeff (lp1 - lp2) var = coeff lp1 var - coeff lp2 var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (lp1 - lp2) var = coeff lp1 var - coeff lp2 var", "unfolding minus_linear_poly_def uminus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (lp1 + - 1 *R lp2) var = coeff lp1 var - coeff lp2 var", "by transfer auto"], ["", "text\\<open>Set of variables\\<close>"], ["", "lift_definition vars :: \"linear_poly \\<Rightarrow> var set\" is fun_vars"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma coeff_zero: \"coeff p x \\<noteq> 0 \\<longleftrightarrow> x \\<in> vars p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (coeff p x \\<noteq> 0) = (x \\<in> vars p)", "by transfer auto"], ["", "lemma finite_vars: \"finite (vars p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (vars p)", "by transfer auto"], ["", "text\\<open>List of variables\\<close>"], ["", "lift_definition vars_list :: \"linear_poly \\<Rightarrow> var list\" is fun_vars_list"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma set_vars_list: \"set (vars_list lp) = vars lp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (vars_list lp) = vars lp", "by transfer auto"], ["", "text\\<open>Construct single variable polynomial\\<close>"], ["", "lift_definition Var :: \"var \\<Rightarrow> linear_poly\" is fun_var"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>nat. Abstract_Linear_Poly.inv (fun_var nat)", "by auto"], ["", "text\\<open>Value of a polynomial in a given valuation\\<close>"], ["", "lift_definition valuate :: \"linear_poly \\<Rightarrow> 'a valuation \\<Rightarrow> ('a::rational_vector)\" is fun_valuate"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "syntax\n  \"_valuate\" :: \"linear_poly \\<Rightarrow> 'a valuation \\<Rightarrow> 'a\"    (\"_ \\<lbrace> _ \\<rbrace>\")"], ["", "translations\n  \"p\\<lbrace>v\\<rbrace> \" == \"CONST valuate p v\""], ["", "lemma valuate_zero: \"(0 \\<lbrace>v\\<rbrace>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<lbrace> v \\<rbrace> = (0::'a)", "by transfer auto"], ["", "lemma \n  valuate_diff: \"(p \\<lbrace>v1\\<rbrace>) - (p \\<lbrace>v2\\<rbrace>) = (p \\<lbrace> \\<lambda> x. v1 x - v2 x \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<lbrace> v1 \\<rbrace> - p \\<lbrace> v2 \\<rbrace> =\n    p \\<lbrace> \\<lambda>x. v1 x - v2 x \\<rbrace>", "by (transfer, simp add: sum_subtractf[THEN sym], auto simp: rational_vector.scale_right_diff_distrib)"], ["", "lemma valuate_opposite_val: \n  shows \"p \\<lbrace> \\<lambda> x. - v x \\<rbrace> = - (p \\<lbrace> v \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<lbrace> \\<lambda>x. - v x \\<rbrace> = - p \\<lbrace> v \\<rbrace>", "using valuate_diff[of p \"\\<lambda> x. 0\" v]"], ["proof (prove)\nusing this:\n  p \\<lbrace> \\<lambda>x. 0::'a \\<rbrace> - p \\<lbrace> v \\<rbrace> =\n  p \\<lbrace> \\<lambda>x. (0::'a) - v x \\<rbrace>\n\ngoal (1 subgoal):\n 1. p \\<lbrace> \\<lambda>x. - v x \\<rbrace> = - p \\<lbrace> v \\<rbrace>", "by (auto simp add: valuate_def)"], ["", "lemma valuate_nonneg:\n  fixes v :: \"'a::linordered_rational_vector valuation\"\n  assumes \"\\<forall> x \\<in> vars p. (coeff p x > 0 \\<longrightarrow> v x \\<ge> 0) \\<and> (coeff p x < 0 \\<longrightarrow> v x \\<le> 0)\"\n  shows \"p \\<lbrace> v \\<rbrace> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> p \\<lbrace> v \\<rbrace>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> p \\<lbrace> v \\<rbrace>", "proof (transfer, unfold fun_valuate_def, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>pa va.\n       \\<lbrakk>Abstract_Linear_Poly.inv pa;\n        \\<forall>x\\<in>fun_vars pa.\n           (0 < fun_coeff pa x \\<longrightarrow> (0::'a) \\<le> va x) \\<and>\n           (fun_coeff pa x < 0 \\<longrightarrow> va x \\<le> (0::'a));\n        \\<forall>x\\<in>vars p.\n           (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n           (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a)\n                         \\<le> (\\<Sum>x\\<in>{v. pa v \\<noteq> 0}.\n                                  pa x *R va x)", "case (1 p v)"], ["proof (state)\nthis:\n  Abstract_Linear_Poly.inv p\n  \\<forall>x\\<in>fun_vars p.\n     (0 < fun_coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (fun_coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n\ngoal (1 subgoal):\n 1. \\<And>pa va.\n       \\<lbrakk>Abstract_Linear_Poly.inv pa;\n        \\<forall>x\\<in>fun_vars pa.\n           (0 < fun_coeff pa x \\<longrightarrow> (0::'a) \\<le> va x) \\<and>\n           (fun_coeff pa x < 0 \\<longrightarrow> va x \\<le> (0::'a));\n        \\<forall>x\\<in>vars p.\n           (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n           (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a)\n                         \\<le> (\\<Sum>x\\<in>{v. pa v \\<noteq> 0}.\n                                  pa x *R va x)", "from 1"], ["proof (chain)\npicking this:\n  Abstract_Linear_Poly.inv p\n  \\<forall>x\\<in>fun_vars p.\n     (0 < fun_coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (fun_coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))", "have fin: \"finite {v. p v \\<noteq> 0}\""], ["proof (prove)\nusing this:\n  Abstract_Linear_Poly.inv p\n  \\<forall>x\\<in>fun_vars p.\n     (0 < fun_coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (fun_coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n\ngoal (1 subgoal):\n 1. finite {v. p v \\<noteq> 0}", "by auto"], ["proof (state)\nthis:\n  finite {v. p v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<And>pa va.\n       \\<lbrakk>Abstract_Linear_Poly.inv pa;\n        \\<forall>x\\<in>fun_vars pa.\n           (0 < fun_coeff pa x \\<longrightarrow> (0::'a) \\<le> va x) \\<and>\n           (fun_coeff pa x < 0 \\<longrightarrow> va x \\<le> (0::'a));\n        \\<forall>x\\<in>vars p.\n           (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n           (coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a)\n                         \\<le> (\\<Sum>x\\<in>{v. pa v \\<noteq> 0}.\n                                  pa x *R va x)", "then"], ["proof (chain)\npicking this:\n  finite {v. p v \\<noteq> 0}", "show \"0 \\<le> (\\<Sum>x\\<in>{v. p v \\<noteq> 0}. p x *R v x)\""], ["proof (prove)\nusing this:\n  finite {v. p v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (\\<Sum>x\\<in>{v. p v \\<noteq> 0}. p x *R v x)", "proof (induct rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> (\\<Sum>x\\<in>{}. p x *R v x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (0::'a) \\<le> (\\<Sum>x\\<in>F. p x *R v x)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> (\\<Sum>x\\<in>{}. p x *R v x)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (0::'a) \\<le> (\\<Sum>x\\<in>F. p x *R v x)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (\\<Sum>x\\<in>{}. p x *R v x)", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> (\\<Sum>x\\<in>{}. p x *R v x)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (0::'a) \\<le> (\\<Sum>x\\<in>F. p x *R v x)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (0::'a) \\<le> (\\<Sum>x\\<in>F. p x *R v x)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  (0::'a) \\<le> (\\<Sum>x\\<in>F. p x *R v x)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (0::'a) \\<le> (\\<Sum>x\\<in>F. p x *R v x)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)", "unfolding sum.insert[OF insert(1-2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> p x *R v x + (\\<Sum>x\\<in>F. p x *R v x)", "proof (rule order.trans[OF _ add_mono[OF _ insert(3)]])"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> ?a1 + (0::'a)\n 2. ?a1 \\<le> p x *R v x", "show \"0 \\<le> p x *R v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> p x *R v x", "using scaleRat_leq1[of 0 \"v x\" \"p x\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> v x; 0 < p x\\<rbrakk>\n  \\<Longrightarrow> p x *R (0::'a) \\<le> p x *R v x\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> p x *R v x", "using scaleRat_leq2[of \"v x\" 0 \"p x\"] 1(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> v x; 0 < p x\\<rbrakk>\n  \\<Longrightarrow> p x *R (0::'a) \\<le> p x *R v x\n  \\<lbrakk>v x \\<le> (0::'a); p x < 0\\<rbrakk>\n  \\<Longrightarrow> p x *R (0::'a) \\<le> p x *R v x\n  \\<forall>x\\<in>fun_vars p.\n     (0 < fun_coeff p x \\<longrightarrow> (0::'a) \\<le> v x) \\<and>\n     (fun_coeff p x < 0 \\<longrightarrow> v x \\<le> (0::'a))\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> p x *R v x", "by (cases \"p x > 0\"; cases \"p x < 0\"; auto)"], ["proof (state)\nthis:\n  (0::'a) \\<le> p x *R v x\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (0::'a) + (0::'a)", "qed auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> (\\<Sum>x\\<in>insert x F. p x *R v x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (0::'a) \\<le> (\\<Sum>x\\<in>{v. p v \\<noteq> 0}. p x *R v x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valuate_nonpos:\n  fixes v :: \"'a::linordered_rational_vector valuation\"\n  assumes \"\\<forall> x \\<in> vars p. (coeff p x > 0 \\<longrightarrow> v x \\<le> 0) \\<and> (coeff p x < 0 \\<longrightarrow> v x \\<ge> 0)\"\n  shows \"p \\<lbrace> v \\<rbrace> \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> \\<le> (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> v x \\<le> (0::'a)) \\<and>\n     (coeff p x < 0 \\<longrightarrow> (0::'a) \\<le> v x)\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> \\<le> (0::'a)", "using valuate_opposite_val[of p v]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> v x \\<le> (0::'a)) \\<and>\n     (coeff p x < 0 \\<longrightarrow> (0::'a) \\<le> v x)\n  p \\<lbrace> \\<lambda>x. - v x \\<rbrace> = - p \\<lbrace> v \\<rbrace>\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> \\<le> (0::'a)", "using valuate_nonneg[of p \"\\<lambda> x. - v x\"]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> v x \\<le> (0::'a)) \\<and>\n     (coeff p x < 0 \\<longrightarrow> (0::'a) \\<le> v x)\n  p \\<lbrace> \\<lambda>x. - v x \\<rbrace> = - p \\<lbrace> v \\<rbrace>\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> - v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> - v x \\<le> (0::'a)) \\<Longrightarrow>\n  (0::'a) \\<le> p \\<lbrace> \\<lambda>x. - v x \\<rbrace>\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> \\<le> (0::'a)", "using scaleRat_leq2[of \"0::'a\" _ \"-1\"]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> v x \\<le> (0::'a)) \\<and>\n     (coeff p x < 0 \\<longrightarrow> (0::'a) \\<le> v x)\n  p \\<lbrace> \\<lambda>x. - v x \\<rbrace> = - p \\<lbrace> v \\<rbrace>\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> - v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> - v x \\<le> (0::'a)) \\<Longrightarrow>\n  (0::'a) \\<le> p \\<lbrace> \\<lambda>x. - v x \\<rbrace>\n  \\<lbrakk>(0::'a) \\<le> ?b; - 1 < 0\\<rbrakk>\n  \\<Longrightarrow> - 1 *R ?b \\<le> - 1 *R (0::'a)\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> \\<le> (0::'a)", "using scaleRat_leq2[of _ \"0::'a\" \"-1\"]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> v x \\<le> (0::'a)) \\<and>\n     (coeff p x < 0 \\<longrightarrow> (0::'a) \\<le> v x)\n  p \\<lbrace> \\<lambda>x. - v x \\<rbrace> = - p \\<lbrace> v \\<rbrace>\n  \\<forall>x\\<in>vars p.\n     (0 < coeff p x \\<longrightarrow> (0::'a) \\<le> - v x) \\<and>\n     (coeff p x < 0 \\<longrightarrow> - v x \\<le> (0::'a)) \\<Longrightarrow>\n  (0::'a) \\<le> p \\<lbrace> \\<lambda>x. - v x \\<rbrace>\n  \\<lbrakk>(0::'a) \\<le> ?b; - 1 < 0\\<rbrakk>\n  \\<Longrightarrow> - 1 *R ?b \\<le> - 1 *R (0::'a)\n  \\<lbrakk>?a \\<le> (0::'a); - 1 < 0\\<rbrakk>\n  \\<Longrightarrow> - 1 *R (0::'a) \\<le> - 1 *R ?a\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> \\<le> (0::'a)", "by force"], ["", "lemma valuate_uminus: \"(-p) \\<lbrace>v\\<rbrace> = - (p \\<lbrace>v\\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p \\<lbrace> v \\<rbrace> = - p \\<lbrace> v \\<rbrace>", "unfolding uminus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 1 *R p \\<lbrace> v \\<rbrace> = - p \\<lbrace> v \\<rbrace>", "by (transfer, auto simp: sum_negf)"], ["", "lemma valuate_add_lemma:\n  fixes v :: \"'a \\<Rightarrow> 'b::rational_vector\"\n  assumes \"finite {v. f1 v \\<noteq> 0}\" \"finite {v. f2 v \\<noteq> 0}\"\n  shows\n    \"(\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n   (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "let ?A = \"{v. f1 v + f2 v \\<noteq> 0} \\<union> {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "have \"?A = {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. f1 v + f2 v \\<noteq> 0} \\<union>\n    {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)} =\n    {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}", "by auto"], ["proof (state)\nthis:\n  {v. f1 v + f2 v \\<noteq> 0} \\<union>\n  {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)} =\n  {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "then"], ["proof (chain)\npicking this:\n  {v. f1 v + f2 v \\<noteq> 0} \\<union>\n  {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)} =\n  {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}", "have\n    \"finite ?A\""], ["proof (prove)\nusing this:\n  {v. f1 v + f2 v \\<noteq> 0} \\<union>\n  {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)} =\n  {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. finite\n     ({v. f1 v + f2 v \\<noteq> 0} \\<union>\n      {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)})", "using assms"], ["proof (prove)\nusing this:\n  {v. f1 v + f2 v \\<noteq> 0} \\<union>\n  {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)} =\n  {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. finite\n     ({v. f1 v + f2 v \\<noteq> 0} \\<union>\n      {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)})", "by (subgoal_tac \"{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0} = {v. f1 v \\<noteq> 0} \\<union> {v. f2 v \\<noteq> 0}\") auto"], ["proof (state)\nthis:\n  finite\n   ({v. f1 v + f2 v \\<noteq> 0} \\<union>\n    {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)})\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "then"], ["proof (chain)\npicking this:\n  finite\n   ({v. f1 v + f2 v \\<noteq> 0} \\<union>\n    {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)})", "have \"(\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) = \n    (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union> {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}. (f1 x + f2 x) *R v x)\""], ["proof (prove)\nusing this:\n  finite\n   ({v. f1 v + f2 v \\<noteq> 0} \\<union>\n    {v. f1 v + f2 v = 0 \\<and> (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)})\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union>\n                 {v. f1 v + f2 v = 0 \\<and>\n                     (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}.\n       (f1 x + f2 x) *R v x)", "by (rule sum.mono_neutral_left) auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union>\n               {v. f1 v + f2 v = 0 \\<and>\n                   (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}.\n     (f1 x + f2 x) *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union>\n               {v. f1 v + f2 v = 0 \\<and>\n                   (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}.\n     (f1 x + f2 x) *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "have \"... = (\\<Sum>x \\<in> {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union>\n                 {v. f1 v + f2 v = 0 \\<and>\n                     (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}.\n       (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n       (f1 x + f2 x) *R v x)", "by (rule sum.cong) auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union>\n               {v. f1 v + f2 v = 0 \\<and>\n                   (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}.\n     (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n     (f1 x + f2 x) *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0} \\<union>\n               {v. f1 v + f2 v = 0 \\<and>\n                   (f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0)}.\n     (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n     (f1 x + f2 x) *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "have \"... = (\\<Sum>x \\<in> {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) + \n                   (\\<Sum>x \\<in> {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n       (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x)", "by (simp add: scaleRat_left_distrib sum.distrib)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n     (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n     (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "have \"... = (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "fix f1 f2::\"'a \\<Rightarrow> rat\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "assume \"finite {v. f1 v \\<noteq> 0}\" \"finite {v. f2 v \\<noteq> 0}\""], ["proof (state)\nthis:\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "then"], ["proof (chain)\npicking this:\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}", "have \"finite {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}\""], ["proof (prove)\nusing this:\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. finite {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}", "by (subgoal_tac \"{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0} = {v. f1 v \\<noteq> 0} \\<union> {v. f2 v \\<noteq> 0}\") auto"], ["proof (state)\nthis:\n  finite {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "have \"(\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) = \n        (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> (f2 v \\<noteq> 0 \\<and> f1 v = 0)}. f1 x *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n       f1 x *R v x)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "have \"... = (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n       f1 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)", "using \\<open>finite {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}\\<close>"], ["proof (prove)\nusing this:\n  finite {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n       f1 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)", "by (rule sum.mono_neutral_left[THEN sym]) auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x)\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)", "have \"(\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) = \n        (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x)\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0 \\<and> f1 v = 0}.\n     f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>finite {v. ?f1a2 v \\<noteq> 0};\n   finite {v. ?f2a2 v \\<noteq> 0}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>{v. ?f1a2 v \\<noteq> 0 \\<or>\n                                     ?f2a2 v \\<noteq> 0}.\n                       ?f1a2 x *R v x) =\n                    (\\<Sum>x\\<in>{v. ?f1a2 v \\<noteq> 0}. ?f1a2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "note * = this"], ["proof (state)\nthis:\n  \\<lbrakk>finite {v. ?f1a2 v \\<noteq> 0};\n   finite {v. ?f2a2 v \\<noteq> 0}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>{v. ?f1a2 v \\<noteq> 0 \\<or>\n                                     ?f2a2 v \\<noteq> 0}.\n                       ?f1a2 x *R v x) =\n                    (\\<Sum>x\\<in>{v. ?f1a2 v \\<noteq> 0}. ?f1a2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "using assms"], ["proof (prove)\nusing this:\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "using *[of f1 f2]"], ["proof (prove)\nusing this:\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}\n  \\<lbrakk>finite {v. f1 v \\<noteq> 0}; finite {v. f2 v \\<noteq> 0}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n                       f1 x *R v x) =\n                    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "using *[of f2 f1]"], ["proof (prove)\nusing this:\n  finite {v. f1 v \\<noteq> 0}\n  finite {v. f2 v \\<noteq> 0}\n  \\<lbrakk>finite {v. f1 v \\<noteq> 0}; finite {v. f2 v \\<noteq> 0}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}.\n                       f1 x *R v x) =\n                    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x)\n  \\<lbrakk>finite {v. f2 v \\<noteq> 0}; finite {v. f1 v \\<noteq> 0}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0 \\<or> f1 v \\<noteq> 0}.\n                       f2 x *R v x) =\n                    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "by (subgoal_tac \"{v. f2 v \\<noteq> 0 \\<or> f1 v \\<noteq> 0} = {v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}\") auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x)\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x)\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0 \\<or> f2 v \\<noteq> 0}. f2 x *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n    (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n    (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f1 v + f2 v \\<noteq> 0}. (f1 x + f2 x) *R v x) =\n  (\\<Sum>x\\<in>{v. f1 v \\<noteq> 0}. f1 x *R v x) +\n  (\\<Sum>x\\<in>{v. f2 v \\<noteq> 0}. f2 x *R v x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valuate_add:  \"(p1 + p2) \\<lbrace>v\\<rbrace> = (p1 \\<lbrace>v\\<rbrace>) + (p2 \\<lbrace>v\\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1 + p2 \\<lbrace> v \\<rbrace> =\n    p1 \\<lbrace> v \\<rbrace> + p2 \\<lbrace> v \\<rbrace>", "by (transfer, simp add: valuate_add_lemma)"], ["", "lemma valuate_minus: \"(p1 - p2) \\<lbrace>v\\<rbrace> = (p1 \\<lbrace>v\\<rbrace>) - (p2 \\<lbrace>v\\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p1 - p2 \\<lbrace> v \\<rbrace> =\n    p1 \\<lbrace> v \\<rbrace> - p2 \\<lbrace> v \\<rbrace>", "unfolding minus_linear_poly_def valuate_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. p1 \\<lbrace> v \\<rbrace> + - p2 \\<lbrace> v \\<rbrace> =\n    p1 \\<lbrace> v \\<rbrace> - p2 \\<lbrace> v \\<rbrace>", "by (simp add: valuate_uminus)"], ["", "lemma valuate_scaleRat:\n  \"(c *R lp) \\<lbrace> v \\<rbrace> = c *R ( lp\\<lbrace>v\\<rbrace> )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "proof (cases \"c=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "case True"], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. c = 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>\n 2. c \\<noteq> 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "then"], ["proof (chain)\npicking this:\n  c = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "by (auto simp add: valuate_def zero_linear_poly_def Abs_linear_poly_inverse)"], ["proof (state)\nthis:\n  c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "case False"], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "then"], ["proof (chain)\npicking this:\n  c \\<noteq> 0", "have \"\\<And> v. Rep_linear_poly (c *R lp) v = c * (Rep_linear_poly lp v)\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>v. Rep_linear_poly (c *R lp) v = c * Rep_linear_poly lp v", "unfolding scaleRat_linear_poly_def"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       Rep_linear_poly\n        (map_fun id (map_fun Rep_linear_poly Abs_linear_poly) fun_scale c\n          lp)\n        v =\n       c * Rep_linear_poly lp v", "using Abs_linear_poly_inverse[of \"\\<lambda>v. c * Rep_linear_poly lp v\"]"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  (\\<lambda>v. c * Rep_linear_poly lp v)\n  \\<in> {c. Abstract_Linear_Poly.inv c} \\<Longrightarrow>\n  Rep_linear_poly (Abs_linear_poly (\\<lambda>v. c * Rep_linear_poly lp v)) =\n  (\\<lambda>v. c * Rep_linear_poly lp v)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       Rep_linear_poly\n        (map_fun id (map_fun Rep_linear_poly Abs_linear_poly) fun_scale c\n          lp)\n        v =\n       c * Rep_linear_poly lp v", "using Rep_linear_poly"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  (\\<lambda>v. c * Rep_linear_poly lp v)\n  \\<in> {c. Abstract_Linear_Poly.inv c} \\<Longrightarrow>\n  Rep_linear_poly (Abs_linear_poly (\\<lambda>v. c * Rep_linear_poly lp v)) =\n  (\\<lambda>v. c * Rep_linear_poly lp v)\n  Rep_linear_poly ?x \\<in> {c. Abstract_Linear_Poly.inv c}\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       Rep_linear_poly\n        (map_fun id (map_fun Rep_linear_poly Abs_linear_poly) fun_scale c\n          lp)\n        v =\n       c * Rep_linear_poly lp v", "by auto"], ["proof (state)\nthis:\n  Rep_linear_poly (c *R lp) ?v = c * Rep_linear_poly lp ?v\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "then"], ["proof (chain)\npicking this:\n  Rep_linear_poly (c *R lp) ?v = c * Rep_linear_poly lp ?v", "show ?thesis"], ["proof (prove)\nusing this:\n  Rep_linear_poly (c *R lp) ?v = c * Rep_linear_poly lp ?v\n\ngoal (1 subgoal):\n 1. c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>", "unfolding valuate_def"], ["proof (prove)\nusing this:\n  Rep_linear_poly (c *R lp) ?v = c * Rep_linear_poly lp ?v\n\ngoal (1 subgoal):\n 1. map_fun Rep_linear_poly id fun_valuate (c *R lp) v =\n    c *R map_fun Rep_linear_poly id fun_valuate lp v", "using \\<open>c \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  Rep_linear_poly (c *R lp) ?v = c * Rep_linear_poly lp ?v\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. map_fun Rep_linear_poly id fun_valuate (c *R lp) v =\n    c *R map_fun Rep_linear_poly id fun_valuate lp v", "by auto (subst rational_vector.scale_sum_right, auto)"], ["proof (state)\nthis:\n  c *R lp \\<lbrace> v \\<rbrace> = c *R lp \\<lbrace> v \\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valuate_Var: \"(Var x) \\<lbrace>v\\<rbrace> = v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<lbrace> v \\<rbrace> = v x", "by transfer auto"], ["", "lemma valuate_sum: \"((\\<Sum>x\\<in>A. f x) \\<lbrace> v \\<rbrace>) = (\\<Sum>x\\<in>A. ((f x) \\<lbrace> v \\<rbrace>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f A \\<lbrace> v \\<rbrace> =\n    (\\<Sum>x\\<in>A. f x \\<lbrace> v \\<rbrace>)", "by (induct A rule: infinite_finite_induct, auto simp: valuate_zero valuate_add)"], ["", "lemma distinct_vars_list: \n  \"distinct (vars_list p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (vars_list p)", "by transfer (use distinct_sorted_list_of_set in auto)"], ["", "lemma zero_coeff_zero: \"p = 0 \\<longleftrightarrow> (\\<forall> v. coeff p v = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p = 0) = (\\<forall>v. coeff p v = 0)", "by transfer auto"], ["", "lemma all_val: \n  assumes \"\\<forall> (v::var \\<Rightarrow> 'a::lrv). \\<exists> v'. (\\<forall> x \\<in> vars p. v' x = v x) \\<and> (p \\<lbrace>v'\\<rbrace> = 0)\"\n  shows \"p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = 0", "proof (subst zero_coeff_zero, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v. coeff p v = 0", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v. coeff p v = 0", "show \"coeff p x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff p x = 0", "proof (cases \"x \\<in> vars p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0\n 2. x \\<notin> vars p \\<Longrightarrow> coeff p x = 0", "case False"], ["proof (state)\nthis:\n  x \\<notin> vars p\n\ngoal (2 subgoals):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0\n 2. x \\<notin> vars p \\<Longrightarrow> coeff p x = 0", "then"], ["proof (chain)\npicking this:\n  x \\<notin> vars p", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> vars p\n\ngoal (1 subgoal):\n 1. coeff p x = 0", "using coeff_zero[of p x]"], ["proof (prove)\nusing this:\n  x \\<notin> vars p\n  (coeff p x \\<noteq> 0) = (x \\<in> vars p)\n\ngoal (1 subgoal):\n 1. coeff p x = 0", "by simp"], ["proof (state)\nthis:\n  coeff p x = 0\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "case True"], ["proof (state)\nthis:\n  x \\<in> vars p\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "have \"(0::'a::lrv) \\<noteq> (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<noteq> (1::'a)", "using zero_neq_one"], ["proof (prove)\nusing this:\n  (0::?'a) \\<noteq> (1::?'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<noteq> (1::'a)", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<noteq> (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "let ?v = \"\\<lambda> x'. if x = x' then 1 else 0::'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "obtain v' where \"\\<forall> x \\<in> vars p. v' x = ?v x\" \"p \\<lbrace>v'\\<rbrace> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>\\<forall>xa\\<in>vars p.\n                    v' xa = (if x = xa then 1::'a else (0::'a));\n         p \\<lbrace> v' \\<rbrace> = (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>v.\n     \\<exists>v'.\n        (\\<forall>x\\<in>vars p. v' x = v x) \\<and>\n        p \\<lbrace> v' \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>v'.\n        \\<lbrakk>\\<forall>xa\\<in>vars p.\n                    v' xa = (if x = xa then 1::'a else (0::'a));\n         p \\<lbrace> v' \\<rbrace> = (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (erule_tac x=\"?v\" in allE) auto"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>vars p. v' xa = (if x = xa then 1::'a else (0::'a))\n  p \\<lbrace> v' \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>vars p. v' xa = (if x = xa then 1::'a else (0::'a))\n  p \\<lbrace> v' \\<rbrace> = (0::'a)", "have \"\\<forall> x' \\<in> vars p. v' x' = (if x = x' then 1 else 0)\" \"p \\<lbrace>v'\\<rbrace> = 0\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>vars p. v' xa = (if x = xa then 1::'a else (0::'a))\n  p \\<lbrace> v' \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>x'\\<in>vars p. v' x' = (if x = x' then 1::'a else (0::'a)) &&&\n    p \\<lbrace> v' \\<rbrace> = (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x'\\<in>vars p. v' x' = (if x = x' then 1::'a else (0::'a))\n  p \\<lbrace> v' \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "let ?fp = \"Rep_linear_poly p\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "have \"{x. ?fp x \\<noteq> 0 \\<and> v' x \\<noteq> (0 :: 'a)} = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. Rep_linear_poly p x \\<noteq> 0 \\<and> v' x \\<noteq> (0::'a)} = {x}", "using \\<open>x \\<in> vars p\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> vars p\n\ngoal (1 subgoal):\n 1. {x. Rep_linear_poly p x \\<noteq> 0 \\<and> v' x \\<noteq> (0::'a)} = {x}", "unfolding vars_def"], ["proof (prove)\nusing this:\n  x \\<in> map_fun Rep_linear_poly id fun_vars p\n\ngoal (1 subgoal):\n 1. {x. Rep_linear_poly p x \\<noteq> 0 \\<and> v' x \\<noteq> (0::'a)} = {x}", "proof (safe, simp_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Rep_linear_poly p x \\<noteq> 0;\n        Rep_linear_poly p xa \\<noteq> 0; v' xa \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> xa = x\n 2. \\<lbrakk>Rep_linear_poly p x \\<noteq> 0; v' x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "fix x'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Rep_linear_poly p x \\<noteq> 0;\n        Rep_linear_poly p xa \\<noteq> 0; v' xa \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> xa = x\n 2. \\<lbrakk>Rep_linear_poly p x \\<noteq> 0; v' x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"v' x' \\<noteq> 0\" \"Rep_linear_poly p x' \\<noteq> 0\""], ["proof (state)\nthis:\n  v' x' \\<noteq> (0::'a)\n  Rep_linear_poly p x' \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Rep_linear_poly p x \\<noteq> 0;\n        Rep_linear_poly p xa \\<noteq> 0; v' xa \\<noteq> (0::'a)\\<rbrakk>\n       \\<Longrightarrow> xa = x\n 2. \\<lbrakk>Rep_linear_poly p x \\<noteq> 0; v' x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v' x' \\<noteq> (0::'a)\n  Rep_linear_poly p x' \\<noteq> 0", "show \"x' = x\""], ["proof (prove)\nusing this:\n  v' x' \\<noteq> (0::'a)\n  Rep_linear_poly p x' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x' = x", "using \\<open>\\<forall> x' \\<in> vars p. v' x' = (if x = x' then 1 else 0)\\<close>"], ["proof (prove)\nusing this:\n  v' x' \\<noteq> (0::'a)\n  Rep_linear_poly p x' \\<noteq> 0\n  \\<forall>x'\\<in>vars p. v' x' = (if x = x' then 1::'a else (0::'a))\n\ngoal (1 subgoal):\n 1. x' = x", "unfolding vars_def"], ["proof (prove)\nusing this:\n  v' x' \\<noteq> (0::'a)\n  Rep_linear_poly p x' \\<noteq> 0\n  \\<forall>x'\\<in>map_fun Rep_linear_poly id fun_vars p.\n     v' x' = (if x = x' then 1::'a else (0::'a))\n\ngoal (1 subgoal):\n 1. x' = x", "by (erule_tac x=\"x'\" in ballE) (simp_all split: if_splits)"], ["proof (state)\nthis:\n  x' = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_linear_poly p x \\<noteq> 0; v' x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_linear_poly p x \\<noteq> 0; v' x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"v' x = 0\" \"Rep_linear_poly p x \\<noteq> 0\""], ["proof (state)\nthis:\n  v' x = (0::'a)\n  Rep_linear_poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Rep_linear_poly p x \\<noteq> 0; v' x = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v' x = (0::'a)\n  Rep_linear_poly p x \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  v' x = (0::'a)\n  Rep_linear_poly p x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>\\<forall> x' \\<in> vars p. v' x' = (if x = x' then 1 else 0)\\<close>"], ["proof (prove)\nusing this:\n  v' x = (0::'a)\n  Rep_linear_poly p x \\<noteq> 0\n  \\<forall>x'\\<in>vars p. v' x' = (if x = x' then 1::'a else (0::'a))\n\ngoal (1 subgoal):\n 1. False", "using \\<open>0 \\<noteq> 1\\<close>"], ["proof (prove)\nusing this:\n  v' x = (0::'a)\n  Rep_linear_poly p x \\<noteq> 0\n  \\<forall>x'\\<in>vars p. v' x' = (if x = x' then 1::'a else (0::'a))\n  (0::'a) \\<noteq> (1::'a)\n\ngoal (1 subgoal):\n 1. False", "unfolding vars_def"], ["proof (prove)\nusing this:\n  v' x = (0::'a)\n  Rep_linear_poly p x \\<noteq> 0\n  \\<forall>x'\\<in>map_fun Rep_linear_poly id fun_vars p.\n     v' x' = (if x = x' then 1::'a else (0::'a))\n  (0::'a) \\<noteq> (1::'a)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. Rep_linear_poly p x \\<noteq> 0 \\<and> v' x \\<noteq> (0::'a)} = {x}\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "have \"p \\<lbrace>v'\\<rbrace> = (\\<Sum>x\\<in>{v. ?fp v \\<noteq> 0}. ?fp x *R v' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<lbrace> v' \\<rbrace> =\n    (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n       Rep_linear_poly p x *R v' x)", "unfolding valuate_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_fun Rep_linear_poly id fun_valuate p v' =\n    (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n       Rep_linear_poly p x *R v' x)", "by auto"], ["proof (state)\nthis:\n  p \\<lbrace> v' \\<rbrace> =\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n     Rep_linear_poly p x *R v' x)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "also"], ["proof (state)\nthis:\n  p \\<lbrace> v' \\<rbrace> =\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n     Rep_linear_poly p x *R v' x)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "have \"... = (\\<Sum>x\\<in>{v. ?fp v \\<noteq> 0 \\<and> v' v \\<noteq> 0}. ?fp x *R v' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n       Rep_linear_poly p x *R v' x) =\n    (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                     v' v \\<noteq> (0::'a)}.\n       Rep_linear_poly p x *R v' x)", "apply (rule sum.mono_neutral_left[THEN sym])"], ["proof (prove)\ngoal (3 subgoals):\n 1. finite {v. Rep_linear_poly p v \\<noteq> 0}\n 2. {v. Rep_linear_poly p v \\<noteq> 0 \\<and> v' v \\<noteq> (0::'a)}\n    \\<subseteq> {v. Rep_linear_poly p v \\<noteq> 0}\n 3. \\<forall>i\\<in>{v. Rep_linear_poly p v \\<noteq> 0} -\n                   {v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                       v' v \\<noteq> (0::'a)}.\n       Rep_linear_poly p i *R v' i = (0::'a)", "using Rep_linear_poly[of p]"], ["proof (prove)\nusing this:\n  Rep_linear_poly p \\<in> {c. Abstract_Linear_Poly.inv c}\n\ngoal (3 subgoals):\n 1. finite {v. Rep_linear_poly p v \\<noteq> 0}\n 2. {v. Rep_linear_poly p v \\<noteq> 0 \\<and> v' v \\<noteq> (0::'a)}\n    \\<subseteq> {v. Rep_linear_poly p v \\<noteq> 0}\n 3. \\<forall>i\\<in>{v. Rep_linear_poly p v \\<noteq> 0} -\n                   {v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                       v' v \\<noteq> (0::'a)}.\n       Rep_linear_poly p i *R v' i = (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n     Rep_linear_poly p x *R v' x) =\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                   v' v \\<noteq> (0::'a)}.\n     Rep_linear_poly p x *R v' x)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0}.\n     Rep_linear_poly p x *R v' x) =\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                   v' v \\<noteq> (0::'a)}.\n     Rep_linear_poly p x *R v' x)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "have \"... = ?fp x *R v' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                     v' v \\<noteq> (0::'a)}.\n       Rep_linear_poly p x *R v' x) =\n    Rep_linear_poly p x *R v' x", "using \\<open>{x. ?fp x \\<noteq> 0 \\<and> v' x \\<noteq> (0 :: 'a)} = {x}\\<close>"], ["proof (prove)\nusing this:\n  {x. Rep_linear_poly p x \\<noteq> 0 \\<and> v' x \\<noteq> (0::'a)} = {x}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                     v' v \\<noteq> (0::'a)}.\n       Rep_linear_poly p x *R v' x) =\n    Rep_linear_poly p x *R v' x", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                   v' v \\<noteq> (0::'a)}.\n     Rep_linear_poly p x *R v' x) =\n  Rep_linear_poly p x *R v' x\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. Rep_linear_poly p v \\<noteq> 0 \\<and>\n                   v' v \\<noteq> (0::'a)}.\n     Rep_linear_poly p x *R v' x) =\n  Rep_linear_poly p x *R v' x\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "have \"... = ?fp x *R 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_linear_poly p x *R v' x = Rep_linear_poly p x *R (1::'a)", "using \\<open>x \\<in> vars p\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> vars p\n\ngoal (1 subgoal):\n 1. Rep_linear_poly p x *R v' x = Rep_linear_poly p x *R (1::'a)", "using \\<open>\\<forall> x' \\<in> vars p. v' x' = (if x = x' then 1 else 0)\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> vars p\n  \\<forall>x'\\<in>vars p. v' x' = (if x = x' then 1::'a else (0::'a))\n\ngoal (1 subgoal):\n 1. Rep_linear_poly p x *R v' x = Rep_linear_poly p x *R (1::'a)", "by simp"], ["proof (state)\nthis:\n  Rep_linear_poly p x *R v' x = Rep_linear_poly p x *R (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "ultimately"], ["proof (chain)\npicking this:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R v' x\n  Rep_linear_poly p x *R v' x = Rep_linear_poly p x *R (1::'a)", "have \"p \\<lbrace>v'\\<rbrace> = ?fp x *R 1\""], ["proof (prove)\nusing this:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R v' x\n  Rep_linear_poly p x *R v' x = Rep_linear_poly p x *R (1::'a)\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R (1::'a)", "by simp"], ["proof (state)\nthis:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "then"], ["proof (chain)\npicking this:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R (1::'a)", "have \"coeff p x *R (1::'a)= 0\""], ["proof (prove)\nusing this:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R (1::'a)\n\ngoal (1 subgoal):\n 1. coeff p x *R (1::'a) = (0::'a)", "using \\<open>p \\<lbrace>v'\\<rbrace> = 0\\<close>"], ["proof (prove)\nusing this:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R (1::'a)\n  p \\<lbrace> v' \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff p x *R (1::'a) = (0::'a)", "unfolding coeff_def"], ["proof (prove)\nusing this:\n  p \\<lbrace> v' \\<rbrace> = Rep_linear_poly p x *R (1::'a)\n  p \\<lbrace> v' \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. map_fun Rep_linear_poly id fun_coeff p x *R (1::'a) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  coeff p x *R (1::'a) = (0::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> vars p \\<Longrightarrow> coeff p x = 0", "then"], ["proof (chain)\npicking this:\n  coeff p x *R (1::'a) = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  coeff p x *R (1::'a) = (0::'a)\n\ngoal (1 subgoal):\n 1. coeff p x = 0", "using rational_vector.scale_eq_0_iff"], ["proof (prove)\nusing this:\n  coeff p x *R (1::'a) = (0::'a)\n  (?a *R ?x = (0::?'a)) = (?a = 0 \\<or> ?x = (0::?'a))\n\ngoal (1 subgoal):\n 1. coeff p x = 0", "using \\<open>0 \\<noteq> 1\\<close>"], ["proof (prove)\nusing this:\n  coeff p x *R (1::'a) = (0::'a)\n  (?a *R ?x = (0::?'a)) = (?a = 0 \\<or> ?x = (0::?'a))\n  (0::'a) \\<noteq> (1::'a)\n\ngoal (1 subgoal):\n 1. coeff p x = 0", "by simp"], ["proof (state)\nthis:\n  coeff p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coeff p x = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition lp_monom :: \"rat \\<Rightarrow> var \\<Rightarrow> linear_poly\" is\n  \"\\<lambda> c x y. if x = y then c else 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rat nat.\n       Abstract_Linear_Poly.inv (\\<lambda>y. if nat = y then rat else 0)", "by auto"], ["", "lemma valuate_lp_monom: \"((lp_monom c x) \\<lbrace>v\\<rbrace>) = c * (v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp_monom c x \\<lbrace> v \\<rbrace> = c * v x", "proof (transfer, simp, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c x v.\n       (\\<Sum>x\\<in>{v. x = v \\<and>\n                        (x = v \\<longrightarrow> c \\<noteq> 0)}.\n          c * v x) =\n       c * v x", "case (1 c x v)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>c x v.\n       (\\<Sum>x\\<in>{v. x = v \\<and>\n                        (x = v \\<longrightarrow> c \\<noteq> 0)}.\n          c * v x) =\n       c * v x", "have id: \"{v. x = v \\<and> (x = v \\<longrightarrow> c \\<noteq> 0)} = (if c = 0 then {} else {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. x = v \\<and> (x = v \\<longrightarrow> c \\<noteq> 0)} =\n    (if c = 0 then {} else {x})", "by auto"], ["proof (state)\nthis:\n  {v. x = v \\<and> (x = v \\<longrightarrow> c \\<noteq> 0)} =\n  (if c = 0 then {} else {x})\n\ngoal (1 subgoal):\n 1. \\<And>c x v.\n       (\\<Sum>x\\<in>{v. x = v \\<and>\n                        (x = v \\<longrightarrow> c \\<noteq> 0)}.\n          c * v x) =\n       c * v x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. x = v \\<and> (x = v \\<longrightarrow> c \\<noteq> 0)}.\n       c * v x) =\n    c * v x", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>(if c = 0 then {} else {x}). c * v x) = c * v x", "by (cases \"c = 0\", auto)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. x = v \\<and> (x = v \\<longrightarrow> c \\<noteq> 0)}.\n     c * v x) =\n  c * v x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valuate_lp_monom_1[simp]: \"((lp_monom 1 x) \\<lbrace>v\\<rbrace>) = v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp_monom 1 x \\<lbrace> v \\<rbrace> = v x", "by transfer simp"], ["", "lemma coeff_lp_monom [simp]:\n  shows \"coeff (lp_monom c v) v' = (if v = v' then c else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (lp_monom c v) v' = (if v = v' then c else 0)", "by (transfer, auto)"], ["", "lemma vars_uminus [simp]: \"vars (-p) = vars p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (- p) = vars p", "unfolding uminus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (- 1 *R p) = vars p", "by transfer auto"], ["", "lemma vars_plus [simp]: \"vars (p1 + p2) \\<subseteq> vars p1 \\<union> vars p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (p1 + p2) \\<subseteq> vars p1 \\<union> vars p2", "by transfer auto"], ["", "lemma vars_minus [simp]: \"vars (p1 - p2) \\<subseteq> vars p1 \\<union> vars p2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (p1 - p2) \\<subseteq> vars p1 \\<union> vars p2", "unfolding minus_linear_poly_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (p1 + - p2) \\<subseteq> vars p1 \\<union> vars p2", "using vars_plus[of p1 \"-p2\"] vars_uminus[of p2]"], ["proof (prove)\nusing this:\n  vars (p1 + - p2) \\<subseteq> vars p1 \\<union> vars (- p2)\n  vars (- p2) = vars p2\n\ngoal (1 subgoal):\n 1. vars (p1 + - p2) \\<subseteq> vars p1 \\<union> vars p2", "by simp"], ["", "lemma vars_lp_monom: \"vars (lp_monom r x) = (if r = 0 then {} else {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (lp_monom r x) = (if r = 0 then {} else {x})", "by (transfer, auto)"], ["", "lemma vars_scaleRat1: \"vars (c *R p) \\<subseteq> vars p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (c *R p) \\<subseteq> vars p", "by transfer auto"], ["", "lemma vars_scaleRat: \"c \\<noteq> 0 \\<Longrightarrow> vars(c *R p) = vars p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow> vars (c *R p) = vars p", "by transfer auto"], ["", "lemma vars_Var [simp]: \"vars (Var x) = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars (Var x) = {x}", "by transfer auto"], ["", "lemma coeff_Var1 [simp]: \"coeff (Var x) x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (Var x) x = 1", "by transfer auto"], ["", "lemma coeff_Var2: \"x \\<noteq> y \\<Longrightarrow> coeff (Var x) y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> coeff (Var x) y = 0", "by transfer auto"], ["", "lemma valuate_depend:\n  assumes \"\\<forall> x \\<in> vars p. v x = v' x\"\n  shows \"(p \\<lbrace>v\\<rbrace>) = (p \\<lbrace>v'\\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> = p \\<lbrace> v' \\<rbrace>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>vars p. v x = v' x\n\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> = p \\<lbrace> v' \\<rbrace>", "by transfer auto"], ["", "lemma valuate_update_x_lemma:\n  fixes v1 v2 :: \"'a::rational_vector valuation\"\n  assumes\n    \"\\<forall>y. f y \\<noteq> 0 \\<longrightarrow> y \\<noteq> x \\<longrightarrow> v1 y = v2 y\"\n    \"finite {v. f v \\<noteq> 0}\"\n  shows\n    \"(\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) = (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "proof (cases \"f x = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f x = 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\n 2. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "case True"], ["proof (state)\nthis:\n  f x = 0\n\ngoal (2 subgoals):\n 1. f x = 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\n 2. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "then"], ["proof (chain)\npicking this:\n  f x = 0", "have \"\\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y\""], ["proof (prove)\nusing this:\n  f x = 0\n\ngoal (1 subgoal):\n 1. \\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y", "using assms(1)"], ["proof (prove)\nusing this:\n  f x = 0\n  \\<forall>y.\n     f y \\<noteq> 0 \\<longrightarrow>\n     y \\<noteq> x \\<longrightarrow> v1 y = v2 y\n\ngoal (1 subgoal):\n 1. \\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y\n\ngoal (2 subgoals):\n 1. f x = 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\n 2. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "then"], ["proof (chain)\npicking this:\n  \\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "using \\<open>f x = 0\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>y. f y \\<noteq> 0 \\<longrightarrow> v1 y = v2 y\n  f x = 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "case False"], ["proof (state)\nthis:\n  f x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "let ?A = \"{v. f v \\<noteq> 0}\" and ?Ax = \"{v. v \\<noteq> x \\<and> f v \\<noteq> 0}\""], ["proof (state)\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "have \"?A = ?Ax \\<union> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. f v \\<noteq> 0} =\n    {v. v \\<noteq> x \\<and> f v \\<noteq> 0} \\<union> {x}", "using \\<open>f x \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  f x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. {v. f v \\<noteq> 0} =\n    {v. v \\<noteq> x \\<and> f v \\<noteq> 0} \\<union> {x}", "by auto"], ["proof (state)\nthis:\n  {v. f v \\<noteq> 0} = {v. v \\<noteq> x \\<and> f v \\<noteq> 0} \\<union> {x}\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "then"], ["proof (chain)\npicking this:\n  {v. f v \\<noteq> 0} = {v. v \\<noteq> x \\<and> f v \\<noteq> 0} \\<union> {x}", "have \"(\\<Sum>x\\<in>?A. f x *R v1 x) = f x *R v1 x + (\\<Sum>x\\<in>?Ax. f x *R v1 x)\"\n    \"(\\<Sum>x\\<in>?A. f x *R v2 x) = f x *R v2 x + (\\<Sum>x\\<in>?Ax. f x *R v2 x)\""], ["proof (prove)\nusing this:\n  {v. f v \\<noteq> 0} = {v. v \\<noteq> x \\<and> f v \\<noteq> 0} \\<union> {x}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) =\n    f x *R v1 x +\n    (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v1 x) &&&\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x) =\n    f x *R v2 x +\n    (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v2 x)", "using assms(2)"], ["proof (prove)\nusing this:\n  {v. f v \\<noteq> 0} = {v. v \\<noteq> x \\<and> f v \\<noteq> 0} \\<union> {x}\n  finite {v. f v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) =\n    f x *R v1 x +\n    (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v1 x) &&&\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x) =\n    f x *R v2 x +\n    (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v2 x)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) =\n  f x *R v1 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v1 x)\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x) =\n  f x *R v2 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v2 x)\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) =\n  f x *R v1 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v1 x)\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x) =\n  f x *R v2 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v2 x)\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "have \"\\<forall> y \\<in> ?Ax. v1 y = v2 y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. v1 y = v2 y", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>y.\n     f y \\<noteq> 0 \\<longrightarrow>\n     y \\<noteq> x \\<longrightarrow> v1 y = v2 y\n  finite {v. f v \\<noteq> 0}\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. v1 y = v2 y", "by auto"], ["proof (state)\nthis:\n  \\<forall>y\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. v1 y = v2 y\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>y\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. v1 y = v2 y\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "have \"f x *R v1 x + f x *R (v2 x - v1 x) = f x *R v2 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x *R v1 x + f x *R (v2 x - v1 x) = f x *R v2 x", "by (subst rational_vector.scale_right_diff_distrib) auto"], ["proof (state)\nthis:\n  f x *R v1 x + f x *R (v2 x - v1 x) = f x *R v2 x\n\ngoal (1 subgoal):\n 1. f x \\<noteq> 0 \\<Longrightarrow>\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) =\n  f x *R v1 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v1 x)\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x) =\n  f x *R v2 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v2 x)\n  \\<forall>y\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. v1 y = v2 y\n  f x *R v1 x + f x *R (v2 x - v1 x) = f x *R v2 x", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) =\n  f x *R v1 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v1 x)\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x) =\n  f x *R v2 x +\n  (\\<Sum>x\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. f x *R v2 x)\n  \\<forall>y\\<in>{v. v \\<noteq> x \\<and> f v \\<noteq> 0}. v1 y = v2 y\n  f x *R v1 x + f x *R (v2 x - v1 x) = f x *R v2 x\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n    (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v1 x) + f x *R (v2 x - v1 x) =\n  (\\<Sum>x\\<in>{v. f v \\<noteq> 0}. f x *R v2 x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma valuate_update_x:\n  fixes v1 v2 :: \"'a::rational_vector valuation\"\n  assumes \"\\<forall>y \\<in> vars lp. y\\<noteq>x \\<longrightarrow> v1 y = v2 y\"\n  shows \"lp \\<lbrace>v1\\<rbrace>  + coeff lp x *R (v2 x - v1 x) = (lp \\<lbrace>v2\\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lp \\<lbrace> v1 \\<rbrace> + coeff lp x *R (v2 x - v1 x) =\n    lp \\<lbrace> v2 \\<rbrace>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>vars lp. y \\<noteq> x \\<longrightarrow> v1 y = v2 y\n\ngoal (1 subgoal):\n 1. lp \\<lbrace> v1 \\<rbrace> + coeff lp x *R (v2 x - v1 x) =\n    lp \\<lbrace> v2 \\<rbrace>", "unfolding valuate_def vars_def coeff_def"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>map_fun Rep_linear_poly id fun_vars lp.\n     y \\<noteq> x \\<longrightarrow> v1 y = v2 y\n\ngoal (1 subgoal):\n 1. map_fun Rep_linear_poly id fun_valuate lp v1 +\n    map_fun Rep_linear_poly id fun_coeff lp x *R (v2 x - v1 x) =\n    map_fun Rep_linear_poly id fun_valuate lp v2", "using valuate_update_x_lemma[of \"Rep_linear_poly lp\" x v1 v2] Rep_linear_poly"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>map_fun Rep_linear_poly id fun_vars lp.\n     y \\<noteq> x \\<longrightarrow> v1 y = v2 y\n  \\<lbrakk>\\<forall>y.\n              Rep_linear_poly lp y \\<noteq> 0 \\<longrightarrow>\n              y \\<noteq> x \\<longrightarrow> v1 y = v2 y;\n   finite {v. Rep_linear_poly lp v \\<noteq> 0}\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>x\\<in>{v. Rep_linear_poly lp v \\<noteq> 0}.\n                       Rep_linear_poly lp x *R v1 x) +\n                    Rep_linear_poly lp x *R (v2 x - v1 x) =\n                    (\\<Sum>x\\<in>{v. Rep_linear_poly lp v \\<noteq> 0}.\n                       Rep_linear_poly lp x *R v2 x)\n  Rep_linear_poly ?x \\<in> {c. Abstract_Linear_Poly.inv c}\n\ngoal (1 subgoal):\n 1. map_fun Rep_linear_poly id fun_valuate lp v1 +\n    map_fun Rep_linear_poly id fun_coeff lp x *R (v2 x - v1 x) =\n    map_fun Rep_linear_poly id fun_valuate lp v2", "by auto"], ["", "lemma vars_zero: \"vars 0 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars 0 = {}", "using zero_coeff_zero coeff_zero"], ["proof (prove)\nusing this:\n  (?p = 0) = (\\<forall>v. coeff ?p v = 0)\n  (coeff ?p ?x \\<noteq> 0) = (?x \\<in> vars ?p)\n\ngoal (1 subgoal):\n 1. vars 0 = {}", "by auto"], ["", "lemma vars_empty_zero: \"vars lp = {} \\<longleftrightarrow> lp = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vars lp = {}) = (lp = 0)", "using zero_coeff_zero coeff_zero"], ["proof (prove)\nusing this:\n  (?p = 0) = (\\<forall>v. coeff ?p v = 0)\n  (coeff ?p ?x \\<noteq> 0) = (?x \\<in> vars ?p)\n\ngoal (1 subgoal):\n 1. (vars lp = {}) = (lp = 0)", "by auto"], ["", "definition max_var:: \"linear_poly \\<Rightarrow> var\" where\n  \"max_var lp \\<equiv> if lp = 0 then 0 else Max (vars lp)\""], ["", "lemma max_var_max:\n  assumes \"a \\<in> vars lp\"\n  shows \"max_var lp \\<ge> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<le> max_var lp", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> vars lp\n\ngoal (1 subgoal):\n 1. a \\<le> max_var lp", "by (auto simp add: finite_vars max_var_def vars_zero)"], ["", "lemma max_var_code[code]: \n  \"max_var lp = (let vl = vars_list lp \n                in if vl = [] then 0 else foldl max (hd vl) (tl vl))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "proof (cases \"lp = (0::linear_poly)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lp = 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))\n 2. lp \\<noteq> 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "case True"], ["proof (state)\nthis:\n  lp = 0\n\ngoal (2 subgoals):\n 1. lp = 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))\n 2. lp \\<noteq> 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "then"], ["proof (chain)\npicking this:\n  lp = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  lp = 0\n\ngoal (1 subgoal):\n 1. max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "using set_vars_list[of lp]"], ["proof (prove)\nusing this:\n  lp = 0\n  set (vars_list lp) = vars lp\n\ngoal (1 subgoal):\n 1. max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "by (auto simp add: max_var_def vars_zero)"], ["proof (state)\nthis:\n  max_var lp =\n  (let vl = vars_list lp\n   in if vl = [] then 0 else foldl max (hd vl) (tl vl))\n\ngoal (1 subgoal):\n 1. lp \\<noteq> 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lp \\<noteq> 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "case False"], ["proof (state)\nthis:\n  lp \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lp \\<noteq> 0 \\<Longrightarrow>\n    max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "then"], ["proof (chain)\npicking this:\n  lp \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  lp \\<noteq> 0\n\ngoal (1 subgoal):\n 1. max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "using set_vars_list[of lp, THEN sym]"], ["proof (prove)\nusing this:\n  lp \\<noteq> 0\n  vars lp = set (vars_list lp)\n\ngoal (1 subgoal):\n 1. max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "using vars_empty_zero[of lp]"], ["proof (prove)\nusing this:\n  lp \\<noteq> 0\n  vars lp = set (vars_list lp)\n  (vars lp = {}) = (lp = 0)\n\ngoal (1 subgoal):\n 1. max_var lp =\n    (let vl = vars_list lp\n     in if vl = [] then 0 else foldl max (hd vl) (tl vl))", "unfolding max_var_def Let_def"], ["proof (prove)\nusing this:\n  lp \\<noteq> 0\n  vars lp = set (vars_list lp)\n  (vars lp = {}) = (lp = 0)\n\ngoal (1 subgoal):\n 1. (if lp = 0 then 0 else Max (vars lp)) =\n    (if vars_list lp = [] then 0\n     else foldl max (hd (vars_list lp)) (tl (vars_list lp)))", "using Max.set_eq_fold[of \"hd (vars_list lp)\" \"tl (vars_list lp)\"]"], ["proof (prove)\nusing this:\n  lp \\<noteq> 0\n  vars lp = set (vars_list lp)\n  (vars lp = {}) = (lp = 0)\n  Max (set (hd (vars_list lp) # tl (vars_list lp))) =\n  fold max (tl (vars_list lp)) (hd (vars_list lp))\n\ngoal (1 subgoal):\n 1. (if lp = 0 then 0 else Max (vars lp)) =\n    (if vars_list lp = [] then 0\n     else foldl max (hd (vars_list lp)) (tl (vars_list lp)))", "by (cases \"vars_list lp\", auto simp: foldl_conv_fold intro!: fold_cong)"], ["proof (state)\nthis:\n  max_var lp =\n  (let vl = vars_list lp\n   in if vl = [] then 0 else foldl max (hd vl) (tl vl))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition monom_var:: \"linear_poly \\<Rightarrow> var\" where\n  \"monom_var l = max_var l\""], ["", "definition monom_coeff:: \"linear_poly \\<Rightarrow> rat\" where\n  \"monom_coeff l = coeff l (monom_var l)\""], ["", "definition is_monom :: \"linear_poly \\<Rightarrow> bool\" where\n  \"is_monom l \\<longleftrightarrow> length (vars_list l) = 1\""], ["", "lemma is_monom_vars_not_empty:\n  \"is_monom l \\<Longrightarrow> vars l \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_monom l \\<Longrightarrow> vars l \\<noteq> {}", "by (auto simp add: is_monom_def vars_list_def) (auto simp add: vars_def)"], ["", "lemma monom_var_in_vars:\n  \"is_monom l \\<Longrightarrow> monom_var l \\<in> vars l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_monom l \\<Longrightarrow> monom_var l \\<in> vars l", "using vars_zero"], ["proof (prove)\nusing this:\n  vars 0 = {}\n\ngoal (1 subgoal):\n 1. is_monom l \\<Longrightarrow> monom_var l \\<in> vars l", "by (auto simp add: monom_var_def max_var_def is_monom_vars_not_empty finite_vars is_monom_def)"], ["", "lemma zero_is_no_monom[simp]: \"\\<not> is_monom 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> is_monom 0", "using is_monom_vars_not_empty vars_zero"], ["proof (prove)\nusing this:\n  is_monom ?l \\<Longrightarrow> vars ?l \\<noteq> {}\n  vars 0 = {}\n\ngoal (1 subgoal):\n 1. \\<not> is_monom 0", "by blast"], ["", "lemma is_monom_monom_coeff_not_zero:\n  \"is_monom l \\<Longrightarrow> monom_coeff l \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_monom l \\<Longrightarrow> monom_coeff l \\<noteq> 0", "by (simp add: coeff_zero monom_var_in_vars monom_coeff_def)"], ["", "lemma list_two_elements:\n  \"\\<lbrakk>y \\<in> set l; x \\<in> set l; length l = Suc 0; y \\<noteq> x\\<rbrakk> \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> set l; x \\<in> set l; length l = Suc 0;\n     y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> False", "by (induct l) auto"], ["", "lemma is_monom_vars_monom_var:\n  assumes \"is_monom l\"\n  shows \"vars l = {monom_var l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars l = {monom_var l}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. vars l = {monom_var l}", "have \"\\<And>x. \\<lbrakk>is_monom l; x \\<in> vars l\\<rbrakk> \\<Longrightarrow> monom_var l = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>is_monom l; x \\<in> vars l\\<rbrakk>\n       \\<Longrightarrow> monom_var l = x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>is_monom l; x \\<in> vars l\\<rbrakk>\n       \\<Longrightarrow> monom_var l = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>is_monom l; x \\<in> vars l\\<rbrakk>\n       \\<Longrightarrow> monom_var l = x", "assume \"is_monom l\" \"x \\<in> vars l\""], ["proof (state)\nthis:\n  is_monom l\n  x \\<in> vars l\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>is_monom l; x \\<in> vars l\\<rbrakk>\n       \\<Longrightarrow> monom_var l = x", "then"], ["proof (chain)\npicking this:\n  is_monom l\n  x \\<in> vars l", "have \"x \\<in> set (vars_list l)\""], ["proof (prove)\nusing this:\n  is_monom l\n  x \\<in> vars l\n\ngoal (1 subgoal):\n 1. x \\<in> set (vars_list l)", "using finite_vars"], ["proof (prove)\nusing this:\n  is_monom l\n  x \\<in> vars l\n  finite (vars ?p)\n\ngoal (1 subgoal):\n 1. x \\<in> set (vars_list l)", "by (auto simp add: vars_list_def vars_def)"], ["proof (state)\nthis:\n  x \\<in> set (vars_list l)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>is_monom l; x \\<in> vars l\\<rbrakk>\n       \\<Longrightarrow> monom_var l = x", "show \"monom_var l = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monom_var l = x", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. monom_var l \\<noteq> x \\<Longrightarrow> False", "assume \"monom_var l \\<noteq> x\""], ["proof (state)\nthis:\n  monom_var l \\<noteq> x\n\ngoal (1 subgoal):\n 1. monom_var l \\<noteq> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  monom_var l \\<noteq> x", "have \"\\<exists>y. monom_var l = y \\<and> y \\<noteq> x\""], ["proof (prove)\nusing this:\n  monom_var l \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<exists>y. monom_var l = y \\<and> y \\<noteq> x", "by simp"], ["proof (state)\nthis:\n  \\<exists>y. monom_var l = y \\<and> y \\<noteq> x\n\ngoal (1 subgoal):\n 1. monom_var l \\<noteq> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>y. monom_var l = y \\<and> y \\<noteq> x", "obtain y where \"monom_var l = y\" \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<exists>y. monom_var l = y \\<and> y \\<noteq> x\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>monom_var l = y; y \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  monom_var l = y\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. monom_var l \\<noteq> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  monom_var l = y\n  y \\<noteq> x", "have \"Rep_linear_poly l y \\<noteq> 0\""], ["proof (prove)\nusing this:\n  monom_var l = y\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. Rep_linear_poly l y \\<noteq> 0", "using monom_var_in_vars \\<open>is_monom l\\<close>"], ["proof (prove)\nusing this:\n  monom_var l = y\n  y \\<noteq> x\n  is_monom ?l \\<Longrightarrow> monom_var ?l \\<in> vars ?l\n  is_monom l\n\ngoal (1 subgoal):\n 1. Rep_linear_poly l y \\<noteq> 0", "by (auto simp add: vars_def)"], ["proof (state)\nthis:\n  Rep_linear_poly l y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. monom_var l \\<noteq> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Rep_linear_poly l y \\<noteq> 0", "have \"y \\<in> set (vars_list l)\""], ["proof (prove)\nusing this:\n  Rep_linear_poly l y \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y \\<in> set (vars_list l)", "using finite_vars"], ["proof (prove)\nusing this:\n  Rep_linear_poly l y \\<noteq> 0\n  finite (vars ?p)\n\ngoal (1 subgoal):\n 1. y \\<in> set (vars_list l)", "by (auto simp add: vars_def vars_list_def)"], ["proof (state)\nthis:\n  y \\<in> set (vars_list l)\n\ngoal (1 subgoal):\n 1. monom_var l \\<noteq> x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<in> set (vars_list l)", "show False"], ["proof (prove)\nusing this:\n  y \\<in> set (vars_list l)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>x \\<in> set (vars_list l)\\<close> \\<open>is_monom l\\<close> \\<open>y \\<noteq> x\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> set (vars_list l)\n  x \\<in> set (vars_list l)\n  is_monom l\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. False", "using list_two_elements"], ["proof (prove)\nusing this:\n  y \\<in> set (vars_list l)\n  x \\<in> set (vars_list l)\n  is_monom l\n  y \\<noteq> x\n  \\<lbrakk>?y \\<in> set ?l; ?x \\<in> set ?l; length ?l = Suc 0;\n   ?y \\<noteq> ?x\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by (simp add: is_monom_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  monom_var l = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>is_monom l; ?x \\<in> vars l\\<rbrakk>\n  \\<Longrightarrow> monom_var l = ?x\n\ngoal (1 subgoal):\n 1. vars l = {monom_var l}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>is_monom l; ?x \\<in> vars l\\<rbrakk>\n  \\<Longrightarrow> monom_var l = ?x", "show \"vars l = {monom_var l}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>is_monom l; ?x \\<in> vars l\\<rbrakk>\n  \\<Longrightarrow> monom_var l = ?x\n\ngoal (1 subgoal):\n 1. vars l = {monom_var l}", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_monom l; ?x \\<in> vars l\\<rbrakk>\n  \\<Longrightarrow> monom_var l = ?x\n  is_monom l\n\ngoal (1 subgoal):\n 1. vars l = {monom_var l}", "by (auto simp add: monom_var_in_vars)"], ["proof (state)\nthis:\n  vars l = {monom_var l}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma monom_valuate:\n  assumes \"is_monom m\"\n  shows \"m\\<lbrace>v\\<rbrace> = (monom_coeff m) *R v (monom_var m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<lbrace> v \\<rbrace> = monom_coeff m *R v (monom_var m)", "using assms"], ["proof (prove)\nusing this:\n  is_monom m\n\ngoal (1 subgoal):\n 1. m \\<lbrace> v \\<rbrace> = monom_coeff m *R v (monom_var m)", "using is_monom_vars_monom_var"], ["proof (prove)\nusing this:\n  is_monom m\n  is_monom ?l \\<Longrightarrow> vars ?l = {monom_var ?l}\n\ngoal (1 subgoal):\n 1. m \\<lbrace> v \\<rbrace> = monom_coeff m *R v (monom_var m)", "by (simp add: vars_def coeff_def monom_coeff_def valuate_def)"], ["", "lemma coeff_zero_simp [simp]:\n  \"coeff 0 v = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff 0 v = 0", "using zero_coeff_zero"], ["proof (prove)\nusing this:\n  (?p = 0) = (\\<forall>v. coeff ?p v = 0)\n\ngoal (1 subgoal):\n 1. coeff 0 v = 0", "by blast"], ["", "lemma poly_eq_iff: \"p = q \\<longleftrightarrow> (\\<forall> v. coeff p v = coeff q v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p = q) = (\\<forall>v. coeff p v = coeff q v)", "by transfer auto"], ["", "lemma poly_eqI:\n  assumes \"\\<And>v. coeff p v = coeff q v\"\n  shows \"p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q", "using assms poly_eq_iff"], ["proof (prove)\nusing this:\n  coeff p ?v = coeff q ?v\n  (?p = ?q) = (\\<forall>v. coeff ?p v = coeff ?q v)\n\ngoal (1 subgoal):\n 1. p = q", "by simp"], ["", "lemma coeff_sum_list:\n  assumes \"distinct xs\"\n  shows \"coeff (\\<Sum>x\\<leftarrow>xs. f x *R lp_monom 1 x) v = (if v \\<in> set xs then f v else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (\\<Sum>x\\<leftarrow>xs. f x *R lp_monom 1 x) v =\n    (if v \\<in> set xs then f v else 0)", "using assms"], ["proof (prove)\nusing this:\n  distinct xs\n\ngoal (1 subgoal):\n 1. coeff (\\<Sum>x\\<leftarrow>xs. f x *R lp_monom 1 x) v =\n    (if v \\<in> set xs then f v else 0)", "by (induction xs) auto"], ["", "lemma linear_poly_sum:\n  \"p \\<lbrace> v \\<rbrace> = (\\<Sum>x\\<in>vars p. coeff p x *R v x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<lbrace> v \\<rbrace> = (\\<Sum>x\\<in>vars p. coeff p x *R v x)", "by transfer simp"], ["", "lemma all_valuate_zero: assumes \"\\<And>(v::'a::lrv valuation). p \\<lbrace>v\\<rbrace> = 0\"\n  shows \"p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = 0", "using all_val assms"], ["proof (prove)\nusing this:\n  \\<forall>v.\n     \\<exists>v'.\n        (\\<forall>x\\<in>vars ?p. v' x = v x) \\<and>\n        ?p \\<lbrace> v' \\<rbrace> = (0::?'a) \\<Longrightarrow>\n  ?p = 0\n  p \\<lbrace> ?v \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. p = 0", "by blast"], ["", "lemma linear_poly_eqI: assumes \"\\<And>(v::'a::lrv valuation). (p \\<lbrace>v\\<rbrace>) = (q \\<lbrace>v\\<rbrace>)\"\n  shows \"p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = q", "using assms"], ["proof (prove)\nusing this:\n  p \\<lbrace> ?v \\<rbrace> = q \\<lbrace> ?v \\<rbrace>\n\ngoal (1 subgoal):\n 1. p = q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        p \\<lbrace> v \\<rbrace> = q \\<lbrace> v \\<rbrace>) \\<Longrightarrow>\n    p = q", "have \"(p - q) \\<lbrace> v \\<rbrace> = 0\" for v::\"'a::lrv valuation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p - q \\<lbrace> v \\<rbrace> = (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  p \\<lbrace> ?v \\<rbrace> = q \\<lbrace> ?v \\<rbrace>\n\ngoal (1 subgoal):\n 1. p - q \\<lbrace> v \\<rbrace> = (0::'a)", "by (subst valuate_minus) auto"], ["proof (state)\nthis:\n  p - q \\<lbrace> ?v \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        p \\<lbrace> v \\<rbrace> = q \\<lbrace> v \\<rbrace>) \\<Longrightarrow>\n    p = q", "then"], ["proof (chain)\npicking this:\n  p - q \\<lbrace> ?v \\<rbrace> = (0::'a)", "have \"p - q = 0\""], ["proof (prove)\nusing this:\n  p - q \\<lbrace> ?v \\<rbrace> = (0::'a)\n\ngoal (1 subgoal):\n 1. p - q = 0", "by (intro all_valuate_zero) auto"], ["proof (state)\nthis:\n  p - q = 0\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        p \\<lbrace> v \\<rbrace> = q \\<lbrace> v \\<rbrace>) \\<Longrightarrow>\n    p = q", "then"], ["proof (chain)\npicking this:\n  p - q = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  p - q = 0\n\ngoal (1 subgoal):\n 1. p = q", "by simp"], ["proof (state)\nthis:\n  p = q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma monom_poly_assemble:\n  assumes \"is_monom p\"\n  shows \"monom_coeff p *R lp_monom 1 (monom_var p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monom_coeff p *R lp_monom 1 (monom_var p) = p", "by (simp add: assms linear_poly_eqI monom_valuate valuate_scaleRat)"], ["", "lemma coeff_sum: \"coeff (sum (f :: _ \\<Rightarrow> linear_poly) is) x = sum (\\<lambda> i. coeff (f i) x) is\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coeff (sum f is) x = (\\<Sum>i\\<in>is. coeff (f i) x)", "by (induct \"is\" rule: infinite_finite_induct, auto)"], ["", "end"]]}