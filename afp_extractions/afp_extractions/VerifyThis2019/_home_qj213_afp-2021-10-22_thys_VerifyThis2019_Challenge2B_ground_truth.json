{"file_name": "/home/qj213/afp-2021-10-22/thys/VerifyThis2019/Challenge2B.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/VerifyThis2019", "problem_names": ["lemma parent_heap:\n  assumes \"parent j = Some p\"\n  shows \"xs ! j > xs ! p\""], "translations": [["", "lemma parent_heap:\n  assumes \"parent j = Some p\"\n  shows \"xs ! j > xs ! p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "note [simp del] = left_spec_None_iff swap_adhoc"], ["proof (state)\nthis:\n  (left_spec ?xs ?i = None) = (\\<not> has_left ?xs ?i)\n  (None = ?left ?i) = (?left ?i = None)\n  (Some ?j = ?left ?i) = (?left ?i = Some ?j)\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "proof (cases \"(\\<exists>i<j. xs ! i < xs ! j)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>i<j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "case True"], ["proof (state)\nthis:\n  \\<exists>i<j. xs ! i < xs ! j\n\ngoal (2 subgoals):\n 1. \\<exists>i<j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  \\<exists>i<j. xs ! i < xs ! j", "have *: \"xs ! the (left_spec xs j) < xs ! j\" \"left_spec xs j \\<noteq> None\""], ["proof (prove)\nusing this:\n  \\<exists>i<j. xs ! i < xs ! j\n\ngoal (1 subgoal):\n 1. xs ! the (left_spec xs j) < xs ! j &&& left_spec xs j \\<noteq> None", "unfolding left_spec_def"], ["proof (prove)\nusing this:\n  \\<exists>i<j. xs ! i < xs ! j\n\ngoal (1 subgoal):\n 1. xs !\n    the (if \\<exists>i<j. xs ! i < xs ! j\n         then Some (GREATEST i. i < j \\<and> xs ! i < xs ! j) else None)\n    < xs ! j &&&\n    (if \\<exists>i<j. xs ! i < xs ! j\n     then Some (GREATEST i. i < j \\<and> xs ! i < xs ! j)\n     else None) \\<noteq>\n    None", "by auto (metis (no_types, lifting) GreatestI_nat True less_le)"], ["proof (state)\nthis:\n  xs ! the (left_spec xs j) < xs ! j\n  left_spec xs j \\<noteq> None\n\ngoal (2 subgoals):\n 1. \\<exists>i<j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "proof (cases \"(\\<exists>i>j. xs ! i < xs ! j)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>i>j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "case True"], ["proof (state)\nthis:\n  \\<exists>i>j. xs ! i < xs ! j\n\ngoal (2 subgoals):\n 1. \\<exists>i>j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  \\<exists>i>j. xs ! i < xs ! j", "have \"xs ! the (right_spec xs j) < xs ! j\" \"right_spec xs j \\<noteq> None\""], ["proof (prove)\nusing this:\n  \\<exists>i>j. xs ! i < xs ! j\n\ngoal (1 subgoal):\n 1. xs ! the (right_spec xs j) < xs ! j &&& right_spec xs j \\<noteq> None", "unfolding right_spec_def"], ["proof (prove)\nusing this:\n  \\<exists>i>j. xs ! i < xs ! j\n\ngoal (1 subgoal):\n 1. xs !\n    the (if \\<exists>i>j. xs ! i < xs ! j\n         then Some (LEAST i. j < i \\<and> xs ! i < xs ! j) else None)\n    < xs ! j &&&\n    (if \\<exists>i>j. xs ! i < xs ! j\n     then Some (LEAST i. j < i \\<and> xs ! i < xs ! j) else None) \\<noteq>\n    None", "by auto (metis (no_types, lifting) LeastI)"], ["proof (state)\nthis:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n\ngoal (2 subgoals):\n 1. \\<exists>i>j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None", "show ?thesis"], ["proof (prove)\nusing this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "using * assms"], ["proof (prove)\nusing this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n  xs ! the (left_spec xs j) < xs ! j\n  left_spec xs j \\<noteq> None\n  local.parent j = Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "unfolding parent_def"], ["proof (prove)\nusing this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n  xs ! the (left_spec xs j) < xs ! j\n  left_spec xs j \\<noteq> None\n  (case (left_spec xs j, right_spec xs j) of (None, None) \\<Rightarrow> None\n   | (None, Some x) \\<Rightarrow> Some x\n   | (Some x, None) \\<Rightarrow> Some x\n   | (Some x, Some y) \\<Rightarrow> Some (max x y)) =\n  Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "by auto"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)", "have \"right_spec xs j = None\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. right_spec xs j = None", "unfolding right_spec_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. (if \\<exists>i>j. xs ! i < xs ! j\n     then Some (LEAST i. j < i \\<and> xs ! i < xs ! j) else None) =\n    None", "by auto"], ["proof (state)\nthis:\n  right_spec xs j = None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  right_spec xs j = None", "show ?thesis"], ["proof (prove)\nusing this:\n  right_spec xs j = None\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "using * assms"], ["proof (prove)\nusing this:\n  right_spec xs j = None\n  xs ! the (left_spec xs j) < xs ! j\n  left_spec xs j \\<noteq> None\n  local.parent j = Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "unfolding parent_def"], ["proof (prove)\nusing this:\n  right_spec xs j = None\n  xs ! the (left_spec xs j) < xs ! j\n  left_spec xs j \\<noteq> None\n  (case (left_spec xs j, right_spec xs j) of (None, None) \\<Rightarrow> None\n   | (None, Some x) \\<Rightarrow> Some x\n   | (Some x, None) \\<Rightarrow> Some x\n   | (Some x, Some y) \\<Rightarrow> Some (max x y)) =\n  Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "by auto"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i<j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i<j. xs ! i < xs ! j)", "have [simp]: \"left_spec xs j = None\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i<j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. left_spec xs j = None", "unfolding left_spec_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i<j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. (if \\<exists>i<j. xs ! i < xs ! j\n     then Some (GREATEST i. i < j \\<and> xs ! i < xs ! j) else None) =\n    None", "by auto"], ["proof (state)\nthis:\n  left_spec xs j = None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i<j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "proof (cases \"(\\<exists>i>j. xs ! i < xs ! j)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>i>j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "case True"], ["proof (state)\nthis:\n  \\<exists>i>j. xs ! i < xs ! j\n\ngoal (2 subgoals):\n 1. \\<exists>i>j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  \\<exists>i>j. xs ! i < xs ! j", "have \"xs ! the (right_spec xs j) < xs ! j\" \"right_spec xs j \\<noteq> None\""], ["proof (prove)\nusing this:\n  \\<exists>i>j. xs ! i < xs ! j\n\ngoal (1 subgoal):\n 1. xs ! the (right_spec xs j) < xs ! j &&& right_spec xs j \\<noteq> None", "unfolding right_spec_def"], ["proof (prove)\nusing this:\n  \\<exists>i>j. xs ! i < xs ! j\n\ngoal (1 subgoal):\n 1. xs !\n    the (if \\<exists>i>j. xs ! i < xs ! j\n         then Some (LEAST i. j < i \\<and> xs ! i < xs ! j) else None)\n    < xs ! j &&&\n    (if \\<exists>i>j. xs ! i < xs ! j\n     then Some (LEAST i. j < i \\<and> xs ! i < xs ! j) else None) \\<noteq>\n    None", "by auto (metis (no_types, lifting) LeastI)"], ["proof (state)\nthis:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n\ngoal (2 subgoals):\n 1. \\<exists>i>j. xs ! i < xs ! j \\<Longrightarrow> xs ! p < xs ! j\n 2. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None", "show ?thesis"], ["proof (prove)\nusing this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "using assms"], ["proof (prove)\nusing this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n  local.parent j = Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "unfolding parent_def"], ["proof (prove)\nusing this:\n  xs ! the (right_spec xs j) < xs ! j\n  right_spec xs j \\<noteq> None\n  (case (left_spec xs j, right_spec xs j) of (None, None) \\<Rightarrow> None\n   | (None, Some x) \\<Rightarrow> Some x\n   | (Some x, None) \\<Rightarrow> Some x\n   | (Some x, Some y) \\<Rightarrow> Some (max x y)) =\n  Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "by auto"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)", "have \"right_spec xs j = None\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. right_spec xs j = None", "unfolding right_spec_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>i>j. xs ! i < xs ! j)\n\ngoal (1 subgoal):\n 1. (if \\<exists>i>j. xs ! i < xs ! j\n     then Some (LEAST i. j < i \\<and> xs ! i < xs ! j) else None) =\n    None", "by auto"], ["proof (state)\nthis:\n  right_spec xs j = None\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i>j. xs ! i < xs ! j) \\<Longrightarrow> xs ! p < xs ! j", "then"], ["proof (chain)\npicking this:\n  right_spec xs j = None", "show ?thesis"], ["proof (prove)\nusing this:\n  right_spec xs j = None\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "using assms"], ["proof (prove)\nusing this:\n  right_spec xs j = None\n  local.parent j = Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "unfolding parent_def"], ["proof (prove)\nusing this:\n  right_spec xs j = None\n  (case (left_spec xs j, right_spec xs j) of (None, None) \\<Rightarrow> None\n   | (None, Some x) \\<Rightarrow> Some x\n   | (Some x, None) \\<Rightarrow> Some x\n   | (Some x, Some y) \\<Rightarrow> Some (max x y)) =\n  Some p\n\ngoal (1 subgoal):\n 1. xs ! p < xs ! j", "by auto"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  xs ! p < xs ! j\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}