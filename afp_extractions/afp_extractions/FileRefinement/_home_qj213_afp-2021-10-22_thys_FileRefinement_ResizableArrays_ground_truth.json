{"file_name": "/home/qj213/afp-2021-10-22/thys/FileRefinement/ResizableArrays.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/FileRefinement", "problem_names": ["lemma raWriteSizeSame [simp]: \"i < fst arr ==> fst (raWrite arr i value fillValue) = fst arr\"", "lemma raWriteSizeGrows [simp]: \"(fst arr <= i) ==> fst (raWrite arr i value fillValue) = i+1\"", "lemma raWriteContentChanged [simp]: \"snd (raWrite arr i value fillValue) i = value\"", "lemma raWriteContentOld [simp]: \"[| j < fst arr; i ~= j |] ==> \n                          snd (raWrite arr i value fillValue) j = snd arr j\"", "lemma raWriteContentFill [simp]: \"[| fst arr < j; j < i |] ==> \n                          snd (raWrite arr i value fillValue) j = fillValue\""], "translations": [["", "lemma raWriteSizeSame [simp]: \"i < fst arr ==> fst (raWrite arr i value fillValue) = fst arr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < fst arr \\<Longrightarrow>\n    fst (raWrite arr i value fillValue) = fst arr", "by (simp_all add: raWrite_def fillAndUpdate_def Let_def)"], ["", "lemma raWriteSizeGrows [simp]: \"(fst arr <= i) ==> fst (raWrite arr i value fillValue) = i+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst arr \\<le> i \\<Longrightarrow>\n    fst (raWrite arr i value fillValue) = i + 1", "by (simp_all add: raWrite_def fillAndUpdate_def Let_def)"], ["", "lemma raWriteContentChanged [simp]: \"snd (raWrite arr i value fillValue) i = value\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (raWrite arr i value fillValue) i = value", "by (simp_all add: raWrite_def fillAndUpdate_def Let_def)"], ["", "lemma raWriteContentOld [simp]: \"[| j < fst arr; i ~= j |] ==> \n                          snd (raWrite arr i value fillValue) j = snd arr j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j < fst arr; i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> snd (raWrite arr i value fillValue) j = snd arr j", "by (simp_all add: raWrite_def fillAndUpdate_def Let_def)"], ["", "lemma raWriteContentFill [simp]: \"[| fst arr < j; j < i |] ==> \n                          snd (raWrite arr i value fillValue) j = fillValue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fst arr < j; j < i\\<rbrakk>\n    \\<Longrightarrow> snd (raWrite arr i value fillValue) j = fillValue", "by (simp_all add: raWrite_def fillAndUpdate_def Let_def)"], ["", "end"]]}