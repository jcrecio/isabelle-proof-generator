{"file_name": "/home/qj213/afp-2021-10-22/thys/Roy_Floyd_Warshall/Roy_Floyd_Warshall.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Roy_Floyd_Warshall", "problem_names": ["lemma\n  \"steps rel (Suc n) =\n    steps rel n \\<union> {(x, y). x \\<in> preds (steps rel n) n \\<and> y \\<in> succs (steps rel n) n}\"", "lemma finite_bound:\n  assumes \"finite rel\"\n  shows \"\\<exists>n. is_bound rel n\"", "lemma steps_Suc: \"(x, y) \\<in> steps rel (Suc n) \\<longleftrightarrow>\n  (x, y) \\<in> steps rel n \\<or> (x, n) \\<in> steps rel n \\<and> (n, y) \\<in> steps rel n\"", "lemma steps_cases:\n  assumes \"(x, y) \\<in> steps rel (Suc n)\"\n  obtains (copy) \"(x, y) \\<in> steps rel n\"\n    | (step) \"(x, n) \\<in> steps rel n\" and \"(n, y) \\<in> steps rel n\"", "lemma steps_rel: \"(x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> steps rel n\"", "theorem Clos_closure:\n  assumes \"is_bound rel n\"\n  shows \"(x, y) \\<in> Clos rel n \\<longleftrightarrow> (x, y) \\<in> rel\\<^sup>+\"", "lemma Clos_Suc:\n  assumes \"(x, y) \\<in> Clos rel n\"\n  shows \"(x, y) \\<in> Clos rel (Suc n)\"", "theorem steps_Clos_equiv: \"(x, y) \\<in> steps rel n \\<longleftrightarrow> (x, y) \\<in> Clos rel n\"", "theorem transitive_closure_correctness:\n  assumes \"finite rel\"\n  shows \"transitive_closure rel = rel\\<^sup>+\"", "lemma steps_equiv: \"(x, y) \\<in> steps rel n \\<longleftrightarrow> Steps rel n (x, y)\""], "translations": [["", "lemma\n  \"steps rel (Suc n) =\n    steps rel n \\<union> {(x, y). x \\<in> preds (steps rel n) n \\<and> y \\<in> succs (steps rel n) n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. steps rel (Suc n) =\n    steps rel n \\<union>\n    {(x, y).\n     x \\<in> preds (steps rel n) n \\<and> y \\<in> succs (steps rel n) n}", "by (simp add: preds_def succs_def)"], ["", "text \\<open>\n  The main function requires an upper bound for the iteration, which is left\n  unspecified here (via Hilbert's choice).\n\\<close>"], ["", "definition is_bound :: \"relation \\<Rightarrow> nat \\<Rightarrow> bool\"\n  where \"is_bound rel n \\<longleftrightarrow> (\\<forall>m \\<in> Field rel. m < n)\""], ["", "definition \"transitive_closure rel = steps rel (SOME n. is_bound rel n)\""], ["", "section \\<open>Correctness proof\\<close>"], ["", "subsection \\<open>Miscellaneous lemmas\\<close>"], ["", "lemma finite_bound:\n  assumes \"finite rel\"\n  shows \"\\<exists>n. is_bound rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. is_bound rel n", "using assms"], ["proof (prove)\nusing this:\n  finite rel\n\ngoal (1 subgoal):\n 1. \\<exists>n. is_bound rel n", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n. is_bound {} n\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>n. is_bound {} n\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. is_bound {} n", "by (simp add: is_bound_def)"], ["proof (state)\nthis:\n  \\<exists>n. is_bound {} n\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "case (insert p rel)"], ["proof (state)\nthis:\n  finite rel\n  p \\<notin> rel\n  \\<exists>n. is_bound rel n\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "then"], ["proof (chain)\npicking this:\n  finite rel\n  p \\<notin> rel\n  \\<exists>n. is_bound rel n", "obtain n where n: \"\\<forall>m \\<in> Field rel. m < n\""], ["proof (prove)\nusing this:\n  finite rel\n  p \\<notin> rel\n  \\<exists>n. is_bound rel n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>m\\<in>Field rel. m < n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding is_bound_def"], ["proof (prove)\nusing this:\n  finite rel\n  p \\<notin> rel\n  \\<exists>n. \\<forall>m\\<in>Field rel. m < n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<forall>m\\<in>Field rel. m < n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>m\\<in>Field rel. m < n\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "obtain x y where \"p = (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y. p = (x, y) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases p)"], ["proof (state)\nthis:\n  p = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "then"], ["proof (chain)\npicking this:\n  p = (x, y)", "have \"\\<forall>m \\<in> Field (insert p rel). m < max (Suc x) (max (Suc y) n)\""], ["proof (prove)\nusing this:\n  p = (x, y)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>Field (insert p rel). m < max (Suc x) (max (Suc y) n)", "using n"], ["proof (prove)\nusing this:\n  p = (x, y)\n  \\<forall>m\\<in>Field rel. m < n\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<in>Field (insert p rel). m < max (Suc x) (max (Suc y) n)", "by auto"], ["proof (state)\nthis:\n  \\<forall>m\\<in>Field (insert p rel). m < max (Suc x) (max (Suc y) n)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F; \\<exists>n. is_bound F n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. is_bound (insert x F) n", "then"], ["proof (chain)\npicking this:\n  \\<forall>m\\<in>Field (insert p rel). m < max (Suc x) (max (Suc y) n)", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m\\<in>Field (insert p rel). m < max (Suc x) (max (Suc y) n)\n\ngoal (1 subgoal):\n 1. \\<exists>n. is_bound (insert p rel) n", "unfolding is_bound_def"], ["proof (prove)\nusing this:\n  \\<forall>m\\<in>Field (insert p rel). m < max (Suc x) (max (Suc y) n)\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<forall>m\\<in>Field (insert p rel). m < n", "by blast"], ["proof (state)\nthis:\n  \\<exists>n. is_bound (insert p rel) n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma steps_Suc: \"(x, y) \\<in> steps rel (Suc n) \\<longleftrightarrow>\n  (x, y) \\<in> steps rel n \\<or> (x, n) \\<in> steps rel n \\<and> (n, y) \\<in> steps rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (Suc n)) =\n    ((x, y) \\<in> steps rel n \\<or>\n     (x, n) \\<in> steps rel n \\<and> (n, y) \\<in> steps rel n)", "by auto"], ["", "lemma steps_cases:\n  assumes \"(x, y) \\<in> steps rel (Suc n)\"\n  obtains (copy) \"(x, y) \\<in> steps rel n\"\n    | (step) \"(x, n) \\<in> steps rel n\" and \"(n, y) \\<in> steps rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y) \\<in> steps rel n \\<Longrightarrow> thesis;\n     \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y) \\<in> steps rel n \\<Longrightarrow> thesis;\n     \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma steps_rel: \"(x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> steps rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> steps rel n", "by (induct n) auto"], ["", "subsection \\<open>Bounded closure\\<close>"], ["", "text \\<open>\n  The bounded closure connects all transitive paths over elements below a\n  given bound. For an upper bound of the relation, this coincides with the\n  full transitive closure.\n\\<close>"], ["", "inductive_set Clos :: \"relation \\<Rightarrow> nat \\<Rightarrow> relation\"\n  for rel :: relation and n :: nat\nwhere\n  base: \"(x, y) \\<in> Clos rel n\" if \"(x, y) \\<in> rel\"\n| step: \"(x, y) \\<in> Clos rel n\" if \"(x, z) \\<in> Clos rel n\" and \"(z, y) \\<in> Clos rel n\" and \"z < n\""], ["", "theorem Clos_closure:\n  assumes \"is_bound rel n\"\n  shows \"(x, y) \\<in> Clos rel n \\<longleftrightarrow> (x, y) \\<in> rel\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> Clos rel n) = ((x, y) \\<in> rel\\<^sup>+)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> Clos rel n \\<Longrightarrow> (x, y) \\<in> rel\\<^sup>+\n 2. (x, y) \\<in> rel\\<^sup>+ \\<Longrightarrow> (x, y) \\<in> Clos rel n", "show \"(x, y) \\<in> rel\\<^sup>+\" if \"(x, y) \\<in> Clos rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> rel\\<^sup>+", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> rel\\<^sup>+", "by induct simp_all"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel n \\<Longrightarrow> (x, y) \\<in> rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> rel\\<^sup>+ \\<Longrightarrow> (x, y) \\<in> Clos rel n", "show \"(x, y) \\<in> Clos rel n\" if \"(x, y) \\<in> rel\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel n", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> rel\\<^sup>+\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel n", "proof (induct rule: trancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. (x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> Clos rel n\n 2. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "case (base y)"], ["proof (state)\nthis:\n  (x, y) \\<in> rel\n\ngoal (2 subgoals):\n 1. \\<And>y. (x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> Clos rel n\n 2. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> rel", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> rel\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel n", "by (rule Clos.base)"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "case (step y z)"], ["proof (state)\nthis:\n  (x, y) \\<in> rel\\<^sup>+\n  (y, z) \\<in> rel\n  (x, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "from \\<open>(y, z) \\<in> rel\\<close>"], ["proof (chain)\npicking this:\n  (y, z) \\<in> rel", "have 1: \"(y, z) \\<in> Clos rel n\""], ["proof (prove)\nusing this:\n  (y, z) \\<in> rel\n\ngoal (1 subgoal):\n 1. (y, z) \\<in> Clos rel n", "by (rule base)"], ["proof (state)\nthis:\n  (y, z) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "from \\<open>(y, z) \\<in> rel\\<close> and \\<open>is_bound rel n\\<close>"], ["proof (chain)\npicking this:\n  (y, z) \\<in> rel\n  is_bound rel n", "have 2: \"y < n\""], ["proof (prove)\nusing this:\n  (y, z) \\<in> rel\n  is_bound rel n\n\ngoal (1 subgoal):\n 1. y < n", "unfolding is_bound_def Field_def"], ["proof (prove)\nusing this:\n  (y, z) \\<in> rel\n  \\<forall>m\\<in>Domain rel \\<union> Range rel. m < n\n\ngoal (1 subgoal):\n 1. y < n", "by blast"], ["proof (state)\nthis:\n  y < n\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(x, y) \\<in> rel\\<^sup>+; (y, z) \\<in> rel;\n        (x, y) \\<in> Clos rel n\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> Clos rel n", "from step(3) 1 2"], ["proof (chain)\npicking this:\n  (x, y) \\<in> Clos rel n\n  (y, z) \\<in> Clos rel n\n  y < n", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Clos rel n\n  (y, z) \\<in> Clos rel n\n  y < n\n\ngoal (1 subgoal):\n 1. (x, z) \\<in> Clos rel n", "by (rule Clos.step)"], ["proof (state)\nthis:\n  (x, z) \\<in> Clos rel n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<in> rel\\<^sup>+ \\<Longrightarrow> (x, y) \\<in> Clos rel n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Clos_Suc:\n  assumes \"(x, y) \\<in> Clos rel n\"\n  shows \"(x, y) \\<in> Clos rel (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n)", "using assms"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n)", "by induct (auto intro: Clos.intros)"], ["", "text \\<open>\n  In each step of the algorithm the approximated relation is exactly the\n  bounded closure.\n\\<close>"], ["", "theorem steps_Clos_equiv: \"(x, y) \\<in> steps rel n \\<longleftrightarrow> (x, y) \\<in> Clos rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel n) = ((x, y) \\<in> Clos rel n)", "proof (induct n arbitrary: x y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. ((x, y) \\<in> steps rel 0) = ((x, y) \\<in> Clos rel 0)\n 2. \\<And>n x y.\n       (\\<And>x y.\n           ((x, y) \\<in> steps rel n) =\n           ((x, y) \\<in> Clos rel n)) \\<Longrightarrow>\n       ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x y. ((x, y) \\<in> steps rel 0) = ((x, y) \\<in> Clos rel 0)\n 2. \\<And>n x y.\n       (\\<And>x y.\n           ((x, y) \\<in> steps rel n) =\n           ((x, y) \\<in> Clos rel n)) \\<Longrightarrow>\n       ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel 0) = ((x, y) \\<in> Clos rel 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel 0 \\<Longrightarrow> (x, y) \\<in> Clos rel 0\n 2. (x, y) \\<in> Clos rel 0 \\<Longrightarrow> (x, y) \\<in> steps rel 0", "show \"(x, y) \\<in> Clos rel 0\" if \"(x, y) \\<in> steps rel 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel 0", "from that"], ["proof (chain)\npicking this:\n  (x, y) \\<in> steps rel 0", "have \"(x, y) \\<in> rel\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> steps rel 0\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> rel", "by simp"], ["proof (state)\nthis:\n  (x, y) \\<in> rel\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel 0", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> rel", "show ?thesis"], ["proof (prove)\nusing this:\n  (x, y) \\<in> rel\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel 0", "by (rule Clos.base)"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel 0 \\<Longrightarrow> (x, y) \\<in> Clos rel 0\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel 0 \\<Longrightarrow> (x, y) \\<in> steps rel 0", "show \"(x, y) \\<in> steps rel 0\" if \"(x, y) \\<in> Clos rel 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel 0", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Clos rel 0\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel 0", "by cases simp_all"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel 0 \\<Longrightarrow> (x, y) \\<in> steps rel 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((x, y) \\<in> steps rel 0) = ((x, y) \\<in> Clos rel 0)\n\ngoal (1 subgoal):\n 1. \\<And>n x y.\n       (\\<And>x y.\n           ((x, y) \\<in> steps rel n) =\n           ((x, y) \\<in> Clos rel n)) \\<Longrightarrow>\n       ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x y.\n       (\\<And>x y.\n           ((x, y) \\<in> steps rel n) =\n           ((x, y) \\<in> Clos rel n)) \\<Longrightarrow>\n       ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))", "case (Suc n)"], ["proof (state)\nthis:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n\ngoal (1 subgoal):\n 1. \\<And>n x y.\n       (\\<And>x y.\n           ((x, y) \\<in> steps rel n) =\n           ((x, y) \\<in> Clos rel n)) \\<Longrightarrow>\n       ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel (Suc n) \\<Longrightarrow>\n    (x, y) \\<in> Clos rel (Suc n)\n 2. (x, y) \\<in> Clos rel (Suc n) \\<Longrightarrow>\n    (x, y) \\<in> steps rel (Suc n)", "show \"(x, y) \\<in> Clos rel (Suc n)\" if \"(x, y) \\<in> steps rel (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n)", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n)", "proof (cases rule: steps_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)\n 2. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "case copy"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel n\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)\n 2. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "with Suc(1)"], ["proof (chain)\npicking this:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n  (x, y) \\<in> steps rel n", "have \"(x, y) \\<in> Clos rel n\""], ["proof (prove)\nusing this:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n  (x, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel n", ".."], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel n\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)\n 2. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> Clos rel n", "show ?thesis"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n)", "by (rule Clos_Suc)"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel (Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "case step"], ["proof (state)\nthis:\n  (x, n) \\<in> steps rel n\n  (n, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "with Suc"], ["proof (chain)\npicking this:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n  (x, n) \\<in> steps rel n\n  (n, y) \\<in> steps rel n", "have \"(x, n) \\<in> Clos rel n\" and \"(n, y) \\<in> Clos rel n\""], ["proof (prove)\nusing this:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n  (x, n) \\<in> steps rel n\n  (n, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. (x, n) \\<in> Clos rel n &&& (n, y) \\<in> Clos rel n", "by simp_all"], ["proof (state)\nthis:\n  (x, n) \\<in> Clos rel n\n  (n, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "then"], ["proof (chain)\npicking this:\n  (x, n) \\<in> Clos rel n\n  (n, y) \\<in> Clos rel n", "have \"(x, n) \\<in> Clos rel (Suc n)\" and \"(n, y) \\<in> Clos rel (Suc n)\""], ["proof (prove)\nusing this:\n  (x, n) \\<in> Clos rel n\n  (n, y) \\<in> Clos rel n\n\ngoal (1 subgoal):\n 1. (x, n) \\<in> Clos rel (Suc n) &&& (n, y) \\<in> Clos rel (Suc n)", "by (simp_all add: Clos_Suc)"], ["proof (state)\nthis:\n  (x, n) \\<in> Clos rel (Suc n)\n  (n, y) \\<in> Clos rel (Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> Clos rel (Suc n)", "then"], ["proof (chain)\npicking this:\n  (x, n) \\<in> Clos rel (Suc n)\n  (n, y) \\<in> Clos rel (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (x, n) \\<in> Clos rel (Suc n)\n  (n, y) \\<in> Clos rel (Suc n)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n)", "by (rule Clos.step) simp"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel (Suc n) \\<Longrightarrow>\n  (x, y) \\<in> Clos rel (Suc n)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> Clos rel (Suc n) \\<Longrightarrow>\n    (x, y) \\<in> steps rel (Suc n)", "show \"(x, y) \\<in> steps rel (Suc n)\" if \"(x, y) \\<in> Clos rel (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel (Suc n)", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> Clos rel (Suc n)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel (Suc n)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)\n 2. \\<And>x z y.\n       \\<lbrakk>(x, z) \\<in> Clos rel (Suc n);\n        (x, z) \\<in> steps rel (Suc n); (z, y) \\<in> Clos rel (Suc n);\n        (z, y) \\<in> steps rel (Suc n); z < Suc n\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)", "case (base x y)"], ["proof (state)\nthis:\n  (x, y) \\<in> rel\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       (x, y) \\<in> rel \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)\n 2. \\<And>x z y.\n       \\<lbrakk>(x, z) \\<in> Clos rel (Suc n);\n        (x, z) \\<in> steps rel (Suc n); (z, y) \\<in> Clos rel (Suc n);\n        (z, y) \\<in> steps rel (Suc n); z < Suc n\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> rel", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> rel\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel (Suc n)", "by (simp add: steps_rel)"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>(x, z) \\<in> Clos rel (Suc n);\n        (x, z) \\<in> steps rel (Suc n); (z, y) \\<in> Clos rel (Suc n);\n        (z, y) \\<in> steps rel (Suc n); z < Suc n\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>(x, z) \\<in> Clos rel (Suc n);\n        (x, z) \\<in> steps rel (Suc n); (z, y) \\<in> Clos rel (Suc n);\n        (z, y) \\<in> steps rel (Suc n); z < Suc n\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)", "case (step x z y)"], ["proof (state)\nthis:\n  (x, z) \\<in> Clos rel (Suc n)\n  (x, z) \\<in> steps rel (Suc n)\n  (z, y) \\<in> Clos rel (Suc n)\n  (z, y) \\<in> steps rel (Suc n)\n  z < Suc n\n\ngoal (1 subgoal):\n 1. \\<And>x z y.\n       \\<lbrakk>(x, z) \\<in> Clos rel (Suc n);\n        (x, z) \\<in> steps rel (Suc n); (z, y) \\<in> Clos rel (Suc n);\n        (z, y) \\<in> steps rel (Suc n); z < Suc n\\<rbrakk>\n       \\<Longrightarrow> (x, y) \\<in> steps rel (Suc n)", "with Suc"], ["proof (chain)\npicking this:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n  (x, z) \\<in> Clos rel (Suc n)\n  (x, z) \\<in> steps rel (Suc n)\n  (z, y) \\<in> Clos rel (Suc n)\n  (z, y) \\<in> steps rel (Suc n)\n  z < Suc n", "show ?case"], ["proof (prove)\nusing this:\n  ((?x, ?y) \\<in> steps rel n) = ((?x, ?y) \\<in> Clos rel n)\n  (x, z) \\<in> Clos rel (Suc n)\n  (x, z) \\<in> steps rel (Suc n)\n  (z, y) \\<in> Clos rel (Suc n)\n  (z, y) \\<in> steps rel (Suc n)\n  z < Suc n\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel (Suc n)", "by (auto simp add: steps_Suc less_Suc_eq intro: Clos.step)"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<in> Clos rel (Suc n) \\<Longrightarrow>\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((x, y) \\<in> steps rel (Suc n)) = ((x, y) \\<in> Clos rel (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Main theorem\\<close>"], ["", "text \\<open>\n  The main theorem follows immediately from the key observations above. Note\n  that the assumption of finiteness gives a bound for the iteration, although\n  the details are left unspecified. A concrete implementation could choose the\n  the maximum element + 1, or iterate directly over the data structures for\n  the @{term preds} and @{term succs} implementation.\n\\<close>"], ["", "theorem transitive_closure_correctness:\n  assumes \"finite rel\"\n  shows \"transitive_closure rel = rel\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transitive_closure rel = rel\\<^sup>+", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. transitive_closure rel = rel\\<^sup>+", "let ?N = \"SOME n. is_bound rel n\""], ["proof (state)\ngoal (1 subgoal):\n 1. transitive_closure rel = rel\\<^sup>+", "have is_bound: \"is_bound rel ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bound rel (SOME n. is_bound rel n)", "by (rule someI_ex) (rule finite_bound [OF \\<open>finite rel\\<close>])"], ["proof (state)\nthis:\n  is_bound rel (SOME n. is_bound rel n)\n\ngoal (1 subgoal):\n 1. transitive_closure rel = rel\\<^sup>+", "have \"(x, y) \\<in> steps rel ?N \\<longleftrightarrow> (x, y) \\<in> rel\\<^sup>+\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "have \"(x, y) \\<in> steps rel ?N \\<longleftrightarrow> (x, y) \\<in> Clos rel ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> Clos rel (SOME n. is_bound rel n))", "by (rule steps_Clos_equiv)"], ["proof (state)\nthis:\n  ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((x, y) \\<in> Clos rel (SOME n. is_bound rel n))\n\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "also"], ["proof (state)\nthis:\n  ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((x, y) \\<in> Clos rel (SOME n. is_bound rel n))\n\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "have \"\\<dots> \\<longleftrightarrow> (x, y) \\<in> rel\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> Clos rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "using is_bound"], ["proof (prove)\nusing this:\n  is_bound rel (SOME n. is_bound rel n)\n\ngoal (1 subgoal):\n 1. ((x, y) \\<in> Clos rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "by (rule Clos_closure)"], ["proof (state)\nthis:\n  ((x, y) \\<in> Clos rel (SOME n. is_bound rel n)) =\n  ((x, y) \\<in> rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "finally"], ["proof (chain)\npicking this:\n  ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((x, y) \\<in> rel\\<^sup>+)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((x, y) \\<in> rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n    ((x, y) \\<in> rel\\<^sup>+)", "."], ["proof (state)\nthis:\n  ((x, y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((x, y) \\<in> rel\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((?x, ?y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((?x, ?y) \\<in> rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. transitive_closure rel = rel\\<^sup>+", "then"], ["proof (chain)\npicking this:\n  ((?x, ?y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((?x, ?y) \\<in> rel\\<^sup>+)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((?x, ?y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((?x, ?y) \\<in> rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. transitive_closure rel = rel\\<^sup>+", "unfolding transitive_closure_def"], ["proof (prove)\nusing this:\n  ((?x, ?y) \\<in> steps rel (SOME n. is_bound rel n)) =\n  ((?x, ?y) \\<in> rel\\<^sup>+)\n\ngoal (1 subgoal):\n 1. steps rel (Eps (is_bound rel)) = rel\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  transitive_closure rel = rel\\<^sup>+\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Alternative formulation\\<close>"], ["", "text \\<open>\n  The core of the algorithm may be expressed more declaratively as follows,\n  using an inductive definition to imitate a logic-program. This is equivalent\n  to the function specification @{term steps} from above.\n\\<close>"], ["", "inductive Steps :: \"relation \\<Rightarrow> nat \\<Rightarrow> nat \\<times> nat \\<Rightarrow> bool\"\n  for rel :: relation\nwhere\n  base: \"Steps rel 0 (x, y)\" if \"(x, y) \\<in> rel\"\n| copy: \"Steps rel (Suc n) (x, y)\" if \"Steps rel n (x, y)\"\n| step: \"Steps rel (Suc n) (x, y)\" if \"Steps rel n (x, n)\" and \"Steps rel n (n, y)\""], ["", "lemma steps_equiv: \"(x, y) \\<in> steps rel n \\<longleftrightarrow> Steps rel n (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> steps rel n) = Steps rel n (x, y)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (x, y)\n 2. Steps rel n (x, y) \\<Longrightarrow> (x, y) \\<in> steps rel n", "show \"Steps rel n (x, y)\" if \"(x, y) \\<in> steps rel n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Steps rel n (x, y)", "using that"], ["proof (prove)\nusing this:\n  (x, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. Steps rel n (x, y)", "proof (induct n arbitrary: x y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> steps rel 0 \\<Longrightarrow> Steps rel 0 (x, y)\n 2. \\<And>n x y.\n       \\<lbrakk>\\<And>x y.\n                   (x, y) \\<in> steps rel n \\<Longrightarrow>\n                   Steps rel n (x, y);\n        (x, y) \\<in> steps rel (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Steps rel (Suc n) (x, y)", "case 0"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel 0\n\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> steps rel 0 \\<Longrightarrow> Steps rel 0 (x, y)\n 2. \\<And>n x y.\n       \\<lbrakk>\\<And>x y.\n                   (x, y) \\<in> steps rel n \\<Longrightarrow>\n                   Steps rel n (x, y);\n        (x, y) \\<in> steps rel (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Steps rel (Suc n) (x, y)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> steps rel 0", "have \"(x, y) \\<in> rel\""], ["proof (prove)\nusing this:\n  (x, y) \\<in> steps rel 0\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> rel", "by simp"], ["proof (state)\nthis:\n  (x, y) \\<in> rel\n\ngoal (2 subgoals):\n 1. \\<And>x y. (x, y) \\<in> steps rel 0 \\<Longrightarrow> Steps rel 0 (x, y)\n 2. \\<And>n x y.\n       \\<lbrakk>\\<And>x y.\n                   (x, y) \\<in> steps rel n \\<Longrightarrow>\n                   Steps rel n (x, y);\n        (x, y) \\<in> steps rel (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Steps rel (Suc n) (x, y)", "then"], ["proof (chain)\npicking this:\n  (x, y) \\<in> rel", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> rel\n\ngoal (1 subgoal):\n 1. Steps rel 0 (x, y)", "by (rule base)"], ["proof (state)\nthis:\n  Steps rel 0 (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>n x y.\n       \\<lbrakk>\\<And>x y.\n                   (x, y) \\<in> steps rel n \\<Longrightarrow>\n                   Steps rel n (x, y);\n        (x, y) \\<in> steps rel (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Steps rel (Suc n) (x, y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x y.\n       \\<lbrakk>\\<And>x y.\n                   (x, y) \\<in> steps rel n \\<Longrightarrow>\n                   Steps rel n (x, y);\n        (x, y) \\<in> steps rel (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Steps rel (Suc n) (x, y)", "case (Suc n)"], ["proof (state)\nthis:\n  (?x, ?y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (?x, ?y)\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n x y.\n       \\<lbrakk>\\<And>x y.\n                   (x, y) \\<in> steps rel n \\<Longrightarrow>\n                   Steps rel n (x, y);\n        (x, y) \\<in> steps rel (Suc n)\\<rbrakk>\n       \\<Longrightarrow> Steps rel (Suc n) (x, y)", "from Suc(2)"], ["proof (chain)\npicking this:\n  (x, y) \\<in> steps rel (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  (x, y) \\<in> steps rel (Suc n)\n\ngoal (1 subgoal):\n 1. Steps rel (Suc n) (x, y)", "proof (cases rule: steps_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> Steps rel (Suc n) (x, y)\n 2. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "case copy"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel n\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> Steps rel (Suc n) (x, y)\n 2. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "with Suc(1)"], ["proof (chain)\npicking this:\n  (?x, ?y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (?x, ?y)\n  (x, y) \\<in> steps rel n", "have \"Steps rel n (x, y)\""], ["proof (prove)\nusing this:\n  (?x, ?y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (?x, ?y)\n  (x, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. Steps rel n (x, y)", "."], ["proof (state)\nthis:\n  Steps rel n (x, y)\n\ngoal (2 subgoals):\n 1. (x, y) \\<in> steps rel n \\<Longrightarrow> Steps rel (Suc n) (x, y)\n 2. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "then"], ["proof (chain)\npicking this:\n  Steps rel n (x, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  Steps rel n (x, y)\n\ngoal (1 subgoal):\n 1. Steps rel (Suc n) (x, y)", "by (rule Steps.copy)"], ["proof (state)\nthis:\n  Steps rel (Suc n) (x, y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "case step"], ["proof (state)\nthis:\n  (x, n) \\<in> steps rel n\n  (n, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "with Suc(1)"], ["proof (chain)\npicking this:\n  (?x, ?y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (?x, ?y)\n  (x, n) \\<in> steps rel n\n  (n, y) \\<in> steps rel n", "have \"Steps rel n (x, n)\" and \"Steps rel n (n, y)\""], ["proof (prove)\nusing this:\n  (?x, ?y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (?x, ?y)\n  (x, n) \\<in> steps rel n\n  (n, y) \\<in> steps rel n\n\ngoal (1 subgoal):\n 1. Steps rel n (x, n) &&& Steps rel n (n, y)", "by simp_all"], ["proof (state)\nthis:\n  Steps rel n (x, n)\n  Steps rel n (n, y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, n) \\<in> steps rel n; (n, y) \\<in> steps rel n\\<rbrakk>\n    \\<Longrightarrow> Steps rel (Suc n) (x, y)", "then"], ["proof (chain)\npicking this:\n  Steps rel n (x, n)\n  Steps rel n (n, y)", "show ?thesis"], ["proof (prove)\nusing this:\n  Steps rel n (x, n)\n  Steps rel n (n, y)\n\ngoal (1 subgoal):\n 1. Steps rel (Suc n) (x, y)", "by (rule Steps.step)"], ["proof (state)\nthis:\n  Steps rel (Suc n) (x, y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Steps rel (Suc n) (x, y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x, y) \\<in> steps rel n \\<Longrightarrow> Steps rel n (x, y)\n\ngoal (1 subgoal):\n 1. Steps rel n (x, y) \\<Longrightarrow> (x, y) \\<in> steps rel n", "show \"(x, y) \\<in> steps rel n\" if \"Steps rel n (x, y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel n", "using that"], ["proof (prove)\nusing this:\n  Steps rel n (x, y)\n\ngoal (1 subgoal):\n 1. (x, y) \\<in> steps rel n", "by induct simp_all"], ["proof (state)\nthis:\n  Steps rel n (x, y) \\<Longrightarrow> (x, y) \\<in> steps rel n\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}