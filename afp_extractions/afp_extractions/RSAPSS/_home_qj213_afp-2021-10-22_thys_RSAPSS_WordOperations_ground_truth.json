{"file_name": "/home/qj213/afp-2021-10-22/thys/RSAPSS/WordOperations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/RSAPSS", "problem_names": ["lemma selectlenhelp: \"length (selecthelp l i) = (i + 1)\"", "lemma selectlenhelp2:  \"\\<And>i. \\<forall>l j. \\<exists>k. select l i j = select k 0 (j - i)\"", "lemma selectlenhelp3: \"\\<forall>j. select l 0 j = selecthelp l j\"", "lemma selectlen: \"length (select l i j) = j - i + 1\"", "lemma addmod32len: \"\\<And> a b. length (addmod32 a b) = 32\""], "translations": [["", "lemma selectlenhelp: \"length (selecthelp l i) = (i + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (selecthelp l i) = i + 1", "proof (induct i arbitrary: l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l. length (selecthelp l 0) = 0 + 1\n 2. \\<And>i l.\n       (\\<And>l. length (selecthelp l i) = i + 1) \\<Longrightarrow>\n       length (selecthelp l (Suc i)) = Suc i + 1", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>l. length (selecthelp l 0) = 0 + 1\n 2. \\<And>i l.\n       (\\<And>l. length (selecthelp l i) = i + 1) \\<Longrightarrow>\n       length (selecthelp l (Suc i)) = Suc i + 1", "show \"length (selecthelp l 0) = 0 + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (selecthelp l 0) = 0 + 1", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> length (selecthelp l 0) = 0 + 1\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "case Nil"], ["proof (state)\nthis:\n  l = []\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> length (selecthelp l 0) = 0 + 1\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "then"], ["proof (chain)\npicking this:\n  l = []", "have \"selecthelp l 0 = [Zero]\""], ["proof (prove)\nusing this:\n  l = []\n\ngoal (1 subgoal):\n 1. selecthelp l 0 = [\\<zero>]", "by simp"], ["proof (state)\nthis:\n  selecthelp l 0 = [\\<zero>]\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> length (selecthelp l 0) = 0 + 1\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "then"], ["proof (chain)\npicking this:\n  selecthelp l 0 = [\\<zero>]", "show ?thesis"], ["proof (prove)\nusing this:\n  selecthelp l 0 = [\\<zero>]\n\ngoal (1 subgoal):\n 1. length (selecthelp l 0) = 0 + 1", "by simp"], ["proof (state)\nthis:\n  length (selecthelp l 0) = 0 + 1\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "case (Cons a as)"], ["proof (state)\nthis:\n  l = a # as\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "then"], ["proof (chain)\npicking this:\n  l = a # as", "have \"selecthelp l 0 = [a]\""], ["proof (prove)\nusing this:\n  l = a # as\n\ngoal (1 subgoal):\n 1. selecthelp l 0 = [a]", "by simp"], ["proof (state)\nthis:\n  selecthelp l 0 = [a]\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> length (selecthelp l 0) = 0 + 1", "then"], ["proof (chain)\npicking this:\n  selecthelp l 0 = [a]", "show ?thesis"], ["proof (prove)\nusing this:\n  selecthelp l 0 = [a]\n\ngoal (1 subgoal):\n 1. length (selecthelp l 0) = 0 + 1", "by simp"], ["proof (state)\nthis:\n  length (selecthelp l 0) = 0 + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  length (selecthelp l 0) = 0 + 1\n\ngoal (1 subgoal):\n 1. \\<And>i l.\n       (\\<And>l. length (selecthelp l i) = i + 1) \\<Longrightarrow>\n       length (selecthelp l (Suc i)) = Suc i + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i l.\n       (\\<And>l. length (selecthelp l i) = i + 1) \\<Longrightarrow>\n       length (selecthelp l (Suc i)) = Suc i + 1", "case (Suc x)"], ["proof (state)\nthis:\n  length (selecthelp ?l x) = x + 1\n\ngoal (1 subgoal):\n 1. \\<And>i l.\n       (\\<And>l. length (selecthelp l i) = i + 1) \\<Longrightarrow>\n       length (selecthelp l (Suc i)) = Suc i + 1", "show \"length (selecthelp l (Suc x)) = (Suc x) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (selecthelp l (Suc x)) = Suc x + 1", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> length (selecthelp l (Suc x)) = Suc x + 1\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "case Nil"], ["proof (state)\nthis:\n  l = []\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> length (selecthelp l (Suc x)) = Suc x + 1\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "then"], ["proof (chain)\npicking this:\n  l = []", "have \"selecthelp l (Suc x) = Zero # selecthelp l x\""], ["proof (prove)\nusing this:\n  l = []\n\ngoal (1 subgoal):\n 1. selecthelp l (Suc x) = \\<zero> # selecthelp l x", "by simp"], ["proof (state)\nthis:\n  selecthelp l (Suc x) = \\<zero> # selecthelp l x\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> length (selecthelp l (Suc x)) = Suc x + 1\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "then"], ["proof (chain)\npicking this:\n  selecthelp l (Suc x) = \\<zero> # selecthelp l x", "show \"length (selecthelp l (Suc x)) = Suc x + 1\""], ["proof (prove)\nusing this:\n  selecthelp l (Suc x) = \\<zero> # selecthelp l x\n\ngoal (1 subgoal):\n 1. length (selecthelp l (Suc x)) = Suc x + 1", "using Suc"], ["proof (prove)\nusing this:\n  selecthelp l (Suc x) = \\<zero> # selecthelp l x\n  length (selecthelp ?l x) = x + 1\n\ngoal (1 subgoal):\n 1. length (selecthelp l (Suc x)) = Suc x + 1", "by simp"], ["proof (state)\nthis:\n  length (selecthelp l (Suc x)) = Suc x + 1\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "case (Cons a b)"], ["proof (state)\nthis:\n  l = a # b\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "then"], ["proof (chain)\npicking this:\n  l = a # b", "have \"selecthelp l (Suc x) = a # selecthelp b x\""], ["proof (prove)\nusing this:\n  l = a # b\n\ngoal (1 subgoal):\n 1. selecthelp l (Suc x) = a # selecthelp b x", "by simp"], ["proof (state)\nthis:\n  selecthelp l (Suc x) = a # selecthelp b x\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "then"], ["proof (chain)\npicking this:\n  selecthelp l (Suc x) = a # selecthelp b x", "have \"length (selecthelp l (Suc x)) = 1 + length (selecthelp b x)\""], ["proof (prove)\nusing this:\n  selecthelp l (Suc x) = a # selecthelp b x\n\ngoal (1 subgoal):\n 1. length (selecthelp l (Suc x)) = 1 + length (selecthelp b x)", "by simp"], ["proof (state)\nthis:\n  length (selecthelp l (Suc x)) = 1 + length (selecthelp b x)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       length (selecthelp l (Suc x)) = Suc x + 1", "then"], ["proof (chain)\npicking this:\n  length (selecthelp l (Suc x)) = 1 + length (selecthelp b x)", "show \"length (selecthelp l (Suc x)) = Suc x + 1\""], ["proof (prove)\nusing this:\n  length (selecthelp l (Suc x)) = 1 + length (selecthelp b x)\n\ngoal (1 subgoal):\n 1. length (selecthelp l (Suc x)) = Suc x + 1", "using Suc"], ["proof (prove)\nusing this:\n  length (selecthelp l (Suc x)) = 1 + length (selecthelp b x)\n  length (selecthelp ?l x) = x + 1\n\ngoal (1 subgoal):\n 1. length (selecthelp l (Suc x)) = Suc x + 1", "by simp"], ["proof (state)\nthis:\n  length (selecthelp l (Suc x)) = Suc x + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  length (selecthelp l (Suc x)) = Suc x + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma selectlenhelp2:  \"\\<And>i. \\<forall>l j. \\<exists>k. select l i j = select k 0 (j - i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. \\<forall>l j. \\<exists>k. select l i j = select k 0 (j - i)", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i l j. \\<exists>k. select l i j = select k 0 (j - i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i l j. \\<exists>k. select l i j = select k 0 (j - i)", "show \"\\<And>l j. \\<exists>k. select l i j = select k 0 (j - i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l j. \\<exists>k. select l i j = select k 0 (j - i)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l j. \\<exists>k. select l 0 j = select k 0 (j - 0)\n 2. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "fix l and j"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l j. \\<exists>k. select l 0 j = select k 0 (j - 0)\n 2. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "have \"select l 0 j = select l 0 (j-(0::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. select l 0 j = select l 0 (j - 0)", "by simp"], ["proof (state)\nthis:\n  select l 0 j = select l 0 (j - 0)\n\ngoal (2 subgoals):\n 1. \\<And>l j. \\<exists>k. select l 0 j = select k 0 (j - 0)\n 2. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "then"], ["proof (chain)\npicking this:\n  select l 0 j = select l 0 (j - 0)", "show \"\\<exists>k. select l 0 j = select k 0 (j - (0::nat))\""], ["proof (prove)\nusing this:\n  select l 0 j = select l 0 (j - 0)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select l 0 j = select k 0 (j - 0)", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. select l 0 j = select k 0 (j - 0)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "case (Suc x)"], ["proof (state)\nthis:\n  \\<exists>k. select ?l x ?j = select k 0 (?j - x)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "have b: \"select l (Suc x) j = select (tl l) x (j-(1::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. select l (Suc x) j = select (tl l) x (j - 1)", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l (Suc x) j = select (tl l) x (j - 1)\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "case Nil"], ["proof (state)\nthis:\n  l = []\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l (Suc x) j = select (tl l) x (j - 1)\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "then"], ["proof (chain)\npicking this:\n  l = []", "have \"select l (Suc x) j = select l x (j-(1::nat))\""], ["proof (prove)\nusing this:\n  l = []\n\ngoal (1 subgoal):\n 1. select l (Suc x) j = select l x (j - 1)", "by simp"], ["proof (state)\nthis:\n  select l (Suc x) j = select l x (j - 1)\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l (Suc x) j = select (tl l) x (j - 1)\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "moreover"], ["proof (state)\nthis:\n  select l (Suc x) j = select l x (j - 1)\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l (Suc x) j = select (tl l) x (j - 1)\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "have \"tl l = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tl l = l", "using Nil"], ["proof (prove)\nusing this:\n  l = []\n\ngoal (1 subgoal):\n 1. tl l = l", "by simp"], ["proof (state)\nthis:\n  tl l = l\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l (Suc x) j = select (tl l) x (j - 1)\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "ultimately"], ["proof (chain)\npicking this:\n  select l (Suc x) j = select l x (j - 1)\n  tl l = l", "show ?thesis"], ["proof (prove)\nusing this:\n  select l (Suc x) j = select l x (j - 1)\n  tl l = l\n\ngoal (1 subgoal):\n 1. select l (Suc x) j = select (tl l) x (j - 1)", "by (simp)"], ["proof (state)\nthis:\n  select l (Suc x) j = select (tl l) x (j - 1)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "case (Cons head tail)"], ["proof (state)\nthis:\n  l = head # tail\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "then"], ["proof (chain)\npicking this:\n  l = head # tail", "have \"select l (Suc x) j = select tail x (j-(1::nat))\""], ["proof (prove)\nusing this:\n  l = head # tail\n\ngoal (1 subgoal):\n 1. select l (Suc x) j = select tail x (j - 1)", "by simp"], ["proof (state)\nthis:\n  select l (Suc x) j = select tail x (j - 1)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "moreover"], ["proof (state)\nthis:\n  select l (Suc x) j = select tail x (j - 1)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "have \"tail = tl l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tail = tl l", "using Cons"], ["proof (prove)\nusing this:\n  l = head # tail\n\ngoal (1 subgoal):\n 1. tail = tl l", "by simp"], ["proof (state)\nthis:\n  tail = tl l\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow>\n       select l (Suc x) j = select (tl l) x (j - 1)", "ultimately"], ["proof (chain)\npicking this:\n  select l (Suc x) j = select tail x (j - 1)\n  tail = tl l", "show ?thesis"], ["proof (prove)\nusing this:\n  select l (Suc x) j = select tail x (j - 1)\n  tail = tl l\n\ngoal (1 subgoal):\n 1. select l (Suc x) j = select (tl l) x (j - 1)", "by simp"], ["proof (state)\nthis:\n  select l (Suc x) j = select (tl l) x (j - 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  select l (Suc x) j = select (tl l) x (j - 1)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "have \"\\<exists>k. select l x j = select k 0 (j - (x::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. select l x j = select k 0 (j - x)", "using Suc"], ["proof (prove)\nusing this:\n  \\<exists>k. select ?l x ?j = select k 0 (?j - x)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select l x j = select k 0 (j - x)", "by simp"], ["proof (state)\nthis:\n  \\<exists>k. select l x j = select k 0 (j - x)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "moreover"], ["proof (state)\nthis:\n  \\<exists>k. select l x j = select k 0 (j - x)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "have  \"\\<exists>k. select (tl l) x (j-(1::nat)) = select k 0 (j-(1::nat)-(x::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)", "using Suc[of \"tl l\" \"j-(1::nat)\"]"], ["proof (prove)\nusing this:\n  \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>k. select l x j = select k 0 (j - x)\n  \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)", "have \"\\<exists>k. select l (Suc x) j = select k 0 (j-(1::nat) - (x::nat))\""], ["proof (prove)\nusing this:\n  \\<exists>k. select l x j = select k 0 (j - x)\n  \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select l (Suc x) j = select k 0 (j - 1 - x)", "using b"], ["proof (prove)\nusing this:\n  \\<exists>k. select l x j = select k 0 (j - x)\n  \\<exists>k. select (tl l) x (j - 1) = select k 0 (j - 1 - x)\n  select l (Suc x) j = select (tl l) x (j - 1)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select l (Suc x) j = select k 0 (j - 1 - x)", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. select l (Suc x) j = select k 0 (j - 1 - x)\n\ngoal (1 subgoal):\n 1. \\<And>i l j.\n       (\\<And>l j.\n           \\<exists>k. select l i j = select k 0 (j - i)) \\<Longrightarrow>\n       \\<exists>k. select l (Suc i) j = select k 0 (j - Suc i)", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. select l (Suc x) j = select k 0 (j - 1 - x)", "show \"\\<exists>k. select l (Suc x) j = select k 0 (j - Suc x)\""], ["proof (prove)\nusing this:\n  \\<exists>k. select l (Suc x) j = select k 0 (j - 1 - x)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select l (Suc x) j = select k 0 (j - Suc x)", "by simp"], ["proof (state)\nthis:\n  \\<exists>k. select l (Suc x) j = select k 0 (j - Suc x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k. select ?l i ?j = select k 0 (?j - i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma selectlenhelp3: \"\\<forall>j. select l 0 j = selecthelp l j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j. select l 0 j = selecthelp l j", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. select l 0 j = selecthelp l j", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. select l 0 j = selecthelp l j", "show \"select l 0 j = selecthelp l j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. select l 0 j = selecthelp l j", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l 0 j = selecthelp l j\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow> select l 0 j = selecthelp l j", "case Nil"], ["proof (state)\nthis:\n  l = []\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l 0 j = selecthelp l j\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow> select l 0 j = selecthelp l j", "assume \"l=[]\""], ["proof (state)\nthis:\n  l = []\n\ngoal (2 subgoals):\n 1. l = [] \\<Longrightarrow> select l 0 j = selecthelp l j\n 2. \\<And>a list.\n       l = a # list \\<Longrightarrow> select l 0 j = selecthelp l j", "then"], ["proof (chain)\npicking this:\n  l = []", "show \"select l 0 j = selecthelp l j\""], ["proof (prove)\nusing this:\n  l = []\n\ngoal (1 subgoal):\n 1. select l 0 j = selecthelp l j", "by simp"], ["proof (state)\nthis:\n  select l 0 j = selecthelp l j\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> select l 0 j = selecthelp l j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> select l 0 j = selecthelp l j", "case (Cons a b)"], ["proof (state)\nthis:\n  l = a # b\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       l = a # list \\<Longrightarrow> select l 0 j = selecthelp l j", "then"], ["proof (chain)\npicking this:\n  l = a # b", "show \"select l 0 j = selecthelp l j\""], ["proof (prove)\nusing this:\n  l = a # b\n\ngoal (1 subgoal):\n 1. select l 0 j = selecthelp l j", "by simp"], ["proof (state)\nthis:\n  select l 0 j = selecthelp l j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  select l 0 j = selecthelp l j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma selectlen: \"length (select l i j) = j - i + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "from selectlenhelp2"], ["proof (chain)\npicking this:\n  \\<forall>l j. \\<exists>k. select l ?i j = select k 0 (j - ?i)", "have \"\\<exists>k. select l i j = select k 0 (j-i)\""], ["proof (prove)\nusing this:\n  \\<forall>l j. \\<exists>k. select l ?i j = select k 0 (j - ?i)\n\ngoal (1 subgoal):\n 1. \\<exists>k. select l i j = select k 0 (j - i)", "by simp"], ["proof (state)\nthis:\n  \\<exists>k. select l i j = select k 0 (j - i)\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. select l i j = select k 0 (j - i)", "have \"\\<exists>k. length (select l i j) = length (select k 0 (j-i))\""], ["proof (prove)\nusing this:\n  \\<exists>k. select l i j = select k 0 (j - i)\n\ngoal (1 subgoal):\n 1. \\<exists>k. length (select l i j) = length (select k 0 (j - i))", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. length (select l i j) = length (select k 0 (j - i))\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. length (select l i j) = length (select k 0 (j - i))", "have c: \"\\<exists>k. length (select l i j) = length (selecthelp k (j-i))\""], ["proof (prove)\nusing this:\n  \\<exists>k. length (select l i j) = length (select k 0 (j - i))\n\ngoal (1 subgoal):\n 1. \\<exists>k. length (select l i j) = length (selecthelp k (j - i))", "using selectlenhelp3"], ["proof (prove)\nusing this:\n  \\<exists>k. length (select l i j) = length (select k 0 (j - i))\n  \\<forall>j. select ?l 0 j = selecthelp ?l j\n\ngoal (1 subgoal):\n 1. \\<exists>k. length (select l i j) = length (selecthelp k (j - i))", "by simp"], ["proof (state)\nthis:\n  \\<exists>k. length (select l i j) = length (selecthelp k (j - i))\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "from c"], ["proof (chain)\npicking this:\n  \\<exists>k. length (select l i j) = length (selecthelp k (j - i))", "obtain k where d: \"length (select l i j) = length (selecthelp k (j-i))\""], ["proof (prove)\nusing this:\n  \\<exists>k. length (select l i j) = length (selecthelp k (j - i))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        length (select l i j) =\n        length (selecthelp k (j - i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  length (select l i j) = length (selecthelp k (j - i))\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "have \"0<=j-i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> j - i", "by arith"], ["proof (state)\nthis:\n  0 \\<le> j - i\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "then"], ["proof (chain)\npicking this:\n  0 \\<le> j - i", "have \"length (selecthelp k (j-i)) = j-i+1\""], ["proof (prove)\nusing this:\n  0 \\<le> j - i\n\ngoal (1 subgoal):\n 1. length (selecthelp k (j - i)) = j - i + 1", "using selectlenhelp"], ["proof (prove)\nusing this:\n  0 \\<le> j - i\n  length (selecthelp ?l ?i) = ?i + 1\n\ngoal (1 subgoal):\n 1. length (selecthelp k (j - i)) = j - i + 1", "by simp"], ["proof (state)\nthis:\n  length (selecthelp k (j - i)) = j - i + 1\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "then"], ["proof (chain)\npicking this:\n  length (selecthelp k (j - i)) = j - i + 1", "show \"length (select l i j) = j-i+1\""], ["proof (prove)\nusing this:\n  length (selecthelp k (j - i)) = j - i + 1\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "using d"], ["proof (prove)\nusing this:\n  length (selecthelp k (j - i)) = j - i + 1\n  length (select l i j) = length (selecthelp k (j - i))\n\ngoal (1 subgoal):\n 1. length (select l i j) = j - i + 1", "by simp"], ["proof (state)\nthis:\n  length (select l i j) = j - i + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma addmod32len: \"\\<And> a b. length (addmod32 a b) = 32\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b. length (addmod32 a b) = 32", "using selectlen [of _ 0 31] addmod32"], ["proof (prove)\nusing this:\n  length (select ?l 0 31) = 31 - 0 + 1\n  addmod32 ?a ?b =\n  rev (select (rev (nat_to_bv (bv_to_nat ?a + bv_to_nat ?b))) 0 31)\n\ngoal (1 subgoal):\n 1. \\<And>a b. length (addmod32 a b) = 32", "by simp"], ["", "end"]]}