{"file_name": "/home/qj213/afp-2021-10-22/thys/RSAPSS/Crypt.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/RSAPSS", "problem_names": ["lemma rsa_crypt_code [code]:\n  \"rsa_crypt M e n = (if e = 0 then 1 mod n\n    else if even e then rsa_crypt M (e div 2) n ^ 2 mod n\n    else (M * rsa_crypt M (e div 2) n ^ 2 mod n) mod n)\""], "translations": [["", "lemma rsa_crypt_code [code]:\n  \"rsa_crypt M e n = (if e = 0 then 1 mod n\n    else if even e then rsa_crypt M (e div 2) n ^ 2 mod n\n    else (M * rsa_crypt M (e div 2) n ^ 2 mod n) mod n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "have \"(M ^ m mod n)\\<^sup>2 mod n = (M ^ m)\\<^sup>2 mod n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (M ^ m mod n)\\<^sup>2 mod n = (M ^ m)\\<^sup>2 mod n", "by (simp add: power_mod)"], ["proof (state)\nthis:\n  (M ^ m mod n)\\<^sup>2 mod n = (M ^ m)\\<^sup>2 mod n\n\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "then"], ["proof (chain)\npicking this:\n  (M ^ m mod n)\\<^sup>2 mod n = (M ^ m)\\<^sup>2 mod n", "have \"(M mod n) * ((M ^ m mod n)\\<^sup>2 mod n) = (M mod n) * ((M ^ m)\\<^sup>2 mod n)\""], ["proof (prove)\nusing this:\n  (M ^ m mod n)\\<^sup>2 mod n = (M ^ m)\\<^sup>2 mod n\n\ngoal (1 subgoal):\n 1. M mod n * ((M ^ m mod n)\\<^sup>2 mod n) =\n    M mod n * ((M ^ m)\\<^sup>2 mod n)", "by simp"], ["proof (state)\nthis:\n  M mod n * ((M ^ m mod n)\\<^sup>2 mod n) =\n  M mod n * ((M ^ m)\\<^sup>2 mod n)\n\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "have \"M * (M ^ m mod n)\\<^sup>2 mod n = M * (M ^ m)\\<^sup>2 mod n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M * (M ^ m mod n)\\<^sup>2 mod n = M * (M ^ m)\\<^sup>2 mod n", "by (metis mod_mult_right_eq power_mod)"], ["proof (state)\nthis:\n  M * (M ^ m mod n)\\<^sup>2 mod n = M * (M ^ m)\\<^sup>2 mod n\n\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "}"], ["proof (state)\nthis:\n  M * (M ^ ?m2 mod n)\\<^sup>2 mod n = M * (M ^ ?m2)\\<^sup>2 mod n\n\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "then"], ["proof (chain)\npicking this:\n  M * (M ^ ?m2 mod n)\\<^sup>2 mod n = M * (M ^ ?m2)\\<^sup>2 mod n", "show ?thesis"], ["proof (prove)\nusing this:\n  M * (M ^ ?m2 mod n)\\<^sup>2 mod n = M * (M ^ ?m2)\\<^sup>2 mod n\n\ngoal (1 subgoal):\n 1. rsa_crypt M e n =\n    (if e = 0 then 1 mod n\n     else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n          else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)", "by (auto simp add: cryptcorrect power_even_eq remainderexp elim!: evenE oddE)"], ["proof (state)\nthis:\n  rsa_crypt M e n =\n  (if e = 0 then 1 mod n\n   else if even e then (rsa_crypt M (e div 2) n)\\<^sup>2 mod n\n        else M * (rsa_crypt M (e div 2) n)\\<^sup>2 mod n mod n)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}