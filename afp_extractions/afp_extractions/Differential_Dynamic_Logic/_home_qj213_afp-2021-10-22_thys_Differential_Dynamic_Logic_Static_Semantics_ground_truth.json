{"file_name": "/home/qj213/afp-2021-10-22/thys/Differential_Dynamic_Logic/Static_Semantics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Differential_Dynamic_Logic", "problem_names": ["lemma primify_contains:\"x \\<in> primify x\"", "lemma FVDiff_sub:\"FVT f \\<subseteq> FVDiff f\"", "lemma fvdiff_plus1:\"FVDiff (Plus t1 t2) = FVDiff t1 \\<union> FVDiff t2\"", "lemma agree_func_fvt:\"Vagree \\<nu> \\<nu>' (FVT (Function f args)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVT (args i))\"", "lemma agree_plus1:\"Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t1)\"", "lemma agree_plus2:\"Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t2)\"", "lemma agree_times1:\"Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t1)\"", "lemma agree_times2:\"Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t2)\"", "lemma agree_func:\"Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow> (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))\""], "translations": [["", "lemma primify_contains:\"x \\<in> primify x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> primify x", "by (cases \"x\") auto"], ["", "lemma FVDiff_sub:\"FVT f \\<subseteq> FVDiff f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FVT f \\<subseteq> FVDiff f", "by (auto simp add:  primify_contains)"], ["", "lemma fvdiff_plus1:\"FVDiff (Plus t1 t2) = FVDiff t1 \\<union> FVDiff t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FVDiff (Plus t1 t2) = FVDiff t1 \\<union> FVDiff t2", "by (auto)"], ["", "lemma agree_func_fvt:\"Vagree \\<nu> \\<nu>' (FVT (Function f args)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVT (args i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVT ($f f args)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVT (args i))", "by (auto simp add: Set.Un_upper1 agree_supset Vagree_def)"], ["", "lemma agree_plus1:\"Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "assume agree:\"Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2))\""], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "have agree':\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t1. primify i) \\<union> (\\<Union>i\\<in>FVT t2. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "using fvdiff_plus1 FVDiff.simps agree"], ["proof (prove)\nusing this:\n  FVDiff (Plus ?t1.0 ?t2.0) = FVDiff ?t1.0 \\<union> FVDiff ?t2.0\n  FVDiff ?f = \\<Union> (primify ` FVT ?f)\n  Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "have agreeL:\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t1. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))", "using agree' agree_supset Set.Un_upper1"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n  \\<lbrakk>?B \\<subseteq> ?A; Vagree ?\\<nu> ?\\<nu>' ?A\\<rbrakk>\n  \\<Longrightarrow> Vagree ?\\<nu> ?\\<nu>' ?B\n  ?A \\<subseteq> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))", "by (blast)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "show \"Vagree \\<nu> \\<nu>' (FVDiff t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t1)", "using agreeL"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t1)", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff t1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma agree_plus2:\"Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "assume agree:\"Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2))\""], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "have agree':\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t1. primify i) \\<union> (\\<Union>i\\<in>FVT t2. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "using fvdiff_plus1 FVDiff.simps agree"], ["proof (prove)\nusing this:\n  FVDiff (Plus ?t1.0 ?t2.0) = FVDiff ?t1.0 \\<union> FVDiff ?t2.0\n  FVDiff ?f = \\<Union> (primify ` FVT ?f)\n  Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "have agreeR:\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t2. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))", "using agree' agree_supset Set.Un_upper1"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n  \\<lbrakk>?B \\<subseteq> ?A; Vagree ?\\<nu> ?\\<nu>' ?A\\<rbrakk>\n  \\<Longrightarrow> Vagree ?\\<nu> ?\\<nu>' ?B\n  ?A \\<subseteq> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))", "by (blast)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Plus t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "show \"Vagree \\<nu> \\<nu>' (FVDiff t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t2)", "using agreeR"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t2)", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma agree_times1:\"Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "assume agree:\"Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2))\""], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "have agree':\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t1. primify i) \\<union> (\\<Union>i\\<in>FVT t2. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "using fvdiff_plus1 FVDiff.simps agree"], ["proof (prove)\nusing this:\n  FVDiff (Plus ?t1.0 ?t2.0) = FVDiff ?t1.0 \\<union> FVDiff ?t2.0\n  FVDiff ?f = \\<Union> (primify ` FVT ?f)\n  Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "have agreeL:\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t1. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))", "using agree' agree_supset Set.Un_upper1"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n  \\<lbrakk>?B \\<subseteq> ?A; Vagree ?\\<nu> ?\\<nu>' ?A\\<rbrakk>\n  \\<Longrightarrow> Vagree ?\\<nu> ?\\<nu>' ?B\n  ?A \\<subseteq> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))", "by (blast)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t1)", "show \"Vagree \\<nu> \\<nu>' (FVDiff t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t1)", "using agreeL"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t1))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t1)", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff t1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma agree_times2:\"Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow> Vagree \\<nu> \\<nu>' (FVDiff t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "assume agree:\"Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2))\""], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "have agree':\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t1. primify i) \\<union> (\\<Union>i\\<in>FVT t2. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "using fvdiff_plus1 FVDiff.simps agree"], ["proof (prove)\nusing this:\n  FVDiff (Plus ?t1.0 ?t2.0) = FVDiff ?t1.0 \\<union> FVDiff ?t2.0\n  FVDiff ?f = \\<Union> (primify ` FVT ?f)\n  Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>'\n     (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "have agreeR:\"Vagree \\<nu> \\<nu>' ((\\<Union>i\\<in>FVT t2. primify i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))", "using agree' agree_supset Set.Un_upper1"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>'\n   (\\<Union> (primify ` FVT t1) \\<union> \\<Union> (primify ` FVT t2))\n  \\<lbrakk>?B \\<subseteq> ?A; Vagree ?\\<nu> ?\\<nu>' ?A\\<rbrakk>\n  \\<Longrightarrow> Vagree ?\\<nu> ?\\<nu>' ?B\n  ?A \\<subseteq> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))", "by (blast)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (Times t1 t2)) \\<Longrightarrow>\n    Vagree \\<nu> \\<nu>' (FVDiff t2)", "show \"Vagree \\<nu> \\<nu>' (FVDiff t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t2)", "using agreeR"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT t2))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff t2)", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma agree_func:\"Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow> (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "assume agree:\"Vagree \\<nu> \\<nu>' (FVDiff ($f var args))\""], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff ($f var args))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "have agree':\"Vagree \\<nu> \\<nu>' ((\\<Union>i. (\\<Union>j \\<in>(FVT (args i)). primify j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union>i. \\<Union> (primify ` FVT (args i)))", "using fvdiff_plus1 FVDiff.simps agree"], ["proof (prove)\nusing this:\n  FVDiff (Plus ?t1.0 ?t2.0) = FVDiff ?t1.0 \\<union> FVDiff ?t2.0\n  FVDiff ?f = \\<Union> (primify ` FVT ?f)\n  Vagree \\<nu> \\<nu>' (FVDiff ($f var args))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (\\<Union>i. \\<Union> (primify ` FVT (args i)))", "by (auto)"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (\\<Union>i. \\<Union> (primify ` FVT (args i)))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "fix i :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "have \"\\<And>S. \\<not> S \\<subseteq> (\\<Union>f. \\<Union> (primify ` FVT (args f))) \\<or> Vagree \\<nu> \\<nu>' S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<not> S \\<subseteq> (\\<Union>f.\n                                \\<Union> (primify ` FVT (args f))) \\<or>\n       Vagree \\<nu> \\<nu>' S", "using agree' agree_supset"], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>' (\\<Union>i. \\<Union> (primify ` FVT (args i)))\n  \\<lbrakk>?B \\<subseteq> ?A; Vagree ?\\<nu> ?\\<nu>' ?A\\<rbrakk>\n  \\<Longrightarrow> Vagree ?\\<nu> ?\\<nu>' ?B\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<not> S \\<subseteq> (\\<Union>f.\n                                \\<Union> (primify ` FVT (args f))) \\<or>\n       Vagree \\<nu> \\<nu>' S", "by blast"], ["proof (state)\nthis:\n  \\<not> ?S \\<subseteq> (\\<Union>f. \\<Union> (primify ` FVT (args f))) \\<or>\n  Vagree \\<nu> \\<nu>' ?S\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "then"], ["proof (chain)\npicking this:\n  \\<not> ?S \\<subseteq> (\\<Union>f. \\<Union> (primify ` FVT (args f))) \\<or>\n  Vagree \\<nu> \\<nu>' ?S", "have \"\\<And>f. f \\<notin> UNIV \\<or> Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT (args f)))\""], ["proof (prove)\nusing this:\n  \\<not> ?S \\<subseteq> (\\<Union>f. \\<Union> (primify ` FVT (args f))) \\<or>\n  Vagree \\<nu> \\<nu>' ?S\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<notin> UNIV \\<or>\n       Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT (args f)))", "by blast"], ["proof (state)\nthis:\n  ?f \\<notin> UNIV \\<or>\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT (args ?f)))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff ($f var args)) \\<Longrightarrow>\n    (\\<And>i. Vagree \\<nu> \\<nu>' (FVDiff (args i)))", "then"], ["proof (chain)\npicking this:\n  ?f \\<notin> UNIV \\<or>\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT (args ?f)))", "show \"Vagree \\<nu> \\<nu>' (FVDiff (args i))\""], ["proof (prove)\nusing this:\n  ?f \\<notin> UNIV \\<or>\n  Vagree \\<nu> \\<nu>' (\\<Union> (primify ` FVT (args ?f)))\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (FVDiff (args i))", "by simp"], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (FVDiff (args i))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}