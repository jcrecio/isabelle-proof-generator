{"file_name": "/home/qj213/afp-2021-10-22/thys/Differential_Dynamic_Logic/Ids.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Differential_Dynamic_Logic", "problem_names": ["lemma id_simps:\n  \"(vid1 = vid2) = False\" \"(vid2 = vid3) = False\" \"(vid1 = vid3) = False\"\n  \"(fid1 = fid2) = False\" \"(fid2 = fid3) = False\" \"(fid1 = fid3) = False\"\n  \"(pid1 = pid2) = False\" \"(pid2 = pid3) = False\" \"(pid1 = pid3) = False\" \n  \"(pid1 = pid4) = False\" \"(pid2 = pid4) = False\" \"(pid3 = pid4) = False\"\n  \"(vid2 = vid1) = False\" \"(vid3 = vid2) = False\" \"(vid3 = vid1) = False\"\n  \"(fid2 = fid1) = False\" \"(fid3 = fid2) = False\" \"(fid3 = fid1) = False\"\n  \"(pid2 = pid1) = False\" \"(pid3 = pid2) = False\" \"(pid3 = pid1) = False\" \n  \"(pid4 = pid1) = False\" \"(pid4 = pid2) = False\" \"(pid4 = pid3) = False\""], "translations": [["", "lemma id_simps:\n  \"(vid1 = vid2) = False\" \"(vid2 = vid3) = False\" \"(vid1 = vid3) = False\"\n  \"(fid1 = fid2) = False\" \"(fid2 = fid3) = False\" \"(fid1 = fid3) = False\"\n  \"(pid1 = pid2) = False\" \"(pid2 = pid3) = False\" \"(pid1 = pid3) = False\" \n  \"(pid1 = pid4) = False\" \"(pid2 = pid4) = False\" \"(pid3 = pid4) = False\"\n  \"(vid2 = vid1) = False\" \"(vid3 = vid2) = False\" \"(vid3 = vid1) = False\"\n  \"(fid2 = fid1) = False\" \"(fid3 = fid2) = False\" \"(fid3 = fid1) = False\"\n  \"(pid2 = pid1) = False\" \"(pid3 = pid2) = False\" \"(pid3 = pid1) = False\" \n  \"(pid4 = pid1) = False\" \"(pid4 = pid2) = False\" \"(pid4 = pid3) = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((((vid1 = vid2) = False &&&\n       (vid2 = vid3) = False &&& (vid1 = vid3) = False) &&&\n      (fid1 = fid2) = False &&&\n      (fid2 = fid3) = False &&& (fid1 = fid3) = False) &&&\n     ((pid1 = pid2) = False &&&\n      (pid2 = pid3) = False &&& (pid1 = pid3) = False) &&&\n     (pid1 = pid4) = False &&&\n     (pid2 = pid4) = False &&& (pid3 = pid4) = False) &&&\n    (((vid2 = vid1) = False &&&\n      (vid3 = vid2) = False &&& (vid3 = vid1) = False) &&&\n     (fid2 = fid1) = False &&&\n     (fid3 = fid2) = False &&& (fid3 = fid1) = False) &&&\n    ((pid2 = pid1) = False &&&\n     (pid3 = pid2) = False &&& (pid3 = pid1) = False) &&&\n    (pid4 = pid1) = False &&&\n    (pid4 = pid2) = False &&& (pid4 = pid3) = False", "using vne12 vne23 vne13 fne12 fne23 fne13 pne12 pne23 pne13 pne14 pne24 pne34"], ["proof (prove)\nusing this:\n  vid1 \\<noteq> vid2\n  vid2 \\<noteq> vid3\n  vid1 \\<noteq> vid3\n  fid1 \\<noteq> fid2\n  fid2 \\<noteq> fid3\n  fid1 \\<noteq> fid3\n  pid1 \\<noteq> pid2\n  pid2 \\<noteq> pid3\n  pid1 \\<noteq> pid3\n  pid1 \\<noteq> pid4\n  pid2 \\<noteq> pid4\n  pid3 \\<noteq> pid4\n\ngoal (1 subgoal):\n 1. ((((vid1 = vid2) = False &&&\n       (vid2 = vid3) = False &&& (vid1 = vid3) = False) &&&\n      (fid1 = fid2) = False &&&\n      (fid2 = fid3) = False &&& (fid1 = fid3) = False) &&&\n     ((pid1 = pid2) = False &&&\n      (pid2 = pid3) = False &&& (pid1 = pid3) = False) &&&\n     (pid1 = pid4) = False &&&\n     (pid2 = pid4) = False &&& (pid3 = pid4) = False) &&&\n    (((vid2 = vid1) = False &&&\n      (vid3 = vid2) = False &&& (vid3 = vid1) = False) &&&\n     (fid2 = fid1) = False &&&\n     (fid3 = fid2) = False &&& (fid3 = fid1) = False) &&&\n    ((pid2 = pid1) = False &&&\n     (pid3 = pid2) = False &&& (pid3 = pid1) = False) &&&\n    (pid4 = pid1) = False &&&\n    (pid4 = pid2) = False &&& (pid4 = pid3) = False", "by auto"], ["", "end"], ["", "end"]]}