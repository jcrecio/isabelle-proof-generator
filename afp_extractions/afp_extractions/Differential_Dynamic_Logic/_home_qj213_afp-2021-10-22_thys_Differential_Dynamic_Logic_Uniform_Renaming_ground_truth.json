{"file_name": "/home/qj213/afp-2021-10-22/thys/Differential_Dynamic_Logic/Uniform_Renaming.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Differential_Dynamic_Logic", "problem_names": ["lemma SUren: \"sterm_sem I (TUrename x y \\<theta>) \\<nu> = sterm_sem I \\<theta> (RSadj x y \\<nu>)\"", "lemma ren_preserves_dfree:\"dfree \\<theta> \\<Longrightarrow> dfree (TUrename x y \\<theta>)\"", "lemma TUren_frechet:\n  assumes good_interp:\"is_interp I\"\n  shows \"dfree \\<theta> \\<Longrightarrow> frechet I (TUrename x y \\<theta>) \\<nu> \\<nu>' = frechet I \\<theta> (RSadj x y \\<nu>) (RSadj x y \\<nu>')\"", "lemma RSadj_fst:\"RSadj x y (fst \\<nu>) = fst (Radj x y \\<nu>)\"", "lemma RSadj_snd:\"RSadj x y (snd \\<nu>) = snd (Radj x y \\<nu>)\"", "lemma TUren:\n  assumes good_interp:\"is_interp I\"\n  shows \"dsafe \\<theta> \\<Longrightarrow> dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>)\"", "lemma adj_sum:\"RSadj x y (\\<nu>1 + \\<nu>2) = (RSadj x y \\<nu>1) + (RSadj x y \\<nu>2)\"", "lemma OUren: \"ORadmit ODE \\<Longrightarrow> ODE_sem I (OUrename x y ODE) \\<nu> = RSadj x y (ODE_sem I ODE (RSadj x y \\<nu>))\"", "lemma state_eq: \n  fixes \\<nu> \\<nu>' :: \"'sz state\"\n  shows \"(\\<And>i. (fst \\<nu>) $ i = (fst \\<nu>') $ i) \\<Longrightarrow> (\\<And>i. (snd \\<nu>) $ i = (snd \\<nu>') $ i) \\<Longrightarrow> \\<nu>  = \\<nu>'\"", "lemma Radj_repv1:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repv \\<nu> y r)) = repv (Radj x y \\<nu>) x r\"", "lemma Radj_repv2:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repv \\<nu> x r)) = repv (Radj x y \\<nu>) y r\"", "lemma Radj_repv3:\n  fixes x y z ::\"'sz\" \n  assumes zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\"\n  shows \"(Radj x y (repv \\<nu> z r)) = repv (Radj x y \\<nu>) z r\"", "lemma Radj_repd1:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repd \\<nu> y r)) = repd (Radj x y \\<nu>) x r\"", "lemma Radj_repd2:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repd \\<nu> x r)) = repd (Radj x y \\<nu>) y r\"", "lemma Radj_repd3:\n  fixes x y z ::\"'sz\" \n  assumes zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\"\n  shows \"(Radj x y (repd \\<nu> z r)) = repd (Radj x y \\<nu>) z r\"", "lemma Radj_eq_iff:\"(a = b) = ((Radj x y a) = (Radj x y b))\"", "lemma RSadj_cancel:\"RSadj x y (RSadj x y \\<nu>) = \\<nu>\"", "lemma Radj_cancel:\"Radj x y (Radj x y \\<nu>) = \\<nu>\"", "lemma OUrename_preserves_ODE_vars:\"ORadmit ODE \\<Longrightarrow> {z. (swap x y z) \\<in> ODE_vars I ODE} = ODE_vars I (OUrename x y ODE)\"", "lemma ren_proj:\"(RSadj x y a) $ z = a $ (swap x y z)\"", "lemma swap_cancel:\"swap x y (swap x y z) = z\"", "lemma mkv_lemma:\n  assumes ORA:\"ORadmit ODE\"\n  shows \"Radj x y (mk_v I (OUrename x y ODE) (a, b) c) = mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)\"", "lemma sol_lemma:\n  assumes ORA:\"ORadmit ODE\"\n  assumes t:\"0 \\<le> t\"\n  assumes fml:\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)\"\n  assumes sol:\"(sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t} {xa. mk_v I (OUrename x y ODE) (sol 0, b) xa \\<in> fml_sem I (FUrename x y \\<phi>)}\"\n  shows \"((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t} {xa. mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I \\<phi>}\"", "lemma sol_lemma2:\n  assumes ORA:\"ORadmit ODE\"\n  assumes t:\"0 \\<le> t\"\n  assumes fml:\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)\"\n  assumes sol:\"(sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t} {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\"\n  shows \"((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t} \n          {xa. mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I (FUrename x y \\<phi>)}\"", "lemma PUren_FUren:\n  assumes good_interp:\"is_interp I\"\n  shows\n    \"(PRadmit \\<alpha> \\<longrightarrow> hpsafe \\<alpha> \\<longrightarrow> (\\<forall> \\<nu> \\<omega>. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<longleftrightarrow> (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>))\n    \\<and> (FRadmit \\<phi> \\<longrightarrow> fsafe \\<phi> \\<longrightarrow> (\\<forall> \\<nu>. \\<nu> \\<in> fml_sem I (FUrename x y \\<phi>) \\<longleftrightarrow> (Radj x y \\<nu>) \\<in> fml_sem I \\<phi>))\"", "lemma FUren:\"is_interp I \\<Longrightarrow> FRadmit \\<phi> \\<Longrightarrow> fsafe \\<phi> \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\"", "lemma URename_sound:\"FRadmit \\<phi> \\<Longrightarrow> fsafe \\<phi> \\<Longrightarrow> valid \\<phi> \\<Longrightarrow> valid (FUrename x y \\<phi>)\"", "lemma BRename_sound:\n  assumes FRA:\"FRadmit([[Assign x \\<theta>]]\\<phi>)\"\n  assumes fsafe:\"fsafe ([[Assign x \\<theta>]]\\<phi>)\"\n  assumes valid:\"valid ([[Assign x \\<theta>]]\\<phi>)\"\n  assumes FVF:\"{Inl y, Inr y, Inr x} \\<inter> FVF \\<phi> = {}\"\n  shows \"valid([[Assign y \\<theta>]]FUrename x y \\<phi>)\""], "translations": [["", "lemma SUren: \"sterm_sem I (TUrename x y \\<theta>) \\<nu> = sterm_sem I \\<theta> (RSadj x y \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    sterm_sem I \\<theta> (RSadj x y \\<nu>)", "by (induction \\<theta>, auto simp add: RSadj_def)"], ["", "lemma ren_preserves_dfree:\"dfree \\<theta> \\<Longrightarrow> dfree (TUrename x y \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dfree \\<theta> \\<Longrightarrow> dfree (TUrename x y \\<theta>)", "by(induction rule: dfree.induct, auto intro: dfree.intros)"], ["", "subsection \\<open>Uniform Renaming Soundness Proof and Lemmas\\<close>"], ["", "lemma TUren_frechet:\n  assumes good_interp:\"is_interp I\"\n  shows \"dfree \\<theta> \\<Longrightarrow> frechet I (TUrename x y \\<theta>) \\<nu> \\<nu>' = frechet I \\<theta> (RSadj x y \\<nu>) (RSadj x y \\<nu>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dfree \\<theta> \\<Longrightarrow>\n    frechet I (TUrename x y \\<theta>) \\<nu> \\<nu>' =\n    frechet I \\<theta> (RSadj x y \\<nu>) (RSadj x y \\<nu>')", "proof (induction rule: dfree.induct)\n  \\<comment> \\<open>There's got to be a more elegant proof of this...\\<close>"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>i.\n       frechet I (TUrename x y (Var i)) \\<nu> \\<nu>' =\n       frechet I (Var i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 2. \\<And>r.\n       frechet I (TUrename x y (Const r)) \\<nu> \\<nu>' =\n       frechet I (Const r) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 3. \\<And>args i.\n       \\<lbrakk>\\<And>i. dfree (args i);\n        \\<And>i.\n           frechet I (TUrename x y (args i)) \\<nu> \\<nu>' =\n           frechet I (args i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I (TUrename x y ($f i args)) \\<nu> \\<nu>' =\n                         frechet I ($f i args) (RSadj x y \\<nu>)\n                          (RSadj x y \\<nu>')\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dfree \\<theta>\\<^sub>1;\n        frechet I (TUrename x y \\<theta>\\<^sub>1) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>1 (RSadj x y \\<nu>) (RSadj x y \\<nu>');\n        dfree \\<theta>\\<^sub>2;\n        frechet I (TUrename x y \\<theta>\\<^sub>2) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>2 (RSadj x y \\<nu>)\n         (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> \\<nu>' =\n                         frechet I (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 5. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dfree \\<theta>\\<^sub>1;\n        frechet I (TUrename x y \\<theta>\\<^sub>1) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>1 (RSadj x y \\<nu>) (RSadj x y \\<nu>');\n        dfree \\<theta>\\<^sub>2;\n        frechet I (TUrename x y \\<theta>\\<^sub>2) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>2 (RSadj x y \\<nu>)\n         (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> \\<nu>' =\n                         frechet I (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (RSadj x y \\<nu>) (RSadj x y \\<nu>')", "case (dfree_Var i)"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>i.\n       frechet I (TUrename x y (Var i)) \\<nu> \\<nu>' =\n       frechet I (Var i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 2. \\<And>r.\n       frechet I (TUrename x y (Const r)) \\<nu> \\<nu>' =\n       frechet I (Const r) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 3. \\<And>args i.\n       \\<lbrakk>\\<And>i. dfree (args i);\n        \\<And>i.\n           frechet I (TUrename x y (args i)) \\<nu> \\<nu>' =\n           frechet I (args i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I (TUrename x y ($f i args)) \\<nu> \\<nu>' =\n                         frechet I ($f i args) (RSadj x y \\<nu>)\n                          (RSadj x y \\<nu>')\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dfree \\<theta>\\<^sub>1;\n        frechet I (TUrename x y \\<theta>\\<^sub>1) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>1 (RSadj x y \\<nu>) (RSadj x y \\<nu>');\n        dfree \\<theta>\\<^sub>2;\n        frechet I (TUrename x y \\<theta>\\<^sub>2) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>2 (RSadj x y \\<nu>)\n         (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> \\<nu>' =\n                         frechet I (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 5. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dfree \\<theta>\\<^sub>1;\n        frechet I (TUrename x y \\<theta>\\<^sub>1) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>1 (RSadj x y \\<nu>) (RSadj x y \\<nu>');\n        dfree \\<theta>\\<^sub>2;\n        frechet I (TUrename x y \\<theta>\\<^sub>2) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>2 (RSadj x y \\<nu>)\n         (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> \\<nu>' =\n                         frechet I (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (RSadj x y \\<nu>) (RSadj x y \\<nu>')", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. frechet I (TUrename x y (Var i)) \\<nu> \\<nu>' =\n    frechet I (Var i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')", "unfolding RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. frechet I (TUrename x y (Var i)) \\<nu> \\<nu>' =\n    frechet I (Var i) (\\<chi>z. \\<nu> $ swap x y z)\n     (\\<chi>z. \\<nu>' $ swap x y z)", "apply auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>i = x; y = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis x 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then x\n                           else if z = x then x else z)) \\<bullet>\n                      axis x 1\n 2. \\<lbrakk>i = y; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis x 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis y 1\n 3. \\<lbrakk>x \\<noteq> y; i = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis y 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis x 1\n 4. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i = x; y = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis x 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then x\n                           else if z = x then x else z)) \\<bullet>\n                      axis x 1", "by (metis vec_lambda_eta)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = y; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis x 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis y 1\n 2. \\<lbrakk>x \\<noteq> y; i = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis y 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis x 1\n 3. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i = y; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis x 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis y 1", "proof (auto simp add: axis_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i = y; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> (\\<chi>i. if i = x then 1 else 0) =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      (\\<chi>i. if i = y then 1 else 0)", "assume yx:\"y \\<noteq> x\""], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = y; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> (\\<chi>i. if i = x then 1 else 0) =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      (\\<chi>i. if i = y then 1 else 0)", "have a:\"(\\<chi> z. \\<nu>' $ (if z = x then y else if z = y then x else z)) $ y = \\<nu>' $ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. \\<nu>' $ (if z = x then y else if z = y then x else z)) $ y =\n    \\<nu>' $ x", "by simp"], ["proof (state)\nthis:\n  (\\<chi>z. \\<nu>' $ (if z = x then y else if z = y then x else z)) $ y =\n  \\<nu>' $ x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i = y; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> (\\<chi>i. if i = x then 1 else 0) =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      (\\<chi>i. if i = y then 1 else 0)", "show \"\\<nu>' \\<bullet> (\\<chi> i. if i = x then 1 else 0) \n                 = (\\<chi> z. \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet> (\\<chi> i. if i = y then 1 else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu>' \\<bullet> (\\<chi>i. if i = x then 1 else 0) =\n    (\\<chi>z.\n        \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n    (\\<chi>i. if i = y then 1 else 0)", "by (metis (no_types) a axis_def inner_axis)"], ["proof (state)\nthis:\n  \\<nu>' \\<bullet> (\\<chi>i. if i = x then 1 else 0) =\n  (\\<chi>z.\n      \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n  (\\<chi>i. if i = y then 1 else 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y; i = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis y 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis x 1\n 2. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; i = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis y 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis x 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; i = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis y 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis x 1", "have \"\\<And>v s. v \\<bullet> (\\<chi> sa. if sa = (s::'sz) then 1 else 0) = v $ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v s. v \\<bullet> (\\<chi>sa. if sa = s then 1 else 0) = v $ s", "subgoal for v s"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<bullet> (\\<chi>sa. if sa = s then 1 else 0) = v $ s", "using inner_axis[of v s 1]"], ["proof (prove)\nusing this:\n  v \\<bullet> axis s 1 = v $ s \\<bullet> 1\n\ngoal (1 subgoal):\n 1. v \\<bullet> (\\<chi>sa. if sa = s then 1 else 0) = v $ s", "by (auto simp add: axis_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; i = x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis y 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis x 1", "then"], ["proof (chain)\npicking this:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5", "show ?thesis"], ["proof (prove)\nusing this:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5\n\ngoal (1 subgoal):\n 1. \\<nu>' \\<bullet> axis y 1 =\n    (\\<chi>z.\n        \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n    axis x 1", "by (auto simp add: axis_def)"], ["proof (state)\nthis:\n  \\<nu>' \\<bullet> axis y 1 =\n  (\\<chi>z.\n      \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n  axis x 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "assume a1: \"i \\<noteq> y\""], ["proof (state)\nthis:\n  i \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "assume a2: \"i \\<noteq> x\""], ["proof (state)\nthis:\n  i \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "have \"\\<And>v s. v \\<bullet> (\\<chi> sa. if sa = (s::'sz) then 1 else 0) = v $ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v s. v \\<bullet> (\\<chi>sa. if sa = s then 1 else 0) = v $ s", "by (metis (no_types) inner_axis axis_def inner_prod_eq)"], ["proof (state)\nthis:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<nu>' \\<bullet> axis i 1 =\n                      (\\<chi>z.\n                          \\<nu>' $\n                          (if z = x then y\n                           else if z = y then x else z)) \\<bullet>\n                      axis i 1", "then"], ["proof (chain)\npicking this:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5", "show ?thesis"], ["proof (prove)\nusing this:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5\n\ngoal (1 subgoal):\n 1. \\<nu>' \\<bullet> axis i 1 =\n    (\\<chi>z.\n        \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n    axis i 1", "using a2 a1"], ["proof (prove)\nusing this:\n  ?v5 \\<bullet> (\\<chi>sa. if sa = ?s5 then 1 else 0) = ?v5 $ ?s5\n  i \\<noteq> x\n  i \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<nu>' \\<bullet> axis i 1 =\n    (\\<chi>z.\n        \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n    axis i 1", "by (auto simp add: axis_def)"], ["proof (state)\nthis:\n  \\<nu>' \\<bullet> axis i 1 =\n  (\\<chi>z.\n      \\<nu>' $ (if z = x then y else if z = y then x else z)) \\<bullet>\n  axis i 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  frechet I (TUrename x y (Var i)) \\<nu> \\<nu>' =\n  frechet I (Var i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n\ngoal (4 subgoals):\n 1. \\<And>r.\n       frechet I (TUrename x y (Const r)) \\<nu> \\<nu>' =\n       frechet I (Const r) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 2. \\<And>args i.\n       \\<lbrakk>\\<And>i. dfree (args i);\n        \\<And>i.\n           frechet I (TUrename x y (args i)) \\<nu> \\<nu>' =\n           frechet I (args i) (RSadj x y \\<nu>) (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I (TUrename x y ($f i args)) \\<nu> \\<nu>' =\n                         frechet I ($f i args) (RSadj x y \\<nu>)\n                          (RSadj x y \\<nu>')\n 3. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dfree \\<theta>\\<^sub>1;\n        frechet I (TUrename x y \\<theta>\\<^sub>1) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>1 (RSadj x y \\<nu>) (RSadj x y \\<nu>');\n        dfree \\<theta>\\<^sub>2;\n        frechet I (TUrename x y \\<theta>\\<^sub>2) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>2 (RSadj x y \\<nu>)\n         (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> \\<nu>' =\n                         frechet I (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (RSadj x y \\<nu>) (RSadj x y \\<nu>')\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dfree \\<theta>\\<^sub>1;\n        frechet I (TUrename x y \\<theta>\\<^sub>1) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>1 (RSadj x y \\<nu>) (RSadj x y \\<nu>');\n        dfree \\<theta>\\<^sub>2;\n        frechet I (TUrename x y \\<theta>\\<^sub>2) \\<nu> \\<nu>' =\n        frechet I \\<theta>\\<^sub>2 (RSadj x y \\<nu>)\n         (RSadj x y \\<nu>')\\<rbrakk>\n       \\<Longrightarrow> frechet I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> \\<nu>' =\n                         frechet I (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (RSadj x y \\<nu>) (RSadj x y \\<nu>')", "qed (auto simp add: SUren good_interp is_interp_def)"], ["", "lemma RSadj_fst:\"RSadj x y (fst \\<nu>) = fst (Radj x y \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y (fst \\<nu>) = fst (Radj x y \\<nu>)", "unfolding RSadj_def Radj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. fst \\<nu> $ swap x y z) =\n    fst (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)", "by auto"], ["", "lemma RSadj_snd:\"RSadj x y (snd \\<nu>) = snd (Radj x y \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y (snd \\<nu>) = snd (Radj x y \\<nu>)", "unfolding RSadj_def Radj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. snd \\<nu> $ swap x y z) =\n    snd (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)", "by auto"], ["", "lemma TUren:\n  assumes good_interp:\"is_interp I\"\n  shows \"dsafe \\<theta> \\<Longrightarrow> dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dsafe \\<theta> \\<Longrightarrow>\n    dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "proof (induction rule: dsafe.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>i.\n       dterm_sem I (TUrename x y (Var i)) \\<nu> =\n       dterm_sem I (Var i) (Radj x y \\<nu>)\n 2. \\<And>r.\n       dterm_sem I (TUrename x y (Const r)) \\<nu> =\n       dterm_sem I (Const r) (Radj x y \\<nu>)\n 3. \\<And>args i.\n       \\<lbrakk>\\<And>i. dsafe (args i);\n        \\<And>i.\n           dterm_sem I (TUrename x y (args i)) \\<nu> =\n           dterm_sem I (args i) (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I (TUrename x y ($f i args)) \\<nu> =\n                         dterm_sem I ($f i args) (Radj x y \\<nu>)\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 5. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 6. \\<And>\\<theta>.\n       dfree \\<theta> \\<Longrightarrow>\n       dterm_sem I (TUrename x y (Differential \\<theta>)) \\<nu> =\n       dterm_sem I (Differential \\<theta>) (Radj x y \\<nu>)\n 7. \\<And>i.\n       dterm_sem I (TUrename x y ($' i)) \\<nu> =\n       dterm_sem I ($' i) (Radj x y \\<nu>)", "case (dsafe_Diff \\<theta>)"], ["proof (state)\nthis:\n  dfree \\<theta>\n\ngoal (7 subgoals):\n 1. \\<And>i.\n       dterm_sem I (TUrename x y (Var i)) \\<nu> =\n       dterm_sem I (Var i) (Radj x y \\<nu>)\n 2. \\<And>r.\n       dterm_sem I (TUrename x y (Const r)) \\<nu> =\n       dterm_sem I (Const r) (Radj x y \\<nu>)\n 3. \\<And>args i.\n       \\<lbrakk>\\<And>i. dsafe (args i);\n        \\<And>i.\n           dterm_sem I (TUrename x y (args i)) \\<nu> =\n           dterm_sem I (args i) (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I (TUrename x y ($f i args)) \\<nu> =\n                         dterm_sem I ($f i args) (Radj x y \\<nu>)\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 5. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 6. \\<And>\\<theta>.\n       dfree \\<theta> \\<Longrightarrow>\n       dterm_sem I (TUrename x y (Differential \\<theta>)) \\<nu> =\n       dterm_sem I (Differential \\<theta>) (Radj x y \\<nu>)\n 7. \\<And>i.\n       dterm_sem I (TUrename x y ($' i)) \\<nu> =\n       dterm_sem I ($' i) (Radj x y \\<nu>)", "assume free:\"dfree \\<theta>\""], ["proof (state)\nthis:\n  dfree \\<theta>\n\ngoal (7 subgoals):\n 1. \\<And>i.\n       dterm_sem I (TUrename x y (Var i)) \\<nu> =\n       dterm_sem I (Var i) (Radj x y \\<nu>)\n 2. \\<And>r.\n       dterm_sem I (TUrename x y (Const r)) \\<nu> =\n       dterm_sem I (Const r) (Radj x y \\<nu>)\n 3. \\<And>args i.\n       \\<lbrakk>\\<And>i. dsafe (args i);\n        \\<And>i.\n           dterm_sem I (TUrename x y (args i)) \\<nu> =\n           dterm_sem I (args i) (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I (TUrename x y ($f i args)) \\<nu> =\n                         dterm_sem I ($f i args) (Radj x y \\<nu>)\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 5. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 6. \\<And>\\<theta>.\n       dfree \\<theta> \\<Longrightarrow>\n       dterm_sem I (TUrename x y (Differential \\<theta>)) \\<nu> =\n       dterm_sem I (Differential \\<theta>) (Radj x y \\<nu>)\n 7. \\<And>i.\n       dterm_sem I (TUrename x y ($' i)) \\<nu> =\n       dterm_sem I ($' i) (Radj x y \\<nu>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y (Differential \\<theta>)) \\<nu> =\n    dterm_sem I (Differential \\<theta>) (Radj x y \\<nu>)", "apply (auto simp add: directional_derivative_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. frechet I (TUrename x y \\<theta>) (fst \\<nu>) (snd \\<nu>) =\n    frechet I \\<theta> (fst (Radj x y \\<nu>)) (snd (Radj x y \\<nu>))", "using TUren_frechet[OF good_interp free, of x y \"fst \\<nu>\" \"snd \\<nu>\"]"], ["proof (prove)\nusing this:\n  frechet I (TUrename x y \\<theta>) (fst \\<nu>) (snd \\<nu>) =\n  frechet I \\<theta> (RSadj x y (fst \\<nu>)) (RSadj x y (snd \\<nu>))\n\ngoal (1 subgoal):\n 1. frechet I (TUrename x y \\<theta>) (fst \\<nu>) (snd \\<nu>) =\n    frechet I \\<theta> (fst (Radj x y \\<nu>)) (snd (Radj x y \\<nu>))", "by (auto simp add: RSadj_fst RSadj_snd)"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y (Differential \\<theta>)) \\<nu> =\n  dterm_sem I (Differential \\<theta>) (Radj x y \\<nu>)\n\ngoal (6 subgoals):\n 1. \\<And>i.\n       dterm_sem I (TUrename x y (Var i)) \\<nu> =\n       dterm_sem I (Var i) (Radj x y \\<nu>)\n 2. \\<And>r.\n       dterm_sem I (TUrename x y (Const r)) \\<nu> =\n       dterm_sem I (Const r) (Radj x y \\<nu>)\n 3. \\<And>args i.\n       \\<lbrakk>\\<And>i. dsafe (args i);\n        \\<And>i.\n           dterm_sem I (TUrename x y (args i)) \\<nu> =\n           dterm_sem I (args i) (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I (TUrename x y ($f i args)) \\<nu> =\n                         dterm_sem I ($f i args) (Radj x y \\<nu>)\n 4. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Plus \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 5. \\<And>\\<theta>\\<^sub>1 \\<theta>\\<^sub>2.\n       \\<lbrakk>dsafe \\<theta>\\<^sub>1;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>1) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>1 (Radj x y \\<nu>);\n        dsafe \\<theta>\\<^sub>2;\n        dterm_sem I (TUrename x y \\<theta>\\<^sub>2) \\<nu> =\n        dterm_sem I \\<theta>\\<^sub>2 (Radj x y \\<nu>)\\<rbrakk>\n       \\<Longrightarrow> dterm_sem I\n                          (TUrename x y\n                            (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2))\n                          \\<nu> =\n                         dterm_sem I\n                          (Times \\<theta>\\<^sub>1 \\<theta>\\<^sub>2)\n                          (Radj x y \\<nu>)\n 6. \\<And>i.\n       dterm_sem I (TUrename x y ($' i)) \\<nu> =\n       dterm_sem I ($' i) (Radj x y \\<nu>)", "qed (auto simp add: Radj_def RSadj_def)"], ["", "lemma adj_sum:\"RSadj x y (\\<nu>1 + \\<nu>2) = (RSadj x y \\<nu>1) + (RSadj x y \\<nu>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y (\\<nu>1 + \\<nu>2) = RSadj x y \\<nu>1 + RSadj x y \\<nu>2", "unfolding RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. (\\<nu>1 + \\<nu>2) $ swap x y z) =\n    (\\<chi>z. \\<nu>1 $ swap x y z) + (\\<chi>z. \\<nu>2 $ swap x y z)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        \\<nu>1 $ (if z = x then y else if z = y then x else z) +\n        \\<nu>2 $ (if z = x then y else if z = y then x else z)) =\n    (\\<chi>z. \\<nu>1 $ (if z = x then y else if z = y then x else z)) +\n    (\\<chi>z. \\<nu>2 $ (if z = x then y else if z = y then x else z))", "apply (rule vec_extensionality)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>z.\n           \\<nu>1 $ (if z = x then y else if z = y then x else z) +\n           \\<nu>2 $ (if z = x then y else if z = y then x else z)) $\n       i =\n       ((\\<chi>z. \\<nu>1 $ (if z = x then y else if z = y then x else z)) +\n        (\\<chi>z. \\<nu>2 $ (if z = x then y else if z = y then x else z))) $\n       i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        \\<nu>1 $ (if z = x then y else if z = y then x else z) +\n        \\<nu>2 $ (if z = x then y else if z = y then x else z)) $\n    i =\n    ((\\<chi>z. \\<nu>1 $ (if z = x then y else if z = y then x else z)) +\n     (\\<chi>z. \\<nu>2 $ (if z = x then y else if z = y then x else z))) $\n    i", "apply (cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    (\\<chi>z.\n        \\<nu>1 $ (if z = x then y else if z = y then x else z) +\n        \\<nu>2 $ (if z = x then y else if z = y then x else z)) $\n    i =\n    ((\\<chi>z. \\<nu>1 $ (if z = x then y else if z = y then x else z)) +\n     (\\<chi>z. \\<nu>2 $ (if z = x then y else if z = y then x else z))) $\n    i\n 2. i \\<noteq> x \\<Longrightarrow>\n    (\\<chi>z.\n        \\<nu>1 $ (if z = x then y else if z = y then x else z) +\n        \\<nu>2 $ (if z = x then y else if z = y then x else z)) $\n    i =\n    ((\\<chi>z. \\<nu>1 $ (if z = x then y else if z = y then x else z)) +\n     (\\<chi>z. \\<nu>2 $ (if z = x then y else if z = y then x else z))) $\n    i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> (\\<chi>z.\n                          \\<nu>1 $\n                          (if z = x then y else if z = y then x else z) +\n                          \\<nu>2 $\n                          (if z = x then y else if z = y then x else z)) $\n                      i =\n                      ((\\<chi>z.\n                           \\<nu>1 $\n                           (if z = x then y else if z = y then x else z)) +\n                       (\\<chi>z.\n                           \\<nu>2 $\n                           (if z = x then y else if z = y then x else z))) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<chi>z.\n                          \\<nu>1 $\n                          (if z = x then y else if z = y then x else z) +\n                          \\<nu>2 $\n                          (if z = x then y else if z = y then x else z)) $\n                      i =\n                      ((\\<chi>z.\n                           \\<nu>1 $\n                           (if z = x then y else if z = y then x else z)) +\n                       (\\<chi>z.\n                           \\<nu>2 $\n                           (if z = x then y else if z = y then x else z))) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    (\\<chi>z.\n        \\<nu>1 $ (if z = x then y else if z = y then x else z) +\n        \\<nu>2 $ (if z = x then y else if z = y then x else z)) $\n    i =\n    ((\\<chi>z. \\<nu>1 $ (if z = x then y else if z = y then x else z)) +\n     (\\<chi>z. \\<nu>2 $ (if z = x then y else if z = y then x else z))) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma OUren: \"ORadmit ODE \\<Longrightarrow> ODE_sem I (OUrename x y ODE) \\<nu> = RSadj x y (ODE_sem I ODE (RSadj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ORadmit ODE \\<Longrightarrow>\n    ODE_sem I (OUrename x y ODE) \\<nu> =\n    RSadj x y (ODE_sem I ODE (RSadj x y \\<nu>))", "proof (induction rule: ORadmit.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa \\<theta>.\n       ODE_sem I (OUrename x y (OSing xa \\<theta>)) \\<nu> =\n       RSadj x y (ODE_sem I (OSing xa \\<theta>) (RSadj x y \\<nu>))\n 2. \\<And>ODE1 ODE2.\n       \\<lbrakk>ORadmit ODE1;\n        ODE_sem I (OUrename x y ODE1) \\<nu> =\n        RSadj x y (ODE_sem I ODE1 (RSadj x y \\<nu>));\n        ORadmit ODE2;\n        ODE_sem I (OUrename x y ODE2) \\<nu> =\n        RSadj x y (ODE_sem I ODE2 (RSadj x y \\<nu>))\\<rbrakk>\n       \\<Longrightarrow> ODE_sem I (OUrename x y (OProd ODE1 ODE2)) \\<nu> =\n                         RSadj x y\n                          (ODE_sem I (OProd ODE1 ODE2) (RSadj x y \\<nu>))", "case (ORadmit_Prod ODE1 ODE2)"], ["proof (state)\nthis:\n  ORadmit ODE1\n  ORadmit ODE2\n  ODE_sem I (OUrename x y ODE1) \\<nu> =\n  RSadj x y (ODE_sem I ODE1 (RSadj x y \\<nu>))\n  ODE_sem I (OUrename x y ODE2) \\<nu> =\n  RSadj x y (ODE_sem I ODE2 (RSadj x y \\<nu>))\n\ngoal (2 subgoals):\n 1. \\<And>xa \\<theta>.\n       ODE_sem I (OUrename x y (OSing xa \\<theta>)) \\<nu> =\n       RSadj x y (ODE_sem I (OSing xa \\<theta>) (RSadj x y \\<nu>))\n 2. \\<And>ODE1 ODE2.\n       \\<lbrakk>ORadmit ODE1;\n        ODE_sem I (OUrename x y ODE1) \\<nu> =\n        RSadj x y (ODE_sem I ODE1 (RSadj x y \\<nu>));\n        ORadmit ODE2;\n        ODE_sem I (OUrename x y ODE2) \\<nu> =\n        RSadj x y (ODE_sem I ODE2 (RSadj x y \\<nu>))\\<rbrakk>\n       \\<Longrightarrow> ODE_sem I (OUrename x y (OProd ODE1 ODE2)) \\<nu> =\n                         RSadj x y\n                          (ODE_sem I (OProd ODE1 ODE2) (RSadj x y \\<nu>))", "then"], ["proof (chain)\npicking this:\n  ORadmit ODE1\n  ORadmit ODE2\n  ODE_sem I (OUrename x y ODE1) \\<nu> =\n  RSadj x y (ODE_sem I ODE1 (RSadj x y \\<nu>))\n  ODE_sem I (OUrename x y ODE2) \\<nu> =\n  RSadj x y (ODE_sem I ODE2 (RSadj x y \\<nu>))", "show ?case"], ["proof (prove)\nusing this:\n  ORadmit ODE1\n  ORadmit ODE2\n  ODE_sem I (OUrename x y ODE1) \\<nu> =\n  RSadj x y (ODE_sem I ODE1 (RSadj x y \\<nu>))\n  ODE_sem I (OUrename x y ODE2) \\<nu> =\n  RSadj x y (ODE_sem I ODE2 (RSadj x y \\<nu>))\n\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y (OProd ODE1 ODE2)) \\<nu> =\n    RSadj x y (ODE_sem I (OProd ODE1 ODE2) (RSadj x y \\<nu>))", "using adj_sum"], ["proof (prove)\nusing this:\n  ORadmit ODE1\n  ORadmit ODE2\n  ODE_sem I (OUrename x y ODE1) \\<nu> =\n  RSadj x y (ODE_sem I ODE1 (RSadj x y \\<nu>))\n  ODE_sem I (OUrename x y ODE2) \\<nu> =\n  RSadj x y (ODE_sem I ODE2 (RSadj x y \\<nu>))\n  RSadj ?x ?y (?\\<nu>1.0 + ?\\<nu>2.0) =\n  RSadj ?x ?y ?\\<nu>1.0 + RSadj ?x ?y ?\\<nu>2.0\n\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y (OProd ODE1 ODE2)) \\<nu> =\n    RSadj x y (ODE_sem I (OProd ODE1 ODE2) (RSadj x y \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ODE_sem I (OUrename x y (OProd ODE1 ODE2)) \\<nu> =\n  RSadj x y (ODE_sem I (OProd ODE1 ODE2) (RSadj x y \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<And>xa \\<theta>.\n       ODE_sem I (OUrename x y (OSing xa \\<theta>)) \\<nu> =\n       RSadj x y (ODE_sem I (OSing xa \\<theta>) (RSadj x y \\<nu>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa \\<theta>.\n       ODE_sem I (OUrename x y (OSing xa \\<theta>)) \\<nu> =\n       RSadj x y (ODE_sem I (OSing xa \\<theta>) (RSadj x y \\<nu>))", "case (ORadmit_Sing z \\<theta>)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>xa \\<theta>.\n       ODE_sem I (OUrename x y (OSing xa \\<theta>)) \\<nu> =\n       RSadj x y (ODE_sem I (OSing xa \\<theta>) (RSadj x y \\<nu>))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y (OSing z \\<theta>)) \\<nu> =\n    RSadj x y (ODE_sem I (OSing z \\<theta>) (RSadj x y \\<nu>))", "by (rule vec_extensionality | auto simp add: SUren RSadj_def)+"], ["proof (state)\nthis:\n  ODE_sem I (OUrename x y (OSing z \\<theta>)) \\<nu> =\n  RSadj x y (ODE_sem I (OSing z \\<theta>) (RSadj x y \\<nu>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma state_eq: \n  fixes \\<nu> \\<nu>' :: \"'sz state\"\n  shows \"(\\<And>i. (fst \\<nu>) $ i = (fst \\<nu>') $ i) \\<Longrightarrow> (\\<And>i. (snd \\<nu>) $ i = (snd \\<nu>') $ i) \\<Longrightarrow> \\<nu>  = \\<nu>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>i. fst \\<nu> $ i = fst \\<nu>' $ i;\n     \\<And>i. snd \\<nu> $ i = snd \\<nu>' $ i\\<rbrakk>\n    \\<Longrightarrow> \\<nu> = \\<nu>'", "apply (cases \"\\<nu>\", cases \"\\<nu>'\", auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>\\<And>i. a $ i = aa $ i; \\<And>i. b $ i = ba $ i;\n        \\<nu> = (a, b); \\<nu>' = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> a = aa\n 2. \\<And>a b aa ba.\n       \\<lbrakk>\\<And>i. a $ i = aa $ i; \\<And>i. b $ i = ba $ i;\n        \\<nu> = (a, b); \\<nu>' = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> b = ba", "by(rule vec_extensionality, auto)+"], ["", "lemma Radj_repv1:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repv \\<nu> y r)) = repv (Radj x y \\<nu>) x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (repv \\<nu> y r) = repv (Radj x y \\<nu>) x r", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (Radj x y (repv \\<nu> y r)) $ i =\n       fst (repv (Radj x y \\<nu>) x r) $ i\n 2. \\<And>i.\n       snd (Radj x y (repv \\<nu> y r)) $ i =\n       snd (repv (Radj x y \\<nu>) x r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Radj x y (repv \\<nu> y r)) $ i =\n    fst (repv (Radj x y \\<nu>) x r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> y r)) $ i =\n    fst (repv (Radj x y \\<nu>) x r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> y r)) $ i =\n    fst (repv (Radj x y \\<nu>) x r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> y r)) $ i =\n                      fst (repv (Radj x y \\<nu>) x r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> y r)) $ i =\n                      fst (repv (Radj x y \\<nu>) x r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> y r)) $ i =\n    fst (repv (Radj x y \\<nu>) x r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repv \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> y r) $ swap x y z) $\n                      i =\n                      fst (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repv \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> y r) $ swap x y z) $\n                      i =\n                      fst (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (\\<chi>z. fst (repv \\<nu> y r) $ swap x y z,\n         \\<chi>z. snd (repv \\<nu> y r) $ swap x y z) $\n    i =\n    fst (repv\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          x r) $\n    i", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (Radj x y (repv \\<nu> y r)) $ i =\n       snd (repv (Radj x y \\<nu>) x r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Radj x y (repv \\<nu> y r)) $ i =\n    snd (repv (Radj x y \\<nu>) x r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> y r)) $ i =\n    snd (repv (Radj x y \\<nu>) x r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> y r)) $ i =\n    snd (repv (Radj x y \\<nu>) x r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> y r)) $ i =\n                      snd (repv (Radj x y \\<nu>) x r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> y r)) $ i =\n                      snd (repv (Radj x y \\<nu>) x r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> y r)) $ i =\n    snd (repv (Radj x y \\<nu>) x r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repv \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> y r) $ swap x y z) $\n                      i =\n                      snd (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repv \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> y r) $ swap x y z) $\n                      i =\n                      snd (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (\\<chi>z. fst (repv \\<nu> y r) $ swap x y z,\n         \\<chi>z. snd (repv \\<nu> y r) $ swap x y z) $\n    i =\n    snd (repv\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          x r) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Radj_repv2:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repv \\<nu> x r)) = repv (Radj x y \\<nu>) y r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (repv \\<nu> x r) = repv (Radj x y \\<nu>) y r", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (Radj x y (repv \\<nu> x r)) $ i =\n       fst (repv (Radj x y \\<nu>) y r) $ i\n 2. \\<And>i.\n       snd (Radj x y (repv \\<nu> x r)) $ i =\n       snd (repv (Radj x y \\<nu>) y r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Radj x y (repv \\<nu> x r)) $ i =\n    fst (repv (Radj x y \\<nu>) y r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> x r)) $ i =\n    fst (repv (Radj x y \\<nu>) y r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> x r)) $ i =\n    fst (repv (Radj x y \\<nu>) y r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> x r)) $ i =\n                      fst (repv (Radj x y \\<nu>) y r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> x r)) $ i =\n                      fst (repv (Radj x y \\<nu>) y r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> x r)) $ i =\n    fst (repv (Radj x y \\<nu>) y r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repv \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> x r) $ swap x y z) $\n                      i =\n                      fst (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repv \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> x r) $ swap x y z) $\n                      i =\n                      fst (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (\\<chi>z. fst (repv \\<nu> x r) $ swap x y z,\n         \\<chi>z. snd (repv \\<nu> x r) $ swap x y z) $\n    i =\n    fst (repv\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          y r) $\n    i", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (Radj x y (repv \\<nu> x r)) $ i =\n       snd (repv (Radj x y \\<nu>) y r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Radj x y (repv \\<nu> x r)) $ i =\n    snd (repv (Radj x y \\<nu>) y r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> x r)) $ i =\n    snd (repv (Radj x y \\<nu>) y r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> x r)) $ i =\n    snd (repv (Radj x y \\<nu>) y r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> x r)) $ i =\n                      snd (repv (Radj x y \\<nu>) y r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> x r)) $ i =\n                      snd (repv (Radj x y \\<nu>) y r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> x r)) $ i =\n    snd (repv (Radj x y \\<nu>) y r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repv \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> x r) $ swap x y z) $\n                      i =\n                      snd (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repv \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repv \\<nu> x r) $ swap x y z) $\n                      i =\n                      snd (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (\\<chi>z. fst (repv \\<nu> x r) $ swap x y z,\n         \\<chi>z. snd (repv \\<nu> x r) $ swap x y z) $\n    i =\n    snd (repv\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          y r) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Radj_repv3:\n  fixes x y z ::\"'sz\" \n  assumes zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\"\n  shows \"(Radj x y (repv \\<nu> z r)) = repv (Radj x y \\<nu>) z r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (repv \\<nu> z r) = repv (Radj x y \\<nu>) z r", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (Radj x y (repv \\<nu> z r)) $ i =\n       fst (repv (Radj x y \\<nu>) z r) $ i\n 2. \\<And>i.\n       snd (Radj x y (repv \\<nu> z r)) $ i =\n       snd (repv (Radj x y \\<nu>) z r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Radj x y (repv \\<nu> z r)) $ i =\n    fst (repv (Radj x y \\<nu>) z r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> z r)) $ i =\n    fst (repv (Radj x y \\<nu>) z r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> z r)) $ i =\n    fst (repv (Radj x y \\<nu>) z r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> z r)) $ i =\n                      fst (repv (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> z r)) $ i =\n                      fst (repv (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> z r)) $ i =\n    fst (repv (Radj x y \\<nu>) z r) $ i", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> z r)) $ i =\n                      fst (repv (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repv \\<nu> z r)) $ i =\n                      fst (repv (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repv \\<nu> z r)) $ i =\n    fst (repv (Radj x y \\<nu>) z r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>za. fst (repv \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repv \\<nu> z r) $ swap x y za) $\n                      i =\n                      fst (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>za. fst (repv \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repv \\<nu> z r) $ swap x y za) $\n                      i =\n                      fst (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (\\<chi>za. fst (repv \\<nu> z r) $ swap x y za,\n         \\<chi>za. snd (repv \\<nu> z r) $ swap x y za) $\n    i =\n    fst (repv\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          z r) $\n    i", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (Radj x y (repv \\<nu> z r)) $ i =\n       snd (repv (Radj x y \\<nu>) z r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Radj x y (repv \\<nu> z r)) $ i =\n    snd (repv (Radj x y \\<nu>) z r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> z r)) $ i =\n    snd (repv (Radj x y \\<nu>) z r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> z r)) $ i =\n    snd (repv (Radj x y \\<nu>) z r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> z r)) $ i =\n                      snd (repv (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> z r)) $ i =\n                      snd (repv (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> z r)) $ i =\n    snd (repv (Radj x y \\<nu>) z r) $ i", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> z r)) $ i =\n                      snd (repv (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repv \\<nu> z r)) $ i =\n                      snd (repv (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repv \\<nu> z r)) $ i =\n    snd (repv (Radj x y \\<nu>) z r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>za. fst (repv \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repv \\<nu> z r) $ swap x y za) $\n                      i =\n                      snd (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>za. fst (repv \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repv \\<nu> z r) $ swap x y za) $\n                      i =\n                      snd (repv\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (\\<chi>za. fst (repv \\<nu> z r) $ swap x y za,\n         \\<chi>za. snd (repv \\<nu> z r) $ swap x y za) $\n    i =\n    snd (repv\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          z r) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Radj_repd1:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repd \\<nu> y r)) = repd (Radj x y \\<nu>) x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (repd \\<nu> y r) = repd (Radj x y \\<nu>) x r", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (Radj x y (repd \\<nu> y r)) $ i =\n       fst (repd (Radj x y \\<nu>) x r) $ i\n 2. \\<And>i.\n       snd (Radj x y (repd \\<nu> y r)) $ i =\n       snd (repd (Radj x y \\<nu>) x r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Radj x y (repd \\<nu> y r)) $ i =\n    fst (repd (Radj x y \\<nu>) x r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> y r)) $ i =\n    fst (repd (Radj x y \\<nu>) x r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> y r)) $ i =\n    fst (repd (Radj x y \\<nu>) x r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> y r)) $ i =\n                      fst (repd (Radj x y \\<nu>) x r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> y r)) $ i =\n                      fst (repd (Radj x y \\<nu>) x r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> y r)) $ i =\n    fst (repd (Radj x y \\<nu>) x r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repd \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> y r) $ swap x y z) $\n                      i =\n                      fst (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repd \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> y r) $ swap x y z) $\n                      i =\n                      fst (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (\\<chi>z. fst (repd \\<nu> y r) $ swap x y z,\n         \\<chi>z. snd (repd \\<nu> y r) $ swap x y z) $\n    i =\n    fst (repd\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          x r) $\n    i", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (Radj x y (repd \\<nu> y r)) $ i =\n       snd (repd (Radj x y \\<nu>) x r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Radj x y (repd \\<nu> y r)) $ i =\n    snd (repd (Radj x y \\<nu>) x r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> y r)) $ i =\n    snd (repd (Radj x y \\<nu>) x r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> y r)) $ i =\n    snd (repd (Radj x y \\<nu>) x r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> y r)) $ i =\n                      snd (repd (Radj x y \\<nu>) x r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> y r)) $ i =\n                      snd (repd (Radj x y \\<nu>) x r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> y r)) $ i =\n    snd (repd (Radj x y \\<nu>) x r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repd \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> y r) $ swap x y z) $\n                      i =\n                      snd (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repd \\<nu> y r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> y r) $ swap x y z) $\n                      i =\n                      snd (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            x r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (\\<chi>z. fst (repd \\<nu> y r) $ swap x y z,\n         \\<chi>z. snd (repd \\<nu> y r) $ swap x y z) $\n    i =\n    snd (repd\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          x r) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Radj_repd2:\n  fixes x y z ::\"'sz\" \n  shows \"(Radj x y (repd \\<nu> x r)) = repd (Radj x y \\<nu>) y r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (repd \\<nu> x r) = repd (Radj x y \\<nu>) y r", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (Radj x y (repd \\<nu> x r)) $ i =\n       fst (repd (Radj x y \\<nu>) y r) $ i\n 2. \\<And>i.\n       snd (Radj x y (repd \\<nu> x r)) $ i =\n       snd (repd (Radj x y \\<nu>) y r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Radj x y (repd \\<nu> x r)) $ i =\n    fst (repd (Radj x y \\<nu>) y r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> x r)) $ i =\n    fst (repd (Radj x y \\<nu>) y r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> x r)) $ i =\n    fst (repd (Radj x y \\<nu>) y r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> x r)) $ i =\n                      fst (repd (Radj x y \\<nu>) y r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> x r)) $ i =\n                      fst (repd (Radj x y \\<nu>) y r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> x r)) $ i =\n    fst (repd (Radj x y \\<nu>) y r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repd \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> x r) $ swap x y z) $\n                      i =\n                      fst (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>z. fst (repd \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> x r) $ swap x y z) $\n                      i =\n                      fst (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (\\<chi>z. fst (repd \\<nu> x r) $ swap x y z,\n         \\<chi>z. snd (repd \\<nu> x r) $ swap x y z) $\n    i =\n    fst (repd\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          y r) $\n    i", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (Radj x y (repd \\<nu> x r)) $ i =\n       snd (repd (Radj x y \\<nu>) y r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Radj x y (repd \\<nu> x r)) $ i =\n    snd (repd (Radj x y \\<nu>) y r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> x r)) $ i =\n    snd (repd (Radj x y \\<nu>) y r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> x r)) $ i =\n    snd (repd (Radj x y \\<nu>) y r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> x r)) $ i =\n                      snd (repd (Radj x y \\<nu>) y r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> x r)) $ i =\n                      snd (repd (Radj x y \\<nu>) y r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> x r)) $ i =\n    snd (repd (Radj x y \\<nu>) y r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repd \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> x r) $ swap x y z) $\n                      i =\n                      snd (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>z. fst (repd \\<nu> x r) $ swap x y z,\n                           \\<chi>z. snd (repd \\<nu> x r) $ swap x y z) $\n                      i =\n                      snd (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            y r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (\\<chi>z. fst (repd \\<nu> x r) $ swap x y z,\n         \\<chi>z. snd (repd \\<nu> x r) $ swap x y z) $\n    i =\n    snd (repd\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          y r) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Radj_repd3:\n  fixes x y z ::\"'sz\" \n  assumes zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\"\n  shows \"(Radj x y (repd \\<nu> z r)) = repd (Radj x y \\<nu>) z r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (repd \\<nu> z r) = repd (Radj x y \\<nu>) z r", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (Radj x y (repd \\<nu> z r)) $ i =\n       fst (repd (Radj x y \\<nu>) z r) $ i\n 2. \\<And>i.\n       snd (Radj x y (repd \\<nu> z r)) $ i =\n       snd (repd (Radj x y \\<nu>) z r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Radj x y (repd \\<nu> z r)) $ i =\n    fst (repd (Radj x y \\<nu>) z r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> z r)) $ i =\n    fst (repd (Radj x y \\<nu>) z r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> z r)) $ i =\n    fst (repd (Radj x y \\<nu>) z r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> z r)) $ i =\n                      fst (repd (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> z r)) $ i =\n                      fst (repd (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> z r)) $ i =\n    fst (repd (Radj x y \\<nu>) z r) $ i", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> z r)) $ i =\n                      fst (repd (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (Radj x y (repd \\<nu> z r)) $ i =\n                      fst (repd (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (Radj x y (repd \\<nu> z r)) $ i =\n    fst (repd (Radj x y \\<nu>) z r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>za. fst (repd \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repd \\<nu> z r) $ swap x y za) $\n                      i =\n                      fst (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> fst (\\<chi>za. fst (repd \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repd \\<nu> z r) $ swap x y za) $\n                      i =\n                      fst (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    fst (\\<chi>za. fst (repd \\<nu> z r) $ swap x y za,\n         \\<chi>za. snd (repd \\<nu> z r) $ swap x y za) $\n    i =\n    fst (repd\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          z r) $\n    i", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (Radj x y (repd \\<nu> z r)) $ i =\n       snd (repd (Radj x y \\<nu>) z r) $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (Radj x y (repd \\<nu> z r)) $ i =\n    snd (repd (Radj x y \\<nu>) z r) $ i", "apply(cases \"i = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. i = x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> z r)) $ i =\n    snd (repd (Radj x y \\<nu>) z r) $ i\n 2. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> z r)) $ i =\n    snd (repd (Radj x y \\<nu>) z r) $ i", "apply (cases \"i = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> z r)) $ i =\n                      snd (repd (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> z r)) $ i =\n                      snd (repd (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> z r)) $ i =\n    snd (repd (Radj x y \\<nu>) z r) $ i", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> z r)) $ i =\n                      snd (repd (Radj x y \\<nu>) z r) $ i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (Radj x y (repd \\<nu> z r)) $ i =\n                      snd (repd (Radj x y \\<nu>) z r) $ i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (Radj x y (repd \\<nu> z r)) $ i =\n    snd (repd (Radj x y \\<nu>) z r) $ i", "unfolding Radj_def RSadj_def"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (3 subgoals):\n 1. \\<lbrakk>i = x; i = y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>za. fst (repd \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repd \\<nu> z r) $ swap x y za) $\n                      i =\n                      snd (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 2. \\<lbrakk>i = x; i \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> snd (\\<chi>za. fst (repd \\<nu> z r) $ swap x y za,\n                           \\<chi>za. snd (repd \\<nu> z r) $ swap x y za) $\n                      i =\n                      snd (repd\n                            (\\<chi>z. fst \\<nu> $ swap x y z,\n                             \\<chi>z. snd \\<nu> $ swap x y z)\n                            z r) $\n                      i\n 3. i \\<noteq> x \\<Longrightarrow>\n    snd (\\<chi>za. fst (repd \\<nu> z r) $ swap x y za,\n         \\<chi>za. snd (repd \\<nu> z r) $ swap x y za) $\n    i =\n    snd (repd\n          (\\<chi>z. fst \\<nu> $ swap x y z, \\<chi>z. snd \\<nu> $ swap x y z)\n          z r) $\n    i", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done\n\n\\<comment> \\<open>i.e. shows \\<open>Radj x y\\<close> is a bijection for all \\<open>x y\\<close>\\<close>"], ["", "lemma Radj_eq_iff:\"(a = b) = ((Radj x y a) = (Radj x y b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a = b) = (Radj x y a = Radj x y b)", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a = b) =\n    ((\\<chi>z. fst a $ swap x y z, \\<chi>z. snd a $ swap x y z) =\n     (\\<chi>z. fst b $ swap x y z, \\<chi>z. snd b $ swap x y z))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<lambda>z.\n                 fst a $ (if z = x then y else if z = y then x else z)) =\n             (\\<lambda>z.\n                 fst b $ (if z = x then y else if z = y then x else z));\n     (\\<lambda>z. snd a $ (if z = x then y else if z = y then x else z)) =\n     (\\<lambda>z.\n         snd b $ (if z = x then y else if z = y then x else z))\\<rbrakk>\n    \\<Longrightarrow> a = b", "apply (rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>(\\<lambda>z.\n                    fst a $ (if z = x then y else if z = y then x else z)) =\n                (\\<lambda>z.\n                    fst b $ (if z = x then y else if z = y then x else z));\n        (\\<lambda>z.\n            snd a $ (if z = x then y else if z = y then x else z)) =\n        (\\<lambda>z.\n            snd b $ (if z = x then y else if z = y then x else z))\\<rbrakk>\n       \\<Longrightarrow> fst a $ i = fst b $ i\n 2. \\<And>i.\n       \\<lbrakk>(\\<lambda>z.\n                    fst a $ (if z = x then y else if z = y then x else z)) =\n                (\\<lambda>z.\n                    fst b $ (if z = x then y else if z = y then x else z));\n        (\\<lambda>z.\n            snd a $ (if z = x then y else if z = y then x else z)) =\n        (\\<lambda>z.\n            snd b $ (if z = x then y else if z = y then x else z))\\<rbrakk>\n       \\<Longrightarrow> snd a $ i = snd b $ i", "apply smt+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma RSadj_cancel:\"RSadj x y (RSadj x y \\<nu>) = \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y (RSadj x y \\<nu>) = \\<nu>", "unfolding RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. (\\<chi>z. \\<nu> $ swap x y z) $ swap x y z) = \\<nu>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        \\<nu> $\n        (if (if z = x then y else if z = y then x else z) = x then y\n         else if (if z = x then y else if z = y then x else z) = y then x\n              else if z = x then y else if z = y then x else z)) =\n    \\<nu>", "apply(rule vec_extensionality)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>z.\n           \\<nu> $\n           (if (if z = x then y else if z = y then x else z) = x then y\n            else if (if z = x then y else if z = y then x else z) = y then x\n                 else if z = x then y else if z = y then x else z)) $\n       i =\n       \\<nu> $ i", "by(auto)"], ["", "lemma Radj_cancel:\"Radj x y (Radj x y \\<nu>) = \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (Radj x y \\<nu>) = \\<nu>", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        fst (\\<chi>z. fst \\<nu> $ swap x y z,\n             \\<chi>z. snd \\<nu> $ swap x y z) $\n        swap x y z,\n     \\<chi>z.\n        snd (\\<chi>z. fst \\<nu> $ swap x y z,\n             \\<chi>z. snd \\<nu> $ swap x y z) $\n        swap x y z) =\n    \\<nu>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        fst \\<nu> $\n        (if (if z = x then y else if z = y then x else z) = x then y\n         else if (if z = x then y else if z = y then x else z) = y then x\n              else if z = x then y else if z = y then x else z),\n     \\<chi>z.\n        snd \\<nu> $\n        (if (if z = x then y else if z = y then x else z) = x then y\n         else if (if z = x then y else if z = y then x else z) = y then x\n              else if z = x then y else if z = y then x else z)) =\n    \\<nu>", "apply(rule state_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       fst (\\<chi>z.\n               fst \\<nu> $\n               (if (if z = x then y else if z = y then x else z) = x then y\n                else if (if z = x then y else if z = y then x else z) = y\n                     then x\n                     else if z = x then y else if z = y then x else z),\n            \\<chi>z.\n               snd \\<nu> $\n               (if (if z = x then y else if z = y then x else z) = x then y\n                else if (if z = x then y else if z = y then x else z) = y\n                     then x\n                     else if z = x then y else if z = y then x else z)) $\n       i =\n       fst \\<nu> $ i\n 2. \\<And>i.\n       snd (\\<chi>z.\n               fst \\<nu> $\n               (if (if z = x then y else if z = y then x else z) = x then y\n                else if (if z = x then y else if z = y then x else z) = y\n                     then x\n                     else if z = x then y else if z = y then x else z),\n            \\<chi>z.\n               snd \\<nu> $\n               (if (if z = x then y else if z = y then x else z) = x then y\n                else if (if z = x then y else if z = y then x else z) = y\n                     then x\n                     else if z = x then y else if z = y then x else z)) $\n       i =\n       snd \\<nu> $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (\\<chi>z.\n            fst \\<nu> $\n            (if (if z = x then y else if z = y then x else z) = x then y\n             else if (if z = x then y else if z = y then x else z) = y\n                  then x else if z = x then y else if z = y then x else z),\n         \\<chi>z.\n            snd \\<nu> $\n            (if (if z = x then y else if z = y then x else z) = x then y\n             else if (if z = x then y else if z = y then x else z) = y\n                  then x\n                  else if z = x then y else if z = y then x else z)) $\n    i =\n    fst \\<nu> $ i", "by(cases \"i = x\", cases \"i = y\", auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       snd (\\<chi>z.\n               fst \\<nu> $\n               (if (if z = x then y else if z = y then x else z) = x then y\n                else if (if z = x then y else if z = y then x else z) = y\n                     then x\n                     else if z = x then y else if z = y then x else z),\n            \\<chi>z.\n               snd \\<nu> $\n               (if (if z = x then y else if z = y then x else z) = x then y\n                else if (if z = x then y else if z = y then x else z) = y\n                     then x\n                     else if z = x then y else if z = y then x else z)) $\n       i =\n       snd \\<nu> $ i", "subgoal for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (\\<chi>z.\n            fst \\<nu> $\n            (if (if z = x then y else if z = y then x else z) = x then y\n             else if (if z = x then y else if z = y then x else z) = y\n                  then x else if z = x then y else if z = y then x else z),\n         \\<chi>z.\n            snd \\<nu> $\n            (if (if z = x then y else if z = y then x else z) = x then y\n             else if (if z = x then y else if z = y then x else z) = y\n                  then x\n                  else if z = x then y else if z = y then x else z)) $\n    i =\n    snd \\<nu> $ i", "by(cases \"i = x\", cases \"i = y\", auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma OUrename_preserves_ODE_vars:\"ORadmit ODE \\<Longrightarrow> {z. (swap x y z) \\<in> ODE_vars I ODE} = ODE_vars I (OUrename x y ODE)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ORadmit ODE \\<Longrightarrow>\n    {z. swap x y z \\<in> ODE_vars I ODE} = ODE_vars I (OUrename x y ODE)", "apply(induction rule: ORadmit.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa \\<theta>.\n       {z. swap x y z \\<in> ODE_vars I (OSing xa \\<theta>)} =\n       ODE_vars I (OUrename x y (OSing xa \\<theta>))\n 2. \\<And>ODE1 ODE2.\n       \\<lbrakk>ORadmit ODE1;\n        {z. swap x y z \\<in> ODE_vars I ODE1} =\n        ODE_vars I (OUrename x y ODE1);\n        ORadmit ODE2;\n        {z. swap x y z \\<in> ODE_vars I ODE2} =\n        ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n       \\<Longrightarrow> {z. swap x y z\n                             \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                         ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "subgoal for xa \\<theta>"], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. swap x y z \\<in> ODE_vars I (OSing xa \\<theta>)} =\n    ODE_vars I (OUrename x y (OSing xa \\<theta>))", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ODE1 ODE2.\n       \\<lbrakk>ORadmit ODE1;\n        {z. swap x y z \\<in> ODE_vars I ODE1} =\n        ODE_vars I (OUrename x y ODE1);\n        ORadmit ODE2;\n        {z. swap x y z \\<in> ODE_vars I ODE2} =\n        ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n       \\<Longrightarrow> {z. swap x y z\n                             \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                         ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "subgoal for ODE1 ODE2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "assume IH1:\"{z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1)\""], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "assume IH2:\"{z. swap x y z \\<in> ODE_vars I ODE2} = ODE_vars I (OUrename x y ODE2)\""], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I ODE2} = ODE_vars I (OUrename x y ODE2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "have \"{z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n          {z. swap x y z \\<in> (ODE_vars I ODE1 \\<union> ODE_vars I ODE2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n    {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2}", "by auto"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "moreover"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "have \"... = {z. swap x y z \\<in> (ODE_vars I ODE1)} \\<union> {z. swap x y z \\<in> (ODE_vars I ODE2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2} =\n    {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n    {z. swap x y z \\<in> ODE_vars I ODE2}", "by auto"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2} =\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "moreover"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2} =\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "have \"... = ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n    {z. swap x y z \\<in> ODE_vars I ODE2} =\n    ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)", "using IH1 IH2"], ["proof (prove)\nusing this:\n  {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1)\n  {z. swap x y z \\<in> ODE_vars I ODE2} = ODE_vars I (OUrename x y ODE2)\n\ngoal (1 subgoal):\n 1. {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n    {z. swap x y z \\<in> ODE_vars I ODE2} =\n    ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)", "by auto"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2} =\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "moreover"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2} =\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "have \"... = ODE_vars I (OUrename x y (OProd ODE1 ODE2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2) =\n    ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "by auto"], ["proof (state)\nthis:\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2) =\n  ODE_vars I (OUrename x y (OProd ODE1 ODE2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ORadmit ODE1;\n     {z. swap x y z \\<in> ODE_vars I ODE1} = ODE_vars I (OUrename x y ODE1);\n     ORadmit ODE2;\n     {z. swap x y z \\<in> ODE_vars I ODE2} =\n     ODE_vars I (OUrename x y ODE2)\\<rbrakk>\n    \\<Longrightarrow> {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n                      ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "ultimately"], ["proof (chain)\npicking this:\n  {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2}\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2} =\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2}\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2} =\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2) =\n  ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "show \"{z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} = ODE_vars I (OUrename x y (OProd ODE1 ODE2))\""], ["proof (prove)\nusing this:\n  {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2}\n  {z. swap x y z \\<in> ODE_vars I ODE1 \\<union> ODE_vars I ODE2} =\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2}\n  {z. swap x y z \\<in> ODE_vars I ODE1} \\<union>\n  {z. swap x y z \\<in> ODE_vars I ODE2} =\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2)\n  ODE_vars I (OUrename x y ODE1) \\<union> ODE_vars I (OUrename x y ODE2) =\n  ODE_vars I (OUrename x y (OProd ODE1 ODE2))\n\ngoal (1 subgoal):\n 1. {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n    ODE_vars I (OUrename x y (OProd ODE1 ODE2))", "by blast"], ["proof (state)\nthis:\n  {z. swap x y z \\<in> ODE_vars I (OProd ODE1 ODE2)} =\n  ODE_vars I (OUrename x y (OProd ODE1 ODE2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ren_proj:\"(RSadj x y a) $ z = a $ (swap x y z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y a $ z = a $ swap x y z", "unfolding RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. a $ swap x y z) $ z = a $ swap x y z", "by simp"], ["", "lemma swap_cancel:\"swap x y (swap x y z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swap x y (swap x y z) = z", "by auto"], ["", "lemma mkv_lemma:\n  assumes ORA:\"ORadmit ODE\"\n  shows \"Radj x y (mk_v I (OUrename x y ODE) (a, b) c) = mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have inner1:\"(mk_v I (OUrename x y ODE) (a, b) c) = ((\\<chi> i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i), (\\<chi> i. (if i \\<in> ODE_vars I (OUrename x y ODE) then ODE_sem I (OUrename x y ODE) c else b) $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_v I (OUrename x y ODE) (a, b) c =\n    (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I (OUrename x y ODE)\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        i)", "using mk_v_concrete[of I \"OUrename x y ODE\" \"(a,b)\" c]"], ["proof (prove)\nusing this:\n  mk_v I (OUrename x y ODE) (a, b) c =\n  (\\<chi>i.\n      (if Inl i \\<in> semBV I (OUrename x y ODE) then c else fst (a, b)) $\n      i,\n   \\<chi>i.\n      (if Inr i \\<in> semBV I (OUrename x y ODE)\n       then ODE_sem I (OUrename x y ODE) c else snd (a, b)) $\n      i)\n\ngoal (1 subgoal):\n 1. mk_v I (OUrename x y ODE) (a, b) c =\n    (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I (OUrename x y ODE)\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        i)", "by auto"], ["proof (state)\nthis:\n  mk_v I (OUrename x y ODE) (a, b) c =\n  (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I (OUrename x y ODE)\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have inner2:\"(((\\<chi> i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i), (\\<chi> i. (if i \\<in> ODE_vars I (OUrename x y ODE) then ODE_sem I (OUrename x y ODE) c else b) $ i))) \n            = (((\\<chi> i. (if (swap x y i) \\<in> ODE_vars I ODE then c else a) $ i), (\\<chi> i. (if (swap x y i) \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c else b) $ i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I (OUrename x y ODE)\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        i) =\n    (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n     \\<chi>i.\n        (if swap x y i \\<in> ODE_vars I ODE\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        i)", "by (force simp: OUrename_preserves_ODE_vars[OF ORA, symmetric])"], ["proof (state)\nthis:\n  (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I (OUrename x y ODE)\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      i) =\n  (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n   \\<chi>i.\n      (if swap x y i \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"Radj x y (mk_v I (OUrename x y ODE) (a, b) c) = \n        Radj x y (((\\<chi> i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i), (\\<chi> i. (if i \\<in> ODE_vars I (OUrename x y ODE) then ODE_sem I (OUrename x y ODE) c else b) $ i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    Radj x y\n     (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n      \\<chi>i.\n         (if i \\<in> ODE_vars I (OUrename x y ODE)\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i)", "using inner1"], ["proof (prove)\nusing this:\n  mk_v I (OUrename x y ODE) (a, b) c =\n  (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I (OUrename x y ODE)\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    Radj x y\n     (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n      \\<chi>i.\n         (if i \\<in> ODE_vars I (OUrename x y ODE)\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i)", "by auto"], ["proof (state)\nthis:\n  Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = Radj x y (((\\<chi> i. (if (swap x y i) \\<in> ODE_vars I ODE then c else a) $ i), \n                              (\\<chi> i. (if (swap x y i) \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c else b) $ i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y\n     (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n      \\<chi>i.\n         (if i \\<in> ODE_vars I (OUrename x y ODE)\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i) =\n    Radj x y\n     (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n      \\<chi>i.\n         (if swap x y i \\<in> ODE_vars I ODE\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i)", "using inner2"], ["proof (prove)\nusing this:\n  (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I (OUrename x y ODE)\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      i) =\n  (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n   \\<chi>i.\n      (if swap x y i \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y\n     (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n      \\<chi>i.\n         (if i \\<in> ODE_vars I (OUrename x y ODE)\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i) =\n    Radj x y\n     (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n      \\<chi>i.\n         (if swap x y i \\<in> ODE_vars I ODE\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i)", "by auto"], ["proof (state)\nthis:\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = (((\\<chi> i. (if (swap x y (swap x y i)) \\<in> ODE_vars I ODE then c else a) $ (swap x y i))),\n                         (\\<chi> i. (if (swap x y (swap x y i)) \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c else b) $ (swap x y i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Radj x y\n     (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n      \\<chi>i.\n         (if swap x y i \\<in> ODE_vars I ODE\n          then ODE_sem I (OUrename x y ODE) c else b) $\n         i) =\n    (\\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n        swap x y i,\n     \\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        swap x y i)", "unfolding Radj_def RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        fst (\\<chi>i.\n                (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n             \\<chi>i.\n                (if swap x y i \\<in> ODE_vars I ODE\n                 then ODE_sem I (OUrename x y ODE) c else b) $\n                i) $\n        swap x y z,\n     \\<chi>z.\n        snd (\\<chi>i.\n                (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n             \\<chi>i.\n                (if swap x y i \\<in> ODE_vars I ODE\n                 then ODE_sem I (OUrename x y ODE) c else b) $\n                i) $\n        swap x y z) =\n    (\\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n        swap x y i,\n     \\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        swap x y i)", "by auto"], ["proof (state)\nthis:\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = (((\\<chi> i. (if i \\<in> ODE_vars I ODE then c else a) $ (swap x y i))),\n                         (\\<chi> i. (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c else b) $ (swap x y i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n        swap x y i,\n     \\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        swap x y i) =\n    (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n         else b) $\n        swap x y i)", "using swap_cancel"], ["proof (prove)\nusing this:\n  swap ?x ?y (swap ?x ?y ?z) = ?z\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n        swap x y i,\n     \\<chi>i.\n        (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n         then ODE_sem I (OUrename x y ODE) c else b) $\n        swap x y i) =\n    (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n         else b) $\n        swap x y i)", "by auto"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i) =\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i) =\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = (((\\<chi> i. (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i)),\n                         (\\<chi> i. (if i \\<in> ODE_vars I ODE then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n         else b) $\n        swap x y i) =\n    (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE\n         then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n        i)", "by(auto simp add: ren_proj)"], ["proof (state)\nthis:\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = (((\\<chi> i. (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i)),\n                         (\\<chi> i. (if i \\<in> ODE_vars I ODE then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c))) else RSadj x y b) $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE\n         then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n        i) =\n    (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE\n         then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n         else RSadj x y b) $\n        i)", "using OUren[OF ORA, of I x y c]"], ["proof (prove)\nusing this:\n  ODE_sem I (OUrename x y ODE) c = RSadj x y (ODE_sem I ODE (RSadj x y c))\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE\n         then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n        i) =\n    (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE\n         then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n         else RSadj x y b) $\n        i)", "by auto"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = (((\\<chi> i. (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i)),\n                         (\\<chi> i. (if i \\<in> ODE_vars I ODE then (ODE_sem I ODE (RSadj x y c)) else RSadj x y b) $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE\n         then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n         else RSadj x y b) $\n        i) =\n    (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n         else RSadj x y b) $\n        i)", "by(auto simp add: RSadj_cancel)"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "moreover"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "have \"... = mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n         else RSadj x y b) $\n        i) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "using mk_v_concrete[of I \"ODE\" \"(RSadj x y a, RSadj x y b)\" \"RSadj x y c\"]"], ["proof (prove)\nusing this:\n  mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c) =\n  (\\<chi>i.\n      (if Inl i \\<in> semBV I ODE then RSadj x y c\n       else fst (RSadj x y a, RSadj x y b)) $\n      i,\n   \\<chi>i.\n      (if Inr i \\<in> semBV I ODE then ODE_sem I ODE (RSadj x y c)\n       else snd (RSadj x y a, RSadj x y b)) $\n      i)\n\ngoal (1 subgoal):\n 1. (\\<chi>i.\n        (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n     \\<chi>i.\n        (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n         else RSadj x y b) $\n        i) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "by auto"], ["proof (state)\nthis:\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i) =\n  mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "ultimately"], ["proof (chain)\npicking this:\n  Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i)\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i) =\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i)\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i)\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i)\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i)\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i) =\n  mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "show ?thesis"], ["proof (prove)\nusing this:\n  Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n  Radj x y\n   (\\<chi>i. (if i \\<in> ODE_vars I (OUrename x y ODE) then c else a) $ i,\n    \\<chi>i.\n       (if i \\<in> ODE_vars I (OUrename x y ODE)\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i)\n  Radj x y\n   (\\<chi>i. (if swap x y i \\<in> ODE_vars I ODE then c else a) $ i,\n    \\<chi>i.\n       (if swap x y i \\<in> ODE_vars I ODE\n        then ODE_sem I (OUrename x y ODE) c else b) $\n       i) =\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i)\n  (\\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE then c else a) $\n      swap x y i,\n   \\<chi>i.\n      (if swap x y (swap x y i) \\<in> ODE_vars I ODE\n       then ODE_sem I (OUrename x y ODE) c else b) $\n      swap x y i) =\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i)\n  (\\<chi>i. (if i \\<in> ODE_vars I ODE then c else a) $ swap x y i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I (OUrename x y ODE) c\n       else b) $\n      swap x y i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i)\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (ODE_sem I (OUrename x y ODE) c) else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i)\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE\n       then RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y c)))\n       else RSadj x y b) $\n      i) =\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i)\n  (\\<chi>i.\n      (if i \\<in> ODE_vars I ODE then RSadj x y c else RSadj x y a) $ i,\n   \\<chi>i.\n      (if i \\<in> ODE_vars I ODE then ODE_sem I ODE (RSadj x y c)\n       else RSadj x y b) $\n      i) =\n  mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n    mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)", "by auto"], ["proof (state)\nthis:\n  Radj x y (mk_v I (OUrename x y ODE) (a, b) c) =\n  mk_v I ODE (RSadj x y a, RSadj x y b) (RSadj x y c)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sol_lemma:\n  assumes ORA:\"ORadmit ODE\"\n  assumes t:\"0 \\<le> t\"\n  assumes fml:\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)\"\n  assumes sol:\"(sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t} {xa. mk_v I (OUrename x y ODE) (sol 0, b) xa \\<in> fml_sem I (FUrename x y \\<phi>)}\"\n  shows \"((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t} {xa. mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I \\<phi>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I ODE))\n     {0..t}\n     {xa.\n      mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I \\<phi>}", "apply(unfold solves_ode_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I ODE (RSadj x y (sol t))))\n     {0..t} \\<and>\n    (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I \\<phi>}", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I ODE (RSadj x y (sol t))))\n     {0..t}\n 2. (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I \\<phi>}", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I \\<phi>}\n 2. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I ODE (RSadj x y (sol t))))\n     {0..t}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I \\<phi>}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "assume t:\"0 \\<le> s\" \"s \\<le> t\""], ["proof (state)\nthis:\n  0 \\<le> s\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "have ivl:\"s \\<in> {0..t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {0..t}", "using t"], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t}", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..t}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "have \"mk_v I (OUrename x y ODE) (sol 0,b) (sol s) \\<in> fml_sem I (FUrename x y \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n    \\<in> fml_sem I (FUrename x y \\<phi>)", "using solves_odeD(2)[OF sol ivl]"], ["proof (prove)\nusing this:\n  sol s\n  \\<in> {xa.\n         mk_v I (OUrename x y ODE) (sol 0, b) xa\n         \\<in> fml_sem I (FUrename x y \\<phi>)}\n\ngoal (1 subgoal):\n 1. mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n    \\<in> fml_sem I (FUrename x y \\<phi>)", "by auto"], ["proof (state)\nthis:\n  mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "then"], ["proof (chain)\npicking this:\n  mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n  \\<in> fml_sem I (FUrename x y \\<phi>)", "have \"Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s)) \\<in> fml_sem I \\<phi>\""], ["proof (prove)\nusing this:\n  mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n    \\<in> fml_sem I \\<phi>", "using fml[of \"mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\"]"], ["proof (prove)\nusing this:\n  mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n  (mk_v I (OUrename x y ODE) (sol 0, b) (sol s)\n   \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n   \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n    \\<in> fml_sem I \\<phi>", "by auto"], ["proof (state)\nthis:\n  Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n  \\<in> fml_sem I \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I \\<phi>", "then"], ["proof (chain)\npicking this:\n  Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n  \\<in> fml_sem I \\<phi>", "show \"mk_v I ODE (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol s)) \\<in> fml_sem I \\<phi>\""], ["proof (prove)\nusing this:\n  Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n  \\<in> fml_sem I \\<phi>\n\ngoal (1 subgoal):\n 1. mk_v I ODE (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol s))\n    \\<in> fml_sem I \\<phi>", "using mkv_lemma[OF ORA, of x y I \"sol 0\" b \"sol s\"]"], ["proof (prove)\nusing this:\n  Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s))\n  \\<in> fml_sem I \\<phi>\n  Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol s)) =\n  mk_v I ODE (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol s))\n\ngoal (1 subgoal):\n 1. mk_v I ODE (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol s))\n    \\<in> fml_sem I \\<phi>", "by auto"], ["proof (state)\nthis:\n  mk_v I ODE (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol s))\n  \\<in> fml_sem I \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I ODE (RSadj x y (sol t))))\n     {0..t}", "apply (unfold has_vderiv_on_def has_vector_derivative_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol xa))))\n        (at xa within {0..t})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol xa))))\n        (at xa within {0..t})", "have \"\\<And>s. s\\<in>{0..t} \\<Longrightarrow>  ((\\<lambda>t. RSadj x y (sol t)) has_derivative (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)))) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "assume s:\"s \\<in>{0..t}\""], ["proof (state)\nthis:\n  s \\<in> {0..t}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?g = \"RSadj x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?g' = \"RSadj x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?f = \"sol\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?f' = \"(\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?h = \"?g \\<circ> ?f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have fun_eq:\"(\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)) = (\\<lambda>t'. t' *\\<^sub>R (RSadj x y (ODE_sem I ODE (RSadj x y (sol s)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)) =\n    (\\<lambda>t'.\n        t' *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s))))", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s) =\n       t' *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s)))", "using OUren[OF ORA, of I x y]"], ["proof (prove)\nusing this:\n  ODE_sem I (OUrename x y ODE) ?\\<nu> =\n  RSadj x y (ODE_sem I ODE (RSadj x y ?\\<nu>))\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s) =\n       t' *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s)))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)) =\n  (\\<lambda>t'. t' *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s))))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have fun_eq1:\"(\\<lambda>\\<nu>. (\\<chi> i. RSadj x y \\<nu> $ i)) = RSadj x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) = RSadj x y", "by(rule ext, rule vec_extensionality, simp)"], ["proof (state)\nthis:\n  (\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) = RSadj x y\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have \"s \\<in> {0..t} \\<Longrightarrow> (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n     (at s within {0..t})", "using solves_odeD(1)[OF sol]"], ["proof (prove)\nusing this:\n  (sol has_vderiv_on (\\<lambda>t. ODE_sem I (OUrename x y ODE) (sol t)))\n   {0..t}\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n     (at s within {0..t})", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{0..t}.\n     (sol has_derivative\n      (\\<lambda>xb. xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol xa)))\n      (at xa within {0..t})\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n     (at s within {0..t})", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "then"], ["proof (chain)\npicking this:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})", "have fderiv:\"s \\<in> {0..t} \\<Longrightarrow> (?f has_derivative ?f') (at s within {0..t})\""], ["proof (prove)\nusing this:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n     (at s within {0..t})", "using fun_eq"], ["proof (prove)\nusing this:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})\n  (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)) =\n  (\\<lambda>t'. t' *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s))))\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n     (at s within {0..t})", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have \"((\\<lambda>\\<nu>. (\\<chi> i. RSadj x y \\<nu> $ i)) has_derivative (\\<lambda>\\<nu>'. (\\<chi> i . RSadj x y \\<nu>' $ i))) (at (?f s) within ?f ` {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n     (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n     (at (sol s) within sol ` {0..t})", "apply(rule has_derivative_vec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       ((\\<lambda>\\<nu>. RSadj x y \\<nu> $ i) has_derivative\n        (\\<lambda>\\<nu>'. RSadj x y \\<nu>' $ i))\n        (at (sol s) within sol ` {0..t})", "apply(auto simp add: RSadj_def intro:derivative_eq_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((\\<lambda>\\<nu>. \\<nu> $ x) has_derivative\n     (\\<lambda>\\<nu>'. \\<nu>' $ x))\n     (at (sol s) within sol ` {0..t})\n 2. x \\<noteq> y \\<Longrightarrow>\n    ((\\<lambda>\\<nu>. \\<nu> $ y) has_derivative\n     (\\<lambda>\\<nu>'. \\<nu>' $ y))\n     (at (sol s) within sol ` {0..t})\n 3. \\<And>i.\n       \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>\\<nu>. \\<nu> $ i) has_derivative\n                          (\\<lambda>\\<nu>'. \\<nu>' $ i))\n                          (at (sol s) within sol ` {0..t})", "by (simp add: has_derivative_at_withinI has_derivative_proj')+"], ["proof (state)\nthis:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})", "have gderiv:\"(RSadj x y has_derivative (RSadj x y)) (at (?f s) within ?f ` {0..t})\""], ["proof (prove)\nusing this:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})\n\ngoal (1 subgoal):\n 1. (RSadj x y has_derivative RSadj x y) (at (sol s) within sol ` {0..t})", "using fun_eq1"], ["proof (prove)\nusing this:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})\n  (\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) = RSadj x y\n\ngoal (1 subgoal):\n 1. (RSadj x y has_derivative RSadj x y) (at (sol s) within sol ` {0..t})", "by auto"], ["proof (state)\nthis:\n  (RSadj x y has_derivative RSadj x y) (at (sol s) within sol ` {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have hderiv:\"(?h has_derivative (?g' \\<circ> ?f')) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (RSadj x y \\<circ> sol has_derivative\n     RSadj x y \\<circ>\n     (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n     (at s within {0..t})", "by (rule diff_chain_within[OF fderiv gderiv], rule s)"], ["proof (state)\nthis:\n  (RSadj x y \\<circ> sol has_derivative\n   RSadj x y \\<circ>\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have heq:\"(\\<lambda>t. RSadj x y (sol t)) = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. RSadj x y (sol t)) = RSadj x y \\<circ> sol", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. RSadj x y (sol t)) = (\\<lambda>xa. RSadj x y (sol xa))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t. RSadj x y (sol t)) = RSadj x y \\<circ> sol\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have RSadj_scale:\"\\<And>c a. RSadj x y (c *\\<^sub>R RSadj x y a) = c *\\<^sub>R a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c a. RSadj x y (c *\\<^sub>R RSadj x y a) = c *\\<^sub>R a", "subgoal for c a"], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y (c *\\<^sub>R RSadj x y a) = c *\\<^sub>R a", "unfolding RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. (c *\\<^sub>R (\\<chi>z. a $ swap x y z)) $ swap x y z) =\n    c *\\<^sub>R a", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        c *\n        a $\n        (if (if z = x then y else if z = y then x else z) = x then y\n         else if (if z = x then y else if z = y then x else z) = y then x\n              else if z = x then y else if z = y then x else z)) =\n    c *\\<^sub>R a", "apply(rule vec_extensionality)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>z.\n           c *\n           a $\n           (if (if z = x then y else if z = y then x else z) = x then y\n            else if (if z = x then y else if z = y then x else z) = y then x\n                 else if z = x then y else if z = y then x else z)) $\n       i =\n       (c *\\<^sub>R a) $ i", "by(auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  RSadj x y (?c5 *\\<^sub>R RSadj x y ?a5) = ?c5 *\\<^sub>R ?a5\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "have heq':\"(\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))) = (?g' \\<circ> ?f')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))) =\n    RSadj x y \\<circ>\n    (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))) =\n    (\\<lambda>xa.\n        RSadj x y (xa *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xb.\n       xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)) =\n       RSadj x y (xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))", "using OUren[OF ORA, of I x y \"sol s\"]"], ["proof (prove)\nusing this:\n  ODE_sem I (OUrename x y ODE) (sol s) =\n  RSadj x y (ODE_sem I ODE (RSadj x y (sol s)))\n\ngoal (1 subgoal):\n 1. \\<And>xb.\n       xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)) =\n       RSadj x y (xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xb.\n       ODE_sem I (OUrename x y ODE) (sol s) =\n       RSadj x y (ODE_sem I ODE (RSadj x y (sol s))) \\<Longrightarrow>\n       xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)) =\n       RSadj x y\n        (xb *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s))))", "subgoal for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y ODE) (sol s) =\n    RSadj x y (ODE_sem I ODE (RSadj x y (sol s))) \\<Longrightarrow>\n    c *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)) =\n    RSadj x y (c *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s))))", "using RSadj_scale[of c \"ODE_sem I ODE (RSadj x y (sol s))\"]"], ["proof (prove)\nusing this:\n  RSadj x y (c *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s)))) =\n  c *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))\n\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y ODE) (sol s) =\n    RSadj x y (ODE_sem I ODE (RSadj x y (sol s))) \\<Longrightarrow>\n    c *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)) =\n    RSadj x y (c *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (sol s))))", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))) =\n  RSadj x y \\<circ>\n  (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n        (at s within {0..t})", "show \"((\\<lambda>t. RSadj x y (sol t)) has_derivative (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s)))) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n     (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n     (at s within {0..t})", "using heq heq' hderiv"], ["proof (prove)\nusing this:\n  (\\<lambda>t. RSadj x y (sol t)) = RSadj x y \\<circ> sol\n  (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))) =\n  RSadj x y \\<circ>\n  (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s))\n  (RSadj x y \\<circ> sol has_derivative\n   RSadj x y \\<circ>\n   (\\<lambda>t'. t' *\\<^sub>R ODE_sem I (OUrename x y ODE) (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n     (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n     (at s within {0..t})", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol s))))\n   (at s within {0..t})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s5 \\<in> {0..t} \\<Longrightarrow>\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol ?s5))))\n   (at ?s5 within {0..t})\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol xa))))\n        (at xa within {0..t})", "then"], ["proof (chain)\npicking this:\n  ?s5 \\<in> {0..t} \\<Longrightarrow>\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol ?s5))))\n   (at ?s5 within {0..t})", "show \"\\<forall>xa\\<in>{0..t}. ((\\<lambda>t. RSadj x y (sol t)) has_derivative (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol xa)))) (at xa within {0..t})\""], ["proof (prove)\nusing this:\n  ?s5 \\<in> {0..t} \\<Longrightarrow>\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol ?s5))))\n   (at ?s5 within {0..t})\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol xa))))\n        (at xa within {0..t})", "by auto"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>{0..t}.\n     ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n      (\\<lambda>xb. xb *\\<^sub>R ODE_sem I ODE (RSadj x y (sol xa))))\n      (at xa within {0..t})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sol_lemma2:\n  assumes ORA:\"ORadmit ODE\"\n  assumes t:\"0 \\<le> t\"\n  assumes fml:\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)\"\n  assumes sol:\"(sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t} {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\"\n  shows \"((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t} \n          {xa. mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I (FUrename x y \\<phi>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n     (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n     {0..t}\n     {xa.\n      mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa\n      \\<in> fml_sem I (FUrename x y \\<phi>)}", "apply(unfold solves_ode_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I (OUrename x y ODE) (RSadj x y (sol t))))\n     {0..t} \\<and>\n    (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I (FUrename x y \\<phi>)}", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I (OUrename x y ODE) (RSadj x y (sol t))))\n     {0..t}\n 2. (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I (FUrename x y \\<phi>)}", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I (FUrename x y \\<phi>)}\n 2. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I (OUrename x y ODE) (RSadj x y (sol t))))\n     {0..t}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. RSadj x y (sol t))\n    \\<in> {0..t} \\<rightarrow>\n          {xa.\n           mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa\n           \\<in> fml_sem I (FUrename x y \\<phi>)}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "assume t:\"0 \\<le> s\" \"s \\<le> t\""], ["proof (state)\nthis:\n  0 \\<le> s\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "have ivl:\"s \\<in> {0..t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {0..t}", "using t"], ["proof (prove)\nusing this:\n  0 \\<le> s\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t}", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..t}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "have \"mk_v I ODE (sol 0,b) (sol s) \\<in> fml_sem I \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>", "using solves_odeD(2)[OF sol ivl]"], ["proof (prove)\nusing this:\n  sol s \\<in> {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\n\ngoal (1 subgoal):\n 1. mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>", "by auto"], ["proof (state)\nthis:\n  mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "then"], ["proof (chain)\npicking this:\n  mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>", "have \"Radj x y (mk_v I ODE (sol 0, b) (sol s)) \\<in> fml_sem I (FUrename x y \\<phi>)\""], ["proof (prove)\nusing this:\n  mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I ODE (sol 0, b) (sol s))\n    \\<in> fml_sem I (FUrename x y \\<phi>)", "using Radj_cancel[of x y \"(mk_v I ODE (sol 0, b) (sol s))\"]"], ["proof (prove)\nusing this:\n  mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>\n  Radj x y (Radj x y (mk_v I ODE (sol 0, b) (sol s))) =\n  mk_v I ODE (sol 0, b) (sol s)\n\ngoal (1 subgoal):\n 1. Radj x y (mk_v I ODE (sol 0, b) (sol s))\n    \\<in> fml_sem I (FUrename x y \\<phi>)", "by (simp add: fml)"], ["proof (state)\nthis:\n  Radj x y (mk_v I ODE (sol 0, b) (sol s))\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>0 \\<le> xa; xa \\<le> t\\<rbrakk>\n       \\<Longrightarrow> mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol xa))\n                         \\<in> fml_sem I (FUrename x y \\<phi>)", "then"], ["proof (chain)\npicking this:\n  Radj x y (mk_v I ODE (sol 0, b) (sol s))\n  \\<in> fml_sem I (FUrename x y \\<phi>)", "show \" mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol s)) \\<in> fml_sem I (FUrename x y \\<phi>)\""], ["proof (prove)\nusing this:\n  Radj x y (mk_v I ODE (sol 0, b) (sol s))\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b)\n     (RSadj x y (sol s))\n    \\<in> fml_sem I (FUrename x y \\<phi>)", "using mkv_lemma[OF ORA, of x y I \"RSadj x y (sol 0)\" \"RSadj x y b\" \"RSadj x y (sol s)\"]"], ["proof (prove)\nusing this:\n  Radj x y (mk_v I ODE (sol 0, b) (sol s))\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n  Radj x y\n   (mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b)\n     (RSadj x y (sol s))) =\n  mk_v I ODE (RSadj x y (RSadj x y (sol 0)), RSadj x y (RSadj x y b))\n   (RSadj x y (RSadj x y (sol s)))\n\ngoal (1 subgoal):\n 1. mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b)\n     (RSadj x y (sol s))\n    \\<in> fml_sem I (FUrename x y \\<phi>)", "by (simp add: RSadj_cancel \\<open>mk_v I ODE (sol 0, b) (sol s) \\<in> fml_sem I \\<phi>\\<close> fml)"], ["proof (state)\nthis:\n  mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b)\n   (RSadj x y (sol s))\n  \\<in> fml_sem I (FUrename x y \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_vderiv_on\n     (\\<lambda>t. ODE_sem I (OUrename x y ODE) (RSadj x y (sol t))))\n     {0..t}", "apply (unfold has_vderiv_on_def has_vector_derivative_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol xa))))\n        (at xa within {0..t})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol xa))))\n        (at xa within {0..t})", "have \"\\<And>s. s\\<in>{0..t} \\<Longrightarrow>  ((\\<lambda>t. RSadj x y (sol t)) has_derivative (\\<lambda>xb. xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "assume s:\"s \\<in>{0..t}\""], ["proof (state)\nthis:\n  s \\<in> {0..t}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?g = \"RSadj x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?g' = \"RSadj x y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?f = \"sol\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?f' = \"(\\<lambda>xb. xb *\\<^sub>R RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "let ?h = \"?g \\<circ> ?f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have fun_eq:\"(\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)) = (\\<lambda>xb. xb *\\<^sub>R RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)) =\n    (\\<lambda>xb.\n        xb *\\<^sub>R\n        RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       t' *\\<^sub>R ODE_sem I ODE (sol s) =\n       t' *\\<^sub>R\n       RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))", "using OUren[OF ORA, of I x y, of \"RSadj x y (sol s)\"] RSadj_cancel"], ["proof (prove)\nusing this:\n  ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n  RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s))))\n  RSadj ?x ?y (RSadj ?x ?y ?\\<nu>) = ?\\<nu>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       t' *\\<^sub>R ODE_sem I ODE (sol s) =\n       t' *\\<^sub>R\n       RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)) =\n  (\\<lambda>xb.\n      xb *\\<^sub>R\n      RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have fun_eq1:\"(\\<lambda>\\<nu>. (\\<chi> i. RSadj x y \\<nu> $ i)) = RSadj x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) = RSadj x y", "by(rule ext, rule vec_extensionality, simp)"], ["proof (state)\nthis:\n  (\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) = RSadj x y\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have \"s \\<in> {0..t} \\<Longrightarrow> (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s))) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n     (at s within {0..t})", "using solves_odeD(1)[OF sol]"], ["proof (prove)\nusing this:\n  (sol has_vderiv_on (\\<lambda>t. ODE_sem I ODE (sol t))) {0..t}\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n     (at s within {0..t})", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..t}.\n     (sol has_derivative (\\<lambda>xa. xa *\\<^sub>R ODE_sem I ODE (sol x)))\n      (at x within {0..t})\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n     (at s within {0..t})", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "then"], ["proof (chain)\npicking this:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n   (at s within {0..t})", "have fderiv:\"s \\<in> {0..t} \\<Longrightarrow> (?f has_derivative ?f') (at s within {0..t})\""], ["proof (prove)\nusing this:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>xb.\n         xb *\\<^sub>R\n         RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))\n     (at s within {0..t})", "using fun_eq"], ["proof (prove)\nusing this:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)))\n   (at s within {0..t})\n  (\\<lambda>t'. t' *\\<^sub>R ODE_sem I ODE (sol s)) =\n  (\\<lambda>xb.\n      xb *\\<^sub>R\n      RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n\ngoal (1 subgoal):\n 1. s \\<in> {0..t} \\<Longrightarrow>\n    (sol has_derivative\n     (\\<lambda>xb.\n         xb *\\<^sub>R\n         RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))\n     (at s within {0..t})", "by auto"], ["proof (state)\nthis:\n  s \\<in> {0..t} \\<Longrightarrow>\n  (sol has_derivative\n   (\\<lambda>xb.\n       xb *\\<^sub>R\n       RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have \"((\\<lambda>\\<nu>. (\\<chi> i. RSadj x y \\<nu> $ i)) has_derivative (\\<lambda>\\<nu>'. (\\<chi> i . RSadj x y \\<nu>' $ i))) (at (?f s) within ?f ` {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n     (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n     (at (sol s) within sol ` {0..t})", "apply(rule has_derivative_vec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       ((\\<lambda>\\<nu>. RSadj x y \\<nu> $ i) has_derivative\n        (\\<lambda>\\<nu>'. RSadj x y \\<nu>' $ i))\n        (at (sol s) within sol ` {0..t})", "apply(auto simp add: RSadj_def intro:derivative_eq_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ((\\<lambda>\\<nu>. \\<nu> $ x) has_derivative\n     (\\<lambda>\\<nu>'. \\<nu>' $ x))\n     (at (sol s) within sol ` {0..t})\n 2. x \\<noteq> y \\<Longrightarrow>\n    ((\\<lambda>\\<nu>. \\<nu> $ y) has_derivative\n     (\\<lambda>\\<nu>'. \\<nu>' $ y))\n     (at (sol s) within sol ` {0..t})\n 3. \\<And>i.\n       \\<lbrakk>i \\<noteq> y; i \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>\\<nu>. \\<nu> $ i) has_derivative\n                          (\\<lambda>\\<nu>'. \\<nu>' $ i))\n                          (at (sol s) within sol ` {0..t})", "by (simp add: has_derivative_at_withinI has_derivative_proj')+"], ["proof (state)\nthis:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})", "have gderiv:\"(RSadj x y has_derivative (RSadj x y)) (at (?f s) within ?f ` {0..t})\""], ["proof (prove)\nusing this:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})\n\ngoal (1 subgoal):\n 1. (RSadj x y has_derivative RSadj x y) (at (sol s) within sol ` {0..t})", "using fun_eq1"], ["proof (prove)\nusing this:\n  ((\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) has_derivative\n   (\\<lambda>\\<nu>'. \\<chi>i. RSadj x y \\<nu>' $ i))\n   (at (sol s) within sol ` {0..t})\n  (\\<lambda>\\<nu>. \\<chi>i. RSadj x y \\<nu> $ i) = RSadj x y\n\ngoal (1 subgoal):\n 1. (RSadj x y has_derivative RSadj x y) (at (sol s) within sol ` {0..t})", "by auto"], ["proof (state)\nthis:\n  (RSadj x y has_derivative RSadj x y) (at (sol s) within sol ` {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have hderiv:\"(?h has_derivative (?g' \\<circ> ?f')) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (RSadj x y \\<circ> sol has_derivative\n     RSadj x y \\<circ>\n     (\\<lambda>xb.\n         xb *\\<^sub>R\n         RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))\n     (at s within {0..t})", "by (rule diff_chain_within[OF fderiv gderiv], rule s)"], ["proof (state)\nthis:\n  (RSadj x y \\<circ> sol has_derivative\n   RSadj x y \\<circ>\n   (\\<lambda>xb.\n       xb *\\<^sub>R\n       RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have heq:\"(\\<lambda>t. RSadj x y (sol t)) = ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. RSadj x y (sol t)) = RSadj x y \\<circ> sol", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t. RSadj x y (sol t)) = (\\<lambda>xa. RSadj x y (sol xa))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>t. RSadj x y (sol t)) = RSadj x y \\<circ> sol\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have RSadj_scale:\"\\<And>c a. RSadj x y (c *\\<^sub>R RSadj x y a) = c *\\<^sub>R a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c a. RSadj x y (c *\\<^sub>R RSadj x y a) = c *\\<^sub>R a", "subgoal for c a"], ["proof (prove)\ngoal (1 subgoal):\n 1. RSadj x y (c *\\<^sub>R RSadj x y a) = c *\\<^sub>R a", "unfolding RSadj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z. (c *\\<^sub>R (\\<chi>z. a $ swap x y z)) $ swap x y z) =\n    c *\\<^sub>R a", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>z.\n        c *\n        a $\n        (if (if z = x then y else if z = y then x else z) = x then y\n         else if (if z = x then y else if z = y then x else z) = y then x\n              else if z = x then y else if z = y then x else z)) =\n    c *\\<^sub>R a", "apply(rule vec_extensionality)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       (\\<chi>z.\n           c *\n           a $\n           (if (if z = x then y else if z = y then x else z) = x then y\n            else if (if z = x then y else if z = y then x else z) = y then x\n                 else if z = x then y else if z = y then x else z)) $\n       i =\n       (c *\\<^sub>R a) $ i", "by(auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  RSadj x y (?c5 *\\<^sub>R RSadj x y ?a5) = ?c5 *\\<^sub>R ?a5\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "have heq':\"(\\<lambda>xb. xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))) = (?g' \\<circ> ?f')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xb.\n        xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))) =\n    RSadj x y \\<circ>\n    (\\<lambda>xb.\n        xb *\\<^sub>R\n        RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>xb.\n        xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))) =\n    (\\<lambda>xa.\n        RSadj x y\n         (xa *\\<^sub>R\n          RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xb.\n       xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n       RSadj x y\n        (xb *\\<^sub>R\n         RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))", "using OUren[OF ORA, of I x y \"RSadj x y (sol s)\"]"], ["proof (prove)\nusing this:\n  ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n  RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s))))\n\ngoal (1 subgoal):\n 1. \\<And>xb.\n       xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n       RSadj x y\n        (xb *\\<^sub>R\n         RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xb.\n       ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n       RSadj x y\n        (ODE_sem I ODE (RSadj x y (RSadj x y (sol s)))) \\<Longrightarrow>\n       xb *\\<^sub>R\n       RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s)))) =\n       RSadj x y\n        (xb *\\<^sub>R\n         RSadj x y\n          (RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s))))))", "subgoal for c"], ["proof (prove)\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n    RSadj x y\n     (ODE_sem I ODE (RSadj x y (RSadj x y (sol s)))) \\<Longrightarrow>\n    c *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s)))) =\n    RSadj x y\n     (c *\\<^sub>R\n      RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s))))))", "using RSadj_scale[of c \"ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))\"] RSadj_cancel[of x y \"sol s\"]\n             RSadj_cancel[of x y \"ODE_sem I ODE (sol s)\"]"], ["proof (prove)\nusing this:\n  RSadj x y\n   (c *\\<^sub>R\n    RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))) =\n  c *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))\n  RSadj x y (RSadj x y (sol s)) = sol s\n  RSadj x y (RSadj x y (ODE_sem I ODE (sol s))) = ODE_sem I ODE (sol s)\n\ngoal (1 subgoal):\n 1. ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)) =\n    RSadj x y\n     (ODE_sem I ODE (RSadj x y (RSadj x y (sol s)))) \\<Longrightarrow>\n    c *\\<^sub>R RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s)))) =\n    RSadj x y\n     (c *\\<^sub>R\n      RSadj x y (RSadj x y (ODE_sem I ODE (RSadj x y (RSadj x y (sol s))))))", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<lambda>xb.\n      xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))) =\n  RSadj x y \\<circ>\n  (\\<lambda>xb.\n      xb *\\<^sub>R\n      RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> {0..t} \\<Longrightarrow>\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n        (at s within {0..t})", "show \"((\\<lambda>t. RSadj x y (sol t)) has_derivative (\\<lambda>xb. xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))) (at s within {0..t})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n     (\\<lambda>xb.\n         xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n     (at s within {0..t})", "using heq heq' hderiv"], ["proof (prove)\nusing this:\n  (\\<lambda>t. RSadj x y (sol t)) = RSadj x y \\<circ> sol\n  (\\<lambda>xb.\n      xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))) =\n  RSadj x y \\<circ>\n  (\\<lambda>xb.\n      xb *\\<^sub>R\n      RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n  (RSadj x y \\<circ> sol has_derivative\n   RSadj x y \\<circ>\n   (\\<lambda>xb.\n       xb *\\<^sub>R\n       RSadj x y (ODE_sem I (OUrename x y ODE) (RSadj x y (sol s)))))\n   (at s within {0..t})\n\ngoal (1 subgoal):\n 1. ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n     (\\<lambda>xb.\n         xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n     (at s within {0..t})", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb.\n       xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol s))))\n   (at s within {0..t})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?s5 \\<in> {0..t} \\<Longrightarrow>\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb.\n       xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol ?s5))))\n   (at ?s5 within {0..t})\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol xa))))\n        (at xa within {0..t})", "then"], ["proof (chain)\npicking this:\n  ?s5 \\<in> {0..t} \\<Longrightarrow>\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb.\n       xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol ?s5))))\n   (at ?s5 within {0..t})", "show \"\\<forall>xa\\<in>{0..t}. ((\\<lambda>t. RSadj x y (sol t)) has_derivative (\\<lambda>xb. xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol xa)))) (at xa within {0..t})\""], ["proof (prove)\nusing this:\n  ?s5 \\<in> {0..t} \\<Longrightarrow>\n  ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n   (\\<lambda>xb.\n       xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol ?s5))))\n   (at ?s5 within {0..t})\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>{0..t}.\n       ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n        (\\<lambda>xb.\n            xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol xa))))\n        (at xa within {0..t})", "by blast"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>{0..t}.\n     ((\\<lambda>t. RSadj x y (sol t)) has_derivative\n      (\\<lambda>xb.\n          xb *\\<^sub>R ODE_sem I (OUrename x y ODE) (RSadj x y (sol xa))))\n      (at xa within {0..t})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PUren_FUren:\n  assumes good_interp:\"is_interp I\"\n  shows\n    \"(PRadmit \\<alpha> \\<longrightarrow> hpsafe \\<alpha> \\<longrightarrow> (\\<forall> \\<nu> \\<omega>. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<longleftrightarrow> (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>))\n    \\<and> (FRadmit \\<phi> \\<longrightarrow> fsafe \\<phi> \\<longrightarrow> (\\<forall> \\<nu>. \\<nu> \\<in> fml_sem I (FUrename x y \\<phi>) \\<longleftrightarrow> (Radj x y \\<nu>) \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (PRadmit \\<alpha> \\<longrightarrow>\n     hpsafe \\<alpha> \\<longrightarrow>\n     (\\<forall>\\<nu> \\<omega>.\n         ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n         ((Radj x y \\<nu>, Radj x y \\<omega>)\n          \\<in> prog_sem I \\<alpha>))) \\<and>\n    (FRadmit \\<phi> \\<longrightarrow>\n     fsafe \\<phi> \\<longrightarrow>\n     (\\<forall>\\<nu>.\n         (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n         (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)))", "proof(induction rule: PRadmit_FRadmit.induct)"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>\\<theta>1 \\<theta>2.\n       fsafe (Geq \\<theta>1 \\<theta>2) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu>\n            \\<in> fml_sem I (FUrename x y (Geq \\<theta>1 \\<theta>2))) =\n           (Radj x y \\<nu> \\<in> fml_sem I (Geq \\<theta>1 \\<theta>2)))\n 9. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 10. \\<And>\\<phi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                              (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\nA total of 13 subgoals...", "case (FRadmit_Geq \\<theta>1 \\<theta>2)"], ["proof (state)\nthis:\n  \n\ngoal (13 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>\\<theta>1 \\<theta>2.\n       fsafe (Geq \\<theta>1 \\<theta>2) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu>\n            \\<in> fml_sem I (FUrename x y (Geq \\<theta>1 \\<theta>2))) =\n           (Radj x y \\<nu> \\<in> fml_sem I (Geq \\<theta>1 \\<theta>2)))\n 9. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 10. \\<And>\\<phi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                              (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fsafe (Geq \\<theta>1 \\<theta>2) \\<longrightarrow>\n    (\\<forall>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y (Geq \\<theta>1 \\<theta>2))) =\n        (Radj x y \\<nu> \\<in> fml_sem I (Geq \\<theta>1 \\<theta>2)))", "using TUren[OF good_interp]"], ["proof (prove)\nusing this:\n  dsafe ?\\<theta> \\<Longrightarrow>\n  dterm_sem I (TUrename ?x ?y ?\\<theta>) ?\\<nu> =\n  dterm_sem I ?\\<theta> (Radj ?x ?y ?\\<nu>)\n\ngoal (1 subgoal):\n 1. fsafe (Geq \\<theta>1 \\<theta>2) \\<longrightarrow>\n    (\\<forall>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y (Geq \\<theta>1 \\<theta>2))) =\n        (Radj x y \\<nu> \\<in> fml_sem I (Geq \\<theta>1 \\<theta>2)))", "by auto"], ["proof (state)\nthis:\n  fsafe (Geq \\<theta>1 \\<theta>2) \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y (Geq \\<theta>1 \\<theta>2))) =\n      (Radj x y \\<nu> \\<in> fml_sem I (Geq \\<theta>1 \\<theta>2)))\n\ngoal (12 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 12 subgoals...", "case (FRadmit_Exists \\<phi> z)"], ["proof (state)\nthis:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (12 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))", "have\n    FRA:\"FRadmit \\<phi>\"\n    and IH:\"fsafe \\<phi> \\<Longrightarrow>  (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\nusing this:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (1 subgoal):\n 1. FRadmit \\<phi> &&&\n    (fsafe \\<phi> \\<Longrightarrow>\n     (\\<And>\\<nu>.\n         (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n         (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (12 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 12 subgoals...", "have \"fsafe (Exists z \\<phi>) \\<Longrightarrow>  (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsafe (Exists z \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n        (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>)))", "apply (cases \"z = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<nu>.\n       \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>\n                          \\<in> fml_sem I\n                                 (FUrename x y (Exists z \\<phi>))) =\n                         (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n 2. \\<And>\\<nu>.\n       \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>\n                          \\<in> fml_sem I\n                                 (FUrename x y (Exists z \\<phi>))) =\n                         (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "assume fsafe:\"fsafe (Exists z \\<phi>)\""], ["proof (state)\nthis:\n  fsafe (Exists z \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "assume zx:\"z = x\""], ["proof (state)\nthis:\n  z = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "from fsafe"], ["proof (chain)\npicking this:\n  fsafe (Exists z \\<phi>)", "have fsafe':\"fsafe \\<phi>\""], ["proof (prove)\nusing this:\n  fsafe (Exists z \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe \\<phi>", "by auto"], ["proof (state)\nthis:\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have IH':\"(\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n       (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)", "by (rule IH[OF fsafe'])"], ["proof (state)\nthis:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"(\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))", "using zx"], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (repv \\<nu> y r) \\<in> fml_sem I (FUrename x y \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>))) =\n    (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (Radj x y (repv \\<nu> y r)) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>)", "using IH'"], ["proof (prove)\nusing this:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (repv (Radj x y \\<nu>) x r) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>) =\n    (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>)", "using Radj_repv1[of x y \\<nu>]"], ["proof (prove)\nusing this:\n  Radj x y (repv \\<nu> y ?r) = repv (Radj x y \\<nu>) x ?r\n\ngoal (1 subgoal):\n 1. (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>) =\n    (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "using zx"], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z = x\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "show \"(\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\""], ["proof (prove)\nusing this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>)))\n  (\\<nu> \\<in> fml_sem I (Exists y (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>r. repv \\<nu> y r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. Radj x y (repv \\<nu> y r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. repv (Radj x y \\<nu>) x r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>\n                          \\<in> fml_sem I\n                                 (FUrename x y (Exists z \\<phi>))) =\n                         (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "apply (cases \"z = y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<nu>.\n       \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>\n                          \\<in> fml_sem I\n                                 (FUrename x y (Exists z \\<phi>))) =\n                         (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n 2. \\<And>\\<nu>.\n       \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>\n                          \\<in> fml_sem I\n                                 (FUrename x y (Exists z \\<phi>))) =\n                         (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "assume fsafe:\"fsafe (Exists z \\<phi>)\""], ["proof (state)\nthis:\n  fsafe (Exists z \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "assume zx:\"z = y\""], ["proof (state)\nthis:\n  z = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "from fsafe"], ["proof (chain)\npicking this:\n  fsafe (Exists z \\<phi>)", "have fsafe':\"fsafe \\<phi>\""], ["proof (prove)\nusing this:\n  fsafe (Exists z \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe \\<phi>", "by auto"], ["proof (state)\nthis:\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have IH':\"(\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n       (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)", "by (rule IH[OF fsafe'])"], ["proof (state)\nthis:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"(\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))", "using zx"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (repv \\<nu> x r) \\<in> fml_sem I (FUrename x y \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>))) =\n    (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (Radj x y (repv \\<nu> x r)) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>)", "using IH'"], ["proof (prove)\nusing this:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (repv (Radj x y \\<nu>) y r) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>) =\n    (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>)", "using Radj_repv2[of x y \\<nu>]"], ["proof (prove)\nusing this:\n  Radj x y (repv \\<nu> x ?r) = repv (Radj x y \\<nu>) y ?r\n\ngoal (1 subgoal):\n 1. (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>) =\n    (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "using zx"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "show \"(\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\""], ["proof (prove)\nusing this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>)))\n  (\\<nu> \\<in> fml_sem I (Exists x (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>r. repv \\<nu> x r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. Radj x y (repv \\<nu> x r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. repv (Radj x y \\<nu>) y r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>\n                          \\<in> fml_sem I\n                                 (FUrename x y (Exists z \\<phi>))) =\n                         (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "assume fsafe:\"fsafe (Exists z \\<phi>)\""], ["proof (state)\nthis:\n  fsafe (Exists z \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "assume zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\""], ["proof (state)\nthis:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "from fsafe"], ["proof (chain)\npicking this:\n  fsafe (Exists z \\<phi>)", "have fsafe':\"fsafe \\<phi>\""], ["proof (prove)\nusing this:\n  fsafe (Exists z \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe \\<phi>", "by auto"], ["proof (state)\nthis:\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have IH':\"(\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n       (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)", "by (rule IH[OF fsafe'])"], ["proof (state)\nthis:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"(\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (repv \\<nu> z r) \\<in> fml_sem I (FUrename x y \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>))) =\n    (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (Radj x y (repv \\<nu> z r)) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>)", "using IH'"], ["proof (prove)\nusing this:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (\\<exists>r. (repv (Radj x y \\<nu>) z r) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>) =\n    (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>)", "using Radj_repv3[of z x y \\<nu>, OF zx zy]"], ["proof (prove)\nusing this:\n  Radj x y (repv \\<nu> z ?r) = repv (Radj x y \\<nu>) z ?r\n\ngoal (1 subgoal):\n 1. (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>) =\n    (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "have \"... = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "using zx"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n\ngoal (1 subgoal):\n 1. (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fsafe (Exists z \\<phi>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>\n                       \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n                      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "show \"(\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) = (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\""], ["proof (prove)\nusing this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>)))\n  (\\<nu> \\<in> fml_sem I (Exists z (FUrename x y \\<phi>))) =\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>r. repv \\<nu> z r \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. Radj x y (repv \\<nu> z r) \\<in> fml_sem I \\<phi>) =\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>)\n  (\\<exists>r. repv (Radj x y \\<nu>) z r \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n    (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fsafe (Exists z \\<phi>) \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (12 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  fsafe (Exists z \\<phi>) \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I (Exists z \\<phi>))", "show ?case"], ["proof (prove)\nusing this:\n  fsafe (Exists z \\<phi>) \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I (Exists z \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (Exists z \\<phi>) \\<longrightarrow>\n    (\\<forall>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n        (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  fsafe (Exists z \\<phi>) \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y (Exists z \\<phi>))) =\n      (Radj x y \\<nu> \\<in> fml_sem I (Exists z \\<phi>)))\n\ngoal (11 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 11 subgoals...", "case (PRadmit_Assign z \\<theta>)"], ["proof (state)\nthis:\n  \n\ngoal (11 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 11 subgoals...", "have \"hpsafe (Assign z \\<theta>) \\<Longrightarrow>  (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>)  \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (Assign z \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hpsafe (z := \\<theta>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (z := \\<theta>)))", "apply (cases \"z = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (z := \\<theta>))\n 2. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (z := \\<theta>))", "subgoal for \\<nu> \\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "assume fsafe:\"hpsafe (Assign z \\<theta>)\""], ["proof (state)\nthis:\n  hpsafe (z := \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "assume zx:\"z = x\""], ["proof (state)\nthis:\n  z = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "from fsafe"], ["proof (chain)\npicking this:\n  hpsafe (z := \\<theta>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\nusing this:\n  hpsafe (z := \\<theta>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by auto"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have IH':\"(\\<And>\\<nu>. dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n       dterm_sem I \\<theta> (Radj x y \\<nu>)", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "using TUren[OF good_interp dsafe , of x y \\<nu>]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n  dterm_sem I \\<theta> (Radj x y \\<nu>)\n\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I (Assign y (TUrename x y \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>))", "using zx"], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>)) =\n    (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using IH'"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using Radj_repv1"], ["proof (prove)\nusing this:\n  Radj ?x ?y (repv ?\\<nu> ?y ?r) = repv (Radj ?x ?y ?\\<nu>) ?x ?r\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using zx"], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (Assign z \\<theta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "show \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (Assign z \\<theta>))\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (y := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repv \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (z := \\<theta>))", "apply (cases \"z = y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (z := \\<theta>))\n 2. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (z := \\<theta>))", "subgoal for \\<nu> \\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "assume fsafe:\"hpsafe (Assign z \\<theta>)\""], ["proof (state)\nthis:\n  hpsafe (z := \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "assume zy:\"z = y\""], ["proof (state)\nthis:\n  z = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "from fsafe"], ["proof (chain)\npicking this:\n  hpsafe (z := \\<theta>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\nusing this:\n  hpsafe (z := \\<theta>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by auto"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have IH':\"(\\<And>\\<nu>. dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n       dterm_sem I \\<theta> (Radj x y \\<nu>)", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "using TUren[OF good_interp dsafe , of x y \\<nu>]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n  dterm_sem I \\<theta> (Radj x y \\<nu>)\n\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I (Assign x (TUrename x y \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>))", "using zy"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>)) =\n    (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using IH'"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using Radj_repv2"], ["proof (prove)\nusing this:\n  Radj ?x ?y (repv ?\\<nu> ?x ?r) = repv (Radj ?x ?y ?\\<nu>) ?y ?r\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using zy"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (Assign z \\<theta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "show \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (Assign z \\<theta>))\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (x := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repv \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (z := \\<theta>))", "subgoal for \\<nu> \\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "assume fsafe:\"hpsafe (Assign z \\<theta>)\""], ["proof (state)\nthis:\n  hpsafe (z := \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "assume zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\""], ["proof (state)\nthis:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "from fsafe"], ["proof (chain)\npicking this:\n  hpsafe (z := \\<theta>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\nusing this:\n  hpsafe (z := \\<theta>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by auto"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have IH':\"(\\<And>\\<nu>. dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n       dterm_sem I \\<theta> (Radj x y \\<nu>)", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "using TUren[OF good_interp dsafe , of x y \\<nu>]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n  dterm_sem I \\<theta> (Radj x y \\<nu>)\n\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I (Assign z (TUrename x y \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>))", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>)) =\n    (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using IH'"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = (Radj x y \\<omega> = repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using Radj_repv3[OF zx zy]"], ["proof (prove)\nusing this:\n  Radj x y (repv ?\\<nu> z ?r) = repv (Radj x y ?\\<nu>) z ?r\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (Assign z \\<theta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (z := \\<theta>); z \\<noteq> x; z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (z := \\<theta>))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "show \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (Assign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (Assign z \\<theta>))\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (z := TUrename x y \\<theta>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repv \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repv \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repv (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (z := \\<theta>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  hpsafe (z := \\<theta>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (11 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (xa := \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (xa := \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (xa := \\<theta>)))\n 2. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 4. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 6. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 7. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 8. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 9. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 10. \\<And>\\<phi> \\<psi>.\n        \\<lbrakk>FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n         FRadmit \\<psi>;\n         fsafe \\<psi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<phi> && \\<psi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I (\\<phi> && \\<psi>)))\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  hpsafe (z := \\<theta>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (z := \\<theta>))", "show ?case"], ["proof (prove)\nusing this:\n  hpsafe (z := \\<theta>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (z := \\<theta>))\n\ngoal (1 subgoal):\n 1. hpsafe (z := \\<theta>) \\<longrightarrow>\n    (\\<forall>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (z := \\<theta>)))", "by auto"], ["proof (state)\nthis:\n  hpsafe (z := \\<theta>) \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (z := \\<theta>))) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>)\n       \\<in> prog_sem I (z := \\<theta>)))\n\ngoal (10 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 3. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 6. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 7. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 8. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 9. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 10. \\<And>\\<alpha> \\<phi>.\n        \\<lbrakk>PRadmit \\<alpha>;\n         hpsafe \\<alpha> \\<longrightarrow>\n         (\\<forall>\\<nu> \\<omega>.\n             ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n             ((Radj x y \\<nu>, Radj x y \\<omega>)\n              \\<in> prog_sem I \\<alpha>));\n         FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe\n                           (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I\n(\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 3. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 6. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 7. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 8. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 9. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 10. \\<And>\\<alpha> \\<phi>.\n        \\<lbrakk>PRadmit \\<alpha>;\n         hpsafe \\<alpha> \\<longrightarrow>\n         (\\<forall>\\<nu> \\<omega>.\n             ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n             ((Radj x y \\<nu>, Radj x y \\<omega>)\n              \\<in> prog_sem I \\<alpha>));\n         FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe\n                           (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I\n(\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "case (PRadmit_DiffAssign z \\<theta>)"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 3. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 6. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 7. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 8. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 9. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 10. \\<And>\\<alpha> \\<phi>.\n        \\<lbrakk>PRadmit \\<alpha>;\n         hpsafe \\<alpha> \\<longrightarrow>\n         (\\<forall>\\<nu> \\<omega>.\n             ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n             ((Radj x y \\<nu>, Radj x y \\<omega>)\n              \\<in> prog_sem I \\<alpha>));\n         FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe\n                           (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I\n(\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"hpsafe (DiffAssign z \\<theta>) \\<Longrightarrow>  (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>)  \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (DiffAssign z \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hpsafe (DiffAssign z \\<theta>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (DiffAssign z \\<theta>)))", "apply (cases \"z = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I\n                                 (PUrename x y (DiffAssign z \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (DiffAssign z \\<theta>))\n 2. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I\n                                 (PUrename x y (DiffAssign z \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (DiffAssign z \\<theta>))", "subgoal for \\<nu> \\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "assume fsafe:\"hpsafe (DiffAssign z \\<theta>)\""], ["proof (state)\nthis:\n  hpsafe (DiffAssign z \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "assume zx:\"z = x\""], ["proof (state)\nthis:\n  z = x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "from fsafe"], ["proof (chain)\npicking this:\n  hpsafe (DiffAssign z \\<theta>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\nusing this:\n  hpsafe (DiffAssign z \\<theta>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by auto"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have IH':\"(\\<And>\\<nu>. dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n       dterm_sem I \\<theta> (Radj x y \\<nu>)", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "using TUren[OF good_interp dsafe , of x y \\<nu>]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n  dterm_sem I \\<theta> (Radj x y \\<nu>)\n\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))", "using zx"], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>))) =\n    (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using IH'"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using Radj_repd1"], ["proof (prove)\nusing this:\n  Radj ?x ?y (repd ?\\<nu> ?y ?r) = repd (Radj ?x ?y ?\\<nu>) ?x ?r\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using zx"], ["proof (prove)\nusing this:\n  z = x\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (DiffAssign z \\<theta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (DiffAssign z \\<theta>))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z = x\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))", "show \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (DiffAssign z \\<theta>))\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>)))\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign y (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repd \\<nu> y (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> y (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (DiffAssign z \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I\n                                 (PUrename x y (DiffAssign z \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (DiffAssign z \\<theta>))", "apply (cases \"z = y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I\n                                 (PUrename x y (DiffAssign z \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (DiffAssign z \\<theta>))\n 2. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n        z \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I\n                                 (PUrename x y (DiffAssign z \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (DiffAssign z \\<theta>))", "subgoal for \\<nu> \\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "assume fsafe:\"hpsafe (DiffAssign z \\<theta>)\""], ["proof (state)\nthis:\n  hpsafe (DiffAssign z \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "assume zy:\"z = y\""], ["proof (state)\nthis:\n  z = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "from fsafe"], ["proof (chain)\npicking this:\n  hpsafe (DiffAssign z \\<theta>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\nusing this:\n  hpsafe (DiffAssign z \\<theta>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by auto"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have IH':\"(\\<And>\\<nu>. dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n       dterm_sem I \\<theta> (Radj x y \\<nu>)", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "using TUren[OF good_interp dsafe , of x y \\<nu>]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n  dterm_sem I \\<theta> (Radj x y \\<nu>)\n\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))", "using zy"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>))) =\n    (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using IH'"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using Radj_repd2"], ["proof (prove)\nusing this:\n  Radj ?x ?y (repd ?\\<nu> ?x ?r) = repd (Radj ?x ?y ?\\<nu>) ?y ?r\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using zy"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (DiffAssign z \\<theta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (DiffAssign z \\<theta>))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x; z = y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))", "show \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (DiffAssign z \\<theta>))\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>)))\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign x (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repd \\<nu> x (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> x (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) y (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (DiffAssign z \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n        z \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                          \\<in> prog_sem I\n                                 (PUrename x y (DiffAssign z \\<theta>))) =\n                         ((Radj x y \\<nu>, Radj x y \\<omega>)\n                          \\<in> prog_sem I (DiffAssign z \\<theta>))", "subgoal for \\<nu> \\<omega>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "assume fsafe:\"hpsafe (DiffAssign z \\<theta>)\""], ["proof (state)\nthis:\n  hpsafe (DiffAssign z \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "assume zx:\"z \\<noteq> x\" and zy:\"z \\<noteq> y\""], ["proof (state)\nthis:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "from fsafe"], ["proof (chain)\npicking this:\n  hpsafe (DiffAssign z \\<theta>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\nusing this:\n  hpsafe (DiffAssign z \\<theta>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by auto"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have IH':\"(\\<And>\\<nu>. dterm_sem I (TUrename x y \\<theta>) \\<nu> = dterm_sem I \\<theta> (Radj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n       dterm_sem I \\<theta> (Radj x y \\<nu>)", "subgoal for \\<nu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "using TUren[OF good_interp dsafe , of x y \\<nu>]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n  dterm_sem I \\<theta> (Radj x y \\<nu>)\n\ngoal (1 subgoal):\n 1. dterm_sem I (TUrename x y \\<theta>) \\<nu> =\n    dterm_sem I \\<theta> (Radj x y \\<nu>)", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))", "using zx zy"], ["proof (prove)\nusing this:\n  z \\<noteq> x\n  z \\<noteq> y\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>))) =\n    (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using IH'"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y \\<theta>) ?\\<nu>6 =\n  dterm_sem I \\<theta> (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n    (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))", "by auto"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = (Radj x y \\<omega> = repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "using Radj_repd3[OF zx zy]"], ["proof (prove)\nusing this:\n  Radj x y (repd ?\\<nu> z ?r) = repd (Radj x y ?\\<nu>) z ?r\n\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n    (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "moreover"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (DiffAssign z \\<theta>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<omega> =\n     repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (DiffAssign z \\<theta>))", "by auto"], ["proof (state)\nthis:\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>hpsafe (DiffAssign z \\<theta>); z \\<noteq> x;\n     z \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> ((\\<nu>, \\<omega>)\n                       \\<in> prog_sem I\n                              (PUrename x y (DiffAssign z \\<theta>))) =\n                      ((Radj x y \\<nu>, Radj x y \\<omega>)\n                       \\<in> prog_sem I (DiffAssign z \\<theta>))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))", "show \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem  I (DiffAssign z \\<theta>))\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>)))\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (DiffAssign z (TUrename x y \\<theta>))) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>))\n  (\\<omega> = repd \\<nu> z (dterm_sem I (TUrename x y \\<theta>) \\<nu>)) =\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (\\<omega> = repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>))))\n  (Radj x y \\<omega> =\n   Radj x y (repd \\<nu> z (dterm_sem I \\<theta> (Radj x y \\<nu>)))) =\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>)))\n  (Radj x y \\<omega> =\n   repd (Radj x y \\<nu>) z (dterm_sem I \\<theta> (Radj x y \\<nu>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (DiffAssign z \\<theta>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  hpsafe (DiffAssign z \\<theta>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (10 subgoals):\n 1. \\<And>xa \\<theta>.\n       hpsafe (DiffAssign xa \\<theta>) \\<longrightarrow>\n       (\\<forall>\\<nu> \\<omega>.\n           ((\\<nu>, \\<omega>)\n            \\<in> prog_sem I (PUrename x y (DiffAssign xa \\<theta>))) =\n           ((Radj x y \\<nu>, Radj x y \\<omega>)\n            \\<in> prog_sem I (DiffAssign xa \\<theta>)))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 3. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 5. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 6. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 7. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 8. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 9. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 10. \\<And>\\<alpha> \\<phi>.\n        \\<lbrakk>PRadmit \\<alpha>;\n         hpsafe \\<alpha> \\<longrightarrow>\n         (\\<forall>\\<nu> \\<omega>.\n             ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n             ((Radj x y \\<nu>, Radj x y \\<omega>)\n              \\<in> prog_sem I \\<alpha>));\n         FRadmit \\<phi>;\n         fsafe \\<phi> \\<longrightarrow>\n         (\\<forall>\\<nu>.\n             (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n             (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n        \\<Longrightarrow> fsafe\n                           (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                          (\\<forall>\\<nu>.\n                              (\\<nu>\n                               \\<in> fml_sem I\n(FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                              (Radj x y \\<nu>\n                               \\<in> fml_sem I\n(\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  hpsafe (DiffAssign z \\<theta>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))", "show ?case"], ["proof (prove)\nusing this:\n  hpsafe (DiffAssign z \\<theta>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5)\n   \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5)\n   \\<in> prog_sem I (DiffAssign z \\<theta>))\n\ngoal (1 subgoal):\n 1. hpsafe (DiffAssign z \\<theta>) \\<longrightarrow>\n    (\\<forall>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (DiffAssign z \\<theta>)))", "by auto"], ["proof (state)\nthis:\n  hpsafe (DiffAssign z \\<theta>) \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>)\n       \\<in> prog_sem I (PUrename x y (DiffAssign z \\<theta>))) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>)\n       \\<in> prog_sem I (DiffAssign z \\<theta>)))\n\ngoal (9 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 2. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 5. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 6. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 8. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 9. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 2. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 5. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 6. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 8. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 9. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "case (PRadmit_Test \\<phi>)"], ["proof (state)\nthis:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (9 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 2. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 5. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 6. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 8. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 9. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))", "have FRA:\"FRadmit \\<phi>\"\n  and IH:\"fsafe \\<phi> \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\nusing this:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (1 subgoal):\n 1. FRadmit \\<phi> &&&\n    (fsafe \\<phi> \\<Longrightarrow>\n     (\\<And>\\<nu>.\n         (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n         (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (9 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 2. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 5. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 6. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 8. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 9. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"hpsafe (? \\<phi>) \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "assume hpsafe:\"hpsafe (? \\<phi>)\""], ["proof (state)\nthis:\n  hpsafe (? \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "fix \\<nu> \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "from hpsafe"], ["proof (chain)\npicking this:\n  hpsafe (? \\<phi>)", "have fsafe:\"fsafe \\<phi>\""], ["proof (prove)\nusing this:\n  hpsafe (? \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe \\<phi>", "by auto"], ["proof (state)\nthis:\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "have IH':\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n       (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)", "by (rule IH[OF fsafe])"], ["proof (state)\nthis:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) = (\\<nu> = \\<omega> \\<and> (\\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n    (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))", "by (cases \\<omega>, auto)"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "have \"... = (\\<nu> = \\<omega> \\<and> (Radj x y \\<omega>) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> = \\<omega> \\<and>\n     \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>)", "using IH'"], ["proof (prove)\nusing this:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<nu> = \\<omega> \\<and>\n     \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "have \"... = (Radj x y \\<nu> = Radj x y \\<omega> \\<and> (Radj x y \\<omega>) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n     Radj x y \\<omega> \\<in> fml_sem I \\<phi>)", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n     Radj x y \\<omega> \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n     Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))", "by (cases \"Radj x y \\<omega>\", auto)"], ["proof (state)\nthis:\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))", "show \"?thesis \\<nu> \\<omega>\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<nu> = \\<omega> \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n  (\\<nu> = \\<omega> \\<and> Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n  (Radj x y \\<nu> = Radj x y \\<omega> \\<and>\n   Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hpsafe (? \\<phi>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (? \\<phi>))\n\ngoal (9 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (? \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (? \\<phi>)))\n 2. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 4. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 5. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 6. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 7. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 8. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 9. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  hpsafe (? \\<phi>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (? \\<phi>))", "show ?case"], ["proof (prove)\nusing this:\n  hpsafe (? \\<phi>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (? \\<phi>))\n\ngoal (1 subgoal):\n 1. hpsafe (? \\<phi>) \\<longrightarrow>\n    (\\<forall>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  hpsafe (? \\<phi>) \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (? \\<phi>))) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (? \\<phi>)))\n\ngoal (8 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 7. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 8. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 7. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 8. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "case (FRadmit_Prop p args)"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 7. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 8. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:", "have \"fsafe (Prop p args) \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y (Prop p args))) = ((Radj x y \\<nu>) \\<in> fml_sem I (Prop p args)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "assume fsafe:\"fsafe (Prop p args)\""], ["proof (state)\nthis:\n  fsafe ($\\<phi> p args)\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "fix \\<nu>"], ["proof (state)\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "from fsafe"], ["proof (chain)\npicking this:\n  fsafe ($\\<phi> p args)", "have dsafes:\"\\<And>i. dsafe (args i)\""], ["proof (prove)\nusing this:\n  fsafe ($\\<phi> p args)\n\ngoal (1 subgoal):\n 1. \\<And>i. dsafe (args i)", "using dfree_is_dsafe"], ["proof (prove)\nusing this:\n  fsafe ($\\<phi> p args)\n  dfree ?\\<theta> \\<Longrightarrow> dsafe ?\\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>i. dsafe (args i)", "by auto"], ["proof (state)\nthis:\n  dsafe (args ?i6)\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "have IH:\"\\<And>i \\<nu>. dterm_sem I (TUrename x y (args i)) \\<nu> = dterm_sem I (args i) (Radj x y \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i \\<nu>.\n       dterm_sem I (TUrename x y (args i)) \\<nu> =\n       dterm_sem I (args i) (Radj x y \\<nu>)", "using TUren[OF good_interp dsafes]"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename ?x ?y (args ?i7)) ?\\<nu> =\n  dterm_sem I (args ?i7) (Radj ?x ?y ?\\<nu>)\n\ngoal (1 subgoal):\n 1. \\<And>i \\<nu>.\n       dterm_sem I (TUrename x y (args i)) \\<nu> =\n       dterm_sem I (args i) (Radj x y \\<nu>)", "by auto"], ["proof (state)\nthis:\n  dterm_sem I (TUrename x y (args ?i6)) ?\\<nu>6 =\n  dterm_sem I (args ?i6) (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "have \"(\\<nu> \\<in> fml_sem I (FUrename x y (Prop p args))) = (\\<nu> \\<in> fml_sem I (Prop p (\\<lambda>i . TUrename x y (args i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n    (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i))))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i))))\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i))))\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "have \"... = (Predicates I p (\\<chi> i. dterm_sem I (TUrename x y (args i)) \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu>\n     \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i)))) =\n    Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>)", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i)))) =\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>)\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i)))) =\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>)\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "have \"... = (Predicates I p (\\<chi> i. dterm_sem I (args i) (Radj x y \\<nu>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>) =\n    Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>))", "using IH"], ["proof (prove)\nusing this:\n  dterm_sem I (TUrename x y (args ?i6)) ?\\<nu>6 =\n  dterm_sem I (args ?i6) (Radj x y ?\\<nu>6)\n\ngoal (1 subgoal):\n 1. Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>) =\n    Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>))", "by auto"], ["proof (state)\nthis:\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>) =\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>))\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "moreover"], ["proof (state)\nthis:\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>) =\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>))\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "have \"... = ((Radj x y \\<nu>) \\<in> fml_sem I (Prop p args))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>)) =\n    (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args))", "by auto"], ["proof (state)\nthis:\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>)) =\n  (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args))\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i))))\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i)))) =\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>)\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>) =\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>))\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>)) =\n  (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args))", "show \"?thesis \\<nu>\""], ["proof (prove)\nusing this:\n  (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i))))\n  (\\<nu> \\<in> fml_sem I ($\\<phi> p (\\<lambda>i. TUrename x y (args i)))) =\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>)\n  Predicates I p (\\<chi>i. dterm_sem I (TUrename x y (args i)) \\<nu>) =\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>))\n  Predicates I p (\\<chi>i. dterm_sem I (args i) (Radj x y \\<nu>)) =\n  (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args))\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n    (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args))", "by blast"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fsafe ($\\<phi> p args) \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I ($\\<phi> p args))\n\ngoal (8 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>p args.\n       fsafe ($\\<phi> p args) \\<longrightarrow>\n       (\\<forall>\\<nu>.\n           (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n           (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n 6. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 7. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 8. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  fsafe ($\\<phi> p args) \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I ($\\<phi> p args))", "show ?case"], ["proof (prove)\nusing this:\n  fsafe ($\\<phi> p args) \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I ($\\<phi> p args))\n\ngoal (1 subgoal):\n 1. fsafe ($\\<phi> p args) \\<longrightarrow>\n    (\\<forall>\\<nu>.\n        (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n        (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))", "by auto"], ["proof (state)\nthis:\n  fsafe ($\\<phi> p args) \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y ($\\<phi> p args))) =\n      (Radj x y \\<nu> \\<in> fml_sem I ($\\<phi> p args)))\n\ngoal (7 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 6. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 7. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 6. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 7. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "case (PRadmit_Sequence a b)"], ["proof (state)\nthis:\n  PRadmit a\n  PRadmit b\n  hpsafe a \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\n  hpsafe b \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I b))\n\ngoal (7 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 6. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 7. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  PRadmit a\n  PRadmit b\n  hpsafe a \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\n  hpsafe b \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I b))", "have IH1:\"hpsafe a \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\"\n    and  IH2:\"hpsafe b \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I b))\""], ["proof (prove)\nusing this:\n  PRadmit a\n  PRadmit b\n  hpsafe a \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\n  hpsafe b \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I b))\n\ngoal (1 subgoal):\n 1. (hpsafe a \\<Longrightarrow>\n     (\\<And>\\<nu> \\<omega>.\n         ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n         ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))) &&&\n    (hpsafe b \\<Longrightarrow>\n     (\\<And>\\<nu> \\<omega>.\n         ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n         ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I b)))", "by auto"], ["proof (state)\nthis:\n  hpsafe a \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a)\n  hpsafe b \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y b)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I b)\n\ngoal (7 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 6. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 7. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"hpsafe (a ;; b) \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;;b))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "assume hpsafe:\"hpsafe (a ;; b)\""], ["proof (state)\nthis:\n  hpsafe (a ;; b)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "fix \\<nu> \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "from hpsafe"], ["proof (chain)\npicking this:\n  hpsafe (a ;; b)", "have safe1:\"hpsafe a\" and safe2:\"hpsafe b\""], ["proof (prove)\nusing this:\n  hpsafe (a ;; b)\n\ngoal (1 subgoal):\n 1. hpsafe a &&& hpsafe b", "by auto"], ["proof (state)\nthis:\n  hpsafe a\n  hpsafe b\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have IH1:\"(\\<And>\\<mu>. ((\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a)) = ((Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<mu>.\n       ((\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a)) =\n       ((Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a)", "using IH1[OF safe1]"], ["proof (prove)\nusing this:\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a)\n\ngoal (1 subgoal):\n 1. \\<And>\\<mu>.\n       ((\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a)) =\n       ((Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a)", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, ?\\<mu>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y \\<nu>, Radj x y ?\\<mu>5) \\<in> prog_sem I a)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have IH2:\"(\\<And>\\<mu>. ((\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) = ((Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<mu>.\n       ((\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n       ((Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)", "using IH2[OF safe2]"], ["proof (prove)\nusing this:\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y b)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. \\<And>\\<mu>.\n       ((\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n       ((Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)", "by auto"], ["proof (state)\nthis:\n  ((?\\<mu>5, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n  ((Radj x y ?\\<mu>5, Radj x y \\<omega>) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;;b))) = ((\\<nu>, \\<omega>) \\<in> prog_sem I ((PUrename x y a) ;;(PUrename x y b)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n    ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b))\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b))\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have \"... = (\\<exists>\\<mu>. (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and> (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y a ;; PUrename x y b)) =\n    (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b))\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b))\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have \"... = (\\<exists>\\<mu>. (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and> (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n    (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n        (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)", "using IH1 IH2"], ["proof (prove)\nusing this:\n  ((\\<nu>, ?\\<mu>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y \\<nu>, Radj x y ?\\<mu>5) \\<in> prog_sem I a)\n  ((?\\<mu>5, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n  ((Radj x y ?\\<mu>5, Radj x y \\<omega>) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n    (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n        (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have \"... = (\\<exists>\\<mu>. (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and> (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n        (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n    (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n        (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa ba.\n       \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n        (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa ba.\n                            (Radj x y \\<nu>, aa, ba)\n                            \\<in> prog_sem I a \\<and>\n                            ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\n 2. \\<And>aa ba.\n       \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n        ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa ba.\n                            (Radj x y \\<nu>, Radj x y (aa, ba))\n                            \\<in> prog_sem I a \\<and>\n                            (Radj x y (aa, ba), Radj x y \\<omega>)\n                            \\<in> prog_sem I b", "subgoal for aa ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n     (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa ba.\n                         (Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a \\<and>\n                         ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b", "apply(rule exI[where x=\"fst(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n     (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>bb.\n                         (Radj x y \\<nu>, fst (Radj x y (aa, ba)), bb)\n                         \\<in> prog_sem I a \\<and>\n                         ((fst (Radj x y (aa, ba)), bb), Radj x y \\<omega>)\n                         \\<in> prog_sem I b", "apply(rule exI[where x=\"snd(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n     (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>, fst (Radj x y (aa, ba)),\n                       snd (Radj x y (aa, ba)))\n                      \\<in> prog_sem I a \\<and>\n                      ((fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))),\n                       Radj x y \\<omega>)\n                      \\<in> prog_sem I b", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa ba.\n       \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n        ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa ba.\n                            (Radj x y \\<nu>, Radj x y (aa, ba))\n                            \\<in> prog_sem I a \\<and>\n                            (Radj x y (aa, ba), Radj x y \\<omega>)\n                            \\<in> prog_sem I b", "subgoal for aa ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa ba.\n                         (Radj x y \\<nu>, Radj x y (aa, ba))\n                         \\<in> prog_sem I a \\<and>\n                         (Radj x y (aa, ba), Radj x y \\<omega>)\n                         \\<in> prog_sem I b", "apply(rule exI[where x=\"fst(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> \\<exists>bb.\n                         (Radj x y \\<nu>,\n                          Radj x y (fst (Radj x y (aa, ba)), bb))\n                         \\<in> prog_sem I a \\<and>\n                         (Radj x y (fst (Radj x y (aa, ba)), bb),\n                          Radj x y \\<omega>)\n                         \\<in> prog_sem I b", "apply(rule exI[where x=\"snd(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>,\n                       Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))))\n                      \\<in> prog_sem I a \\<and>\n                      (Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))),\n                       Radj x y \\<omega>)\n                      \\<in> prog_sem I b", "using Radj_cancel"], ["proof (prove)\nusing this:\n  Radj ?x ?y (Radj ?x ?y ?\\<nu>) = ?\\<nu>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I b\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>,\n                       Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))))\n                      \\<in> prog_sem I a \\<and>\n                      (Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))),\n                       Radj x y \\<omega>)\n                      \\<in> prog_sem I b", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;;b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n        (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b))", "by (auto,blast)"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b))\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b))\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b))", "show \"?thesis \\<nu> \\<omega>\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b))\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a ;; PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b))\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I b) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b))\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b))", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hpsafe (a ;; b) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (a ;; b))\n\ngoal (7 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a ;; b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y (a ;; b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a ;; b)))\n 4. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 5. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 6. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 7. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  hpsafe (a ;; b) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (a ;; b))", "show ?case"], ["proof (prove)\nusing this:\n  hpsafe (a ;; b) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I (a ;; b))\n\ngoal (1 subgoal):\n 1. hpsafe (a ;; b) \\<longrightarrow>\n    (\\<forall>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))", "by auto"], ["proof (state)\nthis:\n  hpsafe (a ;; b) \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a ;; b))) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a ;; b)))\n\ngoal (6 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 6. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 6. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "case (FRadmit_Diamond \\<alpha> \\<phi>)"], ["proof (state)\nthis:\n  PRadmit \\<alpha>\n  FRadmit \\<phi>\n  hpsafe \\<alpha> \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>))\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (6 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 6. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  PRadmit \\<alpha>\n  FRadmit \\<phi>\n  hpsafe \\<alpha> \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>))\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))", "have IH1:\"hpsafe \\<alpha> \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>))\"\n  and IH2:\"fsafe \\<phi> \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\nusing this:\n  PRadmit \\<alpha>\n  FRadmit \\<phi>\n  hpsafe \\<alpha> \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>))\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (1 subgoal):\n 1. (hpsafe \\<alpha> \\<Longrightarrow>\n     (\\<And>\\<nu> \\<omega>.\n         ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n         ((Radj x y \\<nu>, Radj x y \\<omega>)\n          \\<in> prog_sem I \\<alpha>))) &&&\n    (fsafe \\<phi> \\<Longrightarrow>\n     (\\<And>\\<nu>.\n         (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n         (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  hpsafe \\<alpha> \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I \\<alpha>)\n  fsafe \\<phi> \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (6 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 6. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"fsafe (\\<langle>\\<alpha>\\<rangle>\\<phi>) \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y (\\<langle>\\<alpha>\\<rangle>\\<phi>))) = (Radj x y \\<nu> \\<in> fml_sem I (\\<langle>\\<alpha>\\<rangle>\\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "assume safe:\"fsafe (\\<langle>\\<alpha>\\<rangle>\\<phi>)\""], ["proof (state)\nthis:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "fix \\<nu>"], ["proof (state)\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "from safe"], ["proof (chain)\npicking this:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>)", "have safe1:\"hpsafe \\<alpha>\" and safe2:\"fsafe \\<phi>\""], ["proof (prove)\nusing this:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe \\<alpha> &&& fsafe \\<phi>", "by auto"], ["proof (state)\nthis:\n  hpsafe \\<alpha>\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have IH1:\"\\<And>\\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>)", "using IH1[OF safe1]"], ["proof (prove)\nusing this:\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I \\<alpha>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha>)", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, ?\\<omega>5) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n  ((Radj x y \\<nu>, Radj x y ?\\<omega>5) \\<in> prog_sem I \\<alpha>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have IH2:\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n       (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)", "by (rule IH2[OF safe2])"], ["proof (state)\nthis:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"(\\<nu> \\<in> fml_sem I (FUrename x y (\\<langle>\\<alpha>\\<rangle>\\<phi>))) = (\\<nu> \\<in> fml_sem I (\\<langle>PUrename x y \\<alpha>\\<rangle>FUrename x y \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu>\n     \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n    (\\<nu>\n     \\<in> fml_sem I\n            (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu>\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  (\\<nu>\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"... = (\\<exists> \\<omega>. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and> \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu>\n     \\<in> fml_sem I\n            (\\<langle> PUrename x y\n                        \\<alpha> \\<rangle> FUrename x y \\<phi>)) =\n    (\\<exists>\\<omega>.\n        (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n        \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"... = (\\<exists> \\<omega>. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and> (Radj x y \\<omega>) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<omega>.\n        (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n        \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>\\<omega>.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n        Radj x y \\<omega> \\<in> fml_sem I \\<phi>)", "using IH1 IH2"], ["proof (prove)\nusing this:\n  ((\\<nu>, ?\\<omega>5) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n  ((Radj x y \\<nu>, Radj x y ?\\<omega>5) \\<in> prog_sem I \\<alpha>)\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<exists>\\<omega>.\n        (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n        \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (\\<exists>\\<omega>.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n        Radj x y \\<omega> \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"... = (\\<exists> \\<omega>. (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and> \\<omega> \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<omega>.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n        Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n    (\\<exists>\\<omega>.\n        (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n        \\<omega> \\<in> fml_sem I \\<phi>)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(Radj x y \\<nu>, Radj x y (a, b)) \\<in> prog_sem I \\<alpha>;\n        Radj x y (a, b) \\<in> fml_sem I \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (Radj x y \\<nu>, a, b)\n                            \\<in> prog_sem I \\<alpha> \\<and>\n                            (a, b) \\<in> fml_sem I \\<phi>\n 2. \\<And>a b.\n       \\<lbrakk>(Radj x y \\<nu>, a, b) \\<in> prog_sem I \\<alpha>;\n        (a, b) \\<in> fml_sem I \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (Radj x y \\<nu>, Radj x y (a, b))\n                            \\<in> prog_sem I \\<alpha> \\<and>\n                            Radj x y (a, b) \\<in> fml_sem I \\<phi>", "subgoal for aa ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I \\<alpha>;\n     Radj x y (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (Radj x y \\<nu>, a, b)\n                         \\<in> prog_sem I \\<alpha> \\<and>\n                         (a, b) \\<in> fml_sem I \\<phi>", "apply(rule exI[where x=\"fst(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I \\<alpha>;\n     Radj x y (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         (Radj x y \\<nu>, fst (Radj x y (aa, ba)), b)\n                         \\<in> prog_sem I \\<alpha> \\<and>\n                         (fst (Radj x y (aa, ba)), b) \\<in> fml_sem I \\<phi>", "apply(rule exI[where x=\"snd(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I \\<alpha>;\n     Radj x y (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>, fst (Radj x y (aa, ba)),\n                       snd (Radj x y (aa, ba)))\n                      \\<in> prog_sem I \\<alpha> \\<and>\n                      (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba)))\n                      \\<in> fml_sem I \\<phi>", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>(Radj x y \\<nu>, a, b) \\<in> prog_sem I \\<alpha>;\n        (a, b) \\<in> fml_sem I \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (Radj x y \\<nu>, Radj x y (a, b))\n                            \\<in> prog_sem I \\<alpha> \\<and>\n                            Radj x y (a, b) \\<in> fml_sem I \\<phi>", "subgoal for aa ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I \\<alpha>;\n     (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a b.\n                         (Radj x y \\<nu>, Radj x y (a, b))\n                         \\<in> prog_sem I \\<alpha> \\<and>\n                         Radj x y (a, b) \\<in> fml_sem I \\<phi>", "apply(rule exI[where x=\"fst(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I \\<alpha>;\n     (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         (Radj x y \\<nu>,\n                          Radj x y (fst (Radj x y (aa, ba)), b))\n                         \\<in> prog_sem I \\<alpha> \\<and>\n                         Radj x y (fst (Radj x y (aa, ba)), b)\n                         \\<in> fml_sem I \\<phi>", "apply(rule exI[where x=\"snd(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I \\<alpha>;\n     (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>,\n                       Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))))\n                      \\<in> prog_sem I \\<alpha> \\<and>\n                      Radj x y\n                       (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba)))\n                      \\<in> fml_sem I \\<phi>", "using Radj_cancel"], ["proof (prove)\nusing this:\n  Radj ?x ?y (Radj ?x ?y ?\\<nu>) = ?\\<nu>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I \\<alpha>;\n     (aa, ba) \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>,\n                       Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))))\n                      \\<in> prog_sem I \\<alpha> \\<and>\n                      Radj x y\n                       (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba)))\n                      \\<in> fml_sem I \\<phi>", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "have \"... = (Radj x y \\<nu> \\<in> fml_sem I (\\<langle>\\<alpha>\\<rangle>\\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<omega>.\n        (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n        \\<omega> \\<in> fml_sem I \\<phi>) =\n    (Radj x y \\<nu> \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<nu>\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>))\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>)\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))", "show \"?thesis \\<nu>\""], ["proof (prove)\nusing this:\n  (\\<nu>\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>))\n  (\\<nu>\n   \\<in> fml_sem I\n          (\\<langle> PUrename x y \\<alpha> \\<rangle> FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>))\n  (\\<exists>\\<omega>.\n      (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>) \\<and>\n      \\<omega> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>)\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      Radj x y \\<omega> \\<in> fml_sem I \\<phi>) =\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>)\n  (\\<exists>\\<omega>.\n      (Radj x y \\<nu>, \\<omega>) \\<in> prog_sem I \\<alpha> \\<and>\n      \\<omega> \\<in> fml_sem I \\<phi>) =\n  (Radj x y \\<nu> \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))\n\ngoal (1 subgoal):\n 1. (\\<nu>\n     \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n    (Radj x y \\<nu> \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu>\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (Radj x y \\<nu> \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n  (?\\<nu>5\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))\n\ngoal (6 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))\n 6. \\<And>\\<alpha> \\<phi>.\n       \\<lbrakk>PRadmit \\<alpha>;\n        hpsafe \\<alpha> \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y \\<alpha>)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I \\<alpha>));\n        FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe\n                          (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y\n (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I\n                                     (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "then"], ["proof (chain)\npicking this:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n  (?\\<nu>5\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))", "show ?case"], ["proof (prove)\nusing this:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<Longrightarrow>\n  (?\\<nu>5\n   \\<in> fml_sem I (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>))\n\ngoal (1 subgoal):\n 1. fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n    (\\<forall>\\<nu>.\n        (\\<nu>\n         \\<in> fml_sem I\n                (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n        (Radj x y \\<nu>\n         \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  fsafe (\\<langle> \\<alpha> \\<rangle> \\<phi>) \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu>\n       \\<in> fml_sem I\n              (FUrename x y (\\<langle> \\<alpha> \\<rangle> \\<phi>))) =\n      (Radj x y \\<nu>\n       \\<in> fml_sem I (\\<langle> \\<alpha> \\<rangle> \\<phi>)))\n\ngoal (5 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "case (PRadmit_Loop a)"], ["proof (state)\nthis:\n  PRadmit a\n  hpsafe a \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\n\ngoal (5 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "then"], ["proof (chain)\npicking this:\n  PRadmit a\n  hpsafe a \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))", "have IH:\" hpsafe a \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\""], ["proof (prove)\nusing this:\n  PRadmit a\n  hpsafe a \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\n\ngoal (1 subgoal):\n 1. hpsafe a \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))", "by auto"], ["proof (state)\nthis:\n  hpsafe a \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a)\n\ngoal (5 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "have \"hpsafe (a** ) \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a** ))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a** )))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "assume safe:\"hpsafe (a** )\""], ["proof (state)\nthis:\n  hpsafe a**\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "fix \\<nu> \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "from safe"], ["proof (chain)\npicking this:\n  hpsafe a**", "have safe:\"hpsafe a\""], ["proof (prove)\nusing this:\n  hpsafe a**\n\ngoal (1 subgoal):\n 1. hpsafe a", "by auto"], ["proof (state)\nthis:\n  hpsafe a\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have IH1:\"(\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a)", "by (rule IH[OF safe])"], ["proof (state)\nthis:\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have relpow_iff:\"\\<And>\\<nu> \\<omega> R n. ((\\<nu>, \\<omega>) \\<in> R ^^ Suc n) = (\\<exists>\\<mu>. (\\<nu>, \\<mu>) \\<in> R \\<and> (\\<mu>, \\<omega>) \\<in> R ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega> R n.\n       ((\\<nu>, \\<omega>) \\<in> R ^^ Suc n) =\n       (\\<exists>\\<mu>.\n           (\\<nu>, \\<mu>) \\<in> R \\<and> (\\<mu>, \\<omega>) \\<in> R ^^ n)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>R n x y z.\n       \\<lbrakk>(x, y) \\<in> R ^^ n; (y, z) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<mu>.\n                            (x, \\<mu>) \\<in> R \\<and>\n                            (\\<mu>, z) \\<in> R ^^ n\n 2. \\<And>\\<nu> \\<omega> R n \\<mu>.\n       \\<lbrakk>(\\<nu>, \\<mu>) \\<in> R;\n        (\\<mu>, \\<omega>) \\<in> R ^^ n\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>, \\<omega>) \\<in> R ^^ n O R", "subgoal for R n x y z"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y) \\<in> R ^^ n; (y, z) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<mu>.\n                         (x, \\<mu>) \\<in> R \\<and> (\\<mu>, z) \\<in> R ^^ n", "by (auto simp add: relpow_Suc_D2')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega> R n \\<mu>.\n       \\<lbrakk>(\\<nu>, \\<mu>) \\<in> R;\n        (\\<mu>, \\<omega>) \\<in> R ^^ n\\<rbrakk>\n       \\<Longrightarrow> (\\<nu>, \\<omega>) \\<in> R ^^ n O R", "subgoal for \\<nu> \\<omega> R n \\<mu>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<nu>, \\<mu>) \\<in> R; (\\<mu>, \\<omega>) \\<in> R ^^ n\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>, \\<omega>) \\<in> R ^^ n O R", "using relpow_Suc_I2"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?x, ?y) \\<in> ?R; (?y, ?z) \\<in> ?R ^^ ?n\\<rbrakk>\n  \\<Longrightarrow> (?x, ?z) \\<in> ?R ^^ Suc ?n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<nu>, \\<mu>) \\<in> R; (\\<mu>, \\<omega>) \\<in> R ^^ n\\<rbrakk>\n    \\<Longrightarrow> (\\<nu>, \\<omega>) \\<in> R ^^ n O R", "by fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((?\\<nu>5, ?\\<omega>5) \\<in> ?R5 ^^ Suc ?n5) =\n  (\\<exists>\\<mu>.\n      (?\\<nu>5, \\<mu>) \\<in> ?R5 \\<and>\n      (\\<mu>, ?\\<omega>5) \\<in> ?R5 ^^ ?n5)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have rtrancl_iff_relpow:\"\\<And>\\<nu> \\<omega> R. ((\\<nu>, \\<omega>) \\<in> R\\<^sup>*) = (\\<exists>n. (\\<nu>, \\<omega>) \\<in> R ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega> R.\n       ((\\<nu>, \\<omega>) \\<in> R\\<^sup>*) =\n       (\\<exists>n. (\\<nu>, \\<omega>) \\<in> R ^^ n)", "using rtrancl_imp_relpow relpow_imp_rtrancl"], ["proof (prove)\nusing this:\n  ?p \\<in> ?R\\<^sup>* \\<Longrightarrow> \\<exists>n. ?p \\<in> ?R ^^ n\n  ?p \\<in> ?R ^^ ?n \\<Longrightarrow> ?p \\<in> ?R\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega> R.\n       ((\\<nu>, \\<omega>) \\<in> R\\<^sup>*) =\n       (\\<exists>n. (\\<nu>, \\<omega>) \\<in> R ^^ n)", "by blast"], ["proof (state)\nthis:\n  ((?\\<nu>6, ?\\<omega>6) \\<in> ?R6\\<^sup>*) =\n  (\\<exists>n. (?\\<nu>6, ?\\<omega>6) \\<in> ?R6 ^^ n)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have lem:\"\\<And>n. (\\<forall> \\<nu> \\<omega>.  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)^^n) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a^^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "subgoal for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "proof(induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ 0) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ 0)\n 2. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ 0) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ 0)\n 2. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ 0) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ 0)", "using Radj_eq_iff"], ["proof (prove)\nusing this:\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ 0) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ 0)", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ 0) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ 0)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "then"], ["proof (chain)\npicking this:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "have IH2:\"\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "by auto"], ["proof (state)\nthis:\n  ((?\\<nu>7, ?\\<omega>7) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  ((Radj x y ?\\<nu>7, Radj x y ?\\<omega>7) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "have \"\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "fix \\<nu> \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) \n            = (\\<exists> \\<mu>. (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and> (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n    (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)", "using relpow_iff[of \\<nu> \\<omega> n \"prog_sem I (PUrename x y a)\"]"], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n    (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "have \"... = (\\<exists> \\<mu>. (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and> (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n    (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n        (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "using IH1 IH2"], ["proof (prove)\nusing this:\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a)\n  ((?\\<nu>7, ?\\<omega>7) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  ((Radj x y ?\\<nu>7, Radj x y ?\\<omega>7) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n        (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n    (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n        (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "moreover"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "have \"... = (\\<exists> \\<mu>. (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and> (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n        (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n    (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n        (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa b.\n       \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, b)) \\<in> prog_sem I a;\n        (Radj x y (aa, b), Radj x y \\<omega>)\n        \\<in> prog_sem I a ^^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            (Radj x y \\<nu>, aa, b)\n                            \\<in> prog_sem I a \\<and>\n                            ((aa, b), Radj x y \\<omega>)\n                            \\<in> prog_sem I a ^^ n\n 2. \\<And>aa b.\n       \\<lbrakk>(Radj x y \\<nu>, aa, b) \\<in> prog_sem I a;\n        ((aa, b), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            (Radj x y \\<nu>, Radj x y (aa, b))\n                            \\<in> prog_sem I a \\<and>\n                            (Radj x y (aa, b), Radj x y \\<omega>)\n                            \\<in> prog_sem I a ^^ n", "subgoal for aa ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n     (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa b.\n                         (Radj x y \\<nu>, aa, b) \\<in> prog_sem I a \\<and>\n                         ((aa, b), Radj x y \\<omega>)\n                         \\<in> prog_sem I a ^^ n", "apply(rule exI[where x=\"fst(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n     (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         (Radj x y \\<nu>, fst (Radj x y (aa, ba)), b)\n                         \\<in> prog_sem I a \\<and>\n                         ((fst (Radj x y (aa, ba)), b), Radj x y \\<omega>)\n                         \\<in> prog_sem I a ^^ n", "apply(rule exI[where x=\"snd(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, Radj x y (aa, ba)) \\<in> prog_sem I a;\n     (Radj x y (aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>, fst (Radj x y (aa, ba)),\n                       snd (Radj x y (aa, ba)))\n                      \\<in> prog_sem I a \\<and>\n                      ((fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))),\n                       Radj x y \\<omega>)\n                      \\<in> prog_sem I a ^^ n", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa b.\n       \\<lbrakk>(Radj x y \\<nu>, aa, b) \\<in> prog_sem I a;\n        ((aa, b), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>aa b.\n                            (Radj x y \\<nu>, Radj x y (aa, b))\n                            \\<in> prog_sem I a \\<and>\n                            (Radj x y (aa, b), Radj x y \\<omega>)\n                            \\<in> prog_sem I a ^^ n", "subgoal for aa ba"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>aa b.\n                         (Radj x y \\<nu>, Radj x y (aa, b))\n                         \\<in> prog_sem I a \\<and>\n                         (Radj x y (aa, b), Radj x y \\<omega>)\n                         \\<in> prog_sem I a ^^ n", "apply(rule exI[where x=\"fst(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b.\n                         (Radj x y \\<nu>,\n                          Radj x y (fst (Radj x y (aa, ba)), b))\n                         \\<in> prog_sem I a \\<and>\n                         (Radj x y (fst (Radj x y (aa, ba)), b),\n                          Radj x y \\<omega>)\n                         \\<in> prog_sem I a ^^ n", "apply(rule exI[where x=\"snd(Radj x y (aa,ba))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>,\n                       Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))))\n                      \\<in> prog_sem I a \\<and>\n                      (Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))),\n                       Radj x y \\<omega>)\n                      \\<in> prog_sem I a ^^ n", "using Radj_cancel"], ["proof (prove)\nusing this:\n  Radj ?x ?y (Radj ?x ?y ?\\<nu>) = ?\\<nu>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(Radj x y \\<nu>, aa, ba) \\<in> prog_sem I a;\n     ((aa, ba), Radj x y \\<omega>) \\<in> prog_sem I a ^^ n\\<rbrakk>\n    \\<Longrightarrow> (Radj x y \\<nu>,\n                       Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))))\n                      \\<in> prog_sem I a \\<and>\n                      (Radj x y\n                        (fst (Radj x y (aa, ba)), snd (Radj x y (aa, ba))),\n                       Radj x y \\<omega>)\n                      \\<in> prog_sem I a ^^ n", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "moreover"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n        (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "using relpow_iff[of \"Radj x y \\<nu>\" \"Radj x y \\<omega>\"  n \"prog_sem I a\"]"], ["proof (prove)\nusing this:\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. (\\<exists>\\<mu>.\n        (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n        (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "show \"?thesis \\<nu> \\<omega>\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n  (\\<exists>\\<mu>.\n      (\\<nu>, \\<mu>) \\<in> prog_sem I (PUrename x y a) \\<and>\n      (\\<mu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, Radj x y \\<mu>) \\<in> prog_sem I a \\<and>\n      (Radj x y \\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n  (\\<exists>\\<mu>.\n      (Radj x y \\<nu>, \\<mu>) \\<in> prog_sem I a \\<and>\n      (\\<mu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((?\\<nu>7, ?\\<omega>7) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  ((Radj x y ?\\<nu>7, Radj x y ?\\<omega>7) \\<in> prog_sem I a ^^ Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>)\n           \\<in> prog_sem I a ^^ n) \\<Longrightarrow>\n       \\<forall>\\<nu> \\<omega>.\n          ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n          ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "then"], ["proof (chain)\npicking this:\n  ((?\\<nu>7, ?\\<omega>7) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  ((Radj x y ?\\<nu>7, Radj x y ?\\<omega>7) \\<in> prog_sem I a ^^ Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  ((?\\<nu>7, ?\\<omega>7) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n  ((Radj x y ?\\<nu>7, Radj x y ?\\<omega>7) \\<in> prog_sem I a ^^ Suc n)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n       ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)", "by auto"], ["proof (state)\nthis:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ Suc n) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ ?n7) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ ?n7)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have \"((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (a** ))) = ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n    ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have \"... = (\\<exists>n. (\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a)) ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n    (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)", "using rtrancl_iff_relpow[of \\<nu> \\<omega> \"prog_sem I (PUrename x y a)\"]"], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n    (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)", "by auto"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "moreover"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have \"... = (\\<exists>n. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a) ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n    (\\<exists>n.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "using lem"], ["proof (prove)\nusing this:\n  \\<forall>\\<nu> \\<omega>.\n     ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ ?n7) =\n     ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ ?n7)\n\ngoal (1 subgoal):\n 1. (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n    (\\<exists>n.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>n. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>n. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)", "using rtrancl_iff_relpow[of \"Radj x y \\<nu>\" \"Radj x y \\<omega>\" \"prog_sem I a\"]"], ["proof (prove)\nusing this:\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*) =\n  (\\<exists>n. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n\ngoal (1 subgoal):\n 1. (\\<exists>n.\n        (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>n.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "moreover"], ["proof (state)\nthis:\n  (\\<exists>n.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "have \"... = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (a** ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**)", "by auto"], ["proof (state)\nthis:\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*)\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>n. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n  (\\<exists>n.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**)", "show \"?thesis \\<nu> \\<omega>\""], ["proof (prove)\nusing this:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*)\n  ((\\<nu>, \\<omega>) \\<in> (prog_sem I (PUrename x y a))\\<^sup>*) =\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n)\n  (\\<exists>n. (\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a) ^^ n) =\n  (\\<exists>n. (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n)\n  (\\<exists>n.\n      (Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a ^^ n) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*)\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> (prog_sem I a)\\<^sup>*) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**)\n\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**)", "by blast"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hpsafe a** \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a**)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a**)\n\ngoal (5 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>a.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I a))\\<rbrakk>\n       \\<Longrightarrow> hpsafe a** \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I (PUrename x y a**)) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I a**))\n 4. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 5. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "then"], ["proof (chain)\npicking this:\n  hpsafe a** \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a**)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a**)", "show ?case"], ["proof (prove)\nusing this:\n  hpsafe a** \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5) \\<in> prog_sem I (PUrename x y a**)) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5) \\<in> prog_sem I a**)\n\ngoal (1 subgoal):\n 1. hpsafe a** \\<longrightarrow>\n    (\\<forall>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))", "by auto"], ["proof (state)\nthis:\n  hpsafe a** \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a**)) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a**))\n\ngoal (4 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 4. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 4. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "case (PRadmit_EvolveODE ODE \\<phi>)"], ["proof (state)\nthis:\n  ORadmit ODE\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (4 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 4. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "then"], ["proof (chain)\npicking this:\n  ORadmit ODE\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))", "have ORA:\"ORadmit ODE\"\n    and IH:\"fsafe \\<phi> \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\nusing this:\n  ORadmit ODE\n  FRadmit \\<phi>\n  fsafe \\<phi> \\<longrightarrow>\n  (\\<forall>\\<nu>.\n      (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n      (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\n\ngoal (1 subgoal):\n 1. ORadmit ODE &&&\n    (fsafe \\<phi> \\<Longrightarrow>\n     (\\<And>\\<nu>.\n         (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n         (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  ORadmit ODE\n  fsafe \\<phi> \\<Longrightarrow>\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (4 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 4. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "have \"hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow> (\\<And>\\<nu> \\<omega>. ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) = ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "assume safe:\"hpsafe (EvolveODE ODE \\<phi>)\""], ["proof (state)\nthis:\n  hpsafe (EvolveODE ODE \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "fix \\<nu> \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "from safe"], ["proof (chain)\npicking this:\n  hpsafe (EvolveODE ODE \\<phi>)", "have osafe:\"osafe ODE\" and fsafe:\"fsafe \\<phi>\""], ["proof (prove)\nusing this:\n  hpsafe (EvolveODE ODE \\<phi>)\n\ngoal (1 subgoal):\n 1. osafe ODE &&& fsafe \\<phi>", "by auto"], ["proof (state)\nthis:\n  osafe ODE\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have IH1:\"\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n       (Radj x y \\<nu> \\<in> fml_sem I \\<phi>)", "by (rule IH[OF fsafe])"], ["proof (state)\nthis:\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have IH2:\"\\<And>\\<nu>. ODE_sem I (OUrename x y ODE) \\<nu> = RSadj x y (ODE_sem I ODE (RSadj x y \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       ODE_sem I (OUrename x y ODE) \\<nu> =\n       RSadj x y (ODE_sem I ODE (RSadj x y \\<nu>))", "using OUren[OF ORA]"], ["proof (prove)\nusing this:\n  ODE_sem ?I (OUrename ?x ?y ODE) ?\\<nu> =\n  RSadj ?x ?y (ODE_sem ?I ODE (RSadj ?x ?y ?\\<nu>))\n\ngoal (1 subgoal):\n 1. \\<And>\\<nu>.\n       ODE_sem I (OUrename x y ODE) \\<nu> =\n       RSadj x y (ODE_sem I ODE (RSadj x y \\<nu>))", "by auto"], ["proof (state)\nthis:\n  ODE_sem I (OUrename x y ODE) ?\\<nu>5 =\n  RSadj x y (ODE_sem I ODE (RSadj x y ?\\<nu>5))\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have RSadj_Radj:\"\\<And>a b. (RSadj x y a, RSadj x y b) = Radj x y (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b. (RSadj x y a, RSadj x y b) = Radj x y (a, b)", "unfolding RSadj_def Radj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (\\<chi>z. a $ swap x y z, \\<chi>z. b $ swap x y z) =\n       (\\<chi>z. fst (a, b) $ swap x y z, \\<chi>z. snd (a, b) $ swap x y z)", "by auto"], ["proof (state)\nthis:\n  (RSadj x y ?a5, RSadj x y ?b5) = Radj x y (?a5, ?b5)\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have Radj_swap:\"\\<And>a b. Radj x y a = b \\<Longrightarrow> a = Radj x y b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b. Radj x y a = b \\<Longrightarrow> a = Radj x y b", "using Radj_cancel Radj_eq_iff"], ["proof (prove)\nusing this:\n  Radj ?x ?y (Radj ?x ?y ?\\<nu>) = ?\\<nu>\n  (?a = ?b) = (Radj ?x ?y ?a = Radj ?x ?y ?b)\n\ngoal (1 subgoal):\n 1. \\<And>a b. Radj x y a = b \\<Longrightarrow> a = Radj x y b", "by metis"], ["proof (state)\nthis:\n  Radj x y ?a5 = ?b5 \\<Longrightarrow> ?a5 = Radj x y ?b5\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have mkv:\"\\<And>t sol b. Radj x y (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) = mk_v I ODE (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       Radj x y (mk_v I (OUrename x y ODE) (sol (0::'a), b) (sol t)) =\n       mk_v I ODE (RSadj x y (sol (0::'a)), RSadj x y b) (RSadj x y (sol t))", "using mkv_lemma[OF ORA]"], ["proof (prove)\nusing this:\n  Radj ?x ?y (mk_v ?I (OUrename ?x ?y ODE) (?a, ?b) ?c) =\n  mk_v ?I ODE (RSadj ?x ?y ?a, RSadj ?x ?y ?b) (RSadj ?x ?y ?c)\n\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       Radj x y (mk_v I (OUrename x y ODE) (sol (0::'a), b) (sol t)) =\n       mk_v I ODE (RSadj x y (sol (0::'a)), RSadj x y b) (RSadj x y (sol t))", "by blast"], ["proof (state)\nthis:\n  Radj x y (mk_v I (OUrename x y ODE) (?sol5 (0::?'a6), ?b5) (?sol5 ?t5)) =\n  mk_v I ODE (RSadj x y (?sol5 (0::?'a6)), RSadj x y ?b5)\n   (RSadj x y (?sol5 ?t5))\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have mkv2:\"\\<And>t sol b.  Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t) \\<Longrightarrow>\n      \\<omega> = mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       Radj x y \\<omega> =\n       mk_v I ODE (sol (0::'a), b) (sol t) \\<Longrightarrow>\n       \\<omega> =\n       mk_v I (OUrename x y ODE) (RSadj x y (sol (0::'a)), RSadj x y b)\n        (RSadj x y (sol t))", "using mkv_lemma[OF ORA]"], ["proof (prove)\nusing this:\n  Radj ?x ?y (mk_v ?I (OUrename ?x ?y ODE) (?a, ?b) ?c) =\n  mk_v ?I ODE (RSadj ?x ?y ?a, RSadj ?x ?y ?b) (RSadj ?x ?y ?c)\n\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       Radj x y \\<omega> =\n       mk_v I ODE (sol (0::'a), b) (sol t) \\<Longrightarrow>\n       \\<omega> =\n       mk_v I (OUrename x y ODE) (RSadj x y (sol (0::'a)), RSadj x y b)\n        (RSadj x y (sol t))", "by (metis RSadj_cancel Radj_cancel)"], ["proof (state)\nthis:\n  Radj x y \\<omega> =\n  mk_v I ODE (?sol6 (0::?'a7), ?b6) (?sol6 ?t6) \\<Longrightarrow>\n  \\<omega> =\n  mk_v I (OUrename x y ODE) (RSadj x y (?sol6 (0::?'a7)), RSadj x y ?b6)\n   (RSadj x y (?sol6 ?t6))\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have sol:\"\\<And>t sol b. 0 \\<le> t \\<Longrightarrow>\n      (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t} {xa. mk_v I (OUrename x y ODE) (sol 0, b) xa \\<in> fml_sem I (FUrename x y \\<phi>)} \\<Longrightarrow>\n      ((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t} {xa. mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I \\<phi>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       \\<lbrakk>0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n         {xa.\n          mk_v I (OUrename x y ODE) (sol 0, b) xa\n          \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I ODE))\n                          {0..t}\n                          {xa.\n                           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I \\<phi>}", "using sol_lemma IH1 IH2 ORA"], ["proof (prove)\nusing this:\n  \\<lbrakk>ORadmit ?ODE; 0 \\<le> ?t;\n   \\<And>\\<nu>.\n      (\\<nu> \\<in> fml_sem ?I (FUrename ?x ?y ?\\<phi>)) =\n      (Radj ?x ?y \\<nu> \\<in> fml_sem ?I ?\\<phi>);\n   (?sol solves_ode (\\<lambda>a. ODE_sem ?I (OUrename ?x ?y ?ODE))) {0..?t}\n    {xa.\n     mk_v ?I (OUrename ?x ?y ?ODE) (?sol 0, ?b) xa\n     \\<in> fml_sem ?I (FUrename ?x ?y ?\\<phi>)}\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t. RSadj ?x ?y (?sol t)) solves_ode\n                     (\\<lambda>a. ODE_sem ?I ?ODE))\n                     {0..?t}\n                     {xa.\n                      mk_v ?I ?ODE (RSadj ?x ?y (?sol 0), RSadj ?x ?y ?b) xa\n                      \\<in> fml_sem ?I ?\\<phi>}\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n  ODE_sem I (OUrename x y ODE) ?\\<nu>5 =\n  RSadj x y (ODE_sem I ODE (RSadj x y ?\\<nu>5))\n  ORadmit ODE\n\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       \\<lbrakk>0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n         {xa.\n          mk_v I (OUrename x y ODE) (sol 0, b) xa\n          \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I ODE))\n                          {0..t}\n                          {xa.\n                           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I \\<phi>}", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?t7;\n   (?sol7 solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..?t7}\n    {xa.\n     mk_v I (OUrename x y ODE) (?sol7 0, ?b7) xa\n     \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t. RSadj x y (?sol7 t)) solves_ode\n                     (\\<lambda>a. ODE_sem I ODE))\n                     {0..?t7}\n                     {xa.\n                      mk_v I ODE (RSadj x y (?sol7 0), RSadj x y ?b7) xa\n                      \\<in> fml_sem I \\<phi>}\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "have sol2:\"\\<And>t sol b. 0 \\<le> t \\<Longrightarrow>\n(sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t} {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>} \\<Longrightarrow>\n((\\<lambda>t. RSadj x y (sol t)) solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n {xa. mk_v I (OUrename x y ODE) (RSadj x y (sol 0), RSadj x y b) xa \\<in> fml_sem I (FUrename x y \\<phi>)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       \\<lbrakk>0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n         {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                          {0..t}\n                          {xa.\n                           mk_v I (OUrename x y ODE)\n                            (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I (FUrename x y \\<phi>)}", "using sol_lemma2 IH1 IH2 ORA"], ["proof (prove)\nusing this:\n  \\<lbrakk>ORadmit ?ODE; 0 \\<le> ?t;\n   \\<And>\\<nu>.\n      (\\<nu> \\<in> fml_sem ?I (FUrename ?x ?y ?\\<phi>)) =\n      (Radj ?x ?y \\<nu> \\<in> fml_sem ?I ?\\<phi>);\n   (?sol solves_ode (\\<lambda>a. ODE_sem ?I ?ODE)) {0..?t}\n    {x. mk_v ?I ?ODE (?sol 0, ?b) x \\<in> fml_sem ?I ?\\<phi>}\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t. RSadj ?x ?y (?sol t)) solves_ode\n                     (\\<lambda>a. ODE_sem ?I (OUrename ?x ?y ?ODE)))\n                     {0..?t}\n                     {xa.\n                      mk_v ?I (OUrename ?x ?y ?ODE)\n                       (RSadj ?x ?y (?sol 0), RSadj ?x ?y ?b) xa\n                      \\<in> fml_sem ?I (FUrename ?x ?y ?\\<phi>)}\n  (?\\<nu>5 \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y ?\\<nu>5 \\<in> fml_sem I \\<phi>)\n  ODE_sem I (OUrename x y ODE) ?\\<nu>5 =\n  RSadj x y (ODE_sem I ODE (RSadj x y ?\\<nu>5))\n  ORadmit ODE\n\ngoal (1 subgoal):\n 1. \\<And>t sol b.\n       \\<lbrakk>0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n         {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                          {0..t}\n                          {xa.\n                           mk_v I (OUrename x y ODE)\n                            (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I (FUrename x y \\<phi>)}", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?t7;\n   (?sol7 solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..?t7}\n    {x. mk_v I ODE (?sol7 0, ?b7) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n  \\<Longrightarrow> ((\\<lambda>t. RSadj x y (?sol7 t)) solves_ode\n                     (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                     {0..?t7}\n                     {xa.\n                      mk_v I (OUrename x y ODE)\n                       (RSadj x y (?sol7 0), RSadj x y ?b7) xa\n                      \\<in> fml_sem I (FUrename x y \\<phi>)}\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n    (\\<And>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "show \"?thesis \\<nu> \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<nu>, \\<omega>)\n     \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n    ((Radj x y \\<nu>, Radj x y \\<omega>)\n     \\<in> prog_sem I (EvolveODE ODE \\<phi>))", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b sol t.\n       \\<lbrakk>\\<nu> = (sol 0, b);\n        \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n         {xa.\n          mk_v I (OUrename x y ODE) (sol 0, b) xa\n          \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ba sola.\n                            Radj x y (sol 0, b) = (sola 0, ba) \\<and>\n                            (\\<exists>ta.\n                                Radj x y\n                                 (mk_v I (OUrename x y ODE) (sol 0, b)\n                                   (sol t)) =\n                                mk_v I ODE (sola 0, ba) (sola ta) \\<and>\n                                0 \\<le> ta \\<and>\n                                (sola solves_ode\n                                 (\\<lambda>a. ODE_sem I ODE))\n                                 {0..ta}\n                                 {x. mk_v I ODE (sola 0, ba) x\n                                     \\<in> fml_sem I \\<phi>})\n 2. \\<And>b sol t.\n       \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n        Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n         {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b sol.\n                            \\<nu> = (sol 0, b) \\<and>\n                            (\\<exists>t.\n                                \\<omega> =\n                                mk_v I (OUrename x y ODE) (sol 0, b)\n                                 (sol t) \\<and>\n                                0 \\<le> t \\<and>\n                                (sol solves_ode\n                                 (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                                 {0..t}\n                                 {xa.\n                                  mk_v I (OUrename x y ODE) (sol 0, b) xa\n                                  \\<in> fml_sem I (FUrename x y \\<phi>)})", "subgoal for b sol t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ba sola.\n                         Radj x y (sol 0, b) = (sola 0, ba) \\<and>\n                         (\\<exists>ta.\n                             Radj x y\n                              (mk_v I (OUrename x y ODE) (sol 0, b)\n                                (sol t)) =\n                             mk_v I ODE (sola 0, ba) (sola ta) \\<and>\n                             0 \\<le> ta \\<and>\n                             (sola solves_ode (\\<lambda>a. ODE_sem I ODE))\n                              {0..ta}\n                              {x. mk_v I ODE (sola 0, ba) x\n                                  \\<in> fml_sem I \\<phi>})", "apply(rule exI[where x= \"RSadj x y b\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>sola.\n                         Radj x y (sol 0, b) = (sola 0, RSadj x y b) \\<and>\n                         (\\<exists>ta.\n                             Radj x y\n                              (mk_v I (OUrename x y ODE) (sol 0, b)\n                                (sol t)) =\n                             mk_v I ODE (sola 0, RSadj x y b)\n                              (sola ta) \\<and>\n                             0 \\<le> ta \\<and>\n                             (sola solves_ode (\\<lambda>a. ODE_sem I ODE))\n                              {0..ta}\n                              {xa.\n                               mk_v I ODE (sola 0, RSadj x y b) xa\n                               \\<in> fml_sem I \\<phi>})", "apply(rule exI[where x= \"(\\<lambda>t. RSadj x y (sol t))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y (sol 0, b) =\n                      (RSadj x y (sol 0), RSadj x y b) \\<and>\n                      (\\<exists>ta.\n                          Radj x y\n                           (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) =\n                          mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                           (RSadj x y (sol ta)) \\<and>\n                          0 \\<le> ta \\<and>\n                          ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                           (\\<lambda>a. ODE_sem I ODE))\n                           {0..ta}\n                           {xa.\n                            mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                            \\<in> fml_sem I \\<phi>})", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y (sol 0, b) = (RSadj x y (sol 0), RSadj x y b)\n 2. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ta.\n                         Radj x y\n                          (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) =\n                         mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol ta)) \\<and>\n                         0 \\<le> ta \\<and>\n                         ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I ODE))\n                          {0..ta}\n                          {xa.\n                           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I \\<phi>}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y (sol 0, b) = (RSadj x y (sol 0), RSadj x y b)", "using RSadj_Radj[of \"sol 0\" \"b\"]"], ["proof (prove)\nusing this:\n  (RSadj x y (sol 0), RSadj x y b) = Radj x y (sol 0, b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y (sol 0, b) = (RSadj x y (sol 0), RSadj x y b)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ta.\n                         Radj x y\n                          (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) =\n                         mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol ta)) \\<and>\n                         0 \\<le> ta \\<and>\n                         ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I ODE))\n                          {0..ta}\n                          {xa.\n                           mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I \\<phi>}", "apply(rule exI[where x =t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y\n                       (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) =\n                      mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                       (RSadj x y (sol t)) \\<and>\n                      0 \\<le> t \\<and>\n                      ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I ODE))\n                       {0..t}\n                       {xa.\n                        mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I \\<phi>}", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y\n                       (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) =\n                      mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                       (RSadj x y (sol t))\n 2. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t \\<and>\n                      ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I ODE))\n                       {0..t}\n                       {xa.\n                        mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I \\<phi>}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> Radj x y\n                       (mk_v I (OUrename x y ODE) (sol 0, b) (sol t)) =\n                      mk_v I ODE (RSadj x y (sol 0), RSadj x y b)\n                       (RSadj x y (sol t))", "by (rule mkv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t \\<and>\n                      ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I ODE))\n                       {0..t}\n                       {xa.\n                        mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I \\<phi>}", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t\n 2. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I ODE))\n                       {0..t}\n                       {xa.\n                        mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I \\<phi>}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t", "by assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nu> = (sol 0, b);\n     \\<omega> = mk_v I (OUrename x y ODE) (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I (OUrename x y ODE))) {0..t}\n      {xa.\n       mk_v I (OUrename x y ODE) (sol 0, b) xa\n       \\<in> fml_sem I (FUrename x y \\<phi>)}\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I ODE))\n                       {0..t}\n                       {xa.\n                        mk_v I ODE (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I \\<phi>}", "by (rule sol)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b sol t.\n       \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n        Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n        (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n         {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b sol.\n                            \\<nu> = (sol 0, b) \\<and>\n                            (\\<exists>t.\n                                \\<omega> =\n                                mk_v I (OUrename x y ODE) (sol 0, b)\n                                 (sol t) \\<and>\n                                0 \\<le> t \\<and>\n                                (sol solves_ode\n                                 (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                                 {0..t}\n                                 {xa.\n                                  mk_v I (OUrename x y ODE) (sol 0, b) xa\n                                  \\<in> fml_sem I (FUrename x y \\<phi>)})", "subgoal for b sol t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b sol.\n                         \\<nu> = (sol 0, b) \\<and>\n                         (\\<exists>t.\n                             \\<omega> =\n                             mk_v I (OUrename x y ODE) (sol 0, b)\n                              (sol t) \\<and>\n                             0 \\<le> t \\<and>\n                             (sol solves_ode\n                              (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                              {0..t}\n                              {xa.\n                               mk_v I (OUrename x y ODE) (sol 0, b) xa\n                               \\<in> fml_sem I (FUrename x y \\<phi>)})", "apply(rule exI[where x= \"RSadj x y b\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>sol.\n                         \\<nu> = (sol 0, RSadj x y b) \\<and>\n                         (\\<exists>t.\n                             \\<omega> =\n                             mk_v I (OUrename x y ODE) (sol 0, RSadj x y b)\n                              (sol t) \\<and>\n                             0 \\<le> t \\<and>\n                             (sol solves_ode\n                              (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                              {0..t}\n                              {xa.\n                               mk_v I (OUrename x y ODE)\n                                (sol 0, RSadj x y b) xa\n                               \\<in> fml_sem I (FUrename x y \\<phi>)})", "apply(rule exI[where x= \"(\\<lambda>t. RSadj x y (sol t))\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<nu> = (RSadj x y (sol 0), RSadj x y b) \\<and>\n                      (\\<exists>t.\n                          \\<omega> =\n                          mk_v I (OUrename x y ODE)\n                           (RSadj x y (sol 0), RSadj x y b)\n                           (RSadj x y (sol t)) \\<and>\n                          0 \\<le> t \\<and>\n                          ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                           (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                           {0..t}\n                           {xa.\n                            mk_v I (OUrename x y ODE)\n                             (RSadj x y (sol 0), RSadj x y b) xa\n                            \\<in> fml_sem I (FUrename x y \\<phi>)})", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<nu> = (RSadj x y (sol 0), RSadj x y b)\n 2. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<omega> =\n                         mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol t)) \\<and>\n                         0 \\<le> t \\<and>\n                         ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                          {0..t}\n                          {xa.\n                           mk_v I (OUrename x y ODE)\n                            (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I (FUrename x y \\<phi>)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<nu> = (RSadj x y (sol 0), RSadj x y b)", "using RSadj_Radj[of \"sol 0\" \"b\"] Radj_swap[of \\<nu> \"(sol 0,b)\"]"], ["proof (prove)\nusing this:\n  (RSadj x y (sol 0), RSadj x y b) = Radj x y (sol 0, b)\n  Radj x y \\<nu> = (sol 0, b) \\<Longrightarrow> \\<nu> = Radj x y (sol 0, b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<nu> = (RSadj x y (sol 0), RSadj x y b)", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t.\n                         \\<omega> =\n                         mk_v I (OUrename x y ODE)\n                          (RSadj x y (sol 0), RSadj x y b)\n                          (RSadj x y (sol t)) \\<and>\n                         0 \\<le> t \\<and>\n                         ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                          (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                          {0..t}\n                          {xa.\n                           mk_v I (OUrename x y ODE)\n                            (RSadj x y (sol 0), RSadj x y b) xa\n                           \\<in> fml_sem I (FUrename x y \\<phi>)}", "apply(rule exI[where x =t])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<omega> =\n                      mk_v I (OUrename x y ODE)\n                       (RSadj x y (sol 0), RSadj x y b)\n                       (RSadj x y (sol t)) \\<and>\n                      0 \\<le> t \\<and>\n                      ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                       {0..t}\n                       {xa.\n                        mk_v I (OUrename x y ODE)\n                         (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I (FUrename x y \\<phi>)}", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<omega> =\n                      mk_v I (OUrename x y ODE)\n                       (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol t))\n 2. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t \\<and>\n                      ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                       {0..t}\n                       {xa.\n                        mk_v I (OUrename x y ODE)\n                         (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I (FUrename x y \\<phi>)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> \\<omega> =\n                      mk_v I (OUrename x y ODE)\n                       (RSadj x y (sol 0), RSadj x y b) (RSadj x y (sol t))", "by (rule mkv2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t \\<and>\n                      ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                       {0..t}\n                       {xa.\n                        mk_v I (OUrename x y ODE)\n                         (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I (FUrename x y \\<phi>)}", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t\n 2. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                       {0..t}\n                       {xa.\n                        mk_v I (OUrename x y ODE)\n                         (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I (FUrename x y \\<phi>)}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> t", "by assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Radj x y \\<nu> = (sol 0, b);\n     Radj x y \\<omega> = mk_v I ODE (sol 0, b) (sol t); 0 \\<le> t;\n     (sol solves_ode (\\<lambda>a. ODE_sem I ODE)) {0..t}\n      {x. mk_v I ODE (sol 0, b) x \\<in> fml_sem I \\<phi>}\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>t. RSadj x y (sol t)) solves_ode\n                       (\\<lambda>a. ODE_sem I (OUrename x y ODE)))\n                       {0..t}\n                       {xa.\n                        mk_v I (OUrename x y ODE)\n                         (RSadj x y (sol 0), RSadj x y b) xa\n                        \\<in> fml_sem I (FUrename x y \\<phi>)}", "by (rule sol2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ((\\<nu>, \\<omega>)\n   \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n  ((Radj x y \\<nu>, Radj x y \\<omega>)\n   \\<in> prog_sem I (EvolveODE ODE \\<phi>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5)\n   \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5)\n   \\<in> prog_sem I (EvolveODE ODE \\<phi>))\n\ngoal (4 subgoals):\n 1. \\<And>ODE \\<phi>.\n       \\<lbrakk>ORadmit ODE; FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (EvolveODE ODE \\<phi>))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n 2. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 3. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 4. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "then"], ["proof (chain)\npicking this:\n  hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5)\n   \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5)\n   \\<in> prog_sem I (EvolveODE ODE \\<phi>))", "show ?case"], ["proof (prove)\nusing this:\n  hpsafe (EvolveODE ODE \\<phi>) \\<Longrightarrow>\n  ((?\\<nu>5, ?\\<omega>5)\n   \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n  ((Radj x y ?\\<nu>5, Radj x y ?\\<omega>5)\n   \\<in> prog_sem I (EvolveODE ODE \\<phi>))\n\ngoal (1 subgoal):\n 1. hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n    (\\<forall>\\<nu> \\<omega>.\n        ((\\<nu>, \\<omega>)\n         \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n        ((Radj x y \\<nu>, Radj x y \\<omega>)\n         \\<in> prog_sem I (EvolveODE ODE \\<phi>)))", "by auto"], ["proof (state)\nthis:\n  hpsafe (EvolveODE ODE \\<phi>) \\<longrightarrow>\n  (\\<forall>\\<nu> \\<omega>.\n      ((\\<nu>, \\<omega>)\n       \\<in> prog_sem I (PUrename x y (EvolveODE ODE \\<phi>))) =\n      ((Radj x y \\<nu>, Radj x y \\<omega>)\n       \\<in> prog_sem I (EvolveODE ODE \\<phi>)))\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>PRadmit a;\n        hpsafe a \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y a)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>) \\<in> prog_sem I a));\n        PRadmit b;\n        hpsafe b \\<longrightarrow>\n        (\\<forall>\\<nu> \\<omega>.\n            ((\\<nu>, \\<omega>) \\<in> prog_sem I (PUrename x y b)) =\n            ((Radj x y \\<nu>, Radj x y \\<omega>)\n             \\<in> prog_sem I b))\\<rbrakk>\n       \\<Longrightarrow> hpsafe (a \\<union>\\<union> b) \\<longrightarrow>\n                         (\\<forall>\\<nu> \\<omega>.\n                             ((\\<nu>, \\<omega>)\n                              \\<in> prog_sem I\n                                     (PUrename x y\n (a \\<union>\\<union> b))) =\n                             ((Radj x y \\<nu>, Radj x y \\<omega>)\n                              \\<in> prog_sem I (a \\<union>\\<union> b)))\n 2. \\<And>\\<phi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (! \\<phi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I (FUrename x y (! \\<phi>))) =\n                             (Radj x y \\<nu> \\<in> fml_sem I (! \\<phi>)))\n 3. \\<And>\\<phi> \\<psi>.\n       \\<lbrakk>FRadmit \\<phi>;\n        fsafe \\<phi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<phi>));\n        FRadmit \\<psi>;\n        fsafe \\<psi> \\<longrightarrow>\n        (\\<forall>\\<nu>.\n            (\\<nu> \\<in> fml_sem I (FUrename x y \\<psi>)) =\n            (Radj x y \\<nu> \\<in> fml_sem I \\<psi>))\\<rbrakk>\n       \\<Longrightarrow> fsafe (\\<phi> && \\<psi>) \\<longrightarrow>\n                         (\\<forall>\\<nu>.\n                             (\\<nu>\n                              \\<in> fml_sem I\n                                     (FUrename x y (\\<phi> && \\<psi>))) =\n                             (Radj x y \\<nu>\n                              \\<in> fml_sem I (\\<phi> && \\<psi>)))", "qed (auto simp add: Radj_def)"], ["", "lemma FUren:\"is_interp I \\<Longrightarrow> FRadmit \\<phi> \\<Longrightarrow> fsafe \\<phi> \\<Longrightarrow> (\\<And>\\<nu>. (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) = (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_interp I; FRadmit \\<phi>; fsafe \\<phi>\\<rbrakk>\n    \\<Longrightarrow> (\\<And>\\<nu>.\n                          (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n                          (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))", "using PUren_FUren"], ["proof (prove)\nusing this:\n  is_interp ?I \\<Longrightarrow>\n  (PRadmit ?\\<alpha> \\<longrightarrow>\n   hpsafe ?\\<alpha> \\<longrightarrow>\n   (\\<forall>\\<nu> \\<omega>.\n       ((\\<nu>, \\<omega>) \\<in> prog_sem ?I (PUrename ?x ?y ?\\<alpha>)) =\n       ((Radj ?x ?y \\<nu>, Radj ?x ?y \\<omega>)\n        \\<in> prog_sem ?I ?\\<alpha>))) \\<and>\n  (FRadmit ?\\<phi> \\<longrightarrow>\n   fsafe ?\\<phi> \\<longrightarrow>\n   (\\<forall>\\<nu>.\n       (\\<nu> \\<in> fml_sem ?I (FUrename ?x ?y ?\\<phi>)) =\n       (Radj ?x ?y \\<nu> \\<in> fml_sem ?I ?\\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_interp I; FRadmit \\<phi>; fsafe \\<phi>\\<rbrakk>\n    \\<Longrightarrow> (\\<And>\\<nu>.\n                          (\\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)) =\n                          (Radj x y \\<nu> \\<in> fml_sem I \\<phi>))", "by blast"], ["", "subsection \\<open>Uniform Renaming Rule Soundness\\<close>"], ["", "lemma URename_sound:\"FRadmit \\<phi> \\<Longrightarrow> fsafe \\<phi> \\<Longrightarrow> valid \\<phi> \\<Longrightarrow> valid (FUrename x y \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>FRadmit \\<phi>; fsafe \\<phi>; valid \\<phi>\\<rbrakk>\n    \\<Longrightarrow> valid (FUrename x y \\<phi>)", "unfolding valid_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>FRadmit \\<phi>; fsafe \\<phi>;\n     \\<forall>I \\<nu>.\n        is_interp I \\<longrightarrow> \\<nu> \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>I \\<nu>.\n                         is_interp I \\<longrightarrow>\n                         \\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)", "using FUren"], ["proof (prove)\nusing this:\n  \\<lbrakk>is_interp ?I; FRadmit ?\\<phi>; fsafe ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> (?\\<nu> \\<in> fml_sem ?I (FUrename ?x ?y ?\\<phi>)) =\n                    (Radj ?x ?y ?\\<nu> \\<in> fml_sem ?I ?\\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FRadmit \\<phi>; fsafe \\<phi>;\n     \\<forall>I \\<nu>.\n        is_interp I \\<longrightarrow> \\<nu> \\<in> fml_sem I \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>I \\<nu>.\n                         is_interp I \\<longrightarrow>\n                         \\<nu> \\<in> fml_sem I (FUrename x y \\<phi>)", "by blast"], ["", "subsection \\<open>Bound Renaming Rule Soundness\\<close>"], ["", "lemma BRename_sound:\n  assumes FRA:\"FRadmit([[Assign x \\<theta>]]\\<phi>)\"\n  assumes fsafe:\"fsafe ([[Assign x \\<theta>]]\\<phi>)\"\n  assumes valid:\"valid ([[Assign x \\<theta>]]\\<phi>)\"\n  assumes FVF:\"{Inl y, Inr y, Inr x} \\<inter> FVF \\<phi> = {}\"\n  shows \"valid([[Assign y \\<theta>]]FUrename x y \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "have FRA':\"FRadmit \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FRadmit \\<phi>", "using FRA"], ["proof (prove)\nusing this:\n  FRadmit ([[x := \\<theta>]]\\<phi>)\n\ngoal (1 subgoal):\n 1. FRadmit \\<phi>", "by (metis (no_types, lifting) Box_def FRadmit.cases formula.distinct(15) formula.distinct(21) formula.distinct(27) formula.distinct(29) formula.distinct(3) formula.distinct(31) formula.distinct formula.distinct(9) formula.inject(3) formula.inject(6))"], ["proof (state)\nthis:\n  FRadmit \\<phi>\n\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "have fsafe':\"fsafe \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fsafe \\<phi>", "using fsafe"], ["proof (prove)\nusing this:\n  fsafe ([[x := \\<theta>]]\\<phi>)\n\ngoal (1 subgoal):\n 1. fsafe \\<phi>", "by (simp add: Box_def)"], ["proof (state)\nthis:\n  fsafe \\<phi>\n\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "have dsafe:\"dsafe \\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "using fsafe"], ["proof (prove)\nusing this:\n  fsafe ([[x := \\<theta>]]\\<phi>)\n\ngoal (1 subgoal):\n 1. dsafe \\<theta>", "by (simp add: Box_def)"], ["proof (state)\nthis:\n  dsafe \\<theta>\n\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"\\<And>I \\<nu>. is_interp I \\<Longrightarrow> \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "fix I::\"('sf,'sc,'sz) interp\" and \\<nu>::\"'sz state\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "assume good_interp:\"is_interp I\""], ["proof (state)\nthis:\n  is_interp I\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "from FVF"], ["proof (chain)\npicking this:\n  {Inl y, Inr y, Inr x} \\<inter> FVF \\<phi> = {}", "have sub:\"FVF \\<phi> \\<subseteq> -{Inl y, Inr y, Inr x}\""], ["proof (prove)\nusing this:\n  {Inl y, Inr y, Inr x} \\<inter> FVF \\<phi> = {}\n\ngoal (1 subgoal):\n 1. FVF \\<phi> \\<subseteq> - {Inl y, Inr y, Inr x}", "by auto"], ["proof (state)\nthis:\n  FVF \\<phi> \\<subseteq> - {Inl y, Inr y, Inr x}\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)) (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (-{Inl y, Inr y, Inr x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n     (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (- {Inl y, Inr y, Inr x})", "unfolding Vagree_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i.\n        Inl i \\<in> - {Inl y, Inr y, Inr x} \\<longrightarrow>\n        fst (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)) $ i =\n        fst (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) $ i) \\<and>\n    (\\<forall>i.\n        Inr i \\<in> - {Inl y, Inr y, Inr x} \\<longrightarrow>\n        snd (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)) $ i =\n        snd (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) $ i)", "using FVF"], ["proof (prove)\nusing this:\n  {Inl y, Inr y, Inr x} \\<inter> FVF \\<phi> = {}\n\ngoal (1 subgoal):\n 1. (\\<forall>i.\n        Inl i \\<in> - {Inl y, Inr y, Inr x} \\<longrightarrow>\n        fst (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)) $ i =\n        fst (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) $ i) \\<and>\n    (\\<forall>i.\n        Inr i \\<in> - {Inl y, Inr y, Inr x} \\<longrightarrow>\n        snd (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)) $ i =\n        snd (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) $ i)", "unfolding Radj_def RSadj_def"], ["proof (prove)\nusing this:\n  {Inl y, Inr y, Inr x} \\<inter> FVF \\<phi> = {}\n\ngoal (1 subgoal):\n 1. (\\<forall>i.\n        Inl i \\<in> - {Inl y, Inr y, Inr x} \\<longrightarrow>\n        fst (repv\n              (\\<chi>z. fst \\<nu> $ swap x y z,\n               \\<chi>z. snd \\<nu> $ swap x y z)\n              x (dterm_sem I \\<theta> \\<nu>)) $\n        i =\n        fst (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) $ i) \\<and>\n    (\\<forall>i.\n        Inr i \\<in> - {Inl y, Inr y, Inr x} \\<longrightarrow>\n        snd (repv\n              (\\<chi>z. fst \\<nu> $ swap x y z,\n               \\<chi>z. snd \\<nu> $ swap x y z)\n              x (dterm_sem I \\<theta> \\<nu>)) $\n        i =\n        snd (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) $ i)", "by auto"], ["proof (state)\nthis:\n  Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n   (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (- {Inl y, Inr y, Inr x})\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "then"], ["proof (chain)\npicking this:\n  Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n   (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (- {Inl y, Inr y, Inr x})", "have agree:\"Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)) (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (FVF \\<phi>)\""], ["proof (prove)\nusing this:\n  Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n   (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (- {Inl y, Inr y, Inr x})\n\ngoal (1 subgoal):\n 1. Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n     (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (FVF \\<phi>)", "using agree_sub[OF sub]"], ["proof (prove)\nusing this:\n  Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n   (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (- {Inl y, Inr y, Inr x})\n  Vagree ?\\<nu> ?\\<omega> (- {Inl y, Inr y, Inr x}) \\<Longrightarrow>\n  Vagree ?\\<nu> ?\\<omega> (FVF \\<phi>)\n\ngoal (1 subgoal):\n 1. Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n     (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (FVF \\<phi>)", "by auto"], ["proof (state)\nthis:\n  Vagree (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>))\n   (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>)) (FVF \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have fml_sem_eq:\"(repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>) = (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I \\<phi>) =\n    (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>)", "using coincidence_formula[OF fsafe' Iagree_refl agree]"], ["proof (prove)\nusing this:\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem ?I \\<phi>) =\n  (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem ?I \\<phi>)\n\ngoal (1 subgoal):\n 1. (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I \\<phi>) =\n    (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>) =\n  (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"(\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)) = (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I (FUrename x y \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)) =\n    (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I (FUrename x y \\<phi>))", "by auto"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)) =\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "moreover"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)) =\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"... = (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n     \\<in> fml_sem I \\<phi>)", "using FUren[OF good_interp FRA' fsafe']"], ["proof (prove)\nusing this:\n  (?\\<nu> \\<in> fml_sem I (FUrename ?x ?y \\<phi>)) =\n  (Radj ?x ?y ?\\<nu> \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I (FUrename x y \\<phi>)) =\n    (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n     \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "moreover"], ["proof (state)\nthis:\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"... = (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n     \\<in> fml_sem I \\<phi>) =\n    (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I \\<phi>)", "using Radj_repv1"], ["proof (prove)\nusing this:\n  Radj ?x ?y (repv ?\\<nu> ?y ?r) = repv (Radj ?x ?y ?\\<nu>) ?x ?r\n\ngoal (1 subgoal):\n 1. (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n     \\<in> fml_sem I \\<phi>) =\n    (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>) =\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "moreover"], ["proof (state)\nthis:\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>) =\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"... = (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I \\<phi>) =\n    (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))", "using fml_sem_eq"], ["proof (prove)\nusing this:\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>) =\n  (repv \\<nu> x (dterm_sem I \\<theta> \\<nu>) \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n     \\<in> fml_sem I \\<phi>) =\n    (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))", "by auto"], ["proof (state)\nthis:\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>) =\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "moreover"], ["proof (state)\nthis:\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>) =\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "have \"... = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True", "using valid"], ["proof (prove)\nusing this:\n  valid ([[x := \\<theta>]]\\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True", "unfolding valid_def"], ["proof (prove)\nusing this:\n  \\<forall>I \\<nu>.\n     is_interp I \\<longrightarrow>\n     \\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True", "using good_interp"], ["proof (prove)\nusing this:\n  \\<forall>I \\<nu>.\n     is_interp I \\<longrightarrow>\n     \\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)\n  is_interp I\n\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True", "by blast"], ["proof (state)\nthis:\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True\n\ngoal (1 subgoal):\n 1. \\<And>I \\<nu>.\n       is_interp I \\<Longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)) =\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>))\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>)\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>) =\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>)\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>) =\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True", "show \"\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)\""], ["proof (prove)\nusing this:\n  (\\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)) =\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>))\n  (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I (FUrename x y \\<phi>)) =\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>)\n  (Radj x y (repv \\<nu> y (dterm_sem I \\<theta> \\<nu>))\n   \\<in> fml_sem I \\<phi>) =\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>)\n  (repv (Radj x y \\<nu>) x (dterm_sem I \\<theta> \\<nu>)\n   \\<in> fml_sem I \\<phi>) =\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>))\n  (\\<nu> \\<in> fml_sem I ([[x := \\<theta>]]\\<phi>)) = True\n\ngoal (1 subgoal):\n 1. \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "by blast"], ["proof (state)\nthis:\n  \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_interp ?I5 \\<Longrightarrow>\n  ?\\<nu>5 \\<in> fml_sem ?I5 ([[y := \\<theta>]]FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "then"], ["proof (chain)\npicking this:\n  is_interp ?I5 \\<Longrightarrow>\n  ?\\<nu>5 \\<in> fml_sem ?I5 ([[y := \\<theta>]]FUrename x y \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  is_interp ?I5 \\<Longrightarrow>\n  ?\\<nu>5 \\<in> fml_sem ?I5 ([[y := \\<theta>]]FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. valid ([[y := \\<theta>]]FUrename x y \\<phi>)", "unfolding valid_def"], ["proof (prove)\nusing this:\n  is_interp ?I5 \\<Longrightarrow>\n  ?\\<nu>5 \\<in> fml_sem ?I5 ([[y := \\<theta>]]FUrename x y \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<nu>.\n       is_interp I \\<longrightarrow>\n       \\<nu> \\<in> fml_sem I ([[y := \\<theta>]]FUrename x y \\<phi>)", "by auto"], ["proof (state)\nthis:\n  valid ([[y := \\<theta>]]FUrename x y \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}