{"file_name": "/home/qj213/afp-2021-10-22/thys/Automatic_Refinement/Tool/Autoref_Tool.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Automatic_Refinement", "problem_names": ["lemma [autoref_itype]: \"CAST ::\\<^sub>i I \\<rightarrow>\\<^sub>i I\""], "translations": [["", "lemma [autoref_itype]: \"CAST ::\\<^sub>i I \\<rightarrow>\\<^sub>i I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CAST ::\\<^sub>i I \\<rightarrow>\\<^sub>i I", "by simp"], ["", "(* TODO: This idea does currently not work, b/c a homogeneity rule\n  will be created from the (\\<lambda>x. x, CAST)\\<in>R \\<rightarrow> R rule, which will always\n  be applied first! As a workaround, we make the cast mandatory!\n*)\n(*lemma [autoref_rules]: \n  assumes \"PRIO_TAG_GEN_ALGO\"\n  shows \"(\\<lambda>x. x,CAST) \\<in> R \\<rightarrow> R\"\n  by auto\n*)"], ["", "text \\<open>Hide internal stuff\\<close>"], ["", "notation (input) rel_ANNOT (infix \":::\\<^sub>r\" 10)"], ["", "notation (input) ind_ANNOT (infix \"::#\\<^sub>r\" 10)"], ["", "locale autoref_syn begin"], ["", "notation (input) APP (infixl \"$\" 900)"], ["", "notation (input) rel_ANNOT (infix \":::\" 10)"], ["", "notation (input) ind_ANNOT (infix \"::#\" 10)"], ["", "notation OP (\"OP\")"], ["", "notation (input) ABS (binder \"\\<lambda>''\" 10)"], ["", "end"], ["", "no_notation (input) APP (infixl \"$\" 900)"], ["", "no_notation (input) ABS (binder \"\\<lambda>''\" 10)"], ["", "no_notation (input) rel_ANNOT (infix \":::\" 10)"], ["", "no_notation (input) ind_ANNOT (infix \"::#\" 10)"], ["", "hide_const (open) PROTECT ANNOT OP APP ABS ID_FAIL rel_annot ind_annot"], ["", "end"]]}