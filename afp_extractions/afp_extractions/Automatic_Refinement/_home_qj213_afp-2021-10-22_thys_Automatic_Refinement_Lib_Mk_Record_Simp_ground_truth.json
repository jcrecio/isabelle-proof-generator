{"file_name": "/home/qj213/afp-2021-10-22/thys/Automatic_Refinement/Lib/Mk_Record_Simp.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Automatic_Refinement", "problem_names": ["lemma mk_record_simp_thm:\n  fixes f :: \"'a \\<Rightarrow> 'b\"\n  assumes \"f s = x\"\n  assumes \"r \\<equiv> s\"\n  shows \"f r = x\""], "translations": [["", "lemma mk_record_simp_thm:\n  fixes f :: \"'a \\<Rightarrow> 'b\"\n  assumes \"f s = x\"\n  assumes \"r \\<equiv> s\"\n  shows \"f r = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f r = x", "using assms"], ["proof (prove)\nusing this:\n  f s = x\n  r \\<equiv> s\n\ngoal (1 subgoal):\n 1. f r = x", "by simp"], ["", "ML \\<open>\n  fun mk_record_simp context thm = let\n    val ctxt = Context.proof_of context\n    val cert = Thm.cterm_of ctxt\n  in\n    case Thm.concl_of thm of\n      @{mpat \"Trueprop (?f _=_)\"} => \n        let\n          val cf = cert f\n          val r = infer_instantiate ctxt [((\"f\", 0), cf)] @{thm mk_record_simp_thm}\n          val r = r OF [thm]\n        in r end\n    | _ => raise THM(\"\",~1,[thm])\n\n  end\n\\<close>"], ["", "attribute_setup mk_record_simp = \n  \\<open>Scan.succeed (Thm.rule_attribute [] (mk_record_simp))\\<close>\n  \"Make simplification rule for record definition\""], ["", "end"]]}