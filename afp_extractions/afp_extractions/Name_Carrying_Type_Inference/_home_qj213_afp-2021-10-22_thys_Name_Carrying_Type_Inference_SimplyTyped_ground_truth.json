{"file_name": "/home/qj213/afp-2021-10-22/thys/Name_Carrying_Type_Inference/SimplyTyped.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Name_Carrying_Type_Inference", "problem_names": ["lemma depth_prm:\n  shows \"depth (\\<pi> \\<cdot> A) = depth A\"", "lemma depth_app:\n  shows \"depth A < depth (App A B)\" \"depth B < depth (App A B)\"", "lemma depth_fn:\n  shows \"depth A < depth (Fn x T A)\"", "lemma depth_pair:\n  shows \"depth A < depth (Pair A B)\" \"depth B < depth (Pair A B)\"", "lemma depth_fst:\n  shows \"depth P < depth (Fst P)\"", "lemma depth_snd:\n  shows \"depth P < depth (Snd P)\"", "lemma unit_not_var:\n  shows \"Unit \\<noteq> Var x\"", "lemma unit_not_app:\n  shows \"Unit \\<noteq> App A B\"", "lemma unit_not_fn:\n  shows \"Unit \\<noteq> Fn x T A\"", "lemma unit_not_pair:\n  shows \"Unit \\<noteq> Pair A B\"", "lemma unit_not_fst:\n  shows \"Unit \\<noteq> Fst P\"", "lemma unit_not_snd:\n  shows \"Unit \\<noteq> Snd P\"", "lemma var_not_app:\n  shows \"Var x \\<noteq> App A B\"", "lemma var_not_fn:\n  shows \"Var x \\<noteq> Fn y T A\"", "lemma var_not_pair:\n  shows \"Var x \\<noteq> Pair A B\"", "lemma var_not_fst:\n  shows \"Var x \\<noteq> Fst P\"", "lemma var_not_snd:\n  shows \"Var x \\<noteq> Snd P\"", "lemma app_not_fn:\n  shows \"App A B \\<noteq> Fn y T X\"", "lemma app_not_pair:\n  shows \"App A B \\<noteq> Pair C D\"", "lemma app_not_fst:\n  shows \"App A B \\<noteq> Fst P\"", "lemma app_not_snd:\n  shows \"App A B \\<noteq> Snd P\"", "lemma fn_not_pair:\n  shows \"Fn x T A \\<noteq> Pair C D\"", "lemma fn_not_fst:\n  shows \"Fn x T A \\<noteq> Fst P\"", "lemma fn_not_snd:\n  shows \"Fn x T A \\<noteq> Snd P\"", "lemma pair_not_fst:\n  shows \"Pair A B \\<noteq> Fst P\"", "lemma pair_not_snd:\n  shows \"Pair A B \\<noteq> Snd P\"", "lemma fst_not_snd:\n  shows \"Fst P \\<noteq> Snd Q\"", "lemma trm_simp:\n  shows\n    \"Var x = Var y \\<Longrightarrow> x = y\"\n    \"App A B = App C D \\<Longrightarrow> A = C\"\n    \"App A B = App C D \\<Longrightarrow> B = D\"\n    \"Fn x T A = Fn y S B \\<Longrightarrow>\n      (x = y \\<and> T = S \\<and> A = B) \\<or> (x \\<noteq> y \\<and> T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B)\"\n    \"Pair A B = Pair C D \\<Longrightarrow> A = C\"\n    \"Pair A B = Pair C D \\<Longrightarrow> B = D\"\n    \"Fst P = Fst Q \\<Longrightarrow> P = Q\"\n    \"Snd P = Snd Q \\<Longrightarrow> P = Q\"", "lemma fn_eq:\n  assumes \"x \\<noteq> y\" \"x \\<notin> fvs B\" \"A = [x \\<leftrightarrow> y] \\<cdot> B\"\n  shows \"Fn x T A = Fn y T B\"", "lemma trm_prm_simp:\n  shows\n    \"\\<pi> \\<cdot> Unit = Unit\"\n    \"\\<pi> \\<cdot> Var x = Var (\\<pi> $ x)\"\n    \"\\<pi> \\<cdot> App A B = App (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\"\n    \"\\<pi> \\<cdot> Fn x T A = Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\"\n    \"\\<pi> \\<cdot> Pair A B = Pair (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\"\n    \"\\<pi> \\<cdot> Fst P = Fst (\\<pi> \\<cdot> P)\"\n    \"\\<pi> \\<cdot> Snd P = Snd (\\<pi> \\<cdot> P)\"", "lemma trm_prm_apply_compose:\n  shows \"\\<pi> \\<cdot> \\<sigma> \\<cdot> A = (\\<pi> \\<diamondop> \\<sigma>) \\<cdot> A\"", "lemma fvs_finite:\n  shows \"finite (fvs M)\"", "lemma fvs_simp:\n  shows\n    \"fvs Unit = {}\" and\n    \"fvs (Var x) = {x}\"\n    \"fvs (App A B) = fvs A \\<union> fvs B\"\n    \"fvs (Fn x T A) = fvs A - {x}\"\n    \"fvs (Pair A B) = fvs A \\<union> fvs B\"\n    \"fvs (Fst P) = fvs P\"\n    \"fvs (Snd P) = fvs P\"", "lemma var_prm_action:\n  shows \"[a \\<leftrightarrow> b] \\<cdot> Var a = Var b\"", "lemma var_prm_inaction:\n  assumes \"a \\<noteq> x\" \"b \\<noteq> x\"\n  shows \"[a \\<leftrightarrow> b] \\<cdot> Var x = Var x\"", "lemma trm_prm_apply_id:\n  shows \"\\<epsilon> \\<cdot> M = M\"", "lemma trm_prm_unit_inaction:\n  assumes \"a \\<notin> fvs X\" \"b \\<notin> fvs X\"\n  shows \"[a \\<leftrightarrow> b] \\<cdot> X = X\"", "lemma trm_prm_agreement_equiv:\n  assumes \"\\<And>a. a \\<in> ds \\<pi> \\<sigma> \\<Longrightarrow> a \\<notin> fvs M\"\n  shows \"\\<pi> \\<cdot> M = \\<sigma> \\<cdot> M\"", "lemma trm_induct:\n  fixes P :: \"'a trm \\<Rightarrow> bool\"\n  assumes\n    \"P Unit\"\n    \"\\<And>x. P (Var x)\"\n    \"\\<And>A B. \\<lbrakk>P A; P B\\<rbrakk> \\<Longrightarrow> P (App A B)\"\n    \"\\<And>x T A. P A \\<Longrightarrow> P (Fn x T A)\"\n    \"\\<And>A B. \\<lbrakk>P A; P B\\<rbrakk> \\<Longrightarrow> P (Pair A B)\"\n    \"\\<And>A. P A \\<Longrightarrow> P (Fst A)\"\n    \"\\<And>A. P A \\<Longrightarrow> P (Snd A)\"\n  shows \"P M\"", "lemma trm_cases:\n  assumes\n    \"M = Unit \\<Longrightarrow> P M\"\n    \"\\<And>x. M = Var x \\<Longrightarrow> P M\"\n    \"\\<And>A B. M = App A B \\<Longrightarrow> P M\"\n    \"\\<And>x T A. M = Fn x T A \\<Longrightarrow> P M\"\n    \"\\<And>A B. M = Pair A B \\<Longrightarrow> P M\"\n    \"\\<And>A. M = Fst A \\<Longrightarrow> P M\"\n    \"\\<And>A. M = Snd A \\<Longrightarrow> P M\"\n  shows \"P M\"", "lemma trm_depth_induct:\n  assumes\n    \"P Unit\"\n    \"\\<And>x. P (Var x)\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (App A B) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (App A B)\"\n    \"\\<And>M x T A. (\\<And>K. depth K < depth (Fn x T A) \\<Longrightarrow> P K) \\<Longrightarrow> P (Fn x T A)\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (Pair A B) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (Pair A B)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Fst A) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (Fst A)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Snd A) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (Snd A)\"\n  shows \"P M\"", "lemma fresh_fn:\n  fixes x :: 'a and S :: \"'a set\"\n  assumes \"finite S\"\n  shows \"\\<exists>y B. y \\<notin> S \\<and> B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> (Fn x T A = Fn y T B)\"", "lemma trm_strong_induct:\n  fixes P :: \"'a set \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  assumes\n    \"P S Unit\"\n    \"\\<And>x. P S (Var x)\"\n    \"\\<And>A B. \\<lbrakk>P S A; P S B\\<rbrakk> \\<Longrightarrow> P S (App A B)\"\n    \"\\<And>x T. x \\<notin> S \\<Longrightarrow> (\\<And>A. P S A \\<Longrightarrow> P S (Fn x T A))\"\n    \"\\<And>A B. \\<lbrakk>P S A; P S B\\<rbrakk> \\<Longrightarrow> P S (Pair A B)\"\n    \"\\<And>A. P S A \\<Longrightarrow> P S (Fst A)\"\n    \"\\<And>A. P S A \\<Longrightarrow> P S (Snd A)\"\n    \"finite S\"\n  shows \"P S M\"", "lemma trm_strong_cases:\n  fixes P :: \"'a set \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  assumes\n    \"         M = Unit    \\<Longrightarrow> P S M\"\n    \"\\<And>x.     M = Var x    \\<Longrightarrow> P S M\"\n    \"\\<And>A B.   M = App A B  \\<Longrightarrow> P S M\"\n    \"\\<And>x T A. M = Fn x T A \\<Longrightarrow> x \\<notin> S \\<Longrightarrow> P S M\"\n    \"\\<And>A B.   M = Pair A B \\<Longrightarrow> P S M\"\n    \"\\<And>A.     M = Fst A    \\<Longrightarrow> P S M\"\n    \"\\<And>A.     M = Snd A    \\<Longrightarrow> P S M\"\n    \"finite S\"\n  shows \"P S M\"", "lemma trm_strong_depth_induct:\n  fixes P :: \"'a set \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  assumes\n    \"P S Unit\"\n    \"\\<And>x. P S (Var x)\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (App A B) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (App A B)\"\n    \"\\<And>x T. x \\<notin> S \\<Longrightarrow> (\\<And>A. (\\<And>K. depth K < depth (Fn x T A) \\<Longrightarrow> P S K) \\<Longrightarrow> P S (Fn x T A))\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (Pair A B) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (Pair A B)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Fst A) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (Fst A)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Snd A) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (Snd A)\"\n    \"finite S\"\n  shows \"P S M\"", "lemma trm_prm_fvs:\n  shows \"fvs (\\<pi> \\<cdot> M) = \\<pi> {$} fvs M\"", "lemma typing_prm:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\" \"\\<And>y. y \\<in> fvs M \\<Longrightarrow> \\<Gamma> y = \\<Delta> (\\<pi> $ y)\"\n  shows \"\\<Delta> \\<turnstile> \\<pi> \\<cdot> M : \\<tau>\"", "lemma typing_swp:\n  assumes \"\\<Gamma>(a \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>\" \"b \\<notin> fvs M\"\n  shows \"\\<Gamma>(b \\<mapsto> \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>\"", "lemma typing_unitE:\n  assumes \"\\<Gamma> \\<turnstile> Unit : \\<tau>\"\n  shows \"\\<tau> = TUnit\"", "lemma typing_varE:\n  assumes \"\\<Gamma> \\<turnstile> Var x : \\<tau>\"\n  shows \"\\<Gamma> x = Some \\<tau>\"", "lemma typing_appE:\n  assumes \"\\<Gamma> \\<turnstile> App A B : \\<sigma>\"\n  shows \"\\<exists>\\<tau>. (\\<Gamma> \\<turnstile> A : (TArr \\<tau> \\<sigma>)) \\<and> (\\<Gamma> \\<turnstile> B : \\<tau>)\"", "lemma typing_fnE:\n  assumes \"\\<Gamma> \\<turnstile> Fn x T A : \\<theta>\"\n  shows \"\\<exists>\\<sigma>. \\<theta> = (TArr T \\<sigma>) \\<and> (\\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>)\"", "lemma typing_pairE:\n  assumes \"\\<Gamma> \\<turnstile> Pair A B : \\<theta>\"\n  shows \"\\<exists>\\<tau> \\<sigma>. \\<theta> = (TPair \\<tau> \\<sigma>) \\<and> (\\<Gamma> \\<turnstile> A : \\<tau>) \\<and> (\\<Gamma> \\<turnstile> B : \\<sigma>)\"", "lemma typing_fstE:\n  assumes \"\\<Gamma> \\<turnstile> Fst P : \\<tau>\"\n  shows \"\\<exists>\\<sigma>. (\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>))\"", "lemma typing_sndE:\n  assumes \"\\<Gamma> \\<turnstile> Snd P : \\<sigma>\"\n  shows \"\\<exists>\\<tau>. (\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>))\"", "theorem typing_weaken:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\" \"y \\<notin> fvs M\"\n  shows \"\\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>\"", "lemma infer_simp:\n  shows\n    \"infer \\<Gamma> Unit = Some TUnit\"\n    \"infer \\<Gamma> (Var x) = \\<Gamma> x\"\n    \"infer \\<Gamma> (App A B) = (case (infer \\<Gamma> A, infer \\<Gamma> B) of\n       (Some (TArr \\<tau> \\<sigma>), Some \\<tau>') \\<Rightarrow> (if \\<tau> = \\<tau>' then Some \\<sigma> else None)\n     | _ \\<Rightarrow> None\n     )\"\n    \"infer \\<Gamma> (Fn x \\<tau> A) = (case infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A of\n       Some \\<sigma> \\<Rightarrow> Some (TArr \\<tau> \\<sigma>)\n     | None \\<Rightarrow> None\n    )\"\n    \"infer \\<Gamma> (Pair A B) = (case (infer \\<Gamma> A, infer \\<Gamma> B) of\n       (Some \\<tau>, Some \\<sigma>) \\<Rightarrow> Some (TPair \\<tau> \\<sigma>)\n     | _ \\<Rightarrow> None\n     )\"\n    \"infer \\<Gamma> (Fst P) = (case infer \\<Gamma> P of\n       (Some (TPair \\<tau> \\<sigma>)) \\<Rightarrow> Some \\<tau>\n     | _ \\<Rightarrow> None\n     )\"\n    \"infer \\<Gamma> (Snd P) = (case infer \\<Gamma> P of\n       (Some (TPair \\<tau> \\<sigma>)) \\<Rightarrow> Some \\<sigma>\n     | _ \\<Rightarrow> None\n     )\"", "lemma infer_unitE:\n  assumes \"infer \\<Gamma> Unit = Some \\<tau>\"\n  shows \"\\<tau> = TUnit\"", "lemma infer_varE:\n  assumes \"infer \\<Gamma> (Var x) = Some \\<tau>\"\n  shows \"\\<Gamma> x = Some \\<tau>\"", "lemma infer_appE:\n  assumes \"infer \\<Gamma> (App A B) = Some \\<tau>\"\n  shows \"\\<exists>\\<sigma>. infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and> infer \\<Gamma> B = Some \\<sigma>\"", "lemma infer_fnE:\n  assumes \"infer \\<Gamma> (Fn x T A) = Some \\<tau>\"\n  shows \"\\<exists>\\<sigma>. \\<tau> = TArr T \\<sigma> \\<and> infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\"", "lemma infer_pairE:\n  assumes \"infer \\<Gamma> (Pair A B) = Some \\<tau>\"\n  shows \"\\<exists>T S. \\<tau> = TPair T S \\<and> infer \\<Gamma> A = Some T \\<and> infer \\<Gamma> B = Some S\"", "lemma infer_fstE:\n  assumes \"infer \\<Gamma> (Fst P) = Some \\<tau>\"\n  shows \"\\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T\"", "lemma infer_sndE:\n  assumes \"infer \\<Gamma> (Snd P) = Some \\<tau>\"\n  shows \"\\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S\"", "lemma infer_sound:\n  assumes \"infer \\<Gamma> M = Some \\<tau>\"\n  shows \"\\<Gamma> \\<turnstile> M : \\<tau>\"", "lemma infer_complete:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"infer \\<Gamma> M = Some \\<tau>\"", "theorem infer_valid:\n  shows \"(\\<Gamma> \\<turnstile> M : \\<tau>) = (infer \\<Gamma> M = Some \\<tau>)\"", "lemma substitutes_prm:\n  assumes \"substitutes A x M A'\"\n  shows \"substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> A')\"", "lemma substitutes_fvs:\n  assumes \"substitutes A x M A'\"\n  shows \"fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\"", "lemma substitutes_unitE:\n  assumes \"substitutes Unit y M X\"\n  shows \"X = Unit\"", "lemma substitutes_varE:\n  assumes \"substitutes (Var x) y M X\"\n  shows \"(x = y \\<and> M = X) \\<or> (x \\<noteq> y \\<and> X = Var x)\"", "lemma substitutes_appE:\n  assumes \"substitutes (App A B) x M X\"\n  shows \"\\<exists>A' B'. substitutes A x M A' \\<and> substitutes B x M B' \\<and> X = App A' B'\"", "lemma substitutes_fnE:\n  assumes \"substitutes (Fn y T A) x M X\" \"y \\<noteq> x\" \"y \\<notin> fvs M\"\n  shows \"\\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\"", "lemma substitutes_pairE:\n  assumes \"substitutes (Pair A B) x M X\"\n  shows \"\\<exists>A' B'. substitutes A x M A' \\<and> substitutes B x M B' \\<and> X = Pair A' B'\"", "lemma substitutes_fstE:\n  assumes \"substitutes (Fst P) x M X\"\n  shows \"\\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\"", "lemma substitutes_sndE:\n  assumes \"substitutes (Snd P) x M X\"\n  shows \"\\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\"", "lemma substitutes_total:\n  shows \"\\<exists>X. substitutes A x M X\"", "lemma substitutes_unique:\n  assumes \"substitutes A x M B\" \"substitutes A x M C\"\n  shows \"B = C\"", "lemma substitutes_function:\n  shows \"\\<exists>! X. substitutes A x M X\"", "lemma subst_simp_unit:\n  shows \"Unit[x ::= M] = Unit\"", "lemma subst_simp_var1:\n  shows \"(Var x)[x ::= M] = M\"", "lemma subst_simp_var2:\n  assumes \"x \\<noteq> y\"\n  shows \"(Var x)[y ::= M] = Var x\"", "lemma subst_simp_app:\n  shows \"(App A B)[x ::= M] = App (A[x ::= M]) (B[x ::= M])\"", "lemma subst_simp_fn:\n  assumes \"x \\<noteq> y\" \"y \\<notin> fvs M\"\n  shows \"(Fn y T A)[x ::= M] = Fn y T (A[x ::= M])\"", "lemma subst_simp_pair:\n  shows \"(Pair A B)[x ::= M] = Pair (A[x ::= M]) (B[x ::= M])\"", "lemma subst_simp_fst:\n  shows \"(Fst P)[x ::= M] = Fst (P[x ::= M])\"", "lemma subst_simp_snd:\n  shows \"(Snd P)[x ::= M] = Snd (P[x ::= M])\"", "lemma subst_prm:\n  shows \"(\\<pi> \\<cdot> (M[z ::= N])) = ((\\<pi> \\<cdot> M)[\\<pi> $ z ::= \\<pi> \\<cdot> N])\"", "lemma subst_fvs:\n  shows \"fvs (M[z ::= N]) \\<subseteq> (fvs M - {z}) \\<union> fvs N\"", "lemma subst_free:\n  assumes \"y \\<notin> fvs M\"\n  shows \"M[y ::= N] = M\"", "lemma subst_swp:\n  assumes \"y \\<notin> fvs A\"\n  shows \"([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] = (A[z ::= M])\"", "lemma barendregt:\n  assumes \"y \\<noteq> z\" \"y \\<notin> fvs L\"\n  shows \"M[y ::= N][z ::= L] = (M[z ::= L][y ::= N[z ::= L]])\"", "lemma typing_subst:\n  assumes \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> M : \\<sigma>\" \"\\<Gamma> \\<turnstile> N : \\<tau>\"\n  shows \"\\<Gamma> \\<turnstile> M[z ::= N] : \\<sigma>\"", "lemma beta_reduction_fvs:\n  assumes \"M \\<rightarrow>\\<beta> M'\"\n  shows \"fvs M' \\<subseteq> fvs M\"", "lemma beta_reduction_prm:\n  assumes \"M \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<pi> \\<cdot> M) \\<rightarrow>\\<beta> (\\<pi> \\<cdot> M')\"", "lemma beta_reduction_left_unitE:\n  assumes \"Unit \\<rightarrow>\\<beta> M'\"\n  shows \"False\"", "lemma beta_reduction_left_varE:\n  assumes \"(Var x) \\<rightarrow>\\<beta> M'\"\n  shows \"False\"", "lemma beta_reduction_left_appE:\n  assumes \"(App A B) \\<rightarrow>\\<beta> M'\"\n  shows \"\n    (\\<exists>x T X. A = (Fn x T X) \\<and> M' = (X[x ::= B])) \\<or>\n    (\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = App A' B) \\<or>\n    (\\<exists>B'. (B \\<rightarrow>\\<beta> B') \\<and> M' = App A B')\n  \"", "lemma beta_reduction_left_fnE:\n  assumes \"(Fn x T A) \\<rightarrow>\\<beta> M'\"\n  shows \"\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = (Fn x T A')\"", "lemma beta_reduction_left_pairE:\n  assumes \"(Pair A B) \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = (Pair A' B)) \\<or> (\\<exists>B'. (B \\<rightarrow>\\<beta> B') \\<and> M' = (Pair A B'))\"", "lemma beta_reduction_left_fstE:\n  assumes \"(Fst P) \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<exists>P'. (P \\<rightarrow>\\<beta> P') \\<and> M' = (Fst P')) \\<or> (\\<exists>A B. P = (Pair A B) \\<and> M' = A)\"", "lemma beta_reduction_left_sndE:\n  assumes \"(Snd P) \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<exists>P'. (P \\<rightarrow>\\<beta> P') \\<and> M' = (Snd P')) \\<or> (\\<exists>A B. P = Pair A B \\<and> M' = B)\"", "lemma preservation':\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\" and \"M \\<rightarrow>\\<beta> M'\"\n  shows \"\\<Gamma> \\<turnstile> M' : \\<tau>\"", "theorem progress:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"NF M \\<or> (\\<exists>M'. (M \\<rightarrow>\\<beta> M'))\"", "lemma beta_reduces_composition:\n  assumes \"A' \\<rightarrow>\\<beta>\\<^sup>* A''\" and \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"A \\<rightarrow>\\<beta>\\<^sup>* A''\"", "lemma beta_reduces_fvs:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"fvs A' \\<subseteq> fvs A\"", "lemma beta_reduces_app_left:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"(App A B) \\<rightarrow>\\<beta>\\<^sup>* (App A' B)\"", "lemma beta_reduces_app_right:\n  assumes \"B \\<rightarrow>\\<beta>\\<^sup>* B'\"\n  shows \"(App A B) \\<rightarrow>\\<beta>\\<^sup>* (App A B')\"", "lemma beta_reduces_fn:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"(Fn x T A) \\<rightarrow>\\<beta>\\<^sup>* (Fn x T A')\"", "lemma beta_reduces_pair_left:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"(Pair A B) \\<rightarrow>\\<beta>\\<^sup>* (Pair A' B)\"", "lemma beta_reduces_pair_right:\n  assumes \"B \\<rightarrow>\\<beta>\\<^sup>* B'\"\n  shows \"(Pair A B) \\<rightarrow>\\<beta>\\<^sup>* (Pair A B')\"", "lemma beta_reduces_fst:\n  assumes \"P \\<rightarrow>\\<beta>\\<^sup>* P'\"\n  shows \"(Fst P) \\<rightarrow>\\<beta>\\<^sup>* (Fst P')\"", "lemma beta_reduces_snd:\n  assumes \"P \\<rightarrow>\\<beta>\\<^sup>* P'\"\n  shows \"(Snd P) \\<rightarrow>\\<beta>\\<^sup>* (Snd P')\"", "theorem preservation:\n  assumes \"M \\<rightarrow>\\<beta>\\<^sup>* M'\" \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"\\<Gamma> \\<turnstile> M' : \\<tau>\"", "theorem safety:\n  assumes \"M \\<rightarrow>\\<beta>\\<^sup>* M'\" \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"NF M' \\<or> (\\<exists>M''. (M' \\<rightarrow>\\<beta> M''))\"", "lemma parallel_reduction_prm:\n  assumes \"A >> A'\"\n  shows \"(\\<pi> \\<cdot> A) >> (\\<pi> \\<cdot> A')\"", "lemma parallel_reduction_fvs:\n  assumes \"A >> A'\"\n  shows \"fvs A' \\<subseteq> fvs A\"", "lemma parallel_reduction_unitE:\n  assumes \"Unit >> A\"\n  shows \"A = Unit\"", "lemma parallel_reduction_varE:\n  assumes \"(Var x) >> A\"\n  shows \"A = Var x\"", "lemma parallel_reduction_fnE:\n  assumes \"(Fn x T A) >> X\"\n  shows \"X = Fn x T A \\<or> (\\<exists>A'. (A >> A') \\<and> X = Fn x T A')\"", "lemma parallel_reduction_redexE:\n  assumes \"(App (Fn x T A) B) >> X\"\n  shows \"\n    (X = App (Fn x T A) B) \\<or>\n    (\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> X = (A'[x ::= B'])) \\<or>\n    (\\<exists>A' B'. ((Fn x T A) >> (Fn x T A')) \\<and> (B >> B') \\<and> X = (App (Fn x T A') B'))\n  \"", "lemma parallel_reduction_nonredexE:\n  assumes \"(App A B) >> X\" and \"\\<And>x T A'. A \\<noteq> Fn x T A'\"\n  shows \"\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> X = (App A' B')\"", "lemma parallel_reduction_pairE:\n  assumes \"(Pair A B) >> X\"\n  shows \"\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> (X = Pair A' B')\"", "lemma parallel_reduction_fstE:\n  assumes \"(Fst P) >> X\"\n  shows \"(\\<exists>P'. (P >> P') \\<and> X = (Fst P')) \\<or> (\\<exists>A A' B. (P = Pair A B) \\<and> (A >> A') \\<and> X = A')\"", "lemma parallel_reduction_sndE:\n  assumes \"(Snd P) >> X\"\n  shows \"(\\<exists>P'. (P >> P') \\<and> X = (Snd P')) \\<or> (\\<exists>A B B'. (P = Pair A B) \\<and> (B >> B') \\<and> X = B')\"", "lemma parallel_reduction_subst_inner:\n  assumes \"M >> M'\"\n  shows \"X[z ::= M] >> (X[z ::= M'])\"", "lemma parallel_reduction_subst:\n  assumes \"X >> X'\" \"M >> M'\"\n  shows \"X[z ::= M] >> (X'[z ::= M'])\"", "lemma not_fn_prm:\n  assumes \"\\<And>x T M. A \\<noteq> Fn x T M\"\n  shows \"\\<pi> \\<cdot> A \\<noteq> Fn x T M\"", "lemma not_pair_prm:\n  assumes \"\\<And>A B. P \\<noteq> Pair A B\"\n  shows \"\\<pi> \\<cdot> P \\<noteq> Pair A B\"", "lemma complete_development_prm:\n  assumes \"A >>> A'\"\n  shows \"(\\<pi> \\<cdot> A) >>> (\\<pi> \\<cdot> A')\"", "lemma complete_development_fvs:\n  assumes \"A >>> A'\"\n  shows \"fvs A' \\<subseteq> fvs A\"", "lemma complete_development_fnE:\n  assumes \"(Fn x T A) >>> X\"\n  shows \"\\<exists>A'. (A >>> A') \\<and> X = Fn x T A'\"", "lemma complete_development_pairE:\n  assumes \"(Pair A B) >>> X\"\n  shows \"\\<exists>A' B'. (A >>> A') \\<and> (B >>> B') \\<and> X = Pair A' B'\"", "lemma complete_development_exists:\n  shows \"\\<exists>X. (A >>> X)\"", "lemma complete_development_triangle:\n  assumes \"A >>> D\" \"A >> B\"\n  shows \"B >> D\"", "lemma parallel_reduction_diamond:\n  assumes \"A >> B\" \"A >> C\"\n  shows \"\\<exists>D. (B >> D) \\<and> (C >> D)\"", "lemma parallel_reduces_diamond':\n  assumes \"A >>\\<^sup>* C\" \"A >> B\"\n  shows \"\\<exists>D. (B >>\\<^sup>* D) \\<and> (C >> D)\"", "lemma parallel_reduces_diamond:\n  assumes \"A >>\\<^sup>* B\" \"A >>\\<^sup>* C\"\n  shows \"\\<exists>D. (B >>\\<^sup>* D) \\<and> (C >>\\<^sup>* D)\"", "lemma beta_reduction_is_parallel_reduction:\n  assumes \"A \\<rightarrow>\\<beta> B\"\n  shows \"A >> B\"", "lemma parallel_reduction_is_beta_reduction:\n  assumes \"A >> B\"\n  shows \"A \\<rightarrow>\\<beta>\\<^sup>* B\"", "lemma parallel_beta_reduces_equivalent:\n  shows \"(A >>\\<^sup>* B) = (A \\<rightarrow>\\<beta>\\<^sup>* B)\"", "theorem confluence:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* B\" \"A \\<rightarrow>\\<beta>\\<^sup>* C\"\n  shows \"\\<exists>D. (B \\<rightarrow>\\<beta>\\<^sup>* D) \\<and> (C \\<rightarrow>\\<beta>\\<^sup>* D)\""], "translations": [["", "lemma depth_prm:\n  shows \"depth (\\<pi> \\<cdot> A) = depth A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth (\\<pi> \\<cdot> A) = depth A", "by(transfer, metis ptrm_size_prm)"], ["", "lemma depth_app:\n  shows \"depth A < depth (App A B)\" \"depth B < depth (App A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (App A B) &&& depth B < depth (App A B)", "by(transfer, auto)+"], ["", "lemma depth_fn:\n  shows \"depth A < depth (Fn x T A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (Fn x T A)", "by(transfer, auto)"], ["", "lemma depth_pair:\n  shows \"depth A < depth (Pair A B)\" \"depth B < depth (Pair A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (SimplyTyped.Pair A B) &&&\n    depth B < depth (SimplyTyped.Pair A B)", "by(transfer, auto)+"], ["", "lemma depth_fst:\n  shows \"depth P < depth (Fst P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P < depth (Fst P)", "by(transfer, auto)"], ["", "lemma depth_snd:\n  shows \"depth P < depth (Snd P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P < depth (Snd P)", "by(transfer, auto)"], ["", "lemma unit_not_var:\n  shows \"Unit \\<noteq> Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit \\<noteq> Var x", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> PUnit \\<approx> PVar x", "fix x :: 'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> PUnit \\<approx> PVar x", "show \"\\<not> PUnit \\<approx> PVar x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PVar x", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PVar x \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PVar x", "assume \"\\<not>\\<not> PUnit \\<approx> PVar x\""], ["proof (state)\nthis:\n  \\<not> \\<not> PUnit \\<approx> PVar x\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PVar x \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PVar x", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PVar x\n\ngoal (1 subgoal):\n 1. False", "using unitE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PVar x\n  \\<lbrakk>PUnit \\<approx> ?Y; ?Y = PUnit \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PVar x \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PVar x", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PVar x", "by blast"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PVar x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PVar x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unit_not_app:\n  shows \"Unit \\<noteq> App A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit \\<noteq> App A B", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B. \\<not> PUnit \\<approx> PApp A B", "fix A B :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B. \\<not> PUnit \\<approx> PApp A B", "show \"\\<not> PUnit \\<approx> PApp A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PApp A B", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PApp A B \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PApp A B", "assume \"\\<not>\\<not> PUnit \\<approx> PApp A B\""], ["proof (state)\nthis:\n  \\<not> \\<not> PUnit \\<approx> PApp A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PApp A B \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PApp A B", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PApp A B\n\ngoal (1 subgoal):\n 1. False", "using unitE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PApp A B\n  \\<lbrakk>PUnit \\<approx> ?Y; ?Y = PUnit \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PApp A B \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PApp A B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PApp A B", "by blast"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PApp A B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PApp A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unit_not_fn:\n  shows \"Unit \\<noteq> Fn x T A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit \\<noteq> Fn x T A", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A. \\<not> PUnit \\<approx> PFn x T A", "fix x :: 'a and T A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A. \\<not> PUnit \\<approx> PFn x T A", "show \"\\<not> PUnit \\<approx> PFn x T A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PFn x T A", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PFn x T A \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PFn x T A", "assume \"\\<not>\\<not> PUnit \\<approx> PFn x T A\""], ["proof (state)\nthis:\n  \\<not> \\<not> PUnit \\<approx> PFn x T A\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PFn x T A \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PFn x T A", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PFn x T A\n\ngoal (1 subgoal):\n 1. False", "using unitE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PFn x T A\n  \\<lbrakk>PUnit \\<approx> ?Y; ?Y = PUnit \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PFn x T A \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PFn x T A", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PFn x T A", "by blast"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PFn x T A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PFn x T A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unit_not_pair:\n  shows \"Unit \\<noteq> Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit \\<noteq> SimplyTyped.Pair A B", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B. \\<not> PUnit \\<approx> PPair A B", "fix A B :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B. \\<not> PUnit \\<approx> PPair A B", "show \"\\<not> PUnit \\<approx> PPair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PPair A B", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PPair A B \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PPair A B", "assume \"\\<not>\\<not> PUnit \\<approx> PPair A B\""], ["proof (state)\nthis:\n  \\<not> \\<not> PUnit \\<approx> PPair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PPair A B \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PPair A B", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PPair A B\n\ngoal (1 subgoal):\n 1. False", "using unitE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PPair A B\n  \\<lbrakk>PUnit \\<approx> ?Y; ?Y = PUnit \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PPair A B \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PPair A B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PPair A B", "by blast"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PPair A B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PPair A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unit_not_fst:\n  shows \"Unit \\<noteq> Fst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit \\<noteq> Fst P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. \\<not> PUnit \\<approx> PFst P", "fix P :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. \\<not> PUnit \\<approx> PFst P", "show \"\\<not> PUnit \\<approx> PFst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PFst P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PFst P", "assume \"\\<not>\\<not> PUnit \\<approx> PFst P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PUnit \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PFst P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. False", "using unitE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PFst P\n  \\<lbrakk>PUnit \\<approx> ?Y; ?Y = PUnit \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PFst P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PFst P", "by blast"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unit_not_snd:\n  shows \"Unit \\<noteq> Snd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit \\<noteq> Snd P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. \\<not> PUnit \\<approx> PSnd P", "fix P :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. \\<not> PUnit \\<approx> PSnd P", "show \"\\<not> PUnit \\<approx> PSnd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PSnd P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PSnd P", "assume \"\\<not>\\<not> PUnit \\<approx> PSnd P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PUnit \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PSnd P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. False", "using unitE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PUnit \\<approx> PSnd P\n  \\<lbrakk>PUnit \\<approx> ?Y; ?Y = PUnit \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PUnit \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PUnit \\<approx> PSnd P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PUnit \\<approx> PSnd P", "by blast"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PUnit \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma var_not_app:\n  shows \"Var x \\<noteq> App A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<noteq> App A B", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B. \\<not> PVar x \\<approx> PApp A B", "fix x :: 'a and A B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B. \\<not> PVar x \\<approx> PApp A B", "show \"\\<not>PVar x \\<approx> PApp A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PApp A B", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PApp A B \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PApp A B", "assume \"\\<not>\\<not>PVar x \\<approx> PApp A B\""], ["proof (state)\nthis:\n  \\<not> \\<not> PVar x \\<approx> PApp A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PApp A B \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PApp A B", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PApp A B\n\ngoal (1 subgoal):\n 1. False", "using varE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PApp A B\n  \\<lbrakk>PVar ?x \\<approx> ?Y; ?Y = PVar ?x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PApp A B \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PApp A B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PApp A B", "by blast"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PApp A B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PApp A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma var_not_fn:\n  shows \"Var x \\<noteq> Fn y T A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<noteq> Fn y T A", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y T A. \\<not> PVar x \\<approx> PFn y T A", "fix x y :: 'a and T A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y T A. \\<not> PVar x \\<approx> PFn y T A", "show \"\\<not>PVar x \\<approx> PFn y T A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PFn y T A", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PFn y T A \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PFn y T A", "assume \"\\<not>\\<not>PVar x \\<approx> PFn y T A\""], ["proof (state)\nthis:\n  \\<not> \\<not> PVar x \\<approx> PFn y T A\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PFn y T A \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PFn y T A", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PFn y T A\n\ngoal (1 subgoal):\n 1. False", "using varE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PFn y T A\n  \\<lbrakk>PVar ?x \\<approx> ?Y; ?Y = PVar ?x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PFn y T A \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PFn y T A", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PFn y T A", "by blast"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PFn y T A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PFn y T A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma var_not_pair:\n  shows \"Var x \\<noteq> Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<noteq> SimplyTyped.Pair A B", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B. \\<not> PVar x \\<approx> PPair A B", "fix x :: 'a and A B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A B. \\<not> PVar x \\<approx> PPair A B", "show \"\\<not>PVar x \\<approx> PPair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PPair A B", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PPair A B \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PPair A B", "assume \"\\<not>\\<not>PVar x \\<approx> PPair A B\""], ["proof (state)\nthis:\n  \\<not> \\<not> PVar x \\<approx> PPair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PPair A B \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PPair A B", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PPair A B\n\ngoal (1 subgoal):\n 1. False", "using varE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PPair A B\n  \\<lbrakk>PVar ?x \\<approx> ?Y; ?Y = PVar ?x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PPair A B \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PPair A B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PPair A B", "by blast"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PPair A B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PPair A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma var_not_fst:\n  shows \"Var x \\<noteq> Fst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<noteq> Fst P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P. \\<not> PVar x \\<approx> PFst P", "fix x :: 'a and P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P. \\<not> PVar x \\<approx> PFst P", "show \"\\<not>PVar x \\<approx> PFst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PFst P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PFst P", "assume \"\\<not>\\<not>PVar x \\<approx> PFst P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PVar x \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PFst P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. False", "using varE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PFst P\n  \\<lbrakk>PVar ?x \\<approx> ?Y; ?Y = PVar ?x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PFst P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PFst P", "by blast"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma var_not_snd:\n  shows \"Var x \\<noteq> Snd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<noteq> Snd P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P. \\<not> PVar x \\<approx> PSnd P", "fix x :: 'a and P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P. \\<not> PVar x \\<approx> PSnd P", "show \"\\<not>PVar x \\<approx> PSnd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PSnd P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PSnd P", "assume \"\\<not>\\<not>PVar x \\<approx> PSnd P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PVar x \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PSnd P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. False", "using varE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PVar x \\<approx> PSnd P\n  \\<lbrakk>PVar ?x \\<approx> ?Y; ?Y = PVar ?x \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PVar x \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PVar x \\<approx> PSnd P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PVar x \\<approx> PSnd P", "by blast"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PVar x \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma app_not_fn:\n  shows \"App A B \\<noteq> Fn y T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<noteq> Fn y T X", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B y T X. \\<not> PApp A B \\<approx> PFn y T X", "fix y :: 'a and A B T X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B y T X. \\<not> PApp A B \\<approx> PFn y T X", "show \"\\<not>PApp A B \\<approx> PFn y T X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PFn y T X", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PFn y T X \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PFn y T X", "assume \"\\<not>\\<not>PApp A B \\<approx> PFn y T X\""], ["proof (state)\nthis:\n  \\<not> \\<not> PApp A B \\<approx> PFn y T X\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PFn y T X \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PFn y T X", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PFn y T X\n\ngoal (1 subgoal):\n 1. False", "using appE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PFn y T X\n  \\<lbrakk>PApp ?A ?B \\<approx> ?Y;\n   \\<And>B D.\n      \\<lbrakk>?Y = PApp B D; ?A \\<approx> B; ?B \\<approx> D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PFn y T X \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PFn y T X", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PFn y T X", "by blast"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PFn y T X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PFn y T X\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma app_not_pair:\n  shows \"App A B \\<noteq> Pair C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<noteq> SimplyTyped.Pair C D", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B C D. \\<not> PApp A B \\<approx> PPair C D", "fix A B C D :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B C D. \\<not> PApp A B \\<approx> PPair C D", "show \"\\<not>PApp A B \\<approx> PPair C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PPair C D", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PPair C D \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PPair C D", "assume \"\\<not>\\<not>PApp A B \\<approx> PPair C D\""], ["proof (state)\nthis:\n  \\<not> \\<not> PApp A B \\<approx> PPair C D\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PPair C D \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PPair C D", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PPair C D\n\ngoal (1 subgoal):\n 1. False", "using appE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PPair C D\n  \\<lbrakk>PApp ?A ?B \\<approx> ?Y;\n   \\<And>B D.\n      \\<lbrakk>?Y = PApp B D; ?A \\<approx> B; ?B \\<approx> D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PPair C D \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PPair C D", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PPair C D", "by blast"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PPair C D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PPair C D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma app_not_fst:\n  shows \"App A B \\<noteq> Fst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<noteq> Fst P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PApp A B \\<approx> PFst P", "fix A B P :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PApp A B \\<approx> PFst P", "show \"\\<not>PApp A B \\<approx> PFst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PFst P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PFst P", "assume \"\\<not>\\<not>PApp A B \\<approx> PFst P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PApp A B \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PFst P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. False", "using appE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PFst P\n  \\<lbrakk>PApp ?A ?B \\<approx> ?Y;\n   \\<And>B D.\n      \\<lbrakk>?Y = PApp B D; ?A \\<approx> B; ?B \\<approx> D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PFst P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PFst P", "by blast"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma app_not_snd:\n  shows \"App A B \\<noteq> Snd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<noteq> Snd P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PApp A B \\<approx> PSnd P", "fix A B P :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PApp A B \\<approx> PSnd P", "show \"\\<not>PApp A B \\<approx> PSnd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PSnd P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PSnd P", "assume \"\\<not>\\<not>PApp A B \\<approx> PSnd P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PApp A B \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PSnd P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. False", "using appE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PApp A B \\<approx> PSnd P\n  \\<lbrakk>PApp ?A ?B \\<approx> ?Y;\n   \\<And>B D.\n      \\<lbrakk>?Y = PApp B D; ?A \\<approx> B; ?B \\<approx> D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PApp A B \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PApp A B \\<approx> PSnd P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PApp A B \\<approx> PSnd P", "by blast"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PApp A B \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fn_not_pair:\n  shows \"Fn x T A \\<noteq> Pair C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A \\<noteq> SimplyTyped.Pair C D", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A C D. \\<not> PFn x T A \\<approx> PPair C D", "fix x :: 'a and T A C D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A C D. \\<not> PFn x T A \\<approx> PPair C D", "show \"\\<not>PFn x T A \\<approx> PPair C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PFn x T A \\<approx> PPair C D", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PPair C D \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PPair C D", "assume \"\\<not>\\<not>PFn x T A \\<approx> PPair C D\""], ["proof (state)\nthis:\n  \\<not> \\<not> PFn x T A \\<approx> PPair C D\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PPair C D \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PPair C D", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFn x T A \\<approx> PPair C D\n\ngoal (1 subgoal):\n 1. False", "using fnE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFn x T A \\<approx> PPair C D\n  \\<lbrakk>PFn ?x ?T ?A \\<approx> ?Y;\n   \\<And>B.\n      \\<lbrakk>?Y = PFn ?x ?T B; ?A \\<approx> B\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>b B.\n      \\<lbrakk>?Y = PFn b ?T B; ?x \\<noteq> b;\n       ?A \\<approx> [?x \\<leftrightarrow> b] \\<bullet> B;\n       ?x \\<notin> ptrm_fvs B\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PPair C D \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PPair C D", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PFn x T A \\<approx> PPair C D", "by blast"], ["proof (state)\nthis:\n  \\<not> PFn x T A \\<approx> PPair C D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PFn x T A \\<approx> PPair C D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fn_not_fst:\n  shows \"Fn x T A \\<noteq> Fst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A \\<noteq> Fst P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A P. \\<not> PFn x T A \\<approx> PFst P", "fix x :: 'a and T A P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A P. \\<not> PFn x T A \\<approx> PFst P", "show \"\\<not>PFn x T A \\<approx> PFst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PFn x T A \\<approx> PFst P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PFst P", "assume \"\\<not>\\<not>PFn x T A \\<approx> PFst P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PFn x T A \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PFst P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFn x T A \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. False", "using fnE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFn x T A \\<approx> PFst P\n  \\<lbrakk>PFn ?x ?T ?A \\<approx> ?Y;\n   \\<And>B.\n      \\<lbrakk>?Y = PFn ?x ?T B; ?A \\<approx> B\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>b B.\n      \\<lbrakk>?Y = PFn b ?T B; ?x \\<noteq> b;\n       ?A \\<approx> [?x \\<leftrightarrow> b] \\<bullet> B;\n       ?x \\<notin> ptrm_fvs B\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PFst P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PFn x T A \\<approx> PFst P", "by blast"], ["proof (state)\nthis:\n  \\<not> PFn x T A \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PFn x T A \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fn_not_snd:\n  shows \"Fn x T A \\<noteq> Snd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A \\<noteq> Snd P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A P. \\<not> PFn x T A \\<approx> PSnd P", "fix x :: 'a and T A P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A P. \\<not> PFn x T A \\<approx> PSnd P", "show \"\\<not>PFn x T A \\<approx> PSnd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PFn x T A \\<approx> PSnd P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PSnd P", "assume \"\\<not>\\<not>PFn x T A \\<approx> PSnd P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PFn x T A \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PSnd P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFn x T A \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. False", "using fnE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFn x T A \\<approx> PSnd P\n  \\<lbrakk>PFn ?x ?T ?A \\<approx> ?Y;\n   \\<And>B.\n      \\<lbrakk>?Y = PFn ?x ?T B; ?A \\<approx> B\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>b B.\n      \\<lbrakk>?Y = PFn b ?T B; ?x \\<noteq> b;\n       ?A \\<approx> [?x \\<leftrightarrow> b] \\<bullet> B;\n       ?x \\<notin> ptrm_fvs B\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFn x T A \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PFn x T A \\<approx> PSnd P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PFn x T A \\<approx> PSnd P", "by blast"], ["proof (state)\nthis:\n  \\<not> PFn x T A \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PFn x T A \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pair_not_fst:\n  shows \"Pair A B \\<noteq> Fst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<noteq> Fst P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PPair A B \\<approx> PFst P", "fix A B P :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PPair A B \\<approx> PFst P", "show \"\\<not>PPair A B \\<approx> PFst P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PPair A B \\<approx> PFst P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PPair A B \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PPair A B \\<approx> PFst P", "assume \"\\<not>\\<not>PPair A B \\<approx> PFst P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PPair A B \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PPair A B \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PPair A B \\<approx> PFst P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PPair A B \\<approx> PFst P\n\ngoal (1 subgoal):\n 1. False", "using pairE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PPair A B \\<approx> PFst P\n  \\<lbrakk>PPair ?A ?B \\<approx> ?Y;\n   \\<And>B D.\n      \\<lbrakk>?Y = PPair B D; ?A \\<approx> B; ?B \\<approx> D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PPair A B \\<approx> PFst P \\<Longrightarrow>\n    \\<not> PPair A B \\<approx> PFst P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PPair A B \\<approx> PFst P", "by blast"], ["proof (state)\nthis:\n  \\<not> PPair A B \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PPair A B \\<approx> PFst P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pair_not_snd:\n  shows \"Pair A B \\<noteq> Snd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<noteq> Snd P", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PPair A B \\<approx> PSnd P", "fix A B P :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B P. \\<not> PPair A B \\<approx> PSnd P", "show \"\\<not>PPair A B \\<approx> PSnd P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PPair A B \\<approx> PSnd P", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PPair A B \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PPair A B \\<approx> PSnd P", "assume \"\\<not>\\<not>PPair A B \\<approx> PSnd P\""], ["proof (state)\nthis:\n  \\<not> \\<not> PPair A B \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PPair A B \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PPair A B \\<approx> PSnd P", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PPair A B \\<approx> PSnd P\n\ngoal (1 subgoal):\n 1. False", "using pairE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PPair A B \\<approx> PSnd P\n  \\<lbrakk>PPair ?A ?B \\<approx> ?Y;\n   \\<And>B D.\n      \\<lbrakk>?Y = PPair B D; ?A \\<approx> B; ?B \\<approx> D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PPair A B \\<approx> PSnd P \\<Longrightarrow>\n    \\<not> PPair A B \\<approx> PSnd P", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PPair A B \\<approx> PSnd P", "by blast"], ["proof (state)\nthis:\n  \\<not> PPair A B \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PPair A B \\<approx> PSnd P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fst_not_snd:\n  shows \"Fst P \\<noteq> Snd Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P \\<noteq> Snd Q", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q. \\<not> PFst P \\<approx> PSnd Q", "fix P Q :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q. \\<not> PFst P \\<approx> PSnd Q", "show \"\\<not>PFst P \\<approx> PSnd Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> PFst P \\<approx> PSnd Q", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFst P \\<approx> PSnd Q \\<Longrightarrow>\n    \\<not> PFst P \\<approx> PSnd Q", "assume \"\\<not>\\<not>PFst P \\<approx> PSnd Q\""], ["proof (state)\nthis:\n  \\<not> \\<not> PFst P \\<approx> PSnd Q\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFst P \\<approx> PSnd Q \\<Longrightarrow>\n    \\<not> PFst P \\<approx> PSnd Q", "hence False"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFst P \\<approx> PSnd Q\n\ngoal (1 subgoal):\n 1. False", "using fstE"], ["proof (prove)\nusing this:\n  \\<not> \\<not> PFst P \\<approx> PSnd Q\n  \\<lbrakk>PFst ?P \\<approx> ?Y;\n   \\<And>B.\n      \\<lbrakk>?Y = PFst B; ?P \\<approx> B\\<rbrakk>\n      \\<Longrightarrow> ?Pa\\<rbrakk>\n  \\<Longrightarrow> ?Pa\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<not> PFst P \\<approx> PSnd Q \\<Longrightarrow>\n    \\<not> PFst P \\<approx> PSnd Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> PFst P \\<approx> PSnd Q", "by blast"], ["proof (state)\nthis:\n  \\<not> PFst P \\<approx> PSnd Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> PFst P \\<approx> PSnd Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trm_simp:\n  shows\n    \"Var x = Var y \\<Longrightarrow> x = y\"\n    \"App A B = App C D \\<Longrightarrow> A = C\"\n    \"App A B = App C D \\<Longrightarrow> B = D\"\n    \"Fn x T A = Fn y S B \\<Longrightarrow>\n      (x = y \\<and> T = S \\<and> A = B) \\<or> (x \\<noteq> y \\<and> T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B)\"\n    \"Pair A B = Pair C D \\<Longrightarrow> A = C\"\n    \"Pair A B = Pair C D \\<Longrightarrow> B = D\"\n    \"Fst P = Fst Q \\<Longrightarrow> P = Q\"\n    \"Snd P = Snd Q \\<Longrightarrow> P = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((Var x = Var y \\<Longrightarrow> x = y) &&&\n      (App A B = App C D \\<Longrightarrow> A = C)) &&&\n     (App A B = App C D \\<Longrightarrow> B = D) &&&\n     (Fn x T A = Fn y S B \\<Longrightarrow>\n      x = y \\<and> T = S \\<and> A = B \\<or>\n      x \\<noteq> y \\<and>\n      T = S \\<and>\n      x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B)) &&&\n    ((SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow>\n      A = C) &&&\n     (SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow>\n      B = D)) &&&\n    (Fst P = Fst Q \\<Longrightarrow> P = Q) &&&\n    (Snd P = Snd Q \\<Longrightarrow> P = Q)", "proof -"], ["proof (state)\ngoal (8 subgoals):\n 1. Var x = Var y \\<Longrightarrow> x = y\n 2. App A B = App C D \\<Longrightarrow> A = C\n 3. App A B = App C D \\<Longrightarrow> B = D\n 4. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 5. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> A = C\n 6. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D\n 7. Fst P = Fst Q \\<Longrightarrow> P = Q\n 8. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"Var x = Var y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x = Var y \\<Longrightarrow> x = y", "by (transfer, insert ptrm.inject varE, fastforce)"], ["proof (state)\nthis:\n  Var x = Var y \\<Longrightarrow> x = y\n\ngoal (7 subgoals):\n 1. App A B = App C D \\<Longrightarrow> A = C\n 2. App A B = App C D \\<Longrightarrow> B = D\n 3. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 4. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> A = C\n 5. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D\n 6. Fst P = Fst Q \\<Longrightarrow> P = Q\n 7. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"App A B = App C D \\<Longrightarrow> A = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B = App C D \\<Longrightarrow> A = C", "by (transfer, insert ptrm.inject appE, auto)"], ["proof (state)\nthis:\n  App A B = App C D \\<Longrightarrow> A = C\n\ngoal (6 subgoals):\n 1. App A B = App C D \\<Longrightarrow> B = D\n 2. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 3. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> A = C\n 4. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D\n 5. Fst P = Fst Q \\<Longrightarrow> P = Q\n 6. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"App A B = App C D \\<Longrightarrow> B = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B = App C D \\<Longrightarrow> B = D", "by (transfer, insert ptrm.inject appE, auto)"], ["proof (state)\nthis:\n  App A B = App C D \\<Longrightarrow> B = D\n\ngoal (5 subgoals):\n 1. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 2. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> A = C\n 3. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D\n 4. Fst P = Fst Q \\<Longrightarrow> P = Q\n 5. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"Pair A B = Pair C D \\<Longrightarrow> A = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> A = C", "by (transfer, insert ptrm.inject pairE, auto)"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> A = C\n\ngoal (4 subgoals):\n 1. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 2. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D\n 3. Fst P = Fst Q \\<Longrightarrow> P = Q\n 4. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"Pair A B = Pair C D \\<Longrightarrow> B = D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D", "by (transfer, insert ptrm.inject pairE, auto)"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B = SimplyTyped.Pair C D \\<Longrightarrow> B = D\n\ngoal (3 subgoals):\n 1. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 2. Fst P = Fst Q \\<Longrightarrow> P = Q\n 3. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"Fst P = Fst Q \\<Longrightarrow> P = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P = Fst Q \\<Longrightarrow> P = Q", "by (transfer, insert ptrm.inject fstE, auto)"], ["proof (state)\nthis:\n  Fst P = Fst Q \\<Longrightarrow> P = Q\n\ngoal (2 subgoals):\n 1. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n 2. Snd P = Snd Q \\<Longrightarrow> P = Q", "show \"Snd P = Snd Q \\<Longrightarrow> P = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P = Snd Q \\<Longrightarrow> P = Q", "by (transfer, insert ptrm.inject sndE, auto)"], ["proof (state)\nthis:\n  Snd P = Snd Q \\<Longrightarrow> P = Q\n\ngoal (1 subgoal):\n 1. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B", "show \"Fn x T A = Fn y S B \\<Longrightarrow>\n      (x = y \\<and> T = S \\<and> A = B) \\<or> (x \\<noteq> y \\<and> T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A = Fn y S B \\<Longrightarrow>\n    x = y \\<and> T = S \\<and> A = B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B", "proof(transfer')"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A y S B.\n       PFn x T A \\<approx> PFn y S B \\<Longrightarrow>\n       x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n       x \\<noteq> y \\<and>\n       T = S \\<and>\n       x \\<notin> ptrm_fvs B \\<and>\n       A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "fix x y :: 'a and T S :: type and A B :: \"'a ptrm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x T A y S B.\n       PFn x T A \\<approx> PFn y S B \\<Longrightarrow>\n       x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n       x \\<noteq> y \\<and>\n       T = S \\<and>\n       x \\<notin> ptrm_fvs B \\<and>\n       A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "assume *: \"PFn x T A \\<approx> PFn y S B\""], ["proof (state)\nthis:\n  PFn x T A \\<approx> PFn y S B\n\ngoal (1 subgoal):\n 1. \\<And>x T A y S B.\n       PFn x T A \\<approx> PFn y S B \\<Longrightarrow>\n       x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n       x \\<noteq> y \\<and>\n       T = S \\<and>\n       x \\<notin> ptrm_fvs B \\<and>\n       A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "thus \"x = y \\<and> T = S \\<and> A \\<approx> B \\<or> x \\<noteq> y \\<and> T = S \\<and> x \\<notin> ptrm_fvs B \\<and> A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B\""], ["proof (prove)\nusing this:\n  PFn x T A \\<approx> PFn y S B\n\ngoal (1 subgoal):\n 1. x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> ptrm_fvs B \\<and>\n    A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "proof(induction rule: fnE[where x=x and T=T and A=A and Y=\"PFn y S B\"], metis *)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>B.\n       \\<lbrakk>PFn y S B = PFn x T B; A \\<approx> B;\n        PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B\n 2. \\<And>b B.\n       \\<lbrakk>PFn y S B = PFn b T B; x \\<noteq> b;\n        A \\<approx> [x \\<leftrightarrow> b] \\<bullet> B;\n        x \\<notin> ptrm_fvs B; PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "case (2 C)"], ["proof (state)\nthis:\n  PFn y S B = PFn x T C\n  A \\<approx> C\n  PFn x T A \\<approx> PFn y S B\n\ngoal (2 subgoals):\n 1. \\<And>B.\n       \\<lbrakk>PFn y S B = PFn x T B; A \\<approx> B;\n        PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B\n 2. \\<And>b B.\n       \\<lbrakk>PFn y S B = PFn b T B; x \\<noteq> b;\n        A \\<approx> [x \\<leftrightarrow> b] \\<bullet> B;\n        x \\<notin> ptrm_fvs B; PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "thus ?case"], ["proof (prove)\nusing this:\n  PFn y S B = PFn x T C\n  A \\<approx> C\n  PFn x T A \\<approx> PFn y S B\n\ngoal (1 subgoal):\n 1. x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> ptrm_fvs B \\<and>\n    A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "by simp"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n  x \\<noteq> y \\<and>\n  T = S \\<and>\n  x \\<notin> ptrm_fvs B \\<and>\n  A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B\n\ngoal (1 subgoal):\n 1. \\<And>b B.\n       \\<lbrakk>PFn y S B = PFn b T B; x \\<noteq> b;\n        A \\<approx> [x \\<leftrightarrow> b] \\<bullet> B;\n        x \\<notin> ptrm_fvs B; PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b B.\n       \\<lbrakk>PFn y S B = PFn b T B; x \\<noteq> b;\n        A \\<approx> [x \\<leftrightarrow> b] \\<bullet> B;\n        x \\<notin> ptrm_fvs B; PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "case (3 z C)"], ["proof (state)\nthis:\n  PFn y S B = PFn z T C\n  x \\<noteq> z\n  A \\<approx> [x \\<leftrightarrow> z] \\<bullet> C\n  x \\<notin> ptrm_fvs C\n  PFn x T A \\<approx> PFn y S B\n\ngoal (1 subgoal):\n 1. \\<And>b B.\n       \\<lbrakk>PFn y S B = PFn b T B; x \\<noteq> b;\n        A \\<approx> [x \\<leftrightarrow> b] \\<bullet> B;\n        x \\<notin> ptrm_fvs B; PFn x T A \\<approx> PFn y S B\\<rbrakk>\n       \\<Longrightarrow> x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n                         x \\<noteq> y \\<and>\n                         T = S \\<and>\n                         x \\<notin> ptrm_fvs B \\<and>\n                         A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "thus ?case"], ["proof (prove)\nusing this:\n  PFn y S B = PFn z T C\n  x \\<noteq> z\n  A \\<approx> [x \\<leftrightarrow> z] \\<bullet> C\n  x \\<notin> ptrm_fvs C\n  PFn x T A \\<approx> PFn y S B\n\ngoal (1 subgoal):\n 1. x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n    x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> ptrm_fvs B \\<and>\n    A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B", "by simp"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n  x \\<noteq> y \\<and>\n  T = S \\<and>\n  x \\<notin> ptrm_fvs B \\<and>\n  A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A \\<approx> B \\<or>\n  x \\<noteq> y \\<and>\n  T = S \\<and>\n  x \\<notin> ptrm_fvs B \\<and>\n  A \\<approx> [x \\<leftrightarrow> y] \\<bullet> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Fn x T A = Fn y S B \\<Longrightarrow>\n  x = y \\<and> T = S \\<and> A = B \\<or>\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fn_eq:\n  assumes \"x \\<noteq> y\" \"x \\<notin> fvs B\" \"A = [x \\<leftrightarrow> y] \\<cdot> B\"\n  shows \"Fn x T A = Fn y T B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A = Fn y T B", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. Fn x T A = Fn y T B", "by(transfer', metis ptrm_alpha_equiv.fn2)"], ["", "lemma trm_prm_simp:\n  shows\n    \"\\<pi> \\<cdot> Unit = Unit\"\n    \"\\<pi> \\<cdot> Var x = Var (\\<pi> $ x)\"\n    \"\\<pi> \\<cdot> App A B = App (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\"\n    \"\\<pi> \\<cdot> Fn x T A = Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\"\n    \"\\<pi> \\<cdot> Pair A B = Pair (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\"\n    \"\\<pi> \\<cdot> Fst P = Fst (\\<pi> \\<cdot> P)\"\n    \"\\<pi> \\<cdot> Snd P = Snd (\\<pi> \\<cdot> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi> \\<cdot> Unit = Unit &&&\n     \\<pi> \\<cdot> Var x = Var (\\<pi> $ x) &&&\n     \\<pi> \\<cdot> App A B = App (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)) &&&\n    (\\<pi> \\<cdot> Fn x T A = Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A) &&&\n     \\<pi> \\<cdot> SimplyTyped.Pair A B =\n     SimplyTyped.Pair (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)) &&&\n    \\<pi> \\<cdot> Fst P = Fst (\\<pi> \\<cdot> P) &&&\n    \\<pi> \\<cdot> Snd P = Snd (\\<pi> \\<cdot> P)", "apply (transfer, auto simp add: ptrm_alpha_equiv_reflexive)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<pi> \\<cdot> Var x = Var (\\<pi> $ x)\n 2. \\<pi> \\<cdot> App A B = App (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\n 3. \\<pi> \\<cdot> Fn x T A = Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\n 4. \\<pi> \\<cdot> SimplyTyped.Pair A B =\n    SimplyTyped.Pair (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\n 5. \\<pi> \\<cdot> Fst P = Fst (\\<pi> \\<cdot> P)\n 6. \\<pi> \\<cdot> Snd P = Snd (\\<pi> \\<cdot> P)", "apply (transfer', auto simp add: ptrm_alpha_equiv_reflexive)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<pi> \\<cdot> App A B = App (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\n 2. \\<pi> \\<cdot> Fn x T A = Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\n 3. \\<pi> \\<cdot> SimplyTyped.Pair A B =\n    SimplyTyped.Pair (\\<pi> \\<cdot> A) (\\<pi> \\<cdot> B)\n 4. \\<pi> \\<cdot> Fst P = Fst (\\<pi> \\<cdot> P)\n 5. \\<pi> \\<cdot> Snd P = Snd (\\<pi> \\<cdot> P)", "apply ((transfer, auto simp add: ptrm_alpha_equiv_reflexive)+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma trm_prm_apply_compose:\n  shows \"\\<pi> \\<cdot> \\<sigma> \\<cdot> A = (\\<pi> \\<diamondop> \\<sigma>) \\<cdot> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> \\<sigma> \\<cdot> A =\n    (\\<pi> \\<diamondop> \\<sigma>) \\<cdot> A", "by(transfer', metis ptrm_prm_apply_compose ptrm_alpha_equiv_reflexive)"], ["", "lemma fvs_finite:\n  shows \"finite (fvs M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (fvs M)", "by(transfer, metis ptrm_fvs_finite)"], ["", "lemma fvs_simp:\n  shows\n    \"fvs Unit = {}\" and\n    \"fvs (Var x) = {x}\"\n    \"fvs (App A B) = fvs A \\<union> fvs B\"\n    \"fvs (Fn x T A) = fvs A - {x}\"\n    \"fvs (Pair A B) = fvs A \\<union> fvs B\"\n    \"fvs (Fst P) = fvs P\"\n    \"fvs (Snd P) = fvs P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs Unit = {} &&&\n    (fvs (Var x) = {x} &&&\n     fvs (App A B) = fvs A \\<union> fvs B &&&\n     fvs (Fn x T A) = fvs A - {x}) &&&\n    fvs (SimplyTyped.Pair A B) = fvs A \\<union> fvs B &&&\n    fvs (Fst P) = fvs P &&& fvs (Snd P) = fvs P", "by((transfer, simp)+)"], ["", "lemma var_prm_action:\n  shows \"[a \\<leftrightarrow> b] \\<cdot> Var a = Var b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] \\<cdot> Var a = Var b", "by(transfer', simp add: prm_unit_action ptrm_alpha_equiv.intros)"], ["", "lemma var_prm_inaction:\n  assumes \"a \\<noteq> x\" \"b \\<noteq> x\"\n  shows \"[a \\<leftrightarrow> b] \\<cdot> Var x = Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] \\<cdot> Var x = Var x", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> x\n  b \\<noteq> x\n\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] \\<cdot> Var x = Var x", "by(transfer', simp add: prm_unit_inaction ptrm_alpha_equiv.intros)"], ["", "lemma trm_prm_apply_id:\n  shows \"\\<epsilon> \\<cdot> M = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<cdot> M = M", "by(transfer', auto simp add: ptrm_prm_apply_id)"], ["", "lemma trm_prm_unit_inaction:\n  assumes \"a \\<notin> fvs X\" \"b \\<notin> fvs X\"\n  shows \"[a \\<leftrightarrow> b] \\<cdot> X = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] \\<cdot> X = X", "using assms"], ["proof (prove)\nusing this:\n  a \\<notin> fvs X\n  b \\<notin> fvs X\n\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] \\<cdot> X = X", "by(transfer', metis ptrm_prm_unit_inaction)"], ["", "lemma trm_prm_agreement_equiv:\n  assumes \"\\<And>a. a \\<in> ds \\<pi> \\<sigma> \\<Longrightarrow> a \\<notin> fvs M\"\n  shows \"\\<pi> \\<cdot> M = \\<sigma> \\<cdot> M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> M = \\<sigma> \\<cdot> M", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> ds \\<pi> \\<sigma> \\<Longrightarrow> ?a \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> M = \\<sigma> \\<cdot> M", "by(transfer, metis ptrm_prm_agreement_equiv)"], ["", "lemma trm_induct:\n  fixes P :: \"'a trm \\<Rightarrow> bool\"\n  assumes\n    \"P Unit\"\n    \"\\<And>x. P (Var x)\"\n    \"\\<And>A B. \\<lbrakk>P A; P B\\<rbrakk> \\<Longrightarrow> P (App A B)\"\n    \"\\<And>x T A. P A \\<Longrightarrow> P (Fn x T A)\"\n    \"\\<And>A B. \\<lbrakk>P A; P B\\<rbrakk> \\<Longrightarrow> P (Pair A B)\"\n    \"\\<And>A. P A \\<Longrightarrow> P (Fst A)\"\n    \"\\<And>A. P A \\<Longrightarrow> P (Snd A)\"\n  shows \"P M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P M", "have \"\\<And>X. P (abs_trm X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X. P (abs_trm X)", "proof(rule ptrm.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>X. P (abs_trm PUnit)\n 2. \\<And>X x. P (abs_trm (PVar x))\n 3. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PApp x1 x2a))\n 4. \\<And>X x1 x2a x3.\n       P (abs_trm x3) \\<Longrightarrow> P (abs_trm (PFn x1 x2a x3))\n 5. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PPair x1 x2a))\n 6. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PFst x))\n 7. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"P (abs_trm PUnit)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (abs_trm PUnit)", "using assms(1) Unit.abs_eq"], ["proof (prove)\nusing this:\n  P Unit\n  Unit = abs_trm PUnit\n\ngoal (1 subgoal):\n 1. P (abs_trm PUnit)", "by metis"], ["proof (state)\nthis:\n  P (abs_trm PUnit)\n\ngoal (6 subgoals):\n 1. \\<And>X x. P (abs_trm (PVar x))\n 2. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PApp x1 x2a))\n 3. \\<And>X x1 x2a x3.\n       P (abs_trm x3) \\<Longrightarrow> P (abs_trm (PFn x1 x2a x3))\n 4. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PPair x1 x2a))\n 5. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PFst x))\n 6. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"P (abs_trm (PVar x))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (abs_trm (PVar x))", "using assms(2) Var.abs_eq"], ["proof (prove)\nusing this:\n  P (Var ?x)\n  Var ?x = abs_trm (PVar ?x)\n\ngoal (1 subgoal):\n 1. P (abs_trm (PVar x))", "by metis"], ["proof (state)\nthis:\n  P (abs_trm (PVar ?x))\n\ngoal (5 subgoals):\n 1. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PApp x1 x2a))\n 2. \\<And>X x1 x2a x3.\n       P (abs_trm x3) \\<Longrightarrow> P (abs_trm (PFn x1 x2a x3))\n 3. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PPair x1 x2a))\n 4. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PFst x))\n 5. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"\\<lbrakk>P (abs_trm A); P (abs_trm B)\\<rbrakk> \\<Longrightarrow> P (abs_trm (PApp A B))\" for A B"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (abs_trm A); P (abs_trm B)\\<rbrakk>\n    \\<Longrightarrow> P (abs_trm (PApp A B))", "using assms(3) App.abs_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>P ?A; P ?B\\<rbrakk> \\<Longrightarrow> P (App ?A ?B)\n  App (abs_trm ?xa) (abs_trm ?x) = abs_trm (PApp ?xa ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P (abs_trm A); P (abs_trm B)\\<rbrakk>\n    \\<Longrightarrow> P (abs_trm (PApp A B))", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>P (abs_trm ?A); P (abs_trm ?B)\\<rbrakk>\n  \\<Longrightarrow> P (abs_trm (PApp ?A ?B))\n\ngoal (4 subgoals):\n 1. \\<And>X x1 x2a x3.\n       P (abs_trm x3) \\<Longrightarrow> P (abs_trm (PFn x1 x2a x3))\n 2. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PPair x1 x2a))\n 3. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PFst x))\n 4. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"P (abs_trm A) \\<Longrightarrow> P (abs_trm (PFn x T A))\" for x T A"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (abs_trm A) \\<Longrightarrow> P (abs_trm (PFn x T A))", "using assms(4) Fn.abs_eq"], ["proof (prove)\nusing this:\n  P ?A \\<Longrightarrow> P (Fn ?x ?T ?A)\n  Fn ?xb ?xa (abs_trm ?x) = abs_trm (PFn ?xb ?xa ?x)\n\ngoal (1 subgoal):\n 1. P (abs_trm A) \\<Longrightarrow> P (abs_trm (PFn x T A))", "by metis"], ["proof (state)\nthis:\n  P (abs_trm ?A) \\<Longrightarrow> P (abs_trm (PFn ?x ?T ?A))\n\ngoal (3 subgoals):\n 1. \\<And>X x1 x2a.\n       \\<lbrakk>P (abs_trm x1); P (abs_trm x2a)\\<rbrakk>\n       \\<Longrightarrow> P (abs_trm (PPair x1 x2a))\n 2. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PFst x))\n 3. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"\\<lbrakk>P (abs_trm A); P (abs_trm B)\\<rbrakk> \\<Longrightarrow> P (abs_trm (PPair A B))\" for A B"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (abs_trm A); P (abs_trm B)\\<rbrakk>\n    \\<Longrightarrow> P (abs_trm (PPair A B))", "using assms(5) Pair.abs_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>P ?A; P ?B\\<rbrakk> \\<Longrightarrow> P (SimplyTyped.Pair ?A ?B)\n  SimplyTyped.Pair (abs_trm ?xa) (abs_trm ?x) = abs_trm (PPair ?xa ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P (abs_trm A); P (abs_trm B)\\<rbrakk>\n    \\<Longrightarrow> P (abs_trm (PPair A B))", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>P (abs_trm ?A); P (abs_trm ?B)\\<rbrakk>\n  \\<Longrightarrow> P (abs_trm (PPair ?A ?B))\n\ngoal (2 subgoals):\n 1. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PFst x))\n 2. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"P (abs_trm A) \\<Longrightarrow> P (abs_trm (PFst A))\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (abs_trm A) \\<Longrightarrow> P (abs_trm (PFst A))", "using assms(6) Fst.abs_eq"], ["proof (prove)\nusing this:\n  P ?A \\<Longrightarrow> P (Fst ?A)\n  Fst (abs_trm ?x) = abs_trm (PFst ?x)\n\ngoal (1 subgoal):\n 1. P (abs_trm A) \\<Longrightarrow> P (abs_trm (PFst A))", "by metis"], ["proof (state)\nthis:\n  P (abs_trm ?A) \\<Longrightarrow> P (abs_trm (PFst ?A))\n\ngoal (1 subgoal):\n 1. \\<And>X x. P (abs_trm x) \\<Longrightarrow> P (abs_trm (PSnd x))", "show \"P (abs_trm A) \\<Longrightarrow> P (abs_trm (PSnd A))\" for A"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (abs_trm A) \\<Longrightarrow> P (abs_trm (PSnd A))", "using assms(7) Snd.abs_eq"], ["proof (prove)\nusing this:\n  P ?A \\<Longrightarrow> P (Snd ?A)\n  Snd (abs_trm ?x) = abs_trm (PSnd ?x)\n\ngoal (1 subgoal):\n 1. P (abs_trm A) \\<Longrightarrow> P (abs_trm (PSnd A))", "by metis"], ["proof (state)\nthis:\n  P (abs_trm ?A) \\<Longrightarrow> P (abs_trm (PSnd ?A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (abs_trm ?X)\n\ngoal (1 subgoal):\n 1. P M", "thus ?thesis"], ["proof (prove)\nusing this:\n  P (abs_trm ?X)\n\ngoal (1 subgoal):\n 1. P M", "using trm.abs_induct"], ["proof (prove)\nusing this:\n  P (abs_trm ?X)\n  (\\<And>y. ?P (abs_trm y)) \\<Longrightarrow> ?P ?x\n\ngoal (1 subgoal):\n 1. P M", "by auto"], ["proof (state)\nthis:\n  P M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trm_cases:\n  assumes\n    \"M = Unit \\<Longrightarrow> P M\"\n    \"\\<And>x. M = Var x \\<Longrightarrow> P M\"\n    \"\\<And>A B. M = App A B \\<Longrightarrow> P M\"\n    \"\\<And>x T A. M = Fn x T A \\<Longrightarrow> P M\"\n    \"\\<And>A B. M = Pair A B \\<Longrightarrow> P M\"\n    \"\\<And>A. M = Fst A \\<Longrightarrow> P M\"\n    \"\\<And>A. M = Snd A \\<Longrightarrow> P M\"\n  shows \"P M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P M", "using assms"], ["proof (prove)\nusing this:\n  M = Unit \\<Longrightarrow> P M\n  M = Var ?x \\<Longrightarrow> P M\n  M = App ?A ?B \\<Longrightarrow> P M\n  M = Fn ?x ?T ?A \\<Longrightarrow> P M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P M\n  M = Fst ?A \\<Longrightarrow> P M\n  M = Snd ?A \\<Longrightarrow> P M\n\ngoal (1 subgoal):\n 1. P M", "by(induction rule: trm_induct, auto)"], ["", "lemma trm_depth_induct:\n  assumes\n    \"P Unit\"\n    \"\\<And>x. P (Var x)\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (App A B) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (App A B)\"\n    \"\\<And>M x T A. (\\<And>K. depth K < depth (Fn x T A) \\<Longrightarrow> P K) \\<Longrightarrow> P (Fn x T A)\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (Pair A B) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (Pair A B)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Fst A) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (Fst A)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Snd A) \\<Longrightarrow> P K\\<rbrakk> \\<Longrightarrow> P (Snd A)\"\n  shows \"P M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P M", "proof(induction \"depth M\" arbitrary: M rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P Ma) \\<Longrightarrow>\n       P M", "fix M :: \"'a trm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P Ma) \\<Longrightarrow>\n       P M", "assume IH: \"depth K < depth M \\<Longrightarrow> P K\" for K"], ["proof (state)\nthis:\n  depth ?K < depth M \\<Longrightarrow> P ?K\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P Ma) \\<Longrightarrow>\n       P M", "hence\n    \"         M = Unit \\<Longrightarrow>    P M\"\n    \"\\<And>x.     M = Var x \\<Longrightarrow>    P M\"\n    \"\\<And>A B.   M = App A B \\<Longrightarrow>  P M\"\n    \"\\<And>x T A. M = Fn x T A \\<Longrightarrow> P M\"\n    \"\\<And>A B.   M = Pair A B \\<Longrightarrow>  P M\"\n    \"\\<And>A.     M = Fst A \\<Longrightarrow>  P M\"\n    \"\\<And>A.     M = Snd A \\<Longrightarrow>  P M\""], ["proof (prove)\nusing this:\n  depth ?K < depth M \\<Longrightarrow> P ?K\n\ngoal (1 subgoal):\n 1. ((M = Unit \\<Longrightarrow> P M) &&&\n     (\\<And>x. M = Var x \\<Longrightarrow> P M) &&&\n     (\\<And>A B. M = App A B \\<Longrightarrow> P M)) &&&\n    ((\\<And>x T A. M = Fn x T A \\<Longrightarrow> P M) &&&\n     (\\<And>A B. M = SimplyTyped.Pair A B \\<Longrightarrow> P M)) &&&\n    (\\<And>A. M = Fst A \\<Longrightarrow> P M) &&&\n    (\\<And>A. M = Snd A \\<Longrightarrow> P M)", "using assms"], ["proof (prove)\nusing this:\n  depth ?K < depth M \\<Longrightarrow> P ?K\n  P Unit\n  P (Var ?x)\n  (\\<And>K.\n      depth K < depth (App ?A ?B) \\<Longrightarrow> P K) \\<Longrightarrow>\n  P (App ?A ?B)\n  (\\<And>K.\n      depth K < depth (Fn ?x ?T ?A) \\<Longrightarrow> P K) \\<Longrightarrow>\n  P (Fn ?x ?T ?A)\n  (\\<And>K.\n      depth K < depth (SimplyTyped.Pair ?A ?B) \\<Longrightarrow>\n      P K) \\<Longrightarrow>\n  P (SimplyTyped.Pair ?A ?B)\n  (\\<And>K.\n      depth K < depth (Fst ?A) \\<Longrightarrow> P K) \\<Longrightarrow>\n  P (Fst ?A)\n  (\\<And>K.\n      depth K < depth (Snd ?A) \\<Longrightarrow> P K) \\<Longrightarrow>\n  P (Snd ?A)\n\ngoal (1 subgoal):\n 1. ((M = Unit \\<Longrightarrow> P M) &&&\n     (\\<And>x. M = Var x \\<Longrightarrow> P M) &&&\n     (\\<And>A B. M = App A B \\<Longrightarrow> P M)) &&&\n    ((\\<And>x T A. M = Fn x T A \\<Longrightarrow> P M) &&&\n     (\\<And>A B. M = SimplyTyped.Pair A B \\<Longrightarrow> P M)) &&&\n    (\\<And>A. M = Fst A \\<Longrightarrow> P M) &&&\n    (\\<And>A. M = Snd A \\<Longrightarrow> P M)", "by blast+"], ["proof (state)\nthis:\n  M = Unit \\<Longrightarrow> P M\n  M = Var ?x \\<Longrightarrow> P M\n  M = App ?A ?B \\<Longrightarrow> P M\n  M = Fn ?x ?T ?A \\<Longrightarrow> P M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P M\n  M = Fst ?A \\<Longrightarrow> P M\n  M = Snd ?A \\<Longrightarrow> P M\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P Ma) \\<Longrightarrow>\n       P M", "thus \"P M\""], ["proof (prove)\nusing this:\n  M = Unit \\<Longrightarrow> P M\n  M = Var ?x \\<Longrightarrow> P M\n  M = App ?A ?B \\<Longrightarrow> P M\n  M = Fn ?x ?T ?A \\<Longrightarrow> P M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P M\n  M = Fst ?A \\<Longrightarrow> P M\n  M = Snd ?A \\<Longrightarrow> P M\n\ngoal (1 subgoal):\n 1. P M", "using trm_cases[where M=M]"], ["proof (prove)\nusing this:\n  M = Unit \\<Longrightarrow> P M\n  M = Var ?x \\<Longrightarrow> P M\n  M = App ?A ?B \\<Longrightarrow> P M\n  M = Fn ?x ?T ?A \\<Longrightarrow> P M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P M\n  M = Fst ?A \\<Longrightarrow> P M\n  M = Snd ?A \\<Longrightarrow> P M\n  \\<lbrakk>M = Unit \\<Longrightarrow> ?P M;\n   \\<And>x. M = Var x \\<Longrightarrow> ?P M;\n   \\<And>A B. M = App A B \\<Longrightarrow> ?P M;\n   \\<And>x T A. M = Fn x T A \\<Longrightarrow> ?P M;\n   \\<And>A B. M = SimplyTyped.Pair A B \\<Longrightarrow> ?P M;\n   \\<And>A. M = Fst A \\<Longrightarrow> ?P M;\n   \\<And>A. M = Snd A \\<Longrightarrow> ?P M\\<rbrakk>\n  \\<Longrightarrow> ?P M\n\ngoal (1 subgoal):\n 1. P M", "by blast"], ["proof (state)\nthis:\n  P M\n\ngoal:\nNo subgoals!", "qed"], ["", "context fresh begin"], ["", "lemma fresh_fn:\n  fixes x :: 'a and S :: \"'a set\"\n  assumes \"finite S\"\n  shows \"\\<exists>y B. y \\<notin> S \\<and> B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> (Fn x T A = Fn y T B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "have *: \"finite ({x} \\<union> fvs A \\<union> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({x} \\<union> fvs A \\<union> S)", "using fvs_finite assms"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n  finite S\n\ngoal (1 subgoal):\n 1. finite ({x} \\<union> fvs A \\<union> S)", "by auto"], ["proof (state)\nthis:\n  finite ({x} \\<union> fvs A \\<union> S)\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "obtain y where \"y = fresh_in ({x} \\<union> fvs A \\<union> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        y = fresh_in ({x} \\<union> fvs A \\<union> S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = fresh_in ({x} \\<union> fvs A \\<union> S)\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "hence \"y \\<notin> ({x} \\<union> fvs A \\<union> S)\""], ["proof (prove)\nusing this:\n  y = fresh_in ({x} \\<union> fvs A \\<union> S)\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<union> fvs A \\<union> S", "using fresh_axioms *"], ["proof (prove)\nusing this:\n  y = fresh_in ({x} \\<union> fvs A \\<union> S)\n  class.fresh fresh_in\n  finite ({x} \\<union> fvs A \\<union> S)\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<union> fvs A \\<union> S", "unfolding class.fresh_def"], ["proof (prove)\nusing this:\n  y = fresh_in ({x} \\<union> fvs A \\<union> S)\n  \\<forall>S. finite S \\<longrightarrow> fresh_in S \\<notin> S\n  finite ({x} \\<union> fvs A \\<union> S)\n\ngoal (1 subgoal):\n 1. y \\<notin> {x} \\<union> fvs A \\<union> S", "by metis"], ["proof (state)\nthis:\n  y \\<notin> {x} \\<union> fvs A \\<union> S\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "hence \"y \\<noteq> x\" \"y \\<notin> fvs A\" \"y \\<notin> S\""], ["proof (prove)\nusing this:\n  y \\<notin> {x} \\<union> fvs A \\<union> S\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& y \\<notin> fvs A &&& y \\<notin> S", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<notin> fvs A\n  y \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "obtain B where B: \"B = [y \\<leftrightarrow> x] \\<cdot> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        B = [y \\<leftrightarrow> x] \\<cdot> A \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B = [y \\<leftrightarrow> x] \\<cdot> A\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "hence \"Fn x T A = Fn y T B\""], ["proof (prove)\nusing this:\n  B = [y \\<leftrightarrow> x] \\<cdot> A\n\ngoal (1 subgoal):\n 1. Fn x T A = Fn y T B", "using fn_eq \\<open>y \\<noteq> x\\<close> \\<open>y \\<notin> fvs A\\<close>"], ["proof (prove)\nusing this:\n  B = [y \\<leftrightarrow> x] \\<cdot> A\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<notin> fvs ?B;\n   ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\\<rbrakk>\n  \\<Longrightarrow> Fn ?x ?T ?A = Fn ?y ?T ?B\n  y \\<noteq> x\n  y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. Fn x T A = Fn y T B", "by metis"], ["proof (state)\nthis:\n  Fn x T A = Fn y T B\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y T B\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "using \\<open>y \\<noteq> x\\<close> \\<open>y \\<notin> S\\<close> B"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y T B\n  y \\<noteq> x\n  y \\<notin> S\n  B = [y \\<leftrightarrow> x] \\<cdot> A\n\ngoal (1 subgoal):\n 1. \\<exists>y B.\n       y \\<notin> S \\<and>\n       B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B", "by metis"], ["proof (state)\nthis:\n  \\<exists>y B.\n     y \\<notin> S \\<and>\n     B = [y \\<leftrightarrow> x] \\<cdot> A \\<and> Fn x T A = Fn y T B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trm_strong_induct:\n  fixes P :: \"'a set \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  assumes\n    \"P S Unit\"\n    \"\\<And>x. P S (Var x)\"\n    \"\\<And>A B. \\<lbrakk>P S A; P S B\\<rbrakk> \\<Longrightarrow> P S (App A B)\"\n    \"\\<And>x T. x \\<notin> S \\<Longrightarrow> (\\<And>A. P S A \\<Longrightarrow> P S (Fn x T A))\"\n    \"\\<And>A B. \\<lbrakk>P S A; P S B\\<rbrakk> \\<Longrightarrow> P S (Pair A B)\"\n    \"\\<And>A. P S A \\<Longrightarrow> P S (Fst A)\"\n    \"\\<And>A. P S A \\<Longrightarrow> P S (Snd A)\"\n    \"finite S\"\n  shows \"P S M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P S M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P S M", "have \"\\<And>\\<pi>. P S (\\<pi> \\<cdot> M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<pi>. P S (\\<pi> \\<cdot> M)", "proof(induction M rule: trm_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<pi>. P S (\\<pi> \\<cdot> Unit)\n 2. \\<And>x \\<pi>. P S (\\<pi> \\<cdot> Var x)\n 3. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 4. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 5. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 6. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 7. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>\\<pi>. P S (\\<pi> \\<cdot> Unit)\n 2. \\<And>x \\<pi>. P S (\\<pi> \\<cdot> Var x)\n 3. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 4. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 5. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 6. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 7. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Unit)", "using assms(1) trm_prm_simp(1)"], ["proof (prove)\nusing this:\n  P S Unit\n  ?\\<pi> \\<cdot> Unit = Unit\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Unit)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> Unit)\n\ngoal (6 subgoals):\n 1. \\<And>x \\<pi>. P S (\\<pi> \\<cdot> Var x)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 3. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 4. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 5. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 6. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<pi>. P S (\\<pi> \\<cdot> Var x)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 3. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 4. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 5. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 6. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case (2 x)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>x \\<pi>. P S (\\<pi> \\<cdot> Var x)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 3. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 4. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 5. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 6. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Var x)", "using assms(2) trm_prm_simp(2)"], ["proof (prove)\nusing this:\n  P S (Var ?x)\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Var x)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> Var x)\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 2. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 3. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 5. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 2. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 3. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 5. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case (3 A B)"], ["proof (state)\nthis:\n  P S (?\\<pi> \\<cdot> A)\n  P S (?\\<pi> \\<cdot> B)\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> App A B)\n 2. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 3. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 5. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "thus ?case"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n  P S (?\\<pi> \\<cdot> B)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> App A B)", "using assms(3) trm_prm_simp(3)"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n  P S (?\\<pi> \\<cdot> B)\n  \\<lbrakk>P S ?A; P S ?B\\<rbrakk> \\<Longrightarrow> P S (App ?A ?B)\n  ?\\<pi> \\<cdot> App ?A ?B = App (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> App A B)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> App A B)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case (4 x T A)"], ["proof (state)\nthis:\n  P S (?\\<pi> \\<cdot> A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "have \"finite S\" \"finite (fvs (\\<pi> \\<cdot> A))\" \"finite {\\<pi> $ x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S &&& finite (fvs (\\<pi> \\<cdot> A)) &&& finite {\\<pi> $ x}", "using \\<open>finite S\\<close> fvs_finite"], ["proof (prove)\nusing this:\n  finite S\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite S &&& finite (fvs (\\<pi> \\<cdot> A)) &&& finite {\\<pi> $ x}", "by auto"], ["proof (state)\nthis:\n  finite S\n  finite (fvs (\\<pi> \\<cdot> A))\n  finite {\\<pi> $ x}\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "hence \"finite (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\""], ["proof (prove)\nusing this:\n  finite S\n  finite (fvs (\\<pi> \\<cdot> A))\n  finite {\\<pi> $ x}\n\ngoal (1 subgoal):\n 1. finite (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})", "by auto"], ["proof (state)\nthis:\n  finite (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "obtain y where \"y = fresh_in (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        y =\n        fresh_in\n         (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union>\n          {\\<pi> $ x}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = fresh_in (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "hence \"y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}\""], ["proof (prove)\nusing this:\n  y = fresh_in (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n\ngoal (1 subgoal):\n 1. y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}", "using fresh_axioms"], ["proof (prove)\nusing this:\n  y = fresh_in (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n  class.fresh fresh_in\n\ngoal (1 subgoal):\n 1. y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}", "unfolding class.fresh_def"], ["proof (prove)\nusing this:\n  y = fresh_in (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n  \\<forall>S. finite S \\<longrightarrow> fresh_in S \\<notin> S\n\ngoal (1 subgoal):\n 1. y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}", "using \\<open>finite (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\\<close>"], ["proof (prove)\nusing this:\n  y = fresh_in (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n  \\<forall>S. finite S \\<longrightarrow> fresh_in S \\<notin> S\n  finite (S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x})\n\ngoal (1 subgoal):\n 1. y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}", "by metis"], ["proof (state)\nthis:\n  y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "hence \"y \\<noteq> \\<pi> $ x\" \"y \\<notin> fvs (\\<pi> \\<cdot> A)\" \"y \\<notin> S\""], ["proof (prove)\nusing this:\n  y \\<notin> S \\<union> fvs (\\<pi> \\<cdot> A) \\<union> {\\<pi> $ x}\n\ngoal (1 subgoal):\n 1. y \\<noteq> \\<pi> $ x &&&\n    y \\<notin> fvs (\\<pi> \\<cdot> A) &&& y \\<notin> S", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> \\<pi> $ x\n  y \\<notin> fvs (\\<pi> \\<cdot> A)\n  y \\<notin> S\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "hence *: \"\\<And>A. P S A \\<Longrightarrow> P S (Fn y T A)\""], ["proof (prove)\nusing this:\n  y \\<noteq> \\<pi> $ x\n  y \\<notin> fvs (\\<pi> \\<cdot> A)\n  y \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<And>A. P S A \\<Longrightarrow> P S (Fn y T A)", "using assms(4)"], ["proof (prove)\nusing this:\n  y \\<noteq> \\<pi> $ x\n  y \\<notin> fvs (\\<pi> \\<cdot> A)\n  y \\<notin> S\n  \\<lbrakk>?x \\<notin> S; P S ?A\\<rbrakk>\n  \\<Longrightarrow> P S (Fn ?x ?T ?A)\n\ngoal (1 subgoal):\n 1. \\<And>A. P S A \\<Longrightarrow> P S (Fn y T A)", "by metis"], ["proof (state)\nthis:\n  P S ?A \\<Longrightarrow> P S (Fn y T ?A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "have \"P S (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P S (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)", "using 4"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n\ngoal (1 subgoal):\n 1. P S (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)", "by metis"], ["proof (state)\nthis:\n  P S (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "hence \"P S (Fn y T (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))\""], ["proof (prove)\nusing this:\n  P S (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)\n\ngoal (1 subgoal):\n 1. P S (Fn y T\n          (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))", "using *"], ["proof (prove)\nusing this:\n  P S (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)\n  P S ?A \\<Longrightarrow> P S (Fn y T ?A)\n\ngoal (1 subgoal):\n 1. P S (Fn y T\n          (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))", "by metis"], ["proof (state)\nthis:\n  P S (Fn y T\n        (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "moreover"], ["proof (state)\nthis:\n  P S (Fn y T\n        (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "have \"(Fn y T (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A)) = Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn y T\n     (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A) =\n    Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)", "using trm_prm_apply_compose fn_eq \\<open>y \\<noteq> \\<pi> $ x\\<close> \\<open>y \\<notin> fvs (\\<pi> \\<cdot> A)\\<close>"], ["proof (prove)\nusing this:\n  ?\\<pi> \\<cdot> ?\\<sigma> \\<cdot> ?A =\n  (?\\<pi> \\<diamondop> ?\\<sigma>) \\<cdot> ?A\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<notin> fvs ?B;\n   ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\\<rbrakk>\n  \\<Longrightarrow> Fn ?x ?T ?A = Fn ?y ?T ?B\n  y \\<noteq> \\<pi> $ x\n  y \\<notin> fvs (\\<pi> \\<cdot> A)\n\ngoal (1 subgoal):\n 1. Fn y T\n     (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A) =\n    Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)", "by metis"], ["proof (state)\nthis:\n  Fn y T (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A) =\n  Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fn x T A)\n 2. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 4. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "ultimately"], ["proof (chain)\npicking this:\n  P S (Fn y T\n        (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))\n  Fn y T (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A) =\n  Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)", "show ?case"], ["proof (prove)\nusing this:\n  P S (Fn y T\n        (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))\n  Fn y T (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A) =\n  Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Fn x T A)", "using trm_prm_simp(4)"], ["proof (prove)\nusing this:\n  P S (Fn y T\n        (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A))\n  Fn y T (([y \\<leftrightarrow> \\<pi> $ x] \\<diamondop> \\<pi>) \\<cdot> A) =\n  Fn (\\<pi> $ x) T (\\<pi> \\<cdot> A)\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Fn x T A)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> Fn x T A)\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 2. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 2. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case (5 A B)"], ["proof (state)\nthis:\n  P S (?\\<pi> \\<cdot> A)\n  P S (?\\<pi> \\<cdot> B)\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<pi>.\n       \\<lbrakk>\\<And>\\<pi>. P S (\\<pi> \\<cdot> A);\n        \\<And>\\<pi>. P S (\\<pi> \\<cdot> B)\\<rbrakk>\n       \\<Longrightarrow> P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n 2. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 3. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "thus ?case"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n  P S (?\\<pi> \\<cdot> B)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)", "using assms(5) trm_prm_simp(5)"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n  P S (?\\<pi> \\<cdot> B)\n  \\<lbrakk>P S ?A; P S ?B\\<rbrakk>\n  \\<Longrightarrow> P S (SimplyTyped.Pair ?A ?B)\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n\ngoal (2 subgoals):\n 1. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 2. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 2. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case (6 A)"], ["proof (state)\nthis:\n  P S (?\\<pi> \\<cdot> A)\n\ngoal (2 subgoals):\n 1. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Fst A)\n 2. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "thus ?case"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Fst A)", "using assms(6) trm_prm_simp(6)"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n  P S ?A \\<Longrightarrow> P S (Fst ?A)\n  ?\\<pi> \\<cdot> Fst ?P = Fst (?\\<pi> \\<cdot> ?P)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Fst A)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> Fst A)\n\ngoal (1 subgoal):\n 1. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "case (7 A)"], ["proof (state)\nthis:\n  P S (?\\<pi> \\<cdot> A)\n\ngoal (1 subgoal):\n 1. \\<And>A \\<pi>.\n       (\\<And>\\<pi>. P S (\\<pi> \\<cdot> A)) \\<Longrightarrow>\n       P S (\\<pi> \\<cdot> Snd A)", "thus ?case"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Snd A)", "using assms(7) trm_prm_simp(7)"], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> A)\n  P S ?A \\<Longrightarrow> P S (Snd ?A)\n  ?\\<pi> \\<cdot> Snd ?P = Snd (?\\<pi> \\<cdot> ?P)\n\ngoal (1 subgoal):\n 1. P S (\\<pi> \\<cdot> Snd A)", "by metis"], ["proof (state)\nthis:\n  P S (\\<pi> \\<cdot> Snd A)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P S (?\\<pi> \\<cdot> M)\n\ngoal (1 subgoal):\n 1. P S M", "hence \"P S (\\<epsilon> \\<cdot> M)\""], ["proof (prove)\nusing this:\n  P S (?\\<pi> \\<cdot> M)\n\ngoal (1 subgoal):\n 1. P S (\\<epsilon> \\<cdot> M)", "by metis"], ["proof (state)\nthis:\n  P S (\\<epsilon> \\<cdot> M)\n\ngoal (1 subgoal):\n 1. P S M", "thus \"P S M\""], ["proof (prove)\nusing this:\n  P S (\\<epsilon> \\<cdot> M)\n\ngoal (1 subgoal):\n 1. P S M", "using trm_prm_apply_id"], ["proof (prove)\nusing this:\n  P S (\\<epsilon> \\<cdot> M)\n  \\<epsilon> \\<cdot> ?M = ?M\n\ngoal (1 subgoal):\n 1. P S M", "by metis"], ["proof (state)\nthis:\n  P S M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trm_strong_cases:\n  fixes P :: \"'a set \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  assumes\n    \"         M = Unit    \\<Longrightarrow> P S M\"\n    \"\\<And>x.     M = Var x    \\<Longrightarrow> P S M\"\n    \"\\<And>A B.   M = App A B  \\<Longrightarrow> P S M\"\n    \"\\<And>x T A. M = Fn x T A \\<Longrightarrow> x \\<notin> S \\<Longrightarrow> P S M\"\n    \"\\<And>A B.   M = Pair A B \\<Longrightarrow> P S M\"\n    \"\\<And>A.     M = Fst A    \\<Longrightarrow> P S M\"\n    \"\\<And>A.     M = Snd A    \\<Longrightarrow> P S M\"\n    \"finite S\"\n  shows \"P S M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P S M", "using assms"], ["proof (prove)\nusing this:\n  M = Unit \\<Longrightarrow> P S M\n  M = Var ?x \\<Longrightarrow> P S M\n  M = App ?A ?B \\<Longrightarrow> P S M\n  \\<lbrakk>M = Fn ?x ?T ?A; ?x \\<notin> S\\<rbrakk> \\<Longrightarrow> P S M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P S M\n  M = Fst ?A \\<Longrightarrow> P S M\n  M = Snd ?A \\<Longrightarrow> P S M\n  finite S\n\ngoal (1 subgoal):\n 1. P S M", "by(induction S M rule: trm_strong_induct, metis+)"], ["", "lemma trm_strong_depth_induct:\n  fixes P :: \"'a set \\<Rightarrow> 'a trm \\<Rightarrow> bool\"\n  assumes\n    \"P S Unit\"\n    \"\\<And>x. P S (Var x)\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (App A B) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (App A B)\"\n    \"\\<And>x T. x \\<notin> S \\<Longrightarrow> (\\<And>A. (\\<And>K. depth K < depth (Fn x T A) \\<Longrightarrow> P S K) \\<Longrightarrow> P S (Fn x T A))\"\n    \"\\<And>A B. \\<lbrakk>\\<And>K. depth K < depth (Pair A B) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (Pair A B)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Fst A) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (Fst A)\"\n    \"\\<And>A. \\<lbrakk>\\<And>K. depth K < depth (Snd A) \\<Longrightarrow> P S K\\<rbrakk> \\<Longrightarrow> P S (Snd A)\"\n    \"finite S\"\n  shows \"P S M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P S M", "proof(induction \"depth M\" arbitrary: M rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P S Ma) \\<Longrightarrow>\n       P S M", "fix M :: \"'a trm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P S Ma) \\<Longrightarrow>\n       P S M", "assume IH: \"depth K < depth M \\<Longrightarrow> P S K\" for K"], ["proof (state)\nthis:\n  depth ?K < depth M \\<Longrightarrow> P S ?K\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P S Ma) \\<Longrightarrow>\n       P S M", "hence\n    \"         M = Unit    \\<Longrightarrow> P S M\"\n    \"\\<And>x.     M = Var x    \\<Longrightarrow> P S M\"\n    \"\\<And>A B.   M = App A B  \\<Longrightarrow> P S M\"\n    \"\\<And>x T A. M = Fn x T A \\<Longrightarrow> x \\<notin> S \\<Longrightarrow> P S M\"\n    \"\\<And>A B.   M = Pair A B \\<Longrightarrow> P S M\"\n    \"\\<And>A.     M = Fst A    \\<Longrightarrow> P S M\"\n    \"\\<And>A.     M = Snd A    \\<Longrightarrow> P S M\"\n    \"finite S\""], ["proof (prove)\nusing this:\n  depth ?K < depth M \\<Longrightarrow> P S ?K\n\ngoal (1 subgoal):\n 1. (((M = Unit \\<Longrightarrow> P S M) &&&\n      (\\<And>x. M = Var x \\<Longrightarrow> P S M)) &&&\n     (\\<And>A B. M = App A B \\<Longrightarrow> P S M) &&&\n     (\\<And>x T A.\n         \\<lbrakk>M = Fn x T A; x \\<notin> S\\<rbrakk>\n         \\<Longrightarrow> P S M)) &&&\n    ((\\<And>A B. M = SimplyTyped.Pair A B \\<Longrightarrow> P S M) &&&\n     (\\<And>A. M = Fst A \\<Longrightarrow> P S M)) &&&\n    (\\<And>A. M = Snd A \\<Longrightarrow> P S M) &&& finite S", "using assms IH"], ["proof (prove)\nusing this:\n  depth ?K < depth M \\<Longrightarrow> P S ?K\n  P S Unit\n  P S (Var ?x)\n  (\\<And>K.\n      depth K < depth (App ?A ?B) \\<Longrightarrow> P S K) \\<Longrightarrow>\n  P S (App ?A ?B)\n  \\<lbrakk>?x \\<notin> S;\n   \\<And>K. depth K < depth (Fn ?x ?T ?A) \\<Longrightarrow> P S K\\<rbrakk>\n  \\<Longrightarrow> P S (Fn ?x ?T ?A)\n  (\\<And>K.\n      depth K < depth (SimplyTyped.Pair ?A ?B) \\<Longrightarrow>\n      P S K) \\<Longrightarrow>\n  P S (SimplyTyped.Pair ?A ?B)\n  (\\<And>K.\n      depth K < depth (Fst ?A) \\<Longrightarrow> P S K) \\<Longrightarrow>\n  P S (Fst ?A)\n  (\\<And>K.\n      depth K < depth (Snd ?A) \\<Longrightarrow> P S K) \\<Longrightarrow>\n  P S (Snd ?A)\n  finite S\n  depth ?K < depth M \\<Longrightarrow> P S ?K\n\ngoal (1 subgoal):\n 1. (((M = Unit \\<Longrightarrow> P S M) &&&\n      (\\<And>x. M = Var x \\<Longrightarrow> P S M)) &&&\n     (\\<And>A B. M = App A B \\<Longrightarrow> P S M) &&&\n     (\\<And>x T A.\n         \\<lbrakk>M = Fn x T A; x \\<notin> S\\<rbrakk>\n         \\<Longrightarrow> P S M)) &&&\n    ((\\<And>A B. M = SimplyTyped.Pair A B \\<Longrightarrow> P S M) &&&\n     (\\<And>A. M = Fst A \\<Longrightarrow> P S M)) &&&\n    (\\<And>A. M = Snd A \\<Longrightarrow> P S M) &&& finite S", "by metis+"], ["proof (state)\nthis:\n  M = Unit \\<Longrightarrow> P S M\n  M = Var ?x \\<Longrightarrow> P S M\n  M = App ?A ?B \\<Longrightarrow> P S M\n  \\<lbrakk>M = Fn ?x ?T ?A; ?x \\<notin> S\\<rbrakk> \\<Longrightarrow> P S M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P S M\n  M = Fst ?A \\<Longrightarrow> P S M\n  M = Snd ?A \\<Longrightarrow> P S M\n  finite S\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       (\\<And>Ma.\n           depth Ma < depth M \\<Longrightarrow> P S Ma) \\<Longrightarrow>\n       P S M", "thus \"P S M\""], ["proof (prove)\nusing this:\n  M = Unit \\<Longrightarrow> P S M\n  M = Var ?x \\<Longrightarrow> P S M\n  M = App ?A ?B \\<Longrightarrow> P S M\n  \\<lbrakk>M = Fn ?x ?T ?A; ?x \\<notin> S\\<rbrakk> \\<Longrightarrow> P S M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P S M\n  M = Fst ?A \\<Longrightarrow> P S M\n  M = Snd ?A \\<Longrightarrow> P S M\n  finite S\n\ngoal (1 subgoal):\n 1. P S M", "using trm_strong_cases[where M=M]"], ["proof (prove)\nusing this:\n  M = Unit \\<Longrightarrow> P S M\n  M = Var ?x \\<Longrightarrow> P S M\n  M = App ?A ?B \\<Longrightarrow> P S M\n  \\<lbrakk>M = Fn ?x ?T ?A; ?x \\<notin> S\\<rbrakk> \\<Longrightarrow> P S M\n  M = SimplyTyped.Pair ?A ?B \\<Longrightarrow> P S M\n  M = Fst ?A \\<Longrightarrow> P S M\n  M = Snd ?A \\<Longrightarrow> P S M\n  finite S\n  \\<lbrakk>M = Unit \\<Longrightarrow> ?P ?S M;\n   \\<And>x. M = Var x \\<Longrightarrow> ?P ?S M;\n   \\<And>A B. M = App A B \\<Longrightarrow> ?P ?S M;\n   \\<And>x T A.\n      \\<lbrakk>M = Fn x T A; x \\<notin> ?S\\<rbrakk>\n      \\<Longrightarrow> ?P ?S M;\n   \\<And>A B. M = SimplyTyped.Pair A B \\<Longrightarrow> ?P ?S M;\n   \\<And>A. M = Fst A \\<Longrightarrow> ?P ?S M;\n   \\<And>A. M = Snd A \\<Longrightarrow> ?P ?S M; finite ?S\\<rbrakk>\n  \\<Longrightarrow> ?P ?S M\n\ngoal (1 subgoal):\n 1. P S M", "by blast"], ["proof (state)\nthis:\n  P S M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma trm_prm_fvs:\n  shows \"fvs (\\<pi> \\<cdot> M) = \\<pi> {$} fvs M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs (\\<pi> \\<cdot> M) = \\<pi> {$} fvs M", "by(transfer, metis ptrm_prm_fvs)"], ["", "inductive typing :: \"'a typing_ctx \\<Rightarrow> 'a trm \\<Rightarrow> type \\<Rightarrow> bool\" (\"_ \\<turnstile> _ : _\") where\n  tunit: \"\\<Gamma> \\<turnstile> Unit : TUnit\"\n| tvar:  \"\\<Gamma> x = Some \\<tau> \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x : \\<tau>\"\n| tapp:  \"\\<lbrakk>\\<Gamma> \\<turnstile> f : (TArr \\<tau> \\<sigma>); \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<turnstile> App f x : \\<sigma>\"\n| tfn:   \"\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma> \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x \\<tau> A : (TArr \\<tau> \\<sigma>)\"\n| tpair: \"\\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>; \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<turnstile> Pair A B : (TPair \\<tau> \\<sigma>)\"\n| tfst:  \"\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>) \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst P : \\<tau>\"\n| tsnd:  \"\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>) \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd P : \\<sigma>\""], ["", "lemma typing_prm:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\" \"\\<And>y. y \\<in> fvs M \\<Longrightarrow> \\<Gamma> y = \\<Delta> (\\<pi> $ y)\"\n  shows \"\\<Delta> \\<turnstile> \\<pi> \\<cdot> M : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> M : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n  ?y \\<in> fvs M \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> M : \\<tau>", "proof(induction arbitrary: \\<Delta> rule: typing.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta>.\n       (\\<And>y.\n           y \\<in> fvs Unit \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n       \\<Delta> \\<turnstile> \\<pi> \\<cdot> Unit : TUnit\n 2. \\<And>\\<Gamma> x \\<tau> \\<Delta>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (Var x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tunit \\<Gamma>)"], ["proof (state)\nthis:\n  ?y \\<in> fvs Unit \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta>.\n       (\\<And>y.\n           y \\<in> fvs Unit \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n       \\<Delta> \\<turnstile> \\<pi> \\<cdot> Unit : TUnit\n 2. \\<And>\\<Gamma> x \\<tau> \\<Delta>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (Var x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  ?y \\<in> fvs Unit \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Unit : TUnit", "using typing.tunit trm_prm_simp(1)"], ["proof (prove)\nusing this:\n  ?y \\<in> fvs Unit \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n  ?\\<Gamma> \\<turnstile> Unit : TUnit\n  ?\\<pi> \\<cdot> Unit = Unit\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Unit : TUnit", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot> Unit : TUnit\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<Delta>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (Var x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<Delta>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (Var x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tvar \\<Gamma> x \\<tau>)"], ["proof (state)\nthis:\n  \\<Gamma> x = Some \\<tau>\n  ?y \\<in> fvs (Var x) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<Delta>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (Var x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  ?y \\<in> fvs (Var x) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>", "using typing.tvar trm_prm_simp(2) fvs_simp(2) singletonI"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  ?y \\<in> fvs (Var x) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n  ?\\<Gamma> ?x = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Var ?x : ?\\<tau>\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n  fvs (Var ?x) = {?x}\n  ?a \\<in> {?a}\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot> Var x : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tapp \\<Gamma> A \\<tau> \\<sigma> B)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> B : \\<tau>\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : TArr \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs B \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<tau>\n  ?y \\<in> fvs (App A B) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs f \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs x \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> x : \\<tau>;\n        \\<And>y.\n           y \\<in> fvs (App f x) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         App f x : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> B : \\<tau>\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : TArr \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs B \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<tau>\n  ?y \\<in> fvs (App A B) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> App A B : \\<sigma>", "using typing.tapp trm_prm_simp(3) fvs_simp(3) UnCI"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> B : \\<tau>\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : TArr \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs B \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<tau>\n  ?y \\<in> fvs (App A B) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?f : TArr ?\\<tau> ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?x : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> App ?f ?x : ?\\<sigma>\n  ?\\<pi> \\<cdot> App ?A ?B = App (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  (?c \\<notin> ?B \\<Longrightarrow> ?c \\<in> ?A) \\<Longrightarrow>\n  ?c \\<in> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> App A B : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot> App A B : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tfn \\<Gamma> x \\<tau> A \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n      ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>\n  ?y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "have \"y \\<in> fvs A \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y = (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> fvs A \\<Longrightarrow>\n    (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n    (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "proof(cases \"y = x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<in> fvs A; y = x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)\n 2. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "case True"], ["proof (state)\nthis:\n  y = x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<in> fvs A; y = x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)\n 2. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = x\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n    (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "using fun_upd_apply"], ["proof (prove)\nusing this:\n  y = x\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n    (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "by simp"], ["proof (state)\nthis:\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n  (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "case False"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "assume \"y \\<in> fvs A\""], ["proof (state)\nthis:\n  y \\<in> fvs A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "hence \"y \\<in> fvs (Fn x \\<tau> A)\""], ["proof (prove)\nusing this:\n  y \\<in> fvs A\n\ngoal (1 subgoal):\n 1. y \\<in> fvs (Fn x \\<tau> A)", "using fvs_simp(4) \\<open>y \\<noteq> x\\<close> DiffI singletonD"], ["proof (prove)\nusing this:\n  y \\<in> fvs A\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  y \\<noteq> x\n  \\<lbrakk>?c \\<in> ?A; ?c \\<notin> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?A - ?B\n  ?b \\<in> {?a} \\<Longrightarrow> ?b = ?a\n\ngoal (1 subgoal):\n 1. y \\<in> fvs (Fn x \\<tau> A)", "by fastforce"], ["proof (state)\nthis:\n  y \\<in> fvs (Fn x \\<tau> A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "hence \"\\<Gamma> y = \\<Delta> (\\<pi> $ y)\""], ["proof (prove)\nusing this:\n  y \\<in> fvs (Fn x \\<tau> A)\n\ngoal (1 subgoal):\n 1. \\<Gamma> y = \\<Delta> (\\<pi> $ y)", "using tfn.prems"], ["proof (prove)\nusing this:\n  y \\<in> fvs (Fn x \\<tau> A)\n  ?y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Gamma> y = \\<Delta> (\\<pi> $ y)", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> y = \\<Delta> (\\<pi> $ y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<in> fvs A; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n                      (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> y = \\<Delta> (\\<pi> $ y)\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n    (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)", "by (simp add: prm_apply_unequal)"], ["proof (state)\nthis:\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n  (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ y)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> fvs A \\<Longrightarrow>\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) ?y =\n  (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ ?y)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "hence \"\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>) \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>\""], ["proof (prove)\nusing this:\n  ?y \\<in> fvs A \\<Longrightarrow>\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) ?y =\n  (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta>(\\<pi> $ x \\<mapsto>\n    \\<tau>) \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>", "using tfn.IH"], ["proof (prove)\nusing this:\n  ?y \\<in> fvs A \\<Longrightarrow>\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) ?y =\n  (\\<Delta>(\\<pi> $ x \\<mapsto> \\<tau>)) (\\<pi> $ ?y)\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n      ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Delta>(\\<pi> $ x \\<mapsto>\n    \\<tau>) \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Delta>(\\<pi> $ x \\<mapsto>\n  \\<tau>) \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               (\\<Gamma>(x \\<mapsto> \\<tau>)) y =\n               \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fn x \\<tau> A) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Delta>(\\<pi> $ x \\<mapsto>\n  \\<tau>) \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fn x \\<tau> A : TArr \\<tau> \\<sigma>", "using trm_prm_simp(4) typing.tfn"], ["proof (prove)\nusing this:\n  \\<Delta>(\\<pi> $ x \\<mapsto>\n  \\<tau>) \\<turnstile> \\<pi> \\<cdot> A : \\<sigma>\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n  ?\\<Gamma>(?x \\<mapsto>\n  ?\\<tau>) \\<turnstile> ?A : ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?\\<tau> ?A : TArr ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fn x \\<tau> A : TArr \\<tau> \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fn x \\<tau> A : TArr \\<tau> \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tpair \\<Gamma> A B)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A : B\n  \\<Gamma> \\<turnstile> B_ : \\<sigma>_\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : B\n  (\\<And>y.\n      y \\<in> fvs B_ \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> B_ : \\<sigma>_\n  ?y \\<in> fvs (SimplyTyped.Pair A B_) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs A \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs B \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> B : \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (SimplyTyped.Pair A B) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : B\n  \\<Gamma> \\<turnstile> B_ : \\<sigma>_\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : B\n  (\\<And>y.\n      y \\<in> fvs B_ \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> B_ : \\<sigma>_\n  ?y \\<in> fvs (SimplyTyped.Pair A B_) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n                          SimplyTyped.Pair A B_ : TPair B \\<sigma>_", "using typing.tpair trm_prm_simp(5) fvs_simp(5) UnCI"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : B\n  \\<Gamma> \\<turnstile> B_ : \\<sigma>_\n  (\\<And>y.\n      y \\<in> fvs A \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> A : B\n  (\\<And>y.\n      y \\<in> fvs B_ \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> B_ : \\<sigma>_\n  ?y \\<in> fvs (SimplyTyped.Pair A B_) \\<Longrightarrow>\n  \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?A : ?\\<tau>;\n   ?\\<Gamma> \\<turnstile> ?B : ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n      ?B : TPair ?\\<tau> ?\\<sigma>\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  (?c \\<notin> ?B \\<Longrightarrow> ?c \\<in> ?A) \\<Longrightarrow>\n  ?c \\<in> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n                          SimplyTyped.Pair A B_ : TPair B \\<sigma>_", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n                        SimplyTyped.Pair A B_ : TPair B \\<sigma>_\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tfst \\<Gamma> P \\<tau> \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs P \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>\n  ?y \\<in> fvs (Fst P) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Fst P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs P \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>\n  ?y \\<in> fvs (Fst P) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>", "using typing.tfst trm_prm_simp(6) fvs_simp(6)"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs P \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>\n  ?y \\<in> fvs (Fst P) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau>\n  ?\\<pi> \\<cdot> Fst ?P = Fst (?\\<pi> \\<cdot> ?P)\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot> Fst P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "case (tsnd \\<Gamma> P \\<tau> \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs P \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>\n  ?y \\<in> fvs (Snd P) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> \\<Delta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>\\<Delta>.\n           (\\<And>y.\n               y \\<in> fvs P \\<Longrightarrow>\n               \\<Gamma> y = \\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n           \\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>;\n        \\<And>y.\n           y \\<in> fvs (Snd P) \\<Longrightarrow>\n           \\<Gamma> y = \\<Delta> (\\<pi> $ y)\\<rbrakk>\n       \\<Longrightarrow> \\<Delta> \\<turnstile> \\<pi> \\<cdot>\n         Snd P : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs P \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>\n  ?y \\<in> fvs (Snd P) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Snd P : \\<sigma>", "using typing.tsnd trm_prm_simp(7) fvs_simp(7)"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  (\\<And>y.\n      y \\<in> fvs P \\<Longrightarrow>\n      \\<Gamma> y = ?\\<Delta> (\\<pi> $ y)) \\<Longrightarrow>\n  ?\\<Delta> \\<turnstile> \\<pi> \\<cdot> P : TPair \\<tau> \\<sigma>\n  ?y \\<in> fvs (Snd P) \\<Longrightarrow> \\<Gamma> ?y = \\<Delta> (\\<pi> $ ?y)\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma>\n  ?\\<pi> \\<cdot> Snd ?P = Snd (?\\<pi> \\<cdot> ?P)\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<turnstile> \\<pi> \\<cdot> Snd P : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Delta> \\<turnstile> \\<pi> \\<cdot> Snd P : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma typing_swp:\n  assumes \"\\<Gamma>(a \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>\" \"b \\<notin> fvs M\"\n  shows \"\\<Gamma>(b \\<mapsto> \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>(b \\<mapsto>\n    \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Gamma>(b \\<mapsto>\n    \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>", "have \"y \\<in> fvs M \\<Longrightarrow> (\\<Gamma>(a \\<mapsto> \\<sigma>)) y  = (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> fvs M \\<Longrightarrow>\n    (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n    (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> fvs M \\<Longrightarrow>\n    (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n    (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)", "assume \"y \\<in> fvs M\""], ["proof (state)\nthis:\n  y \\<in> fvs M\n\ngoal (1 subgoal):\n 1. y \\<in> fvs M \\<Longrightarrow>\n    (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n    (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)", "hence \"y \\<noteq> b\""], ["proof (prove)\nusing this:\n  y \\<in> fvs M\n\ngoal (1 subgoal):\n 1. y \\<noteq> b", "using assms(2)"], ["proof (prove)\nusing this:\n  y \\<in> fvs M\n  b \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. y \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> b\n\ngoal (1 subgoal):\n 1. y \\<in> fvs M \\<Longrightarrow>\n    (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n    (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)", "consider \"y = a\" | \"y \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = a \\<Longrightarrow> thesis;\n     y \\<noteq> a \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>y = a \\<Longrightarrow> ?thesis;\n   y \\<noteq> a \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. y \\<in> fvs M \\<Longrightarrow>\n    (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n    (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)", "thus \"(\\<Gamma>(a \\<mapsto> \\<sigma>)) y  = (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>y = a \\<Longrightarrow> ?thesis;\n   y \\<noteq> a \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n    (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)", "by(cases, simp add: prm_unit_action, simp add: prm_unit_inaction \\<open>y \\<noteq> b\\<close>)"], ["proof (state)\nthis:\n  (\\<Gamma>(a \\<mapsto> \\<sigma>)) y =\n  (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?y \\<in> fvs M \\<Longrightarrow>\n  (\\<Gamma>(a \\<mapsto> \\<sigma>)) ?y =\n  (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(b \\<mapsto>\n    \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?y \\<in> fvs M \\<Longrightarrow>\n  (\\<Gamma>(a \\<mapsto> \\<sigma>)) ?y =\n  (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ ?y)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(b \\<mapsto>\n    \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>", "using typing_prm assms(1)"], ["proof (prove)\nusing this:\n  ?y \\<in> fvs M \\<Longrightarrow>\n  (\\<Gamma>(a \\<mapsto> \\<sigma>)) ?y =\n  (\\<Gamma>(b \\<mapsto> \\<sigma>)) ([a \\<leftrightarrow> b] $ ?y)\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?M : ?\\<tau>;\n   \\<And>y.\n      y \\<in> fvs ?M \\<Longrightarrow>\n      ?\\<Gamma> y = ?\\<Delta> (?\\<pi> $ y)\\<rbrakk>\n  \\<Longrightarrow> ?\\<Delta> \\<turnstile> ?\\<pi> \\<cdot> ?M : ?\\<tau>\n  \\<Gamma>(a \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(b \\<mapsto>\n    \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(b \\<mapsto>\n  \\<sigma>) \\<turnstile> [a \\<leftrightarrow> b] \\<cdot> M : \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma typing_unitE:\n  assumes \"\\<Gamma> \\<turnstile> Unit : \\<tau>\"\n  shows \"\\<tau> = TUnit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> = TUnit", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Unit : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> = TUnit", "apply cases"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<tau> = TUnit \\<Longrightarrow> \\<tau> = TUnit\n 2. \\<And>x.\n       \\<lbrakk>Unit = Var x; \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 3. \\<And>f \\<tau>' x.\n       \\<lbrakk>Unit = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> x : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 4. \\<And>x \\<tau>' A \\<sigma>.\n       \\<lbrakk>Unit = Fn x \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Unit = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>Unit = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 7. \\<And>P \\<tau>'.\n       \\<lbrakk>Unit = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Unit = Var x; \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 2. \\<And>f \\<tau>' x.\n       \\<lbrakk>Unit = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> x : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 3. \\<And>x \\<tau>' A \\<sigma>.\n       \\<lbrakk>Unit = Fn x \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 4. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Unit = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 5. \\<And>P \\<sigma>.\n       \\<lbrakk>Unit = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit\n 6. \\<And>P \\<tau>'.\n       \\<lbrakk>Unit = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<tau> = TUnit", "apply (auto simp add: unit_not_var unit_not_app unit_not_fn unit_not_pair unit_not_fst unit_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma typing_varE:\n  assumes \"\\<Gamma> \\<turnstile> Var x : \\<tau>\"\n  shows \"\\<Gamma> x = Some \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Var x : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<tau>", "apply cases"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>Var x = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 2. \\<And>xa.\n       \\<lbrakk>Var x = Var xa; \\<Gamma> xa = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 3. \\<And>f \\<tau>' xa.\n       \\<lbrakk>Var x = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 4. \\<And>xa \\<tau>' A \\<sigma>.\n       \\<lbrakk>Var x = Fn xa \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Var x = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>Var x = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 7. \\<And>P \\<tau>'.\n       \\<lbrakk>Var x = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>", "prefer 2"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>Var x = Var xa; \\<Gamma> xa = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 2. \\<lbrakk>Var x = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 3. \\<And>f \\<tau>' xa.\n       \\<lbrakk>Var x = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 4. \\<And>xa \\<tau>' A \\<sigma>.\n       \\<lbrakk>Var x = Fn xa \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Var x = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>Var x = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 7. \\<And>P \\<tau>'.\n       \\<lbrakk>Var x = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>", "apply (metis trm_simp(1))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>Var x = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 2. \\<And>f \\<tau>' xa.\n       \\<lbrakk>Var x = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 3. \\<And>xa \\<tau>' A \\<sigma>.\n       \\<lbrakk>Var x = Fn xa \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 4. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Var x = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 5. \\<And>P \\<sigma>.\n       \\<lbrakk>Var x = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 6. \\<And>P \\<tau>'.\n       \\<lbrakk>Var x = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>", "apply (metis unit_not_var)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>f \\<tau>' xa.\n       \\<lbrakk>Var x = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 2. \\<And>xa \\<tau>' A \\<sigma>.\n       \\<lbrakk>Var x = Fn xa \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 3. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Var x = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 4. \\<And>P \\<sigma>.\n       \\<lbrakk>Var x = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>\n 5. \\<And>P \\<tau>'.\n       \\<lbrakk>Var x = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> x = Some \\<tau>", "apply (auto simp add: var_not_app var_not_fn var_not_pair var_not_fst var_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma typing_appE:\n  assumes \"\\<Gamma> \\<turnstile> App A B : \\<sigma>\"\n  shows \"\\<exists>\\<tau>. (\\<Gamma> \\<turnstile> A : (TArr \\<tau> \\<sigma>)) \\<and> (\\<Gamma> \\<turnstile> B : \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma> \\<and>\n       \\<Gamma> \\<turnstile> B : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma> \\<and>\n       \\<Gamma> \\<turnstile> B : \\<tau>", "apply cases"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>App A B = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> A : TArr \\<tau>\n              \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<tau>\n 2. \\<And>x.\n       \\<lbrakk>App A B = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>App A B = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 4. \\<And>x \\<tau> Aa \\<sigma>'.\n       \\<lbrakk>App A B = Fn x \\<tau> Aa; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 5. \\<And>Aa \\<tau> Ba \\<sigma>'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        \\<sigma> = TPair \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 6. \\<And>P \\<sigma>'.\n       \\<lbrakk>App A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>App A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>", "prefer 3"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>f \\<tau> x.\n       \\<lbrakk>App A B = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 2. \\<lbrakk>App A B = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> A : TArr \\<tau>\n              \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<tau>\n 3. \\<And>x.\n       \\<lbrakk>App A B = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 4. \\<And>x \\<tau> Aa \\<sigma>'.\n       \\<lbrakk>App A B = Fn x \\<tau> Aa; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 5. \\<And>Aa \\<tau> Ba \\<sigma>'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        \\<sigma> = TPair \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 6. \\<And>P \\<sigma>'.\n       \\<lbrakk>App A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>App A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>", "apply (metis trm_simp(2, 3))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>App A B = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> A : TArr \\<tau>\n              \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<tau>\n 2. \\<And>x.\n       \\<lbrakk>App A B = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 3. \\<And>x \\<tau> Aa \\<sigma>'.\n       \\<lbrakk>App A B = Fn x \\<tau> Aa; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 4. \\<And>Aa \\<tau> Ba \\<sigma>'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        \\<sigma> = TPair \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 5. \\<And>P \\<sigma>'.\n       \\<lbrakk>App A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 6. \\<And>P \\<tau>.\n       \\<lbrakk>App A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>", "apply (metis unit_not_app)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>App A B = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 2. \\<And>x \\<tau> Aa \\<sigma>'.\n       \\<lbrakk>App A B = Fn x \\<tau> Aa; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 3. \\<And>Aa \\<tau> Ba \\<sigma>'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        \\<sigma> = TPair \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 4. \\<And>P \\<sigma>'.\n       \\<lbrakk>App A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 5. \\<And>P \\<tau>.\n       \\<lbrakk>App A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>", "apply (metis var_not_app)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x \\<tau> Aa \\<sigma>'.\n       \\<lbrakk>App A B = Fn x \\<tau> Aa; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 2. \\<And>Aa \\<tau> Ba \\<sigma>'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        \\<sigma> = TPair \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 3. \\<And>P \\<sigma>'.\n       \\<lbrakk>App A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>\n 4. \\<And>P \\<tau>.\n       \\<lbrakk>App A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> A : TArr \\<tau>\n                 \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<tau>", "apply (auto simp add: app_not_fn app_not_pair app_not_fst app_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma typing_fnE:\n  assumes \"\\<Gamma> \\<turnstile> Fn x T A : \\<theta>\"\n  shows \"\\<exists>\\<sigma>. \\<theta> = (TArr T \\<sigma>) \\<and> (\\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A : \\<theta>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                         \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; \\<Gamma> xa = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 3. \\<And>f \\<tau> xa.\n       \\<lbrakk>Fn x T A = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 4. \\<And>xa \\<tau> Aa \\<sigma>.\n       \\<lbrakk>Fn x T A = Fn xa \\<tau> Aa; \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 5. \\<And>Aa \\<tau> B \\<sigma>.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>Fn x T A = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>Fn x T A = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>", "case (tfn y S B \\<sigma>)"], ["proof (state)\nthis:\n  Fn x T A = Fn y S B\n  \\<theta> = TArr S \\<sigma>\n  \\<Gamma>(y \\<mapsto> S) \\<turnstile> B : \\<sigma>\n\ngoal (7 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                         \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; \\<Gamma> xa = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 3. \\<And>f \\<tau> xa.\n       \\<lbrakk>Fn x T A = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 4. \\<And>xa \\<tau> Aa \\<sigma>.\n       \\<lbrakk>Fn x T A = Fn xa \\<tau> Aa; \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 5. \\<And>Aa \\<tau> B \\<sigma>.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>Fn x T A = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>Fn x T A = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  Fn x T A = Fn y S B\n  \\<theta> = TArr S \\<sigma>\n  \\<Gamma>(y \\<mapsto> S) \\<turnstile> B : \\<sigma>", "consider\n      \"x = y \\<and> T = S \\<and> A = B\" | \"x \\<noteq> y \\<and> T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\""], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  \\<theta> = TArr S \\<sigma>\n  \\<Gamma>(y \\<mapsto> S) \\<turnstile> B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  \\<theta> = TArr S \\<sigma>\n  \\<Gamma>(y \\<mapsto> S) \\<turnstile> B : \\<sigma>\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (7 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                         \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; \\<Gamma> xa = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 3. \\<And>f \\<tau> xa.\n       \\<lbrakk>Fn x T A = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 4. \\<And>xa \\<tau> Aa \\<sigma>.\n       \\<lbrakk>Fn x T A = Fn xa \\<tau> Aa; \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(xa \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 5. \\<And>Aa \\<tau> B \\<sigma>.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>Fn x T A = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>Fn x T A = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "case 1"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A = B\n\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = B\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "using tfn"], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = B\n  Fn x T A = Fn y S B\n  \\<theta> = TArr S \\<sigma>\n  \\<Gamma>(y \\<mapsto> S) \\<turnstile> B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n     T) \\<turnstile> A : \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "using tfn typing_swp prm_unit_commutes"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n  Fn x T A = Fn y S B\n  \\<theta> = TArr S \\<sigma>\n  \\<Gamma>(y \\<mapsto> S) \\<turnstile> B : \\<sigma>\n  \\<lbrakk>?\\<Gamma>(?a \\<mapsto> ?\\<sigma>) \\<turnstile> ?M : ?\\<tau>;\n   ?b \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma>(?b \\<mapsto>\n                    ?\\<sigma>) \\<turnstile> [?a \\<leftrightarrow> ?b] \\<cdot>\n      ?M : ?\\<tau>\n  [?a \\<leftrightarrow> ?b] = [?b \\<leftrightarrow> ?a]\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n       T) \\<turnstile> A : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n     T) \\<turnstile> A : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \\<mapsto>\n     T) \\<turnstile> A : \\<sigma>\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                         \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; \\<Gamma> xa = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 3. \\<And>f \\<tau> xa.\n       \\<lbrakk>Fn x T A = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 4. \\<And>Aa \\<tau> B \\<sigma>.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 5. \\<And>P \\<sigma>.\n       \\<lbrakk>Fn x T A = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 6. \\<And>P \\<tau>.\n       \\<lbrakk>Fn x T A = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                         \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; \\<Gamma> xa = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 3. \\<And>f \\<tau> xa.\n       \\<lbrakk>Fn x T A = App f xa;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> xa : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 4. \\<And>Aa \\<tau> B \\<sigma>.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 5. \\<And>P \\<sigma>.\n       \\<lbrakk>Fn x T A = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>\n 6. \\<And>P \\<tau>.\n       \\<lbrakk>Fn x T A = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<theta> = TArr T \\<sigma> \\<and> \\<Gamma>(x \n                            \\<mapsto> T) \\<turnstile> A : \\<sigma>", "qed (\n  metis unit_not_fn,\n  metis var_not_fn,\n  metis app_not_fn,\n  metis fn_not_pair,\n  metis fn_not_fst,\n  metis fn_not_snd\n)"], ["", "lemma typing_pairE:\n  assumes \"\\<Gamma> \\<turnstile> Pair A B : \\<theta>\"\n  shows \"\\<exists>\\<tau> \\<sigma>. \\<theta> = (TPair \\<tau> \\<sigma>) \\<and> (\\<Gamma> \\<turnstile> A : \\<tau>) \\<and> (\\<Gamma> \\<turnstile> B : \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau> \\<sigma>.\n       \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n       \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n       \\<Gamma> \\<turnstile> B : \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<theta>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau> \\<sigma>.\n       \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n       \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n       \\<Gamma> \\<turnstile> B : \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>SimplyTyped.Pair A B = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                         \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>SimplyTyped.Pair A B = Var x;\n        \\<Gamma> x = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>SimplyTyped.Pair A B = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 4. \\<And>x \\<tau> Aa \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x \\<tau> Aa;\n        \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 5. \\<And>Aa \\<tau> Ba \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>", "case (tpair A \\<tau> B \\<sigma>)"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  \\<theta> = TPair \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n\ngoal (7 subgoals):\n 1. \\<lbrakk>SimplyTyped.Pair A B = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                         \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>SimplyTyped.Pair A B = Var x;\n        \\<Gamma> x = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>SimplyTyped.Pair A B = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 4. \\<And>x \\<tau> Aa \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x \\<tau> Aa;\n        \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 5. \\<And>Aa \\<tau> Ba \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        \\<theta> = TPair \\<tau> \\<sigma>; \\<Gamma> \\<turnstile> Aa : \\<tau>;\n        \\<Gamma> \\<turnstile> Ba : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 6. \\<And>P \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 7. \\<And>P \\<tau>.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  \\<theta> = TPair \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau> \\<sigma>.\n       \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n       \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n       \\<Gamma> \\<turnstile> B : \\<sigma>", "using trm_simp(5) trm_simp(6)"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  \\<theta> = TPair \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?A = ?C\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?B = ?D\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau> \\<sigma>.\n       \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n       \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n       \\<Gamma> \\<turnstile> B : \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<tau> \\<sigma>.\n     \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n     \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n     \\<Gamma> \\<turnstile> B : \\<sigma>\n\ngoal (6 subgoals):\n 1. \\<lbrakk>SimplyTyped.Pair A B = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                         \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>SimplyTyped.Pair A B = Var x;\n        \\<Gamma> x = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>SimplyTyped.Pair A B = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 4. \\<And>x \\<tau> Aa \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x \\<tau> Aa;\n        \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 5. \\<And>P \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 6. \\<And>P \\<tau>.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>SimplyTyped.Pair A B = Unit; \\<theta> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                         \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                         \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                         \\<Gamma> \\<turnstile> B : \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>SimplyTyped.Pair A B = Var x;\n        \\<Gamma> x = Some \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>SimplyTyped.Pair A B = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<theta>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 4. \\<And>x \\<tau> Aa \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x \\<tau> Aa;\n        \\<theta> = TArr \\<tau> \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> Aa : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 5. \\<And>P \\<sigma>.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P;\n        \\<Gamma> \\<turnstile> P : TPair \\<theta> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>\n 6. \\<And>P \\<tau>.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P;\n        \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<theta>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau> \\<sigma>.\n                            \\<theta> = TPair \\<tau> \\<sigma> \\<and>\n                            \\<Gamma> \\<turnstile> A : \\<tau> \\<and>\n                            \\<Gamma> \\<turnstile> B : \\<sigma>", "qed (\n  metis unit_not_pair,\n  metis var_not_pair,\n  metis app_not_pair,\n  metis fn_not_pair,\n  metis pair_not_fst,\n  metis pair_not_snd\n)"], ["", "lemma typing_fstE:\n  assumes \"\\<Gamma> \\<turnstile> Fst P : \\<tau>\"\n  shows \"\\<exists>\\<sigma>. (\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fst P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>Fst P = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Fst P = Var x; \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau>' x.\n       \\<lbrakk>Fst P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> x : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau>' A \\<sigma>.\n       \\<lbrakk>Fst P = Fn x \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<sigma>.\n       \\<lbrakk>Fst P = Fst Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 7. \\<And>Pa \\<tau>'.\n       \\<lbrakk>Fst P = Snd Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "case (tfst P \\<sigma>)"], ["proof (state)\nthis:\n  Fst P = Fst P\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n\ngoal (7 subgoals):\n 1. \\<lbrakk>Fst P = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Fst P = Var x; \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau>' x.\n       \\<lbrakk>Fst P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> x : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau>' A \\<sigma>.\n       \\<lbrakk>Fst P = Fn x \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<sigma>.\n       \\<lbrakk>Fst P = Fst Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 7. \\<And>Pa \\<tau>'.\n       \\<lbrakk>Fst P = Snd Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "using trm_simp(7)"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  Fst ?P = Fst ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Fst P = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Fst P = Var x; \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau>' x.\n       \\<lbrakk>Fst P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> x : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau>' A \\<sigma>.\n       \\<lbrakk>Fst P = Fn x \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<tau>'.\n       \\<lbrakk>Fst P = Snd Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>Fst P = Unit; \\<tau> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<sigma>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Fst P = Var x; \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau>' x.\n       \\<lbrakk>Fst P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau>' \\<tau>;\n        \\<Gamma> \\<turnstile> x : \\<tau>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau>' A \\<sigma>.\n       \\<lbrakk>Fst P = Fn x \\<tau>' A; \\<tau> = TArr \\<tau>' \\<sigma>;\n        \\<Gamma>(x \\<mapsto> \\<tau>') \\<turnstile> A : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau>' B \\<sigma>.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B;\n        \\<tau> = TPair \\<tau>' \\<sigma>; \\<Gamma> \\<turnstile> A : \\<tau>';\n        \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<tau>'.\n       \\<lbrakk>Fst P = Snd Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau>' \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<sigma>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "qed (\n  metis unit_not_fst,\n  metis var_not_fst,\n  metis app_not_fst,\n  metis fn_not_fst,\n  metis pair_not_fst,\n  metis fst_not_snd\n)"], ["", "lemma typing_sndE:\n  assumes \"\\<Gamma> \\<turnstile> Snd P : \\<sigma>\"\n  shows \"\\<exists>\\<tau>. (\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Snd P : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>Snd P = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Snd P = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>Snd P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau> A \\<sigma>'.\n       \\<lbrakk>Snd P = Fn x \\<tau> A; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau> B \\<sigma>'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B;\n        \\<sigma> = TPair \\<tau> \\<sigma>'; \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<sigma>'.\n       \\<lbrakk>Snd P = Fst Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 7. \\<And>Pa \\<tau>.\n       \\<lbrakk>Snd P = Snd Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "case (tsnd P \\<sigma>)"], ["proof (state)\nthis:\n  Snd P = Snd P\n  \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>\n\ngoal (7 subgoals):\n 1. \\<lbrakk>Snd P = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Snd P = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>Snd P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau> A \\<sigma>'.\n       \\<lbrakk>Snd P = Fn x \\<tau> A; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau> B \\<sigma>'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B;\n        \\<sigma> = TPair \\<tau> \\<sigma>'; \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<sigma>'.\n       \\<lbrakk>Snd P = Fst Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 7. \\<And>Pa \\<tau>.\n       \\<lbrakk>Snd P = Snd Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<tau> \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "using trm_simp(8)"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  \\<Gamma> \\<turnstile> P : TPair \\<sigma> \\<sigma>\n  Snd ?P = Snd ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<tau>. \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Snd P = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Snd P = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>Snd P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau> A \\<sigma>'.\n       \\<lbrakk>Snd P = Fn x \\<tau> A; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau> B \\<sigma>'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B;\n        \\<sigma> = TPair \\<tau> \\<sigma>'; \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<sigma>'.\n       \\<lbrakk>Snd P = Fst Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>Snd P = Unit; \\<sigma> = TUnit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<tau>.\n                         \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 2. \\<And>x.\n       \\<lbrakk>Snd P = Var x; \\<Gamma> x = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 3. \\<And>f \\<tau> x.\n       \\<lbrakk>Snd P = App f x;\n        \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 4. \\<And>x \\<tau> A \\<sigma>'.\n       \\<lbrakk>Snd P = Fn x \\<tau> A; \\<sigma> = TArr \\<tau> \\<sigma>';\n        \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 5. \\<And>A \\<tau> B \\<sigma>'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B;\n        \\<sigma> = TPair \\<tau> \\<sigma>'; \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n 6. \\<And>Pa \\<sigma>'.\n       \\<lbrakk>Snd P = Fst Pa;\n        \\<Gamma> \\<turnstile> Pa : TPair \\<sigma> \\<sigma>'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>.\n                            \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>", "qed (\n  metis unit_not_snd,\n  metis var_not_snd,\n  metis app_not_snd,\n  metis fn_not_snd,\n  metis pair_not_snd,\n  metis fst_not_snd\n)"], ["", "theorem typing_weaken:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\" \"y \\<notin> fvs M\"\n  shows \"\\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n  y \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> M : \\<tau>", "proof(induction rule: typing.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma>.\n       y \\<notin> fvs Unit \\<Longrightarrow>\n       \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Unit : TUnit\n 2. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tunit \\<Gamma>)"], ["proof (state)\nthis:\n  y \\<notin> fvs Unit\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma>.\n       y \\<notin> fvs Unit \\<Longrightarrow>\n       \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Unit : TUnit\n 2. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs Unit\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Unit : TUnit", "using typing.tunit"], ["proof (prove)\nusing this:\n  y \\<notin> fvs Unit\n  ?\\<Gamma> \\<turnstile> Unit : TUnit\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Unit : TUnit", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Unit : TUnit\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tvar \\<Gamma> x \\<tau>)"], ["proof (state)\nthis:\n  \\<Gamma> x = Some \\<tau>\n  y \\<notin> fvs (Var x)\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "hence \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  y \\<notin> fvs (Var x)\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "using fvs_simp(2) singletonI"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  y \\<notin> fvs (Var x)\n  fvs (Var ?x) = {?x}\n  ?a \\<in> {?a}\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by force"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "hence \"(\\<Gamma>(y \\<mapsto> \\<sigma>)) x = Some \\<tau>\""], ["proof (prove)\nusing this:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(y \\<mapsto> \\<sigma>)) x = Some \\<tau>", "using tvar.hyps fun_upd_apply"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  \\<Gamma> x = Some \\<tau>\n  (?f(?x := ?y)) ?z = (if ?z = ?x then ?y else ?f ?z)\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(y \\<mapsto> \\<sigma>)) x = Some \\<tau>", "by simp"], ["proof (state)\nthis:\n  (\\<Gamma>(y \\<mapsto> \\<sigma>)) x = Some \\<tau>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau>.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>; y \\<notin> fvs (Var x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Var x : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  (\\<Gamma>(y \\<mapsto> \\<sigma>)) x = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Var x : \\<tau>", "using typing.tvar"], ["proof (prove)\nusing this:\n  (\\<Gamma>(y \\<mapsto> \\<sigma>)) x = Some \\<tau>\n  ?\\<Gamma> ?x = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Var ?x : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Var x : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Var x : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tapp \\<Gamma> f \\<tau> \\<tau>' x)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> f : TArr \\<tau> \\<tau>'\n  \\<Gamma> \\<turnstile> x : \\<tau>\n  y \\<notin> fvs f \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>'\n  y \\<notin> fvs x \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>\n  y \\<notin> fvs (App f x)\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "from \\<open>y \\<notin> fvs (App f x)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> fvs (App f x)", "have \"y \\<notin> fvs f\" \"y \\<notin> fvs x\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (App f x)\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs f &&& y \\<notin> fvs x", "using fvs_simp(3) Un_iff"], ["proof (prove)\nusing this:\n  y \\<notin> fvs (App f x)\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  (?c \\<in> ?A \\<union> ?B) = (?c \\<in> ?A \\<or> ?c \\<in> ?B)\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs f &&& y \\<notin> fvs x", "by force+"], ["proof (state)\nthis:\n  y \\<notin> fvs f\n  y \\<notin> fvs x\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "hence \"\\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : (TArr \\<tau> \\<tau>')\" \"\\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs f\n  y \\<notin> fvs x\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>' &&&\n    \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>", "using tapp.IH"], ["proof (prove)\nusing this:\n  y \\<notin> fvs f\n  y \\<notin> fvs x\n  y \\<notin> fvs f \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>'\n  y \\<notin> fvs x \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>' &&&\n    \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>", "by metis+"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>'\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma>' x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        y \\<notin> fvs f \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<sigma>';\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs x \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>;\n        y \\<notin> fvs (App f x)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> App f x : \\<sigma>'\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>'\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> App f x : \\<tau>'", "using typing.tapp"], ["proof (prove)\nusing this:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> f : TArr \\<tau> \\<tau>'\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> x : \\<tau>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?f : TArr ?\\<tau> ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?x : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> App ?f ?x : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> App f x : \\<tau>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> App f x : \\<tau>'\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tfn \\<Gamma> x \\<tau> A \\<tau>')"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<tau>'\n  y \\<notin> fvs A \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n  \\<sigma>) \\<turnstile> A : \\<tau>'\n  y \\<notin> fvs (Fn x \\<tau> A)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "from \\<open>y \\<notin> fvs (Fn x \\<tau> A)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> fvs (Fn x \\<tau> A)", "consider \"y = x\" | \"y \\<noteq> x \\<and> y \\<notin> fvs A\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Fn x \\<tau> A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = x \\<Longrightarrow> thesis;\n     y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using fvs_simp(4) DiffI empty_iff insert_iff"], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Fn x \\<tau> A)\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  \\<lbrakk>?c \\<in> ?A; ?c \\<notin> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?A - ?B\n  (?c \\<in> {}) = False\n  (?a \\<in> insert ?b ?A) = (?a = ?b \\<or> ?a \\<in> ?A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = x \\<Longrightarrow> thesis;\n     y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>y = x \\<Longrightarrow> ?thesis;\n   y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma>'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n        \\<sigma>) \\<turnstile> A : \\<sigma>';\n        y \\<notin> fvs (Fn x \\<tau> A)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fn x \\<tau>\n           A : TArr \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>y = x \\<Longrightarrow> ?thesis;\n   y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. y = x \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'\n 2. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "case 1"], ["proof (state)\nthis:\n  y = x\n\ngoal (2 subgoals):\n 1. y = x \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'\n 2. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "hence \"(\\<Gamma>(y \\<mapsto> \\<sigma>)(x \\<mapsto> \\<tau>)) \\<turnstile> A : \\<tau>'\""], ["proof (prove)\nusing this:\n  y = x\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n    \\<tau>) \\<turnstile> A : \\<tau>'", "using tfn.hyps fun_upd_upd"], ["proof (prove)\nusing this:\n  y = x\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<tau>'\n  ?f(?x := ?y, ?x := ?z) = ?f(?x := ?z)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n    \\<tau>) \\<turnstile> A : \\<tau>'", "by simp"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n  \\<tau>) \\<turnstile> A : \\<tau>'\n\ngoal (2 subgoals):\n 1. y = x \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'\n 2. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n  \\<tau>) \\<turnstile> A : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "using typing.tfn"], ["proof (prove)\nusing this:\n  \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n  \\<tau>) \\<turnstile> A : \\<tau>'\n  ?\\<Gamma>(?x \\<mapsto>\n  ?\\<tau>) \\<turnstile> ?A : ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?\\<tau> ?A : TArr ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto>\n  \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'\n\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "case 2"], ["proof (state)\nthis:\n  y \\<noteq> x \\<and> y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "hence \"y \\<noteq> x\" \"y \\<notin> fvs A\""], ["proof (prove)\nusing this:\n  y \\<noteq> x \\<and> y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& y \\<notin> fvs A", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "hence \"\\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>'\""], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n    \\<sigma>) \\<turnstile> A : \\<tau>'", "using tfn.IH"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<notin> fvs A\n  y \\<notin> fvs A \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n  \\<sigma>) \\<turnstile> A : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n    \\<sigma>) \\<turnstile> A : \\<tau>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n  \\<sigma>) \\<turnstile> A : \\<tau>'\n\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "hence \"\\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto> \\<tau>) \\<turnstile> A : \\<tau>'\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n  \\<sigma>) \\<turnstile> A : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n    \\<tau>) \\<turnstile> A : \\<tau>'", "using \\<open>y \\<noteq> x\\<close> fun_upd_twist"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> \\<tau>, y \\<mapsto>\n  \\<sigma>) \\<turnstile> A : \\<tau>'\n  y \\<noteq> x\n  ?a \\<noteq> ?c \\<Longrightarrow>\n  ?m(?a := ?b, ?c := ?d) = ?m(?c := ?d, ?a := ?b)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n    \\<tau>) \\<turnstile> A : \\<tau>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n  \\<tau>) \\<turnstile> A : \\<tau>'\n\ngoal (1 subgoal):\n 1. y \\<noteq> x \\<and> y \\<notin> fvs A \\<Longrightarrow>\n    \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n  \\<tau>) \\<turnstile> A : \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "using typing.tfn"], ["proof (prove)\nusing this:\n  \\<Gamma>(y \\<mapsto> \\<sigma>, x \\<mapsto>\n  \\<tau>) \\<turnstile> A : \\<tau>'\n  ?\\<Gamma>(?x \\<mapsto>\n  ?\\<tau>) \\<turnstile> ?A : ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?\\<tau> ?A : TArr ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto>\n  \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto>\n  \\<sigma>) \\<turnstile> Fn x \\<tau> A : TArr \\<tau> \\<tau>'\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tpair \\<Gamma> A \\<tau> B \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  y \\<notin> fvs A \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>\n  y \\<notin> fvs B \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        y \\<notin> fvs A \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs B \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>';\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> SimplyTyped.Pair A\n           B : TPair \\<tau> \\<sigma>'\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  y \\<notin> fvs A \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>\n  y \\<notin> fvs B \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>", "using typing.tpair fvs_simp(5) UnCI"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  y \\<notin> fvs A \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> A : \\<tau>\n  y \\<notin> fvs B \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> B : \\<sigma>\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?A : ?\\<tau>;\n   ?\\<Gamma> \\<turnstile> ?B : ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n      ?B : TPair ?\\<tau> ?\\<sigma>\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  (?c \\<notin> ?B \\<Longrightarrow> ?c \\<in> ?A) \\<Longrightarrow>\n  ?c \\<in> ?A \\<union> ?B\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto>\n    \\<sigma>) \\<turnstile> SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto>\n  \\<sigma>) \\<turnstile> SimplyTyped.Pair A B : TPair \\<tau> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tfst \\<Gamma> P \\<tau> \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs P \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs (Fst P)\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Fst P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Fst P : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs P \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs (Fst P)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Fst P : \\<tau>", "using typing.tfst fvs_simp(6)"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs P \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs (Fst P)\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau>\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Fst P : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Fst P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "case (tsnd \\<Gamma> P \\<tau> \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs P \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs P \\<Longrightarrow>\n        \\<Gamma>(y \\<mapsto>\n        \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>';\n        y \\<notin> fvs (Snd P)\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>(y \\<mapsto>\n                         \\<sigma>) \\<turnstile> Snd P : \\<sigma>'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs P \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Snd P : \\<sigma>", "using typing.tsnd fvs_simp(7)"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs P \\<Longrightarrow>\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> P : TPair \\<tau> \\<sigma>\n  y \\<notin> fvs (Snd P)\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma>\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Snd P : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(y \\<mapsto> \\<sigma>) \\<turnstile> Snd P : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition infer :: \"'a typing_ctx \\<Rightarrow> 'a trm \\<Rightarrow> type option\" is ptrm_infer_type"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fun ptrm1 ptrm2.\n       ptrm1 \\<approx> ptrm2 \\<Longrightarrow>\n       ptrm_infer_type fun ptrm1 = ptrm_infer_type fun ptrm2", "using ptrm_infer_type_alpha_equiv"], ["proof (prove)\nusing this:\n  ?X \\<approx> ?Y \\<Longrightarrow>\n  ptrm_infer_type ?\\<Gamma> ?X = ptrm_infer_type ?\\<Gamma> ?Y\n\ngoal (1 subgoal):\n 1. \\<And>fun ptrm1 ptrm2.\n       ptrm1 \\<approx> ptrm2 \\<Longrightarrow>\n       ptrm_infer_type fun ptrm1 = ptrm_infer_type fun ptrm2", "."], ["", "export_code infer fresh_nat_inst.fresh_in_nat in Haskell"], ["", "lemma infer_simp:\n  shows\n    \"infer \\<Gamma> Unit = Some TUnit\"\n    \"infer \\<Gamma> (Var x) = \\<Gamma> x\"\n    \"infer \\<Gamma> (App A B) = (case (infer \\<Gamma> A, infer \\<Gamma> B) of\n       (Some (TArr \\<tau> \\<sigma>), Some \\<tau>') \\<Rightarrow> (if \\<tau> = \\<tau>' then Some \\<sigma> else None)\n     | _ \\<Rightarrow> None\n     )\"\n    \"infer \\<Gamma> (Fn x \\<tau> A) = (case infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A of\n       Some \\<sigma> \\<Rightarrow> Some (TArr \\<tau> \\<sigma>)\n     | None \\<Rightarrow> None\n    )\"\n    \"infer \\<Gamma> (Pair A B) = (case (infer \\<Gamma> A, infer \\<Gamma> B) of\n       (Some \\<tau>, Some \\<sigma>) \\<Rightarrow> Some (TPair \\<tau> \\<sigma>)\n     | _ \\<Rightarrow> None\n     )\"\n    \"infer \\<Gamma> (Fst P) = (case infer \\<Gamma> P of\n       (Some (TPair \\<tau> \\<sigma>)) \\<Rightarrow> Some \\<tau>\n     | _ \\<Rightarrow> None\n     )\"\n    \"infer \\<Gamma> (Snd P) = (case infer \\<Gamma> P of\n       (Some (TPair \\<tau> \\<sigma>)) \\<Rightarrow> Some \\<sigma>\n     | _ \\<Rightarrow> None\n     )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (infer \\<Gamma> Unit = Some TUnit &&&\n     infer \\<Gamma> (Var x) = \\<Gamma> x &&&\n     infer \\<Gamma> (App A B) =\n     (case (infer \\<Gamma> A, infer \\<Gamma> B) of\n      (None, b) \\<Rightarrow> None | (Some TUnit, b) \\<Rightarrow> None\n      | (Some (TVar x), b) \\<Rightarrow> Map.empty x\n      | (Some (TArr \\<tau> \\<sigma>), None) \\<Rightarrow> None\n      | (Some (TArr \\<tau> \\<sigma>), Some \\<tau>') \\<Rightarrow>\n          if \\<tau> = \\<tau>' then Some \\<sigma> else None\n      | (Some (TPair type1 x), b) \\<Rightarrow> Map.empty x)) &&&\n    (infer \\<Gamma> (Fn x \\<tau> A) =\n     (case infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A of None \\<Rightarrow> None\n      | Some \\<sigma> \\<Rightarrow> Some (TArr \\<tau> \\<sigma>)) &&&\n     infer \\<Gamma> (SimplyTyped.Pair A B) =\n     (case (infer \\<Gamma> A, infer \\<Gamma> B) of\n      (None, b) \\<Rightarrow> None | (Some \\<tau>, None) \\<Rightarrow> None\n      | (Some \\<tau>, Some \\<sigma>) \\<Rightarrow>\n          Some (TPair \\<tau> \\<sigma>))) &&&\n    infer \\<Gamma> (Fst P) =\n    (case infer \\<Gamma> P of None \\<Rightarrow> None\n     | Some TUnit \\<Rightarrow> None\n     | Some (TVar x) \\<Rightarrow> Map.empty x\n     | Some (TArr type1 x) \\<Rightarrow> Map.empty x\n     | Some (TPair \\<tau> \\<sigma>) \\<Rightarrow> Some \\<tau>) &&&\n    infer \\<Gamma> (Snd P) =\n    (case infer \\<Gamma> P of None \\<Rightarrow> None\n     | Some TUnit \\<Rightarrow> None\n     | Some (TVar x) \\<Rightarrow> Map.empty x\n     | Some (TArr type1 x) \\<Rightarrow> Map.empty x\n     | Some (TPair \\<tau> \\<sigma>) \\<Rightarrow> Some \\<sigma>)", "by((transfer, simp)+)"], ["", "lemma infer_unitE:\n  assumes \"infer \\<Gamma> Unit = Some \\<tau>\"\n  shows \"\\<tau> = TUnit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> = TUnit", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> Unit = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> = TUnit", "by(transfer, simp)"], ["", "lemma infer_varE:\n  assumes \"infer \\<Gamma> (Var x) = Some \\<tau>\"\n  shows \"\\<Gamma> x = Some \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Var x) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<tau>", "by(transfer, simp)"], ["", "lemma infer_appE:\n  assumes \"infer \\<Gamma> (App A B) = Some \\<tau>\"\n  shows \"\\<exists>\\<sigma>. infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and> infer \\<Gamma> B = Some \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n       infer \\<Gamma> B = Some \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (App A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n       infer \\<Gamma> B = Some \\<sigma>", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "fix \\<Gamma> :: \"'a typing_ctx\" and A B \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "assume H: \"ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"ptrm_infer_type \\<Gamma> A \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = None \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> A = None\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = None \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PApp A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = None \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None", "obtain T where *: \"ptrm_infer_type \\<Gamma> A = Some T\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        ptrm_infer_type \\<Gamma> A = Some T \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = Some T\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"T \\<noteq> TVar x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<noteq> TVar x", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. T = TVar x \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. T = TVar x__ \\<Longrightarrow> False", "assume \"T = TVar x\""], ["proof (state)\nthis:\n  T = TVar x\n\ngoal (1 subgoal):\n 1. T = TVar x__ \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> A = Some (TVar x)\""], ["proof (prove)\nusing this:\n  T = TVar x\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TVar x)", "using *"], ["proof (prove)\nusing this:\n  T = TVar x\n  ptrm_infer_type \\<Gamma> A = Some T\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TVar x)", "by metis"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = Some (TVar x)\n\ngoal (1 subgoal):\n 1. T = TVar x__ \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PApp A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = Some (TVar x)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "by simp"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. T = TVar x__ \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T \\<noteq> TVar ?x\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "moreover"], ["proof (state)\nthis:\n  T \\<noteq> TVar ?x\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"T \\<noteq> TUnit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<noteq> TUnit", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. T = TUnit \\<Longrightarrow> False", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. T = TUnit \\<Longrightarrow> False", "assume \"T = TUnit\""], ["proof (state)\nthis:\n  T = TUnit\n\ngoal (1 subgoal):\n 1. T = TUnit \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> A = Some TUnit\""], ["proof (prove)\nusing this:\n  T = TUnit\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some TUnit", "using *"], ["proof (prove)\nusing this:\n  T = TUnit\n  ptrm_infer_type \\<Gamma> A = Some T\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some TUnit", "by metis"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = Some TUnit\n\ngoal (1 subgoal):\n 1. T = TUnit \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PApp A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = Some TUnit\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "by simp"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. T = TUnit \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T \\<noteq> TUnit\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "moreover"], ["proof (state)\nthis:\n  T \\<noteq> TUnit\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"T \\<noteq> TPair \\<tau> \\<sigma>\" for \\<tau> \\<sigma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<noteq> TPair \\<tau> \\<sigma>", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. T = TPair \\<tau> \\<sigma> \\<Longrightarrow> False", "fix \\<tau> \\<sigma>"], ["proof (state)\ngoal (1 subgoal):\n 1. T = TPair \\<tau>''__ \\<sigma>__ \\<Longrightarrow> False", "assume \"T = TPair \\<tau> \\<sigma>\""], ["proof (state)\nthis:\n  T = TPair \\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. T = TPair \\<tau>''__ \\<sigma>__ \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> A = Some (TPair \\<tau> \\<sigma>)\""], ["proof (prove)\nusing this:\n  T = TPair \\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TPair \\<tau> \\<sigma>)", "using *"], ["proof (prove)\nusing this:\n  T = TPair \\<tau> \\<sigma>\n  ptrm_infer_type \\<Gamma> A = Some T\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TPair \\<tau> \\<sigma>)", "by metis"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = Some (TPair \\<tau> \\<sigma>)\n\ngoal (1 subgoal):\n 1. T = TPair \\<tau>''__ \\<sigma>__ \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PApp A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = Some (TPair \\<tau> \\<sigma>)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "by simp"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. T = TPair \\<tau>''__ \\<sigma>__ \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'__\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T \\<noteq> TPair ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  T \\<noteq> TVar ?x\n  T \\<noteq> TUnit\n  T \\<noteq> TPair ?\\<tau> ?\\<sigma>", "obtain \\<sigma> \\<tau>' where \"T = TArr \\<sigma> \\<tau>'\""], ["proof (prove)\nusing this:\n  T \\<noteq> TVar ?x\n  T \\<noteq> TUnit\n  T \\<noteq> TPair ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma> \\<tau>'.\n        T = TArr \\<sigma> \\<tau>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(cases T, blast, auto)"], ["proof (state)\nthis:\n  T = TArr \\<sigma> \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "hence *: \"ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')\""], ["proof (prove)\nusing this:\n  T = TArr \\<sigma> \\<tau>'\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')", "using *"], ["proof (prove)\nusing this:\n  T = TArr \\<sigma> \\<tau>'\n  ptrm_infer_type \\<Gamma> A = Some T\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')", "by metis"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"ptrm_infer_type \\<Gamma> B \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = None \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> B = None\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> B = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = None \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PApp A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> B = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "using *"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> B = None\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = None \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> B \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> B \\<noteq> None", "obtain \\<sigma>' where **: \"ptrm_infer_type \\<Gamma> B = Some \\<sigma>'\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> B \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>'.\n        ptrm_infer_type \\<Gamma> B = Some \\<sigma>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> B = Some \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"\\<sigma> = \\<sigma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> = \\<sigma>'", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma> \\<noteq> \\<sigma>' \\<Longrightarrow> \\<sigma> = \\<sigma>'", "assume \"\\<sigma> \\<noteq> \\<sigma>'\""], ["proof (state)\nthis:\n  \\<sigma> \\<noteq> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<noteq> \\<sigma>' \\<Longrightarrow> \\<sigma> = \\<sigma>'", "hence \"ptrm_infer_type \\<Gamma> (PApp A B) = None\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<noteq> \\<sigma>'\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "using * **"], ["proof (prove)\nusing this:\n  \\<sigma> \\<noteq> \\<sigma>'\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')\n  ptrm_infer_type \\<Gamma> B = Some \\<sigma>'\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = None", "by simp"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<noteq> \\<sigma>' \\<Longrightarrow> \\<sigma> = \\<sigma>'", "hence False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = None\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<sigma> \\<noteq> \\<sigma>' \\<Longrightarrow> \\<sigma> = \\<sigma>'", "thus \"\\<sigma> = \\<sigma>'\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<sigma> = \\<sigma>'", "by blast"], ["proof (state)\nthis:\n  \\<sigma> = \\<sigma>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<sigma> = \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "hence **: \"ptrm_infer_type \\<Gamma> B = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<sigma> = \\<sigma>'\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "using **"], ["proof (prove)\nusing this:\n  \\<sigma> = \\<sigma>'\n  ptrm_infer_type \\<Gamma> B = Some \\<sigma>'\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> B = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "have \"ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'", "using * **"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')\n  ptrm_infer_type \\<Gamma> B = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "hence \"\\<tau> = \\<tau>'\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<tau> = \\<tau>'", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>'\n  ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> = \\<tau>'", "by auto"], ["proof (state)\nthis:\n  \\<tau> = \\<tau>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "hence *: \"ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<tau> = \\<tau>'\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)", "using *"], ["proof (prove)\nusing this:\n  \\<tau> = \\<tau>'\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>')\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PApp A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n          ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "show \"\\<exists>\\<sigma>. ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and> ptrm_infer_type \\<Gamma> B = Some \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n       ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "using * **"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\n  ptrm_infer_type \\<Gamma> B = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n       ptrm_infer_type \\<Gamma> B = Some \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     ptrm_infer_type \\<Gamma> A = Some (TArr \\<sigma> \\<tau>) \\<and>\n     ptrm_infer_type \\<Gamma> B = Some \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infer_fnE:\n  assumes \"infer \\<Gamma> (Fn x T A) = Some \\<tau>\"\n  shows \"\\<exists>\\<sigma>. \\<tau> = TArr T \\<sigma> \\<and> infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<tau> = TArr T \\<sigma> \\<and>\n       infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Fn x T A) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<tau> = TArr T \\<sigma> \\<and>\n       infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "fix x :: 'a and \\<Gamma> T A \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "assume H: \"ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau>\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "have \"ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = None \\<Longrightarrow>\n    False", "assume \"ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = None\""], ["proof (state)\nthis:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = None \\<Longrightarrow>\n    False", "hence \"ptrm_infer_type \\<Gamma> (PFn x T A) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PFn x T A) = None", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = None \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = None\n  ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A \\<noteq> None", "obtain \\<sigma> where *: \"ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A =\n        Some \\<sigma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "have \"ptrm_infer_type \\<Gamma> (PFn x T A) = Some (TArr T \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PFn x T A) = Some (TArr T \\<sigma>)", "using *"], ["proof (prove)\nusing this:\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PFn x T A) = Some (TArr T \\<sigma>)", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = Some (TArr T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "hence \"\\<tau> = TArr T \\<sigma>\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = Some (TArr T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<tau> = TArr T \\<sigma>", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PFn x T A) = Some (TArr T \\<sigma>)\n  ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<tau> = TArr T \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<tau> = TArr T \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> x T A \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFn x T A) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>\\<sigma>.\n          \\<tau> = TArr T \\<sigma> \\<and>\n          ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "thus \"\\<exists>\\<sigma>. \\<tau> = TArr T \\<sigma> \\<and> ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<tau> = TArr T \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<tau> = TArr T \\<sigma> \\<and>\n       ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  \\<tau> = TArr T \\<sigma>\n  ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<sigma>.\n       \\<tau> = TArr T \\<sigma> \\<and>\n       ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<sigma>.\n     \\<tau> = TArr T \\<sigma> \\<and>\n     ptrm_infer_type (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infer_pairE:\n  assumes \"infer \\<Gamma> (Pair A B) = Some \\<tau>\"\n  shows \"\\<exists>T S. \\<tau> = TPair T S \\<and> infer \\<Gamma> A = Some T \\<and> infer \\<Gamma> B = Some S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       \\<tau> = TPair T S \\<and>\n       infer \\<Gamma> A = Some T \\<and> infer \\<Gamma> B = Some S", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       \\<tau> = TPair T S \\<and>\n       infer \\<Gamma> A = Some T \\<and> infer \\<Gamma> B = Some S", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "fix A B :: \"'a ptrm\" and \\<Gamma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "assume H: \"ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau>\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "have \"ptrm_infer_type \\<Gamma> A \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = None \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> A = None\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = None \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PPair A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PPair A B) = None", "by auto"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PPair A B) = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> A = None \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PPair A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PPair A B) = None\n  ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "have \"ptrm_infer_type \\<Gamma> B \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = None \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> B = None\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> B = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = None \\<Longrightarrow> False", "hence \"ptrm_infer_type \\<Gamma> (PPair A B) = None\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> B = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PPair A B) = None", "by (simp add: option.case_eq_if)"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PPair A B) = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> B = None \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PPair A B) = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> (PPair A B) = None\n  ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> B \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "ultimately"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n  ptrm_infer_type \\<Gamma> B \\<noteq> None", "obtain T S\n    where \"\\<tau> = TPair T S\" \"ptrm_infer_type \\<Gamma> A = Some T\" \"ptrm_infer_type \\<Gamma> B = Some S\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n  ptrm_infer_type \\<Gamma> B \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        \\<lbrakk>\\<tau> = TPair T S; ptrm_infer_type \\<Gamma> A = Some T;\n         ptrm_infer_type \\<Gamma> B = Some S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> A \\<noteq> None\n  ptrm_infer_type \\<Gamma> B \\<noteq> None\n  ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        \\<lbrakk>\\<tau> = TPair T S; ptrm_infer_type \\<Gamma> A = Some T;\n         ptrm_infer_type \\<Gamma> B = Some S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<tau> = TPair T S\n  ptrm_infer_type \\<Gamma> A = Some T\n  ptrm_infer_type \\<Gamma> B = Some S\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> A B \\<tau>.\n       ptrm_infer_type \\<Gamma> (PPair A B) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          \\<tau> = TPair T S \\<and>\n          ptrm_infer_type \\<Gamma> A = Some T \\<and>\n          ptrm_infer_type \\<Gamma> B = Some S", "thus \"\\<exists>T S. \\<tau> = TPair T S \\<and> ptrm_infer_type \\<Gamma> A = Some T \\<and> ptrm_infer_type \\<Gamma> B = Some S\""], ["proof (prove)\nusing this:\n  \\<tau> = TPair T S\n  ptrm_infer_type \\<Gamma> A = Some T\n  ptrm_infer_type \\<Gamma> B = Some S\n\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       \\<tau> = TPair T S \\<and>\n       ptrm_infer_type \\<Gamma> A = Some T \\<and>\n       ptrm_infer_type \\<Gamma> B = Some S", "by auto"], ["proof (state)\nthis:\n  \\<exists>T S.\n     \\<tau> = TPair T S \\<and>\n     ptrm_infer_type \\<Gamma> A = Some T \\<and>\n     ptrm_infer_type \\<Gamma> B = Some S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infer_fstE:\n  assumes \"infer \\<Gamma> (Fst P) = Some \\<tau>\"\n  shows \"\\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Fst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "fix P :: \"'a ptrm\" and \\<Gamma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "assume H: \"ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = None \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = None\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = None \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = None\n  ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some TUnit \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = Some TUnit\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some TUnit\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some TUnit \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some TUnit\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some TUnit\n  ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar x)", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TVar x) \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = Some (TVar x)\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TVar x)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TVar x) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TVar x)\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TVar x)\n  ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr T S)\" for T S"], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr T S)", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TArr T S) \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = Some (TArr T S)\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TArr T S)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TArr T S) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TArr T S)\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TArr T S)\n  ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "ultimately"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)", "obtain T S where\n    \"ptrm_infer_type \\<Gamma> P = Some (TPair T S)\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using type.distinct type.exhaust option.exhaust"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)\n  TUnit \\<noteq> TVar ?x2.0\n  TVar ?x2.0 \\<noteq> TUnit\n  TUnit \\<noteq> TArr ?x31.0 ?x32.0\n  TArr ?x31.0 ?x32.0 \\<noteq> TUnit\n  TUnit \\<noteq> TPair ?x41.0 ?x42.0\n  TPair ?x41.0 ?x42.0 \\<noteq> TUnit\n  TVar ?x2.0 \\<noteq> TArr ?x31.0 ?x32.0\n  TArr ?x31.0 ?x32.0 \\<noteq> TVar ?x2.0\n  TVar ?x2.0 \\<noteq> TPair ?x41.0 ?x42.0\n  TPair ?x41.0 ?x42.0 \\<noteq> TVar ?x2.0\n  TArr ?x31.0 ?x32.0 \\<noteq> TPair ?x41.0 ?x42.0\n  TPair ?x41.0 ?x42.0 \\<noteq> TArr ?x31.0 ?x32.0\n  \\<lbrakk>?y = TUnit \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = TVar x2 \\<Longrightarrow> ?P;\n   \\<And>x31 x32. ?y = TArr x31 x32 \\<Longrightarrow> ?P;\n   \\<And>x41 x42. ?y = TPair x41 x42 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  \\<lbrakk>?y = None \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Some x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "hence \"ptrm_infer_type \\<Gamma> (PFst P) = Some T\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PFst P) = Some T", "by simp"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PFst P) = Some T\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "ultimately"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n  ptrm_infer_type \\<Gamma> (PFst P) = Some T", "show \"\\<exists>T S. ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n  ptrm_infer_type \\<Gamma> (PFst P) = Some T\n\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n  ptrm_infer_type \\<Gamma> (PFst P) = Some T\n  ptrm_infer_type \\<Gamma> (PFst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T S.\n     ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infer_sndE:\n  assumes \"infer \\<Gamma> (Snd P) = Some \\<tau>\"\n  shows \"\\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Snd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>T S. infer \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "proof(transfer)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "fix P :: \"'a ptrm\" and \\<Gamma> \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "assume H: \"ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> None", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = None \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = None\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = None\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = None \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = None\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = None\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some TUnit \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = Some TUnit\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some TUnit\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some TUnit \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some TUnit\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some TUnit\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar x)", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TVar x) \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = Some (TVar x)\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TVar x)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TVar x) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TVar x)\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TVar x)\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "have \"ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr T S)\" for T S"], ["proof (prove)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr T S)", "proof(rule classical, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TArr T S) \\<Longrightarrow> False", "assume \"ptrm_infer_type \\<Gamma> P = Some (TArr T S)\""], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TArr T S)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> P = Some (TArr T S) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TArr T S)\n\ngoal (1 subgoal):\n 1. False", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TArr T S)\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "ultimately"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)", "obtain T S where\n    \"ptrm_infer_type \\<Gamma> P = Some (TPair T S)\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using type.distinct type.exhaust option.exhaust"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P \\<noteq> None\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some TUnit\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TVar ?x)\n  ptrm_infer_type \\<Gamma> P \\<noteq> Some (TArr ?T ?S)\n  TUnit \\<noteq> TVar ?x2.0\n  TVar ?x2.0 \\<noteq> TUnit\n  TUnit \\<noteq> TArr ?x31.0 ?x32.0\n  TArr ?x31.0 ?x32.0 \\<noteq> TUnit\n  TUnit \\<noteq> TPair ?x41.0 ?x42.0\n  TPair ?x41.0 ?x42.0 \\<noteq> TUnit\n  TVar ?x2.0 \\<noteq> TArr ?x31.0 ?x32.0\n  TArr ?x31.0 ?x32.0 \\<noteq> TVar ?x2.0\n  TVar ?x2.0 \\<noteq> TPair ?x41.0 ?x42.0\n  TPair ?x41.0 ?x42.0 \\<noteq> TVar ?x2.0\n  TArr ?x31.0 ?x32.0 \\<noteq> TPair ?x41.0 ?x42.0\n  TPair ?x41.0 ?x42.0 \\<noteq> TArr ?x31.0 ?x32.0\n  \\<lbrakk>?y = TUnit \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = TVar x2 \\<Longrightarrow> ?P;\n   \\<And>x31 x32. ?y = TArr x31 x32 \\<Longrightarrow> ?P;\n   \\<And>x41 x42. ?y = TPair x41 x42 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  \\<lbrakk>?y = None \\<Longrightarrow> ?P;\n   \\<And>x2. ?y = Some x2 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "moreover"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "hence \"ptrm_infer_type \\<Gamma> (PSnd P) = Some S\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n\ngoal (1 subgoal):\n 1. ptrm_infer_type \\<Gamma> (PSnd P) = Some S", "by simp"], ["proof (state)\nthis:\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some S\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau>.\n       ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau> \\<Longrightarrow>\n       \\<exists>T S.\n          ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "ultimately"], ["proof (chain)\npicking this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some S", "show \"\\<exists>T S. ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S\""], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some S\n\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "using H"], ["proof (prove)\nusing this:\n  ptrm_infer_type \\<Gamma> P = Some (TPair T S)\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some S\n  ptrm_infer_type \\<Gamma> (PSnd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>T S.\n       ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S", "by auto"], ["proof (state)\nthis:\n  \\<exists>T S.\n     ptrm_infer_type \\<Gamma> P = Some (TPair T S) \\<and> \\<tau> = S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infer_sound:\n  assumes \"infer \\<Gamma> M = Some \\<tau>\"\n  shows \"\\<Gamma> \\<turnstile> M : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  infer \\<Gamma> M = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M : \\<tau>", "proof(induction M arbitrary: \\<Gamma> \\<tau> rule: trm_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<tau>.\n       infer \\<Gamma> Unit = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Unit : \\<tau>\n 2. \\<And>x \\<Gamma> \\<tau>.\n       infer \\<Gamma> (Var x) = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Var x : \\<tau>\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 4. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 5. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 7. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case 1"], ["proof (state)\nthis:\n  infer \\<Gamma> Unit = Some \\<tau>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<tau>.\n       infer \\<Gamma> Unit = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Unit : \\<tau>\n 2. \\<And>x \\<Gamma> \\<tau>.\n       infer \\<Gamma> (Var x) = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Var x : \\<tau>\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 4. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 5. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 7. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  infer \\<Gamma> Unit = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Unit : \\<tau>", "using infer_unitE typing.tunit"], ["proof (prove)\nusing this:\n  infer \\<Gamma> Unit = Some \\<tau>\n  infer ?\\<Gamma> Unit = Some ?\\<tau> \\<Longrightarrow> ?\\<tau> = TUnit\n  ?\\<Gamma> \\<turnstile> Unit : TUnit\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Unit : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Unit : \\<tau>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       infer \\<Gamma> (Var x) = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Var x : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       infer \\<Gamma> (Var x) = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Var x : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case (2 x)"], ["proof (state)\nthis:\n  infer \\<Gamma> (Var x) = Some \\<tau>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       infer \\<Gamma> (Var x) = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Var x : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "hence \"\\<Gamma> x = Some \\<tau>\""], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Var x) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<tau>", "using infer_varE"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Var x) = Some \\<tau>\n  infer ?\\<Gamma> (Var ?x) = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> ?x = Some ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> x = Some \\<tau>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       infer \\<Gamma> (Var x) = Some \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> Var x : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x : \\<tau>", "using typing.tvar"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  ?\\<Gamma> ?x = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Var ?x : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Var x : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case (3 A B)"], ["proof (state)\nthis:\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  infer ?\\<Gamma> B = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau>\n  infer \\<Gamma> (App A B) = Some \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "from \\<open>infer \\<Gamma> (App A B) = Some \\<tau>\\<close>"], ["proof (chain)\npicking this:\n  infer \\<Gamma> (App A B) = Some \\<tau>", "obtain \\<sigma>\n      where \"infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\" and \"infer \\<Gamma> B = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  infer \\<Gamma> (App A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>);\n         infer \\<Gamma> B = Some \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using infer_appE"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (App A B) = Some \\<tau>\n  infer ?\\<Gamma> (App ?A ?B) = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     infer ?\\<Gamma> ?A = Some (TArr \\<sigma> ?\\<tau>) \\<and>\n     infer ?\\<Gamma> ?B = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>);\n         infer \\<Gamma> B = Some \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\n  infer \\<Gamma> B = Some \\<sigma>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (App A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B : \\<tau>\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\n  infer \\<Gamma> B = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A B : \\<tau>", "using \"3.IH\" typing.tapp"], ["proof (prove)\nusing this:\n  infer \\<Gamma> A = Some (TArr \\<sigma> \\<tau>)\n  infer \\<Gamma> B = Some \\<sigma>\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  infer ?\\<Gamma> B = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?f : TArr ?\\<tau> ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?x : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> App ?f ?x : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A B : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> App A B : \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case (4 x T A \\<Gamma> \\<tau>)"], ["proof (state)\nthis:\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  infer \\<Gamma> (Fn x T A) = Some \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "from \\<open>infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<close>"], ["proof (chain)\npicking this:\n  infer \\<Gamma> (Fn x T A) = Some \\<tau>", "obtain \\<sigma>\n      where \"\\<tau> = TArr T \\<sigma>\" and \"infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Fn x T A) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>\\<tau> = TArr T \\<sigma>;\n         infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using infer_fnE"], ["proof (prove)\nusing this:\n  infer \\<Gamma> (Fn x T A) = Some \\<tau>\n  infer ?\\<Gamma> (Fn ?x ?T ?A) = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     ?\\<tau> = TArr ?T \\<sigma> \\<and>\n     infer (?\\<Gamma>(?x \\<mapsto> ?T)) ?A = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>\\<tau> = TArr T \\<sigma>;\n         infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<tau> = TArr T \\<sigma>\n  infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fn x T A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<tau> = TArr T \\<sigma>\n  infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A : \\<tau>", "using \"4.IH\" typing.tfn"], ["proof (prove)\nusing this:\n  \\<tau> = TArr T \\<sigma>\n  infer (\\<Gamma>(x \\<mapsto> T)) A = Some \\<sigma>\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  ?\\<Gamma>(?x \\<mapsto>\n  ?\\<tau>) \\<turnstile> ?A : ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?\\<tau> ?A : TArr ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case (5 A B \\<Gamma> \\<tau>)"], ["proof (state)\nthis:\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  infer ?\\<Gamma> B = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau>\n  infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>\\<Gamma> \\<tau>.\n           infer \\<Gamma> B = Some \\<tau> \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> B : \\<tau>;\n        infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  infer ?\\<Gamma> B = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau>\n  infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>", "using typing.tpair infer_pairE"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> A = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau>\n  infer ?\\<Gamma> B = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau>\n  infer \\<Gamma> (SimplyTyped.Pair A B) = Some \\<tau>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?A : ?\\<tau>;\n   ?\\<Gamma> \\<turnstile> ?B : ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n      ?B : TPair ?\\<tau> ?\\<sigma>\n  infer ?\\<Gamma> (SimplyTyped.Pair ?A ?B) = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>T S.\n     ?\\<tau> = TPair T S \\<and>\n     infer ?\\<Gamma> ?A = Some T \\<and> infer ?\\<Gamma> ?B = Some S\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case (6 P \\<Gamma> \\<tau>)"], ["proof (state)\nthis:\n  infer ?\\<Gamma> P = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau>\n  infer \\<Gamma> (Fst P) = Some \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Fst A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A : \\<tau>\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> P = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau>\n  infer \\<Gamma> (Fst P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst P : \\<tau>", "using typing.tfst infer_fstE"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> P = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau>\n  infer \\<Gamma> (Fst P) = Some \\<tau>\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau>\n  infer ?\\<Gamma> (Fst ?P) = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>T S. infer ?\\<Gamma> ?P = Some (TPair T S) \\<and> ?\\<tau> = T\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst P : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fst P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "case (7 P \\<Gamma> \\<tau>)"], ["proof (state)\nthis:\n  infer ?\\<Gamma> P = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau>\n  infer \\<Gamma> (Snd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   infer \\<Gamma> A = Some \\<tau> \\<Longrightarrow>\n                   \\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> (Snd A) = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> P = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau>\n  infer \\<Gamma> (Snd P) = Some \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd P : \\<tau>", "using typing.tsnd infer_sndE"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> P = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau>\n  infer \\<Gamma> (Snd P) = Some \\<tau>\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma>\n  infer ?\\<Gamma> (Snd ?P) = Some ?\\<tau> \\<Longrightarrow>\n  \\<exists>T S. infer ?\\<Gamma> ?P = Some (TPair T S) \\<and> ?\\<tau> = S\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd P : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Snd P : \\<tau>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma infer_complete:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"infer \\<Gamma> M = Some \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infer \\<Gamma> M = Some \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. infer \\<Gamma> M = Some \\<tau>", "proof(induction)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma>. infer \\<Gamma> Unit = Some TUnit\n 2. \\<And>\\<Gamma> x \\<tau>.\n       \\<Gamma> x = Some \\<tau> \\<Longrightarrow>\n       infer \\<Gamma> (Var x) = Some \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        infer \\<Gamma> f = Some (TArr \\<tau> \\<sigma>);\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        infer \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (App f x) = Some \\<sigma>\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Fn x \\<tau> A) =\n                         Some (TArr \\<tau> \\<sigma>)\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> A = Some \\<tau>; \\<Gamma> \\<turnstile> B : \\<sigma>;\n        infer \\<Gamma> B = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (SimplyTyped.Pair A B) =\n                         Some (TPair \\<tau> \\<sigma>)\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Fst P) = Some \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Snd P) = Some \\<sigma>", "case (tfn \\<Gamma> x \\<tau> A \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>\n  infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A = Some \\<sigma>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma>. infer \\<Gamma> Unit = Some TUnit\n 2. \\<And>\\<Gamma> x \\<tau>.\n       \\<Gamma> x = Some \\<tau> \\<Longrightarrow>\n       infer \\<Gamma> (Var x) = Some \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        infer \\<Gamma> f = Some (TArr \\<tau> \\<sigma>);\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        infer \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (App f x) = Some \\<sigma>\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma>.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Fn x \\<tau> A) =\n                         Some (TArr \\<tau> \\<sigma>)\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> A = Some \\<tau>; \\<Gamma> \\<turnstile> B : \\<sigma>;\n        infer \\<Gamma> B = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (SimplyTyped.Pair A B) =\n                         Some (TPair \\<tau> \\<sigma>)\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Fst P) = Some \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Snd P) = Some \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>\n  infer (\\<Gamma>(x \\<mapsto> \\<tau>)) A = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. infer \\<Gamma> (Fn x \\<tau> A) = Some (TArr \\<tau> \\<sigma>)", "by (simp add: infer_simp(4) tfn.IH)"], ["proof (state)\nthis:\n  infer \\<Gamma> (Fn x \\<tau> A) = Some (TArr \\<tau> \\<sigma>)\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma>. infer \\<Gamma> Unit = Some TUnit\n 2. \\<And>\\<Gamma> x \\<tau>.\n       \\<Gamma> x = Some \\<tau> \\<Longrightarrow>\n       infer \\<Gamma> (Var x) = Some \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        infer \\<Gamma> f = Some (TArr \\<tau> \\<sigma>);\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        infer \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (App f x) = Some \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> A = Some \\<tau>; \\<Gamma> \\<turnstile> B : \\<sigma>;\n        infer \\<Gamma> B = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (SimplyTyped.Pair A B) =\n                         Some (TPair \\<tau> \\<sigma>)\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Fst P) = Some \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Snd P) = Some \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma>. infer \\<Gamma> Unit = Some TUnit\n 2. \\<And>\\<Gamma> x \\<tau>.\n       \\<Gamma> x = Some \\<tau> \\<Longrightarrow>\n       infer \\<Gamma> (Var x) = Some \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        infer \\<Gamma> f = Some (TArr \\<tau> \\<sigma>);\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        infer \\<Gamma> x = Some \\<tau>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (App f x) = Some \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        infer \\<Gamma> A = Some \\<tau>; \\<Gamma> \\<turnstile> B : \\<sigma>;\n        infer \\<Gamma> B = Some \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (SimplyTyped.Pair A B) =\n                         Some (TPair \\<tau> \\<sigma>)\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Fst P) = Some \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        infer \\<Gamma> P = Some (TPair \\<tau> \\<sigma>)\\<rbrakk>\n       \\<Longrightarrow> infer \\<Gamma> (Snd P) = Some \\<sigma>", "qed (auto simp add: infer_simp)"], ["", "theorem infer_valid:\n  shows \"(\\<Gamma> \\<turnstile> M : \\<tau>) = (infer \\<Gamma> M = Some \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M : \\<tau> = (infer \\<Gamma> M = Some \\<tau>)", "using infer_sound infer_complete"], ["proof (prove)\nusing this:\n  infer ?\\<Gamma> ?M = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> ?M : ?\\<tau>\n  ?\\<Gamma> \\<turnstile> ?M : ?\\<tau> \\<Longrightarrow>\n  infer ?\\<Gamma> ?M = Some ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M : \\<tau> = (infer \\<Gamma> M = Some \\<tau>)", "by blast"], ["", "inductive substitutes :: \"'a trm \\<Rightarrow> 'a \\<Rightarrow> 'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\" where\n  unit: \"substitutes Unit y M Unit\"\n| var1: \"x = y \\<Longrightarrow> substitutes (Var x) y M M\"\n| var2: \"x \\<noteq> y \\<Longrightarrow> substitutes (Var x) y M (Var x)\"\n| app:  \"\\<lbrakk>substitutes A x M A'; substitutes B x M B'\\<rbrakk> \\<Longrightarrow> substitutes (App A B) x M (App A' B')\"\n| fn:   \"\\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A'\\<rbrakk> \\<Longrightarrow> substitutes (Fn y T A) x M (Fn y T A')\"\n| pair: \"\\<lbrakk>substitutes A x M A'; substitutes B x M B'\\<rbrakk> \\<Longrightarrow> substitutes (Pair A B) x M (Pair A' B')\"\n| fst:  \"substitutes P x M P' \\<Longrightarrow> substitutes (Fst P) x M (Fst P')\"\n| snd:  \"substitutes P x M P' \\<Longrightarrow> substitutes (Snd P) x M (Snd P')\""], ["", "lemma substitutes_prm:\n  assumes \"substitutes A x M A'\"\n  shows \"substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> A')", "using assms"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> A')", "proof(induction)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>y M.\n       substitutes (\\<pi> \\<cdot> Unit) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Unit)\n 2. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> M)\n 3. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 5. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 6. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 8. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (unit y M)"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<And>y M.\n       substitutes (\\<pi> \\<cdot> Unit) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Unit)\n 2. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> M)\n 3. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 5. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 6. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 8. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Unit) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Unit)", "using substitutes.unit trm_prm_simp(1)"], ["proof (prove)\nusing this:\n  substitutes Unit ?y ?M Unit\n  ?\\<pi> \\<cdot> Unit = Unit\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Unit) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Unit)", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> Unit) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> Unit)\n\ngoal (7 subgoals):\n 1. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> M)\n 2. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 4. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 5. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (var1 x y M)"], ["proof (state)\nthis:\n  x = y\n\ngoal (7 subgoals):\n 1. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> M)\n 2. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 4. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 5. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> M)", "using substitutes.var1 trm_prm_simp(2)"], ["proof (prove)\nusing this:\n  x = y\n  ?x = ?y \\<Longrightarrow> substitutes (Var ?x) ?y ?M ?M\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> M)", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> M)\n\ngoal (6 subgoals):\n 1. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 3. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 3. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (var2 x y M)"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (6 subgoals):\n 1. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n        (\\<pi> \\<cdot> Var x)\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 3. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Var x)", "using substitutes.var2 trm_prm_simp(2) prm_apply_unequal"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  ?x \\<noteq> ?y \\<Longrightarrow> substitutes (Var ?x) ?y ?M (Var ?x)\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n  ?x \\<noteq> ?y \\<Longrightarrow> ?\\<pi> $ ?x \\<noteq> ?\\<pi> $ ?y\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Var x)", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> Var x) (\\<pi> $ y) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> Var x)\n\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (app A x M A' B B')"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> B')\n\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> App A' B')\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> B')\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> App A' B')", "using substitutes.app trm_prm_simp(3)"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> B')\n  \\<lbrakk>substitutes ?A ?x ?M ?A'; substitutes ?B ?x ?M ?B'\\<rbrakk>\n  \\<Longrightarrow> substitutes (App ?A ?B) ?x ?M (App ?A' ?B')\n  ?\\<pi> \\<cdot> App ?A ?B = App (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> App A' B')", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> App A B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> App A' B')\n\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (fn x y M A A' T)"], ["proof (state)\nthis:\n  x \\<noteq> y\n  y \\<notin> fvs M\n  substitutes A x M A'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fn y T A')\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  y \\<notin> fvs M\n  substitutes A x M A'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Fn y T A')", "using substitutes.fn trm_prm_simp(4) prm_apply_unequal prm_set_notmembership trm_prm_fvs"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  y \\<notin> fvs M\n  substitutes A x M A'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M;\n   substitutes ?A ?x ?M ?A'\\<rbrakk>\n  \\<Longrightarrow> substitutes (Fn ?y ?T ?A) ?x ?M (Fn ?y ?T ?A')\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n  ?x \\<noteq> ?y \\<Longrightarrow> ?\\<pi> $ ?x \\<noteq> ?\\<pi> $ ?y\n  ?x \\<notin> ?S \\<Longrightarrow> ?\\<pi> $ ?x \\<notin> ?\\<pi> {$} ?S\n  fvs (?\\<pi> \\<cdot> ?M) = ?\\<pi> {$} fvs ?M\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Fn y T A')", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> Fn y T A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> Fn y T A')\n\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (pair A x M A' B B')"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> B')\n\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> A');\n        substitutes B x M B';\n        substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> B')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B)\n                          (\\<pi> $ x) (\\<pi> \\<cdot> M)\n                          (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> B')\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B) (\\<pi> $ x)\n     (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> SimplyTyped.Pair A' B')", "using substitutes.pair trm_prm_simp(5)"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  substitutes (\\<pi> \\<cdot> A) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> A')\n  substitutes (\\<pi> \\<cdot> B) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> B')\n  \\<lbrakk>substitutes ?A ?x ?M ?A'; substitutes ?B ?x ?M ?B'\\<rbrakk>\n  \\<Longrightarrow> substitutes (SimplyTyped.Pair ?A ?B) ?x ?M\n                     (SimplyTyped.Pair ?A' ?B')\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B) (\\<pi> $ x)\n     (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> SimplyTyped.Pair A' B')", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> SimplyTyped.Pair A B) (\\<pi> $ x)\n   (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> SimplyTyped.Pair A' B')\n\ngoal (2 subgoals):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (fst P x M P')"], ["proof (state)\nthis:\n  substitutes P x M P'\n  substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> P')\n\ngoal (2 subgoals):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Fst P')\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> P')\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Fst P')", "using substitutes.fst trm_prm_simp(6)"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> P')\n  substitutes ?P ?x ?M ?P' \\<Longrightarrow>\n  substitutes (Fst ?P) ?x ?M (Fst ?P')\n  ?\\<pi> \\<cdot> Fst ?P = Fst (?\\<pi> \\<cdot> ?P)\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Fst P')", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> Fst P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> Fst P')\n\ngoal (1 subgoal):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "case (snd P x M P')"], ["proof (state)\nthis:\n  substitutes P x M P'\n  substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> P')\n\ngoal (1 subgoal):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n         (\\<pi> \\<cdot> P')\\<rbrakk>\n       \\<Longrightarrow> substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x)\n                          (\\<pi> \\<cdot> M) (\\<pi> \\<cdot> Snd P')", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> P')\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Snd P')", "using substitutes.snd trm_prm_simp(7)"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  substitutes (\\<pi> \\<cdot> P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> P')\n  substitutes ?P ?x ?M ?P' \\<Longrightarrow>\n  substitutes (Snd ?P) ?x ?M (Snd ?P')\n  ?\\<pi> \\<cdot> Snd ?P = Snd (?\\<pi> \\<cdot> ?P)\n\ngoal (1 subgoal):\n 1. substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n     (\\<pi> \\<cdot> Snd P')", "by metis"], ["proof (state)\nthis:\n  substitutes (\\<pi> \\<cdot> Snd P) (\\<pi> $ x) (\\<pi> \\<cdot> M)\n   (\\<pi> \\<cdot> Snd P')\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma substitutes_fvs:\n  assumes \"substitutes A x M A'\"\n  shows \"fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M", "using assms"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M", "proof(induction)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>y M. fvs Unit \\<subseteq> fvs Unit - {y} \\<union> fvs M\n 2. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       fvs M \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 3. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 5. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 6. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 8. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (unit y M)"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<And>y M. fvs Unit \\<subseteq> fvs Unit - {y} \\<union> fvs M\n 2. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       fvs M \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 3. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 5. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 6. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 8. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs Unit \\<subseteq> fvs Unit - {y} \\<union> fvs M", "using fvs_simp(1)"], ["proof (prove)\nusing this:\n  fvs Unit = {}\n\ngoal (1 subgoal):\n 1. fvs Unit \\<subseteq> fvs Unit - {y} \\<union> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs Unit \\<subseteq> fvs Unit - {y} \\<union> fvs M\n\ngoal (7 subgoals):\n 1. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       fvs M \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 2. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 4. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 5. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (var1 x y M)"], ["proof (state)\nthis:\n  x = y\n\ngoal (7 subgoals):\n 1. \\<And>x y M.\n       x = y \\<Longrightarrow>\n       fvs M \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 2. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 4. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 5. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 7. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. fvs M \\<subseteq> fvs (Var x) - {y} \\<union> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs M \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n\ngoal (6 subgoals):\n 1. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 3. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 3. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (var2 x y M)"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (6 subgoals):\n 1. \\<And>x y M.\n       x \\<noteq> y \\<Longrightarrow>\n       fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 3. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 4. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 6. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M", "using fvs_simp(2) Un_subset_iff Un_upper2 insert_Diff_if insert_is_Un singletonD sup_commute"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  fvs (Var ?x) = {?x}\n  (?A \\<union> ?B \\<subseteq> ?C) =\n  (?A \\<subseteq> ?C \\<and> ?B \\<subseteq> ?C)\n  ?B \\<subseteq> ?A \\<union> ?B\n  insert ?x ?A - ?B = (if ?x \\<in> ?B then ?A - ?B else insert ?x (?A - ?B))\n  insert ?a ?A = {?a} \\<union> ?A\n  ?b \\<in> {?a} \\<Longrightarrow> ?b = ?a\n  sup ?x ?y = sup ?y ?x\n\ngoal (1 subgoal):\n 1. fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M", "by metis"], ["proof (state)\nthis:\n  fvs (Var x) \\<subseteq> fvs (Var x) - {y} \\<union> fvs M\n\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (app A x M A' B B')"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n  fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\n  fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\n\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "hence \"fvs A' \\<union> fvs B' \\<subseteq> (fvs A - {x} \\<union> fvs M) \\<union> (fvs B - {x} \\<union> fvs M)\""], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\n  fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs A' \\<union> fvs B'\n    \\<subseteq> fvs A - {x} \\<union> fvs M \\<union>\n                (fvs B - {x} \\<union> fvs M)", "by auto"], ["proof (state)\nthis:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A - {x} \\<union> fvs M \\<union>\n              (fvs B - {x} \\<union> fvs M)\n\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "hence \"fvs A' \\<union> fvs B' \\<subseteq> (fvs A \\<union> fvs B) - {x} \\<union> fvs M\""], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A - {x} \\<union> fvs M \\<union>\n              (fvs B - {x} \\<union> fvs M)\n\ngoal (1 subgoal):\n 1. fvs A' \\<union> fvs B'\n    \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M\n\ngoal (5 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B')\n                         \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n 2. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 3. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 5. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs (App A' B') \\<subseteq> fvs (App A B) - {x} \\<union> fvs M", "using fvs_simp(3)"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n\ngoal (1 subgoal):\n 1. fvs (App A' B') \\<subseteq> fvs (App A B) - {x} \\<union> fvs M", "by metis"], ["proof (state)\nthis:\n  fvs (App A' B') \\<subseteq> fvs (App A B) - {x} \\<union> fvs M\n\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (fn x y M A A' T)"], ["proof (state)\nthis:\n  x \\<noteq> y\n  y \\<notin> fvs M\n  substitutes A x M A'\n  fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\n\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "hence \"fvs A' - {y} \\<subseteq> fvs A - {y} - {x} \\<union> fvs M\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  y \\<notin> fvs M\n  substitutes A x M A'\n  fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs A' - {y} \\<subseteq> fvs A - {y} - {x} \\<union> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs A' - {y} \\<subseteq> fvs A - {y} - {x} \\<union> fvs M\n\ngoal (4 subgoals):\n 1. \\<And>x y M A A' T.\n       \\<lbrakk>x \\<noteq> y; y \\<notin> fvs M; substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn y T A')\n                         \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n 2. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 4. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A' - {y} \\<subseteq> fvs A - {y} - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs (Fn y T A') \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M", "using fvs_simp(4)"], ["proof (prove)\nusing this:\n  fvs A' - {y} \\<subseteq> fvs A - {y} - {x} \\<union> fvs M\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. fvs (Fn y T A') \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M", "by metis"], ["proof (state)\nthis:\n  fvs (Fn y T A') \\<subseteq> fvs (Fn y T A) - {x} \\<union> fvs M\n\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (pair A x M A' B B')"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n  fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\n  fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\n\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "hence \"fvs A' \\<union> fvs B' \\<subseteq> (fvs A - {x} \\<union> fvs M) \\<union> (fvs B - {x} \\<union> fvs M)\""], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M\n  fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs A' \\<union> fvs B'\n    \\<subseteq> fvs A - {x} \\<union> fvs M \\<union>\n                (fvs B - {x} \\<union> fvs M)", "by auto"], ["proof (state)\nthis:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A - {x} \\<union> fvs M \\<union>\n              (fvs B - {x} \\<union> fvs M)\n\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "hence \"fvs A' \\<union> fvs B' \\<subseteq> (fvs A \\<union> fvs B) - {x} \\<union> fvs M\""], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A - {x} \\<union> fvs M \\<union>\n              (fvs B - {x} \\<union> fvs M)\n\ngoal (1 subgoal):\n 1. fvs A' \\<union> fvs B'\n    \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M\n\ngoal (3 subgoals):\n 1. \\<And>A x M A' B B'.\n       \\<lbrakk>substitutes A x M A';\n        fvs A' \\<subseteq> fvs A - {x} \\<union> fvs M; substitutes B x M B';\n        fvs B' \\<subseteq> fvs B - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B) -\n                                     {x} \\<union>\n                                     fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 3. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B')\n    \\<subseteq> fvs (SimplyTyped.Pair A B) - {x} \\<union> fvs M", "using fvs_simp(5)"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B'\n  \\<subseteq> fvs A \\<union> fvs B - {x} \\<union> fvs M\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B')\n    \\<subseteq> fvs (SimplyTyped.Pair A B) - {x} \\<union> fvs M", "by metis"], ["proof (state)\nthis:\n  fvs (SimplyTyped.Pair A' B')\n  \\<subseteq> fvs (SimplyTyped.Pair A B) - {x} \\<union> fvs M\n\ngoal (2 subgoals):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (fst P x M P')"], ["proof (state)\nthis:\n  substitutes P x M P'\n  fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\n\ngoal (2 subgoals):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P')\n                         \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n 2. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M", "using fvs_simp(6)"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M", "by fastforce"], ["proof (state)\nthis:\n  fvs (Fst P') \\<subseteq> fvs (Fst P) - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "case (snd P x M P')"], ["proof (state)\nthis:\n  substitutes P x M P'\n  fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. \\<And>P x M P'.\n       \\<lbrakk>substitutes P x M P';\n        fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P')\n                         \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "using fvs_simp(7)"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  fvs P' \\<subseteq> fvs P - {x} \\<union> fvs M\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M", "by fastforce"], ["proof (state)\nthis:\n  fvs (Snd P') \\<subseteq> fvs (Snd P) - {x} \\<union> fvs M\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive_cases substitutes_unitE': \"substitutes Unit y M X\""], ["", "lemma substitutes_unitE:\n  assumes \"substitutes Unit y M X\"\n  shows \"X = Unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = Unit", "by(\n  rule substitutes_unitE'[where y=y and M=M and X=X],\n  metis assms,\n  auto simp add: unit_not_var unit_not_app unit_not_fn unit_not_pair unit_not_fst unit_not_snd\n)"], ["", "inductive_cases substitutes_varE': \"substitutes (Var x) y M X\""], ["", "lemma substitutes_varE:\n  assumes \"substitutes (Var x) y M X\"\n  shows \"(x = y \\<and> M = X) \\<or> (x \\<noteq> y \\<and> X = Var x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y \\<and> M = X \\<or> x \\<noteq> y \\<and> X = Var x", "by(\n  rule substitutes_varE'[where x=x and y=y and M=M and X=X],\n  metis assms,\n  metis unit_not_var,\n  metis trm_simp(1),\n  metis trm_simp(1),\n  auto simp add: var_not_app var_not_fn var_not_pair var_not_fst var_not_snd\n)"], ["", "inductive_cases substitutes_appE': \"substitutes (App A B) x M X\""], ["", "lemma substitutes_appE:\n  assumes \"substitutes (App A B) x M X\"\n  shows \"\\<exists>A' B'. substitutes A x M A' \\<and> substitutes B x M B' \\<and> X = App A' B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       substitutes A x M A' \\<and> substitutes B x M B' \\<and> X = App A' B'", "by(\n  cases rule: substitutes_appE'[where A=A and B=B and x=x and M=M and X=X],\n  metis assms,\n  metis unit_not_app,\n  metis var_not_app,\n  metis var_not_app,\n  metis trm_simp(2,3),\n  auto simp add: app_not_fn app_not_pair app_not_fst app_not_snd\n)"], ["", "inductive_cases substitutes_fnE': \"substitutes (Fn y T A) x M X\""], ["", "lemma substitutes_fnE:\n  assumes \"substitutes (Fn y T A) x M X\" \"y \\<noteq> x\" \"y \\<notin> fvs M\"\n  shows \"\\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "using assms"], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M X\n  y \\<noteq> x\n  y \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "proof(induction rule: substitutes_fnE'[where y=y and T=T and A=A and x=x and M=M and X=X])"], ["proof (state)\ngoal (9 subgoals):\n 1. substitutes (Fn y T A) x M X\n 2. \\<lbrakk>Fn y T A = Unit; X = Unit; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 3. \\<lbrakk>Fn y T A = Var x; X = M; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 4. \\<And>xa.\n       \\<lbrakk>Fn y T A = Var xa; X = Var xa; xa \\<noteq> x;\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = App Aa B; X = App A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 6. \\<And>ya Aa A' Ta.\n       \\<lbrakk>Fn y T A = Fn ya Ta Aa; X = Fn ya Ta A'; x \\<noteq> ya;\n        ya \\<notin> fvs M; substitutes Aa x M A';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 7. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Fst P; X = Fst P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Snd P; X = Snd P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'", "case (6 z B B' S)"], ["proof (state)\nthis:\n  Fn y T A = Fn z S B\n  X = Fn z S B'\n  x \\<noteq> z\n  z \\<notin> fvs M\n  substitutes B x M B'\n  substitutes (Fn y T A) x M X\n  y \\<noteq> x\n  y \\<notin> fvs M\n\ngoal (9 subgoals):\n 1. substitutes (Fn y T A) x M X\n 2. \\<lbrakk>Fn y T A = Unit; X = Unit; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 3. \\<lbrakk>Fn y T A = Var x; X = M; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 4. \\<And>xa.\n       \\<lbrakk>Fn y T A = Var xa; X = Var xa; xa \\<noteq> x;\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = App Aa B; X = App A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 6. \\<And>ya Aa A' Ta.\n       \\<lbrakk>Fn y T A = Fn ya Ta Aa; X = Fn ya Ta A'; x \\<noteq> ya;\n        ya \\<notin> fvs M; substitutes Aa x M A';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 7. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Fst P; X = Fst P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Snd P; X = Snd P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'", "consider \"y = z \\<and> T = S \\<and> A = B\" | \"y \\<noteq> z \\<and> T = S \\<and> y \\<notin> fvs B \\<and> A = [y \\<leftrightarrow> z] \\<cdot> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = z \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     y \\<noteq> z \\<and>\n     T = S \\<and>\n     y \\<notin> fvs B \\<and>\n     A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using \\<open>Fn y T A = Fn z S B\\<close> trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn y T A = Fn z S B\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y = z \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     y \\<noteq> z \\<and>\n     T = S \\<and>\n     y \\<notin> fvs B \\<and>\n     A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>y = z \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   y \\<noteq> z \\<and>\n   T = S \\<and>\n   y \\<notin> fvs B \\<and>\n   A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (9 subgoals):\n 1. substitutes (Fn y T A) x M X\n 2. \\<lbrakk>Fn y T A = Unit; X = Unit; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 3. \\<lbrakk>Fn y T A = Var x; X = M; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 4. \\<And>xa.\n       \\<lbrakk>Fn y T A = Var xa; X = Var xa; xa \\<noteq> x;\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = App Aa B; X = App A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 6. \\<And>ya Aa A' Ta.\n       \\<lbrakk>Fn y T A = Fn ya Ta Aa; X = Fn ya Ta A'; x \\<noteq> ya;\n        ya \\<notin> fvs M; substitutes Aa x M A';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 7. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Fst P; X = Fst P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Snd P; X = Snd P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>y = z \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   y \\<noteq> z \\<and>\n   T = S \\<and>\n   y \\<notin> fvs B \\<and>\n   A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. y = z \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 2. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "case 1"], ["proof (state)\nthis:\n  y = z \\<and> T = S \\<and> A = B\n\ngoal (2 subgoals):\n 1. y = z \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 2. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = z \\<and> T = S \\<and> A = B\n\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "using 6"], ["proof (prove)\nusing this:\n  y = z \\<and> T = S \\<and> A = B\n  Fn y T A = Fn z S B\n  X = Fn z S B'\n  x \\<noteq> z\n  z \\<notin> fvs M\n  substitutes B x M B'\n  substitutes (Fn y T A) x M X\n  y \\<noteq> x\n  y \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "by metis"], ["proof (state)\nthis:\n  \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "case 2"], ["proof (state)\nthis:\n  y \\<noteq> z \\<and>\n  T = S \\<and> y \\<notin> fvs B \\<and> A = [y \\<leftrightarrow> z] \\<cdot> B\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "hence \"y \\<noteq> z\" \"T = S\" \"y \\<notin> fvs B\" \"A = [y \\<leftrightarrow> z] \\<cdot> B\""], ["proof (prove)\nusing this:\n  y \\<noteq> z \\<and>\n  T = S \\<and> y \\<notin> fvs B \\<and> A = [y \\<leftrightarrow> z] \\<cdot> B\n\ngoal (1 subgoal):\n 1. (y \\<noteq> z &&& T = S) &&&\n    y \\<notin> fvs B &&& A = [y \\<leftrightarrow> z] \\<cdot> B", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> z\n  T = S\n  y \\<notin> fvs B\n  A = [y \\<leftrightarrow> z] \\<cdot> B\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "have \"substitutes ([y \\<leftrightarrow> z] \\<cdot> B) ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M) ([y \\<leftrightarrow> z] \\<cdot> B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. substitutes ([y \\<leftrightarrow> z] \\<cdot> B)\n     ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M)\n     ([y \\<leftrightarrow> z] \\<cdot> B')", "using substitutes_prm \\<open>substitutes B x M B'\\<close>"], ["proof (prove)\nusing this:\n  substitutes ?A ?x ?M ?A' \\<Longrightarrow>\n  substitutes (?\\<pi> \\<cdot> ?A) (?\\<pi> $ ?x) (?\\<pi> \\<cdot> ?M)\n   (?\\<pi> \\<cdot> ?A')\n  substitutes B x M B'\n\ngoal (1 subgoal):\n 1. substitutes ([y \\<leftrightarrow> z] \\<cdot> B)\n     ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M)\n     ([y \\<leftrightarrow> z] \\<cdot> B')", "by metis"], ["proof (state)\nthis:\n  substitutes ([y \\<leftrightarrow> z] \\<cdot> B)\n   ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M)\n   ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "hence \"substitutes A ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M) ([y \\<leftrightarrow> z] \\<cdot> B')\""], ["proof (prove)\nusing this:\n  substitutes ([y \\<leftrightarrow> z] \\<cdot> B)\n   ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M)\n   ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. substitutes A ([y \\<leftrightarrow> z] $ x)\n     ([y \\<leftrightarrow> z] \\<cdot> M)\n     ([y \\<leftrightarrow> z] \\<cdot> B')", "using \\<open>A = [y \\<leftrightarrow> z] \\<cdot> B\\<close>"], ["proof (prove)\nusing this:\n  substitutes ([y \\<leftrightarrow> z] \\<cdot> B)\n   ([y \\<leftrightarrow> z] $ x) ([y \\<leftrightarrow> z] \\<cdot> M)\n   ([y \\<leftrightarrow> z] \\<cdot> B')\n  A = [y \\<leftrightarrow> z] \\<cdot> B\n\ngoal (1 subgoal):\n 1. substitutes A ([y \\<leftrightarrow> z] $ x)\n     ([y \\<leftrightarrow> z] \\<cdot> M)\n     ([y \\<leftrightarrow> z] \\<cdot> B')", "by metis"], ["proof (state)\nthis:\n  substitutes A ([y \\<leftrightarrow> z] $ x)\n   ([y \\<leftrightarrow> z] \\<cdot> M) ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "hence \"substitutes A x ([y \\<leftrightarrow> z] \\<cdot> M) ([y \\<leftrightarrow> z] \\<cdot> B')\""], ["proof (prove)\nusing this:\n  substitutes A ([y \\<leftrightarrow> z] $ x)\n   ([y \\<leftrightarrow> z] \\<cdot> M) ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. substitutes A x ([y \\<leftrightarrow> z] \\<cdot> M)\n     ([y \\<leftrightarrow> z] \\<cdot> B')", "using \\<open>y \\<noteq> x\\<close> \\<open>x \\<noteq> z\\<close> prm_unit_inaction"], ["proof (prove)\nusing this:\n  substitutes A ([y \\<leftrightarrow> z] $ x)\n   ([y \\<leftrightarrow> z] \\<cdot> M) ([y \\<leftrightarrow> z] \\<cdot> B')\n  y \\<noteq> x\n  x \\<noteq> z\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n\ngoal (1 subgoal):\n 1. substitutes A x ([y \\<leftrightarrow> z] \\<cdot> M)\n     ([y \\<leftrightarrow> z] \\<cdot> B')", "by metis"], ["proof (state)\nthis:\n  substitutes A x ([y \\<leftrightarrow> z] \\<cdot> M)\n   ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "hence *: \"substitutes A x M ([y \\<leftrightarrow> z] \\<cdot> B')\""], ["proof (prove)\nusing this:\n  substitutes A x ([y \\<leftrightarrow> z] \\<cdot> M)\n   ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. substitutes A x M ([y \\<leftrightarrow> z] \\<cdot> B')", "using \\<open>y \\<notin> fvs M\\<close> \\<open>z \\<notin> fvs M\\<close> trm_prm_unit_inaction"], ["proof (prove)\nusing this:\n  substitutes A x ([y \\<leftrightarrow> z] \\<cdot> M)\n   ([y \\<leftrightarrow> z] \\<cdot> B')\n  y \\<notin> fvs M\n  z \\<notin> fvs M\n  \\<lbrakk>?a \\<notin> fvs ?X; ?b \\<notin> fvs ?X\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] \\<cdot> ?X = ?X\n\ngoal (1 subgoal):\n 1. substitutes A x M ([y \\<leftrightarrow> z] \\<cdot> B')", "by metis"], ["proof (state)\nthis:\n  substitutes A x M ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "have \"y \\<notin> fvs B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> fvs B'", "using\n            substitutes_fvs \\<open>substitutes B x M B'\\<close> \\<open>y \\<notin> fvs B\\<close> \\<open>y \\<notin> fvs M\\<close>\n            Diff_subset UnE rev_subsetD"], ["proof (prove)\nusing this:\n  substitutes ?A ?x ?M ?A' \\<Longrightarrow>\n  fvs ?A' \\<subseteq> fvs ?A - {?x} \\<union> fvs ?M\n  substitutes B x M B'\n  y \\<notin> fvs B\n  y \\<notin> fvs M\n  ?A - ?B \\<subseteq> ?A\n  \\<lbrakk>?c \\<in> ?A \\<union> ?B; ?c \\<in> ?A \\<Longrightarrow> ?P;\n   ?c \\<in> ?B \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  \\<lbrakk>?c \\<in> ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs B'", "by blast"], ["proof (state)\nthis:\n  y \\<notin> fvs B'\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "hence \"X = Fn y T ([y \\<leftrightarrow> z] \\<cdot> B')\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs B'\n\ngoal (1 subgoal):\n 1. X = Fn y T ([y \\<leftrightarrow> z] \\<cdot> B')", "using \\<open>X = Fn z S B'\\<close> \\<open>y \\<noteq> z\\<close> \\<open>T = S\\<close> fn_eq"], ["proof (prove)\nusing this:\n  y \\<notin> fvs B'\n  X = Fn z S B'\n  y \\<noteq> z\n  T = S\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<notin> fvs ?B;\n   ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\\<rbrakk>\n  \\<Longrightarrow> Fn ?x ?T ?A = Fn ?y ?T ?B\n\ngoal (1 subgoal):\n 1. X = Fn y T ([y \\<leftrightarrow> z] \\<cdot> B')", "by metis"], ["proof (state)\nthis:\n  X = Fn y T ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. y \\<noteq> z \\<and>\n    T = S \\<and>\n    y \\<notin> fvs B \\<and>\n    A = [y \\<leftrightarrow> z] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  X = Fn y T ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "using *"], ["proof (prove)\nusing this:\n  X = Fn y T ([y \\<leftrightarrow> z] \\<cdot> B')\n  substitutes A x M ([y \\<leftrightarrow> z] \\<cdot> B')\n\ngoal (1 subgoal):\n 1. \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'", "by auto"], ["proof (state)\nthis:\n  \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n\ngoal (8 subgoals):\n 1. substitutes (Fn y T A) x M X\n 2. \\<lbrakk>Fn y T A = Unit; X = Unit; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 3. \\<lbrakk>Fn y T A = Var x; X = M; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 4. \\<And>xa.\n       \\<lbrakk>Fn y T A = Var xa; X = Var xa; xa \\<noteq> x;\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = App Aa B; X = App A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Fst P; X = Fst P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Snd P; X = Snd P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. substitutes (Fn y T A) x M X\n 2. \\<lbrakk>Fn y T A = Unit; X = Unit; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 3. \\<lbrakk>Fn y T A = Var x; X = M; substitutes (Fn y T A) x M X;\n     y \\<noteq> x; y \\<notin> fvs M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. substitutes A x M A' \\<and> X = Fn y T A'\n 4. \\<And>xa.\n       \\<lbrakk>Fn y T A = Var xa; X = Var xa; xa \\<noteq> x;\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = App Aa B; X = App A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn y T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes B x M B'; substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Fst P; X = Fst P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn y T A = Snd P; X = Snd P'; substitutes P x M P';\n        substitutes (Fn y T A) x M X; y \\<noteq> x;\n        y \\<notin> fvs M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            substitutes A x M A' \\<and> X = Fn y T A'", "qed (\n  metis assms(1),\n  metis unit_not_fn,\n  metis var_not_fn,\n  metis var_not_fn,\n  metis app_not_fn,\n  metis fn_not_pair,\n  metis fn_not_fst,\n  metis fn_not_snd\n)"], ["", "inductive_cases substitutes_pairE': \"substitutes (Pair A B) x M X\""], ["", "lemma substitutes_pairE:\n  assumes \"substitutes (Pair A B) x M X\"\n  shows \"\\<exists>A' B'. substitutes A x M A' \\<and> substitutes B x M B' \\<and> X = Pair A' B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       substitutes A x M A' \\<and>\n       substitutes B x M B' \\<and> X = SimplyTyped.Pair A' B'", "proof(cases rule: substitutes_pairE'[where A=A and B=B and x=x and M=M and X=X])"], ["proof (state)\ngoal (9 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<lbrakk>SimplyTyped.Pair A B = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 3. \\<lbrakk>SimplyTyped.Pair A B = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 4. \\<And>xa.\n       \\<lbrakk>SimplyTyped.Pair A B = Var xa; X = Var xa;\n        xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B';\n        substitutes Aa x M A'; substitutes Ba x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 6. \\<And>y Aa A' T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn y T Aa; X = Fn y T A';\n        x \\<noteq> y; y \\<notin> fvs M; substitutes Aa x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 7. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes Ba x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'", "case (7 A A' B B')"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  X = SimplyTyped.Pair A' B'\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (9 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<lbrakk>SimplyTyped.Pair A B = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 3. \\<lbrakk>SimplyTyped.Pair A B = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 4. \\<And>xa.\n       \\<lbrakk>SimplyTyped.Pair A B = Var xa; X = Var xa;\n        xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B';\n        substitutes Aa x M A'; substitutes Ba x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 6. \\<And>y Aa A' T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn y T Aa; X = Fn y T A';\n        x \\<noteq> y; y \\<notin> fvs M; substitutes Aa x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 7. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; substitutes Aa x M A';\n        substitutes Ba x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'", "thus ?thesis"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  X = SimplyTyped.Pair A' B'\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       substitutes A x M A' \\<and>\n       substitutes B x M B' \\<and> X = SimplyTyped.Pair A' B'", "using trm_simp(5) trm_simp(6)"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  X = SimplyTyped.Pair A' B'\n  substitutes A x M A'\n  substitutes B x M B'\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?A = ?C\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?B = ?D\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       substitutes A x M A' \\<and>\n       substitutes B x M B' \\<and> X = SimplyTyped.Pair A' B'", "by blast"], ["proof (state)\nthis:\n  \\<exists>A' B'.\n     substitutes A x M A' \\<and>\n     substitutes B x M B' \\<and> X = SimplyTyped.Pair A' B'\n\ngoal (8 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<lbrakk>SimplyTyped.Pair A B = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 3. \\<lbrakk>SimplyTyped.Pair A B = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 4. \\<And>xa.\n       \\<lbrakk>SimplyTyped.Pair A B = Var xa; X = Var xa;\n        xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B';\n        substitutes Aa x M A'; substitutes Ba x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 6. \\<And>y Aa A' T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn y T Aa; X = Fn y T A';\n        x \\<noteq> y; y \\<notin> fvs M; substitutes Aa x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<lbrakk>SimplyTyped.Pair A B = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 3. \\<lbrakk>SimplyTyped.Pair A B = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         substitutes A x M A' \\<and>\n                         substitutes B x M B' \\<and>\n                         X = SimplyTyped.Pair A' B'\n 4. \\<And>xa.\n       \\<lbrakk>SimplyTyped.Pair A B = Var xa; X = Var xa;\n        xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B';\n        substitutes Aa x M A'; substitutes Ba x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 6. \\<And>y Aa A' T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn y T Aa; X = Fn y T A';\n        x \\<noteq> y; y \\<notin> fvs M; substitutes Aa x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P';\n        substitutes P x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            substitutes A x M A' \\<and>\n                            substitutes B x M B' \\<and>\n                            X = SimplyTyped.Pair A' B'", "qed (\n  metis assms,\n  metis unit_not_pair,\n  metis var_not_pair,\n  metis var_not_pair,\n  metis app_not_pair,\n  metis fn_not_pair,\n  metis pair_not_fst,\n  metis pair_not_snd\n)"], ["", "inductive_cases substitutes_fstE': \"substitutes (Fst P) x M X\""], ["", "lemma substitutes_fstE:\n  assumes \"substitutes (Fst P) x M X\"\n  shows \"\\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "proof(cases rule: substitutes_fstE'[where P=P and x=x and M=M and X=X])"], ["proof (state)\ngoal (9 subgoals):\n 1. substitutes (Fst P) x M X\n 2. \\<lbrakk>Fst P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 3. \\<lbrakk>Fst P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 4. \\<And>xa.\n       \\<lbrakk>Fst P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Fst P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Fst Pa; X = Fst P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 9. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "case (8 P P')"], ["proof (state)\nthis:\n  Fst P = Fst P\n  X = Fst P'\n  substitutes P x M P'\n\ngoal (9 subgoals):\n 1. substitutes (Fst P) x M X\n 2. \\<lbrakk>Fst P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 3. \\<lbrakk>Fst P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 4. \\<And>xa.\n       \\<lbrakk>Fst P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Fst P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Fst Pa; X = Fst P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 9. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  X = Fst P'\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "using trm_simp(7)"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  X = Fst P'\n  substitutes P x M P'\n  Fst ?P = Fst ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n\ngoal (8 subgoals):\n 1. substitutes (Fst P) x M X\n 2. \\<lbrakk>Fst P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 3. \\<lbrakk>Fst P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 4. \\<And>xa.\n       \\<lbrakk>Fst P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Fst P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. substitutes (Fst P) x M X\n 2. \\<lbrakk>Fst P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 3. \\<lbrakk>Fst P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 4. \\<And>xa.\n       \\<lbrakk>Fst P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Fst P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Fst P'", "qed (\n  metis assms,\n  metis unit_not_fst,\n  metis var_not_fst,\n  metis var_not_fst,\n  metis app_not_fst,\n  metis fn_not_fst,\n  metis pair_not_fst,\n  metis fst_not_snd\n)"], ["", "inductive_cases substitutes_sndE': \"substitutes (Snd P) x M X\""], ["", "lemma substitutes_sndE:\n  assumes \"substitutes (Snd P) x M X\"\n  shows \"\\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "proof(cases rule: substitutes_sndE'[where P=P and x=x and M=M and X=X])"], ["proof (state)\ngoal (9 subgoals):\n 1. substitutes (Snd P) x M X\n 2. \\<lbrakk>Snd P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 3. \\<lbrakk>Snd P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 4. \\<And>xa.\n       \\<lbrakk>Snd P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Snd P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 9. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Snd Pa; X = Snd P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "case (9 P P')"], ["proof (state)\nthis:\n  Snd P = Snd P\n  X = Snd P'\n  substitutes P x M P'\n\ngoal (9 subgoals):\n 1. substitutes (Snd P) x M X\n 2. \\<lbrakk>Snd P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 3. \\<lbrakk>Snd P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 4. \\<And>xa.\n       \\<lbrakk>Snd P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Snd P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 9. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Snd Pa; X = Snd P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "thus ?thesis"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  X = Snd P'\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "using trm_simp(8)"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  X = Snd P'\n  substitutes P x M P'\n  Snd ?P = Snd ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "by blast"], ["proof (state)\nthis:\n  \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n\ngoal (8 subgoals):\n 1. substitutes (Snd P) x M X\n 2. \\<lbrakk>Snd P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 3. \\<lbrakk>Snd P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 4. \\<And>xa.\n       \\<lbrakk>Snd P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Snd P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. substitutes (Snd P) x M X\n 2. \\<lbrakk>Snd P = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 3. \\<lbrakk>Snd P = Var x; X = M\\<rbrakk>\n    \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 4. \\<And>xa.\n       \\<lbrakk>Snd P = Var xa; X = Var xa; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; substitutes A x M A';\n        substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 6. \\<And>y A A' T.\n       \\<lbrakk>Snd P = Fn y T A; X = Fn y T A'; x \\<noteq> y;\n        y \\<notin> fvs M; substitutes A x M A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 7. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'\n 8. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; substitutes Pa x M P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>P'. substitutes P x M P' \\<and> X = Snd P'", "qed (\n  metis assms,\n  metis unit_not_snd,\n  metis var_not_snd,\n  metis var_not_snd,\n  metis app_not_snd,\n  metis fn_not_snd,\n  metis pair_not_snd,\n  metis fst_not_snd\n)"], ["", "lemma substitutes_total:\n  shows \"\\<exists>X. substitutes A x M X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes A x M X", "proof(induction A rule: trm_strong_induct[where S=\"{x} \\<union> fvs M\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<exists>X. substitutes Unit x M X\n 2. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 4. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 7. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X\n 8. finite ({x} \\<union> fvs M)", "show \"finite ({x} \\<union> fvs M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({x} \\<union> fvs M)", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({x} \\<union> fvs M)", "by auto"], ["proof (state)\nthis:\n  finite ({x} \\<union> fvs M)\n\ngoal (7 subgoals):\n 1. \\<exists>X. substitutes Unit x M X\n 2. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 4. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 7. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<exists>X. substitutes Unit x M X\n 2. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 4. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 7. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<exists>X. substitutes Unit x M X\n 2. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 4. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 7. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "obtain X :: \"'a trm\" where \"X = Unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = Unit \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = Unit\n\ngoal (7 subgoals):\n 1. \\<exists>X. substitutes Unit x M X\n 2. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 4. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 7. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  X = Unit\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes Unit x M X", "using substitutes.unit"], ["proof (prove)\nusing this:\n  X = Unit\n  substitutes Unit ?y ?M Unit\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes Unit x M X", "by metis"], ["proof (state)\nthis:\n  \\<exists>X. substitutes Unit x M X\n\ngoal (6 subgoals):\n 1. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 3. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 3. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case (2 y)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 3. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "consider \"x = y\" | \"x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (6 subgoals):\n 1. \\<And>xa. \\<exists>X. substitutes (Var xa) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 3. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 6. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (Var y) x M X", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X\n 2. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "case 1"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X\n 2. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "obtain X where \"X = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = M \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = M\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X\n 2. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "hence \"substitutes (Var y) x M X\""], ["proof (prove)\nusing this:\n  X = M\n\ngoal (1 subgoal):\n 1. substitutes (Var y) x M X", "using \\<open>x = y\\<close> substitutes.var1"], ["proof (prove)\nusing this:\n  X = M\n  x = y\n  ?x = ?y \\<Longrightarrow> substitutes (Var ?x) ?y ?M ?M\n\ngoal (1 subgoal):\n 1. substitutes (Var y) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (Var y) x M X\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X\n 2. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "thus ?thesis"], ["proof (prove)\nusing this:\n  substitutes (Var y) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (Var y) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (Var y) x M X\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "obtain X where \"X = (Var y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = Var y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = Var y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "hence \"substitutes (Var y) x M X\""], ["proof (prove)\nusing this:\n  X = Var y\n\ngoal (1 subgoal):\n 1. substitutes (Var y) x M X", "using \\<open>x \\<noteq> y\\<close> substitutes.var2"], ["proof (prove)\nusing this:\n  X = Var y\n  x \\<noteq> y\n  ?x \\<noteq> ?y \\<Longrightarrow> substitutes (Var ?x) ?y ?M (Var ?x)\n\ngoal (1 subgoal):\n 1. substitutes (Var y) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (Var y) x M X\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<exists>X. substitutes (Var y) x M X", "thus ?thesis"], ["proof (prove)\nusing this:\n  substitutes (Var y) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (Var y) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (Var y) x M X\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (Var y) x M X\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 2. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 2. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case (3 A B)"], ["proof (state)\nthis:\n  \\<exists>X. substitutes A x M X\n  \\<exists>X. substitutes B x M X\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 2. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>X. substitutes A x M X\n  \\<exists>X. substitutes B x M X", "obtain A' B' where A': \"substitutes A x M A'\" and B': \"substitutes B x M B'\""], ["proof (prove)\nusing this:\n  \\<exists>X. substitutes A x M X\n  \\<exists>X. substitutes B x M X\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 2. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "obtain X where \"X = App A' B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = App A' B' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = App A' B'\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 2. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "hence \"substitutes (App A B) x M X\""], ["proof (prove)\nusing this:\n  X = App A' B'\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M X", "using A' B' substitutes.app"], ["proof (prove)\nusing this:\n  X = App A' B'\n  substitutes A x M A'\n  substitutes B x M B'\n  \\<lbrakk>substitutes ?A ?x ?M ?A'; substitutes ?B ?x ?M ?B'\\<rbrakk>\n  \\<Longrightarrow> substitutes (App ?A ?B) ?x ?M (App ?A' ?B')\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (App A B) x M X\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (App A B) x M X\n 2. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 5. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes (App A B) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (App A B) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (App A B) x M X\n\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case (4 y T A)"], ["proof (state)\nthis:\n  y \\<notin> {x} \\<union> fvs M\n  \\<exists>X. substitutes A x M X\n\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  y \\<notin> {x} \\<union> fvs M\n  \\<exists>X. substitutes A x M X", "obtain A' where A': \"substitutes A x M A'\""], ["proof (prove)\nusing this:\n  y \\<notin> {x} \\<union> fvs M\n  \\<exists>X. substitutes A x M X\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        substitutes A x M A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  substitutes A x M A'\n\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from \\<open>y \\<notin> ({x} \\<union> fvs M)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> {x} \\<union> fvs M", "have \"y \\<noteq> x\" \"y \\<notin> fvs M\""], ["proof (prove)\nusing this:\n  y \\<notin> {x} \\<union> fvs M\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& y \\<notin> fvs M", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<notin> fvs M\n\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "obtain X where \"X = Fn y T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = Fn y T A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = Fn y T A'\n\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "hence \"substitutes (Fn y T A) x M X\""], ["proof (prove)\nusing this:\n  X = Fn y T A'\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M X", "using substitutes.fn \\<open>y \\<noteq> x\\<close> \\<open>y \\<notin> fvs M\\<close> A'"], ["proof (prove)\nusing this:\n  X = Fn y T A'\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M;\n   substitutes ?A ?x ?M ?A'\\<rbrakk>\n  \\<Longrightarrow> substitutes (Fn ?y ?T ?A) ?x ?M (Fn ?y ?T ?A')\n  y \\<noteq> x\n  y \\<notin> fvs M\n  substitutes A x M A'\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (Fn y T A) x M X\n\ngoal (4 subgoals):\n 1. \\<And>xa T A.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<exists>X. substitutes A x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. substitutes (Fn xa T A) x M X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 4. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (Fn y T A) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (Fn y T A) x M X\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case (5 A B)"], ["proof (state)\nthis:\n  \\<exists>X. substitutes A x M X\n  \\<exists>X. substitutes B x M X\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>X. substitutes A x M X\n  \\<exists>X. substitutes B x M X", "obtain A' B' where \"substitutes A x M A'\" \"substitutes B x M B'\""], ["proof (prove)\nusing this:\n  \\<exists>X. substitutes A x M X\n  \\<exists>X. substitutes B x M X\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>substitutes A x M A'; substitutes B x M B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  substitutes A x M A'\n  substitutes B x M B'", "obtain X where \"X = Pair A' B'\""], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (1 subgoal):\n 1. (\\<And>X.\n        X = SimplyTyped.Pair A' B' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = SimplyTyped.Pair A' B'\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "hence \"substitutes (Pair A B) x M X\""], ["proof (prove)\nusing this:\n  X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M X", "using substitutes.pair \\<open>substitutes A x M A'\\<close> \\<open>substitutes B x M B'\\<close>"], ["proof (prove)\nusing this:\n  X = SimplyTyped.Pair A' B'\n  \\<lbrakk>substitutes ?A ?x ?M ?A'; substitutes ?B ?x ?M ?B'\\<rbrakk>\n  \\<Longrightarrow> substitutes (SimplyTyped.Pair ?A ?B) ?x ?M\n                     (SimplyTyped.Pair ?A' ?B')\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (SimplyTyped.Pair A B) x M X\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. substitutes A x M X;\n        \\<exists>X. substitutes B x M X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X.\n                            substitutes (SimplyTyped.Pair A B) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 3. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes (SimplyTyped.Pair A B) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (SimplyTyped.Pair A B) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (SimplyTyped.Pair A B) x M X\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case (6 P)"], ["proof (state)\nthis:\n  \\<exists>X. substitutes P x M X\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>X. substitutes P x M X", "obtain P' where \"substitutes P x M P'\""], ["proof (prove)\nusing this:\n  \\<exists>X. substitutes P x M X\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        substitutes P x M P' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  substitutes P x M P'\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  substitutes P x M P'", "obtain X where \"X = Fst P'\""], ["proof (prove)\nusing this:\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. (\\<And>X. X = Fst P' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = Fst P'\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "hence \"substitutes (Fst P) x M X\""], ["proof (prove)\nusing this:\n  X = Fst P'\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M X", "using substitutes.fst \\<open>substitutes P x M P'\\<close>"], ["proof (prove)\nusing this:\n  X = Fst P'\n  substitutes ?P ?x ?M ?P' \\<Longrightarrow>\n  substitutes (Fst ?P) ?x ?M (Fst ?P')\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (Fst P) x M X\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Fst A) x M X\n 2. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes (Fst P) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (Fst P) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (Fst P) x M X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "case (7 P)"], ["proof (state)\nthis:\n  \\<exists>X. substitutes P x M X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>X. substitutes P x M X", "obtain P' where \"substitutes P x M P'\""], ["proof (prove)\nusing this:\n  \\<exists>X. substitutes P x M X\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        substitutes P x M P' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "from this"], ["proof (chain)\npicking this:\n  substitutes P x M P'", "obtain X where \"X = Snd P'\""], ["proof (prove)\nusing this:\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. (\\<And>X. X = Snd P' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = Snd P'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "hence \"substitutes (Snd P) x M X\""], ["proof (prove)\nusing this:\n  X = Snd P'\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M X", "using substitutes.snd \\<open>substitutes P x M P'\\<close>"], ["proof (prove)\nusing this:\n  X = Snd P'\n  substitutes ?P ?x ?M ?P' \\<Longrightarrow>\n  substitutes (Snd ?P) ?x ?M (Snd ?P')\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M X", "by metis"], ["proof (state)\nthis:\n  substitutes (Snd P) x M X\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<exists>X. substitutes A x M X \\<Longrightarrow>\n       \\<exists>X. substitutes (Snd A) x M X", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes (Snd P) x M X\n\ngoal (1 subgoal):\n 1. \\<exists>X. substitutes (Snd P) x M X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. substitutes (Snd P) x M X\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma substitutes_unique:\n  assumes \"substitutes A x M B\" \"substitutes A x M C\"\n  shows \"B = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B = C", "using assms"], ["proof (prove)\nusing this:\n  substitutes A x M B\n  substitutes A x M C\n\ngoal (1 subgoal):\n 1. B = C", "proof(induction A arbitrary: B C rule: trm_strong_induct[where S=\"{x} \\<union> fvs M\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>B C.\n       \\<lbrakk>substitutes Unit x M B; substitutes Unit x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 7. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 8. finite ({x} \\<union> fvs M)", "show \"finite ({x} \\<union> fvs M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({x} \\<union> fvs M)", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({x} \\<union> fvs M)", "by auto"], ["proof (state)\nthis:\n  finite ({x} \\<union> fvs M)\n\ngoal (7 subgoals):\n 1. \\<And>B C.\n       \\<lbrakk>substitutes Unit x M B; substitutes Unit x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 7. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>B C.\n       \\<lbrakk>substitutes Unit x M B; substitutes Unit x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 7. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case 1"], ["proof (state)\nthis:\n  substitutes Unit x M B\n  substitutes Unit x M C\n\ngoal (7 subgoals):\n 1. \\<And>B C.\n       \\<lbrakk>substitutes Unit x M B; substitutes Unit x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 7. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes Unit x M B\n  substitutes Unit x M C\n\ngoal (1 subgoal):\n 1. B = C", "using substitutes_unitE"], ["proof (prove)\nusing this:\n  substitutes Unit x M B\n  substitutes Unit x M C\n  substitutes Unit ?y ?M ?X \\<Longrightarrow> ?X = Unit\n\ngoal (1 subgoal):\n 1. B = C", "by metis"], ["proof (state)\nthis:\n  B = C\n\ngoal (6 subgoals):\n 1. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 5. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 5. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case (2 y)"], ["proof (state)\nthis:\n  substitutes (Var y) x M B\n  substitutes (Var y) x M C\n\ngoal (6 subgoals):\n 1. \\<And>xa B C.\n       \\<lbrakk>substitutes (Var xa) x M B;\n        substitutes (Var xa) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 5. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 6. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  substitutes (Var y) x M B\n  substitutes (Var y) x M C\n\ngoal (1 subgoal):\n 1. B = C", "using substitutes_varE"], ["proof (prove)\nusing this:\n  substitutes (Var y) x M B\n  substitutes (Var y) x M C\n  substitutes (Var ?x) ?y ?M ?X \\<Longrightarrow>\n  ?x = ?y \\<and> ?M = ?X \\<or> ?x \\<noteq> ?y \\<and> ?X = Var ?x\n\ngoal (1 subgoal):\n 1. B = C", "by metis"], ["proof (state)\nthis:\n  B = C\n\ngoal (5 subgoals):\n 1. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 2. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 2. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case (3 X Y)"], ["proof (state)\nthis:\n  \\<lbrakk>substitutes X x M ?B; substitutes X x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  \\<lbrakk>substitutes Y x M ?B; substitutes Y x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (App X Y) x M B\n  substitutes (App X Y) x M C\n\ngoal (5 subgoals):\n 1. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (App A B) x M Ba; substitutes (App A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 2. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 5. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes X x M ?B; substitutes X x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  \\<lbrakk>substitutes Y x M ?B; substitutes Y x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (App X Y) x M B\n  substitutes (App X Y) x M C\n\ngoal (1 subgoal):\n 1. B = C", "using substitutes_appE"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes X x M ?B; substitutes X x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  \\<lbrakk>substitutes Y x M ?B; substitutes Y x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (App X Y) x M B\n  substitutes (App X Y) x M C\n  substitutes (App ?A ?B) ?x ?M ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     substitutes ?A ?x ?M A' \\<and>\n     substitutes ?B ?x ?M B' \\<and> ?X = App A' B'\n\ngoal (1 subgoal):\n 1. B = C", "by metis"], ["proof (state)\nthis:\n  B = C\n\ngoal (4 subgoals):\n 1. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case (4 y T A)"], ["proof (state)\nthis:\n  y \\<notin> {x} \\<union> fvs M\n  \\<lbrakk>substitutes A x M ?B; substitutes A x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Fn y T A) x M B\n  substitutes (Fn y T A) x M C\n\ngoal (4 subgoals):\n 1. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "hence \"y \\<noteq> x\" and \"y \\<notin> fvs M\""], ["proof (prove)\nusing this:\n  y \\<notin> {x} \\<union> fvs M\n  \\<lbrakk>substitutes A x M ?B; substitutes A x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Fn y T A) x M B\n  substitutes (Fn y T A) x M C\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& y \\<notin> fvs M", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n  y \\<notin> fvs M\n\ngoal (4 subgoals):\n 1. \\<And>xa T A B C.\n       \\<lbrakk>xa \\<notin> {x} \\<union> fvs M;\n        \\<And>B C.\n           \\<lbrakk>substitutes A x M B; substitutes A x M C\\<rbrakk>\n           \\<Longrightarrow> B = C;\n        substitutes (Fn xa T A) x M B;\n        substitutes (Fn xa T A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 4. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. B = C", "using 4 substitutes_fnE"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<notin> fvs M\n  y \\<notin> {x} \\<union> fvs M\n  \\<lbrakk>substitutes A x M ?B; substitutes A x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Fn y T A) x M B\n  substitutes (Fn y T A) x M C\n  \\<lbrakk>substitutes (Fn ?y ?T ?A) ?x ?M ?X; ?y \\<noteq> ?x;\n   ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A'.\n                       substitutes ?A ?x ?M A' \\<and> ?X = Fn ?y ?T A'\n\ngoal (1 subgoal):\n 1. B = C", "by metis"], ["proof (state)\nthis:\n  B = C\n\ngoal (3 subgoals):\n 1. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 2. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 2. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case (5 A B C D)"], ["proof (state)\nthis:\n  \\<lbrakk>substitutes A x M ?B; substitutes A x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  \\<lbrakk>substitutes B x M ?B; substitutes B x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (SimplyTyped.Pair A B) x M C\n  substitutes (SimplyTyped.Pair A B) x M D\n\ngoal (3 subgoals):\n 1. \\<And>A B Ba C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        \\<And>Ba C.\n           \\<lbrakk>substitutes B x M Ba; substitutes B x M C\\<rbrakk>\n           \\<Longrightarrow> Ba = C;\n        substitutes (SimplyTyped.Pair A B) x M Ba;\n        substitutes (SimplyTyped.Pair A B) x M C\\<rbrakk>\n       \\<Longrightarrow> Ba = C\n 2. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 3. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes A x M ?B; substitutes A x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  \\<lbrakk>substitutes B x M ?B; substitutes B x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (SimplyTyped.Pair A B) x M C\n  substitutes (SimplyTyped.Pair A B) x M D\n\ngoal (1 subgoal):\n 1. C = D", "using substitutes_pairE"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes A x M ?B; substitutes A x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  \\<lbrakk>substitutes B x M ?B; substitutes B x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (SimplyTyped.Pair A B) x M C\n  substitutes (SimplyTyped.Pair A B) x M D\n  substitutes (SimplyTyped.Pair ?A ?B) ?x ?M ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     substitutes ?A ?x ?M A' \\<and>\n     substitutes ?B ?x ?M B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. C = D", "by metis"], ["proof (state)\nthis:\n  C = D\n\ngoal (2 subgoals):\n 1. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case (6 P Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>substitutes P x M ?B; substitutes P x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Fst P) x M Q\n  substitutes (Fst P) x M R\n\ngoal (2 subgoals):\n 1. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Fst A) x M B; substitutes (Fst A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C\n 2. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes P x M ?B; substitutes P x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Fst P) x M Q\n  substitutes (Fst P) x M R\n\ngoal (1 subgoal):\n 1. Q = R", "using substitutes_fstE"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes P x M ?B; substitutes P x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Fst P) x M Q\n  substitutes (Fst P) x M R\n  substitutes (Fst ?P) ?x ?M ?X \\<Longrightarrow>\n  \\<exists>P'. substitutes ?P ?x ?M P' \\<and> ?X = Fst P'\n\ngoal (1 subgoal):\n 1. Q = R", "by metis"], ["proof (state)\nthis:\n  Q = R\n\ngoal (1 subgoal):\n 1. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "case (7 P Q R)"], ["proof (state)\nthis:\n  \\<lbrakk>substitutes P x M ?B; substitutes P x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Snd P) x M Q\n  substitutes (Snd P) x M R\n\ngoal (1 subgoal):\n 1. \\<And>A B C.\n       \\<lbrakk>\\<And>B C.\n                   \\<lbrakk>substitutes A x M B;\n                    substitutes A x M C\\<rbrakk>\n                   \\<Longrightarrow> B = C;\n        substitutes (Snd A) x M B; substitutes (Snd A) x M C\\<rbrakk>\n       \\<Longrightarrow> B = C", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes P x M ?B; substitutes P x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Snd P) x M Q\n  substitutes (Snd P) x M R\n\ngoal (1 subgoal):\n 1. Q = R", "using substitutes_sndE"], ["proof (prove)\nusing this:\n  \\<lbrakk>substitutes P x M ?B; substitutes P x M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n  substitutes (Snd P) x M Q\n  substitutes (Snd P) x M R\n  substitutes (Snd ?P) ?x ?M ?X \\<Longrightarrow>\n  \\<exists>P'. substitutes ?P ?x ?M P' \\<and> ?X = Snd P'\n\ngoal (1 subgoal):\n 1. Q = R", "by metis"], ["proof (state)\nthis:\n  Q = R\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma substitutes_function:\n  shows \"\\<exists>! X. substitutes A x M X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!X. substitutes A x M X", "using substitutes_total substitutes_unique"], ["proof (prove)\nusing this:\n  \\<exists>X. substitutes ?A ?x ?M X\n  \\<lbrakk>substitutes ?A ?x ?M ?B; substitutes ?A ?x ?M ?C\\<rbrakk>\n  \\<Longrightarrow> ?B = ?C\n\ngoal (1 subgoal):\n 1. \\<exists>!X. substitutes A x M X", "by metis"], ["", "definition subst :: \"'a trm \\<Rightarrow> 'a \\<Rightarrow> 'a trm \\<Rightarrow> 'a trm\" (\"_[_ ::= _]\") where\n  \"subst A x M \\<equiv> (THE X. substitutes A x M X)\""], ["", "lemma subst_simp_unit:\n  shows \"Unit[x ::= M] = Unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unit[x ::= M] = Unit", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes Unit x M X) = Unit", "by(rule, metis substitutes.unit, metis substitutes_function substitutes.unit)"], ["", "lemma subst_simp_var1:\n  shows \"(Var x)[x ::= M] = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x[x ::= M] = M", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (Var x) x M X) = M", "by(rule, metis substitutes.var1, metis substitutes_function substitutes.var1)"], ["", "lemma subst_simp_var2:\n  assumes \"x \\<noteq> y\"\n  shows \"(Var x)[y ::= M] = Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x[y ::= M] = Var x", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (Var x) y M X) = Var x", "by(\n  rule,\n  metis substitutes.var2 assms,\n  metis substitutes_function substitutes.var2 assms\n)"], ["", "lemma subst_simp_app:\n  shows \"(App A B)[x ::= M] = App (A[x ::= M]) (B[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B[x ::= M] = App A[x ::= M] B[x ::= M]", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (App A B) x M X) =\n    App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "obtain A' B' where A': \"A' = (A[x ::= M])\" and B': \"B' = (B[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A' = A[x ::= M]; B' = B[x ::= M]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A' = A[x ::= M]\n  B' = B[x ::= M]\n\ngoal (2 subgoals):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "hence \"substitutes A x M A'\" \"substitutes B x M B'\""], ["proof (prove)\nusing this:\n  A' = A[x ::= M]\n  B' = B[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes A x M A' &&& substitutes B x M B'", "unfolding subst_def"], ["proof (prove)\nusing this:\n  A' = (THE X. substitutes A x M X)\n  B' = (THE X. substitutes B x M X)\n\ngoal (1 subgoal):\n 1. substitutes A x M A' &&& substitutes B x M B'", "using substitutes_function theI"], ["proof (prove)\nusing this:\n  A' = (THE X. substitutes A x M X)\n  B' = (THE X. substitutes B x M X)\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>?P ?a; \\<And>x. ?P x \\<Longrightarrow> x = ?a\\<rbrakk>\n  \\<Longrightarrow> ?P (THE x. ?P x)\n\ngoal (1 subgoal):\n 1. substitutes A x M A' &&& substitutes B x M B'", "by metis+"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (2 subgoals):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "hence \"substitutes (App A B) x M (App A' B')\""], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M (App A' B')", "using substitutes.app"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  \\<lbrakk>substitutes ?A ?x ?M ?A'; substitutes ?B ?x ?M ?B'\\<rbrakk>\n  \\<Longrightarrow> substitutes (App ?A ?B) ?x ?M (App ?A' ?B')\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M (App A' B')", "by metis"], ["proof (state)\nthis:\n  substitutes (App A B) x M (App A' B')\n\ngoal (2 subgoals):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "thus *: \"substitutes (App A B) x M (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\""], ["proof (prove)\nusing this:\n  substitutes (App A B) x M (App A' B')\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))", "using A' B'"], ["proof (prove)\nusing this:\n  substitutes (App A B) x M (App A' B')\n  A' = A[x ::= M]\n  B' = B[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))", "unfolding subst_def"], ["proof (prove)\nusing this:\n  substitutes (App A B) x M (App A' B')\n  A' = (THE X. substitutes A x M X)\n  B' = (THE X. substitutes B x M X)\n\ngoal (1 subgoal):\n 1. substitutes (App A B) x M\n     (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))", "by metis"], ["proof (state)\nthis:\n  substitutes (App A B) x M\n   (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "assume \"substitutes (App A B) x M X\""], ["proof (state)\nthis:\n  substitutes (App A B) x M X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (App A B) x M X \\<Longrightarrow>\n       X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "thus \"X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)\""], ["proof (prove)\nusing this:\n  substitutes (App A B) x M X\n\ngoal (1 subgoal):\n 1. X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "using substitutes_function *"], ["proof (prove)\nusing this:\n  substitutes (App A B) x M X\n  \\<exists>!X. substitutes ?A ?x ?M X\n  substitutes (App A B) x M\n   (App (THE X. substitutes A x M X) (THE X. substitutes B x M X))\n\ngoal (1 subgoal):\n 1. X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)", "by metis"], ["proof (state)\nthis:\n  X = App (THE X. substitutes A x M X) (THE X. substitutes B x M X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_simp_fn:\n  assumes \"x \\<noteq> y\" \"y \\<notin> fvs M\"\n  shows \"(Fn y T A)[x ::= M] = Fn y T (A[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn y T A[x ::= M] = Fn y T A[x ::= M]", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (Fn y T A) x M X) =\n    Fn y T (THE X. substitutes A x M X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\n 2. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "obtain A' where A': \"A' = (A[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A'. A' = A[x ::= M] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A' = A[x ::= M]\n\ngoal (2 subgoals):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\n 2. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "hence \"substitutes A x M A'\""], ["proof (prove)\nusing this:\n  A' = A[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes A x M A'", "unfolding subst_def"], ["proof (prove)\nusing this:\n  A' = (THE X. substitutes A x M X)\n\ngoal (1 subgoal):\n 1. substitutes A x M A'", "using substitutes_function theI"], ["proof (prove)\nusing this:\n  A' = (THE X. substitutes A x M X)\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>?P ?a; \\<And>x. ?P x \\<Longrightarrow> x = ?a\\<rbrakk>\n  \\<Longrightarrow> ?P (THE x. ?P x)\n\ngoal (1 subgoal):\n 1. substitutes A x M A'", "by metis"], ["proof (state)\nthis:\n  substitutes A x M A'\n\ngoal (2 subgoals):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\n 2. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "hence \"substitutes (Fn y T A) x M (Fn y T A')\""], ["proof (prove)\nusing this:\n  substitutes A x M A'\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M (Fn y T A')", "using substitutes.fn assms"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M;\n   substitutes ?A ?x ?M ?A'\\<rbrakk>\n  \\<Longrightarrow> substitutes (Fn ?y ?T ?A) ?x ?M (Fn ?y ?T ?A')\n  x \\<noteq> y\n  y \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M (Fn y T A')", "by metis"], ["proof (state)\nthis:\n  substitutes (Fn y T A) x M (Fn y T A')\n\ngoal (2 subgoals):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\n 2. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "thus *: \"substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\""], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M (Fn y T A')\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))", "using A'"], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M (Fn y T A')\n  A' = A[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))", "unfolding subst_def"], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M (Fn y T A')\n  A' = (THE X. substitutes A x M X)\n\ngoal (1 subgoal):\n 1. substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))", "by metis"], ["proof (state)\nthis:\n  substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "assume \"substitutes (Fn y T A) x M X\""], ["proof (state)\nthis:\n  substitutes (Fn y T A) x M X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Fn y T A) x M X \\<Longrightarrow>\n       X = Fn y T (THE X. substitutes A x M X)", "thus \"X = Fn y T (THE X. substitutes A x M X)\""], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M X\n\ngoal (1 subgoal):\n 1. X = Fn y T (THE X. substitutes A x M X)", "using substitutes_function *"], ["proof (prove)\nusing this:\n  substitutes (Fn y T A) x M X\n  \\<exists>!X. substitutes ?A ?x ?M X\n  substitutes (Fn y T A) x M (Fn y T (THE X. substitutes A x M X))\n\ngoal (1 subgoal):\n 1. X = Fn y T (THE X. substitutes A x M X)", "by metis"], ["proof (state)\nthis:\n  X = Fn y T (THE X. substitutes A x M X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_simp_pair:\n  shows \"(Pair A B)[x ::= M] = Pair (A[x ::= M]) (B[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[x ::= M] = SimplyTyped.Pair A[x ::= M] B[x ::= M]", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (SimplyTyped.Pair A B) x M X) =\n    SimplyTyped.Pair (THE X. substitutes A x M X)\n     (THE X. substitutes B x M X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "obtain A' B' where A': \"A' = (A[x ::= M])\" and B': \"B' = (B[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A' = A[x ::= M]; B' = B[x ::= M]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A' = A[x ::= M]\n  B' = B[x ::= M]\n\ngoal (2 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "hence \"substitutes A x M A'\" \"substitutes B x M B'\""], ["proof (prove)\nusing this:\n  A' = A[x ::= M]\n  B' = B[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes A x M A' &&& substitutes B x M B'", "unfolding subst_def"], ["proof (prove)\nusing this:\n  A' = (THE X. substitutes A x M X)\n  B' = (THE X. substitutes B x M X)\n\ngoal (1 subgoal):\n 1. substitutes A x M A' &&& substitutes B x M B'", "using substitutes_function theI"], ["proof (prove)\nusing this:\n  A' = (THE X. substitutes A x M X)\n  B' = (THE X. substitutes B x M X)\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>?P ?a; \\<And>x. ?P x \\<Longrightarrow> x = ?a\\<rbrakk>\n  \\<Longrightarrow> ?P (THE x. ?P x)\n\ngoal (1 subgoal):\n 1. substitutes A x M A' &&& substitutes B x M B'", "by metis+"], ["proof (state)\nthis:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (2 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "hence \"substitutes (Pair A B) x M (Pair A' B')\""], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M (SimplyTyped.Pair A' B')", "using substitutes.pair"], ["proof (prove)\nusing this:\n  substitutes A x M A'\n  substitutes B x M B'\n  \\<lbrakk>substitutes ?A ?x ?M ?A'; substitutes ?B ?x ?M ?B'\\<rbrakk>\n  \\<Longrightarrow> substitutes (SimplyTyped.Pair ?A ?B) ?x ?M\n                     (SimplyTyped.Pair ?A' ?B')\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M (SimplyTyped.Pair A' B')", "by metis"], ["proof (state)\nthis:\n  substitutes (SimplyTyped.Pair A B) x M (SimplyTyped.Pair A' B')\n\ngoal (2 subgoals):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))\n 2. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "thus *: \"substitutes (Pair A B) x M (Pair (THE X. substitutes A x M X) (THE X. substitutes B x M X))\""], ["proof (prove)\nusing this:\n  substitutes (SimplyTyped.Pair A B) x M (SimplyTyped.Pair A' B')\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))", "using A' B'"], ["proof (prove)\nusing this:\n  substitutes (SimplyTyped.Pair A B) x M (SimplyTyped.Pair A' B')\n  A' = A[x ::= M]\n  B' = B[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))", "unfolding subst_def"], ["proof (prove)\nusing this:\n  substitutes (SimplyTyped.Pair A B) x M (SimplyTyped.Pair A' B')\n  A' = (THE X. substitutes A x M X)\n  B' = (THE X. substitutes B x M X)\n\ngoal (1 subgoal):\n 1. substitutes (SimplyTyped.Pair A B) x M\n     (SimplyTyped.Pair (THE X. substitutes A x M X)\n       (THE X. substitutes B x M X))", "by metis"], ["proof (state)\nthis:\n  substitutes (SimplyTyped.Pair A B) x M\n   (SimplyTyped.Pair (THE X. substitutes A x M X)\n     (THE X. substitutes B x M X))\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "assume \"substitutes (Pair A B) x M X\""], ["proof (state)\nthis:\n  substitutes (SimplyTyped.Pair A B) x M X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (SimplyTyped.Pair A B) x M X \\<Longrightarrow>\n       X =\n       SimplyTyped.Pair (THE X. substitutes A x M X)\n        (THE X. substitutes B x M X)", "thus \"X = Pair (THE X. substitutes A x M X) (THE X. substitutes B x M X)\""], ["proof (prove)\nusing this:\n  substitutes (SimplyTyped.Pair A B) x M X\n\ngoal (1 subgoal):\n 1. X =\n    SimplyTyped.Pair (THE X. substitutes A x M X)\n     (THE X. substitutes B x M X)", "using substitutes_function *"], ["proof (prove)\nusing this:\n  substitutes (SimplyTyped.Pair A B) x M X\n  \\<exists>!X. substitutes ?A ?x ?M X\n  substitutes (SimplyTyped.Pair A B) x M\n   (SimplyTyped.Pair (THE X. substitutes A x M X)\n     (THE X. substitutes B x M X))\n\ngoal (1 subgoal):\n 1. X =\n    SimplyTyped.Pair (THE X. substitutes A x M X)\n     (THE X. substitutes B x M X)", "by metis"], ["proof (state)\nthis:\n  X =\n  SimplyTyped.Pair (THE X. substitutes A x M X) (THE X. substitutes B x M X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_simp_fst:\n  shows \"(Fst P)[x ::= M] = Fst (P[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P[x ::= M] = Fst P[x ::= M]", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (Fst P) x M X) = Fst (THE X. substitutes P x M X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "obtain P' where P': \"P' = (P[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'. P' = P[x ::= M] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P' = P[x ::= M]\n\ngoal (2 subgoals):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "hence \"substitutes P x M P'\""], ["proof (prove)\nusing this:\n  P' = P[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes P x M P'", "unfolding subst_def"], ["proof (prove)\nusing this:\n  P' = (THE X. substitutes P x M X)\n\ngoal (1 subgoal):\n 1. substitutes P x M P'", "using substitutes_function theI"], ["proof (prove)\nusing this:\n  P' = (THE X. substitutes P x M X)\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>?P ?a; \\<And>x. ?P x \\<Longrightarrow> x = ?a\\<rbrakk>\n  \\<Longrightarrow> ?P (THE x. ?P x)\n\ngoal (1 subgoal):\n 1. substitutes P x M P'", "by metis"], ["proof (state)\nthis:\n  substitutes P x M P'\n\ngoal (2 subgoals):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "hence \"substitutes (Fst P) x M (Fst P')\""], ["proof (prove)\nusing this:\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M (Fst P')", "using substitutes.fst"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  substitutes ?P ?x ?M ?P' \\<Longrightarrow>\n  substitutes (Fst ?P) ?x ?M (Fst ?P')\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M (Fst P')", "by metis"], ["proof (state)\nthis:\n  substitutes (Fst P) x M (Fst P')\n\ngoal (2 subgoals):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "thus *: \"substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\""], ["proof (prove)\nusing this:\n  substitutes (Fst P) x M (Fst P')\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))", "using P'"], ["proof (prove)\nusing this:\n  substitutes (Fst P) x M (Fst P')\n  P' = P[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))", "unfolding subst_def"], ["proof (prove)\nusing this:\n  substitutes (Fst P) x M (Fst P')\n  P' = (THE X. substitutes P x M X)\n\ngoal (1 subgoal):\n 1. substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))", "by metis"], ["proof (state)\nthis:\n  substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "assume \"substitutes (Fst P) x M X\""], ["proof (state)\nthis:\n  substitutes (Fst P) x M X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Fst P) x M X \\<Longrightarrow>\n       X = Fst (THE X. substitutes P x M X)", "thus \"X = Fst (THE X. substitutes P x M X)\""], ["proof (prove)\nusing this:\n  substitutes (Fst P) x M X\n\ngoal (1 subgoal):\n 1. X = Fst (THE X. substitutes P x M X)", "using substitutes_function *"], ["proof (prove)\nusing this:\n  substitutes (Fst P) x M X\n  \\<exists>!X. substitutes ?A ?x ?M X\n  substitutes (Fst P) x M (Fst (THE X. substitutes P x M X))\n\ngoal (1 subgoal):\n 1. X = Fst (THE X. substitutes P x M X)", "by metis"], ["proof (state)\nthis:\n  X = Fst (THE X. substitutes P x M X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_simp_snd:\n  shows \"(Snd P)[x ::= M] = Snd (P[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P[x ::= M] = Snd P[x ::= M]", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE X. substitutes (Snd P) x M X) = Snd (THE X. substitutes P x M X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "obtain P' where P': \"P' = (P[x ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'. P' = P[x ::= M] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P' = P[x ::= M]\n\ngoal (2 subgoals):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "hence \"substitutes P x M P'\""], ["proof (prove)\nusing this:\n  P' = P[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes P x M P'", "unfolding subst_def"], ["proof (prove)\nusing this:\n  P' = (THE X. substitutes P x M X)\n\ngoal (1 subgoal):\n 1. substitutes P x M P'", "using substitutes_function theI"], ["proof (prove)\nusing this:\n  P' = (THE X. substitutes P x M X)\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>?P ?a; \\<And>x. ?P x \\<Longrightarrow> x = ?a\\<rbrakk>\n  \\<Longrightarrow> ?P (THE x. ?P x)\n\ngoal (1 subgoal):\n 1. substitutes P x M P'", "by metis"], ["proof (state)\nthis:\n  substitutes P x M P'\n\ngoal (2 subgoals):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "hence \"substitutes (Snd P) x M (Snd P')\""], ["proof (prove)\nusing this:\n  substitutes P x M P'\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M (Snd P')", "using substitutes.snd"], ["proof (prove)\nusing this:\n  substitutes P x M P'\n  substitutes ?P ?x ?M ?P' \\<Longrightarrow>\n  substitutes (Snd ?P) ?x ?M (Snd ?P')\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M (Snd P')", "by metis"], ["proof (state)\nthis:\n  substitutes (Snd P) x M (Snd P')\n\ngoal (2 subgoals):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\n 2. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "thus *: \"substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\""], ["proof (prove)\nusing this:\n  substitutes (Snd P) x M (Snd P')\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))", "using P'"], ["proof (prove)\nusing this:\n  substitutes (Snd P) x M (Snd P')\n  P' = P[x ::= M]\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))", "unfolding subst_def"], ["proof (prove)\nusing this:\n  substitutes (Snd P) x M (Snd P')\n  P' = (THE X. substitutes P x M X)\n\ngoal (1 subgoal):\n 1. substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))", "by metis"], ["proof (state)\nthis:\n  substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "fix X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "assume \"substitutes (Snd P) x M X\""], ["proof (state)\nthis:\n  substitutes (Snd P) x M X\n\ngoal (1 subgoal):\n 1. \\<And>X.\n       substitutes (Snd P) x M X \\<Longrightarrow>\n       X = Snd (THE X. substitutes P x M X)", "thus \"X = Snd (THE X. substitutes P x M X)\""], ["proof (prove)\nusing this:\n  substitutes (Snd P) x M X\n\ngoal (1 subgoal):\n 1. X = Snd (THE X. substitutes P x M X)", "using substitutes_function *"], ["proof (prove)\nusing this:\n  substitutes (Snd P) x M X\n  \\<exists>!X. substitutes ?A ?x ?M X\n  substitutes (Snd P) x M (Snd (THE X. substitutes P x M X))\n\ngoal (1 subgoal):\n 1. X = Snd (THE X. substitutes P x M X)", "by metis"], ["proof (state)\nthis:\n  X = Snd (THE X. substitutes P x M X)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_prm:\n  shows \"(\\<pi> \\<cdot> (M[z ::= N])) = ((\\<pi> \\<cdot> M)[\\<pi> $ z ::= \\<pi> \\<cdot> N])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> M[z ::= N] =\n    \\<pi> \\<cdot> M[\\<pi> $ z ::= \\<pi> \\<cdot> N]", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> (THE X. substitutes M z N X) =\n    (THE X. substitutes (\\<pi> \\<cdot> M) (\\<pi> $ z) (\\<pi> \\<cdot> N) X)", "using substitutes_prm substitutes_function the1_equality"], ["proof (prove)\nusing this:\n  substitutes ?A ?x ?M ?A' \\<Longrightarrow>\n  substitutes (?\\<pi> \\<cdot> ?A) (?\\<pi> $ ?x) (?\\<pi> \\<cdot> ?M)\n   (?\\<pi> \\<cdot> ?A')\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>\\<exists>!x. ?P x; ?P ?a\\<rbrakk>\n  \\<Longrightarrow> (THE x. ?P x) = ?a\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> (THE X. substitutes M z N X) =\n    (THE X. substitutes (\\<pi> \\<cdot> M) (\\<pi> $ z) (\\<pi> \\<cdot> N) X)", "by (metis (full_types))"], ["", "lemma subst_fvs:\n  shows \"fvs (M[z ::= N]) \\<subseteq> (fvs M - {z}) \\<union> fvs N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs M[z ::= N] \\<subseteq> fvs M - {z} \\<union> fvs N", "unfolding subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs (THE X. substitutes M z N X) \\<subseteq> fvs M - {z} \\<union> fvs N", "using substitutes_fvs substitutes_function theI2"], ["proof (prove)\nusing this:\n  substitutes ?A ?x ?M ?A' \\<Longrightarrow>\n  fvs ?A' \\<subseteq> fvs ?A - {?x} \\<union> fvs ?M\n  \\<exists>!X. substitutes ?A ?x ?M X\n  \\<lbrakk>?P ?a; \\<And>x. ?P x \\<Longrightarrow> x = ?a;\n   \\<And>x. ?P x \\<Longrightarrow> ?Q x\\<rbrakk>\n  \\<Longrightarrow> ?Q (THE x. ?P x)\n\ngoal (1 subgoal):\n 1. fvs (THE X. substitutes M z N X) \\<subseteq> fvs M - {z} \\<union> fvs N", "by metis"], ["", "lemma subst_free:\n  assumes \"y \\<notin> fvs M\"\n  shows \"M[y ::= N] = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M[y ::= N] = M", "using assms"], ["proof (prove)\nusing this:\n  y \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. M[y ::= N] = M", "proof(induction M rule: trm_strong_induct[where S=\"{y} \\<union> fvs N\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow> Unit[y ::= N] = Unit\n 2. \\<And>x. y \\<notin> fvs (Var x) \\<Longrightarrow> Var x[y ::= N] = Var x\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A\n 8. finite ({y} \\<union> fvs N)", "show \"finite ({y} \\<union> fvs N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({y} \\<union> fvs N)", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({y} \\<union> fvs N)", "by auto"], ["proof (state)\nthis:\n  finite ({y} \\<union> fvs N)\n\ngoal (7 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow> Unit[y ::= N] = Unit\n 2. \\<And>x. y \\<notin> fvs (Var x) \\<Longrightarrow> Var x[y ::= N] = Var x\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case 1"], ["proof (state)\nthis:\n  y \\<notin> fvs Unit\n\ngoal (7 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow> Unit[y ::= N] = Unit\n 2. \\<And>x. y \\<notin> fvs (Var x) \\<Longrightarrow> Var x[y ::= N] = Var x\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs Unit\n\ngoal (1 subgoal):\n 1. Unit[y ::= N] = Unit", "using subst_simp_unit"], ["proof (prove)\nusing this:\n  y \\<notin> fvs Unit\n  Unit[?x ::= ?M] = Unit\n\ngoal (1 subgoal):\n 1. Unit[y ::= N] = Unit", "by metis"], ["proof (state)\nthis:\n  Unit[y ::= N] = Unit\n\ngoal (6 subgoals):\n 1. \\<And>x. y \\<notin> fvs (Var x) \\<Longrightarrow> Var x[y ::= N] = Var x\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x. y \\<notin> fvs (Var x) \\<Longrightarrow> Var x[y ::= N] = Var x\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case (2 x)"], ["proof (state)\nthis:\n  y \\<notin> fvs (Var x)\n\ngoal (6 subgoals):\n 1. \\<And>x. y \\<notin> fvs (Var x) \\<Longrightarrow> Var x[y ::= N] = Var x\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Var x)\n\ngoal (1 subgoal):\n 1. Var x[y ::= N] = Var x", "using subst_simp_var2"], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Var x)\n  ?x \\<noteq> ?y \\<Longrightarrow> Var ?x[?y ::= ?M] = Var ?x\n\ngoal (1 subgoal):\n 1. Var x[y ::= N] = Var x", "by (simp add: fvs_simp)"], ["proof (state)\nthis:\n  Var x[y ::= N] = Var x\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case (3 A B)"], ["proof (state)\nthis:\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B\n  y \\<notin> fvs (App A B)\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N] = App A B\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B\n  y \\<notin> fvs (App A B)\n\ngoal (1 subgoal):\n 1. App A B[y ::= N] = App A B", "using subst_simp_app"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B\n  y \\<notin> fvs (App A B)\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App A B[y ::= N] = App A B", "by (simp add: fvs_simp)"], ["proof (state)\nthis:\n  App A B[y ::= N] = App A B\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case (4 x T A)"], ["proof (state)\nthis:\n  x \\<notin> {y} \\<union> fvs N\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs (Fn x T A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "hence \"y \\<noteq> x\" \"x \\<notin> fvs N\""], ["proof (prove)\nusing this:\n  x \\<notin> {y} \\<union> fvs N\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs (Fn x T A)\n\ngoal (1 subgoal):\n 1. y \\<noteq> x &&& x \\<notin> fvs N", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> x\n  x \\<notin> fvs N\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "have \"y \\<notin> fvs A - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> fvs A - {x}", "using \\<open>y \\<noteq> x\\<close> \\<open>y \\<notin> fvs (Fn x T A)\\<close> fvs_simp(4)"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  y \\<notin> fvs (Fn x T A)\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A - {x}", "by metis"], ["proof (state)\nthis:\n  y \\<notin> fvs A - {x}\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "hence \"y \\<notin> fvs A\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A - {x}\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A", "using \\<open>y \\<noteq> x\\<close>"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A - {x}\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A", "by auto"], ["proof (state)\nthis:\n  y \\<notin> fvs A\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "hence \"A[y ::= N] = A\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. A[y ::= N] = A", "using \"4.IH\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n\ngoal (1 subgoal):\n 1. A[y ::= N] = A", "by blast"], ["proof (state)\nthis:\n  A[y ::= N] = A\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y} \\<union> fvs N;\n        y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N] = Fn x T A\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  A[y ::= N] = A\n\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N] = Fn x T A", "using \\<open>y \\<noteq> x\\<close> \\<open>y \\<notin> fvs A\\<close> \\<open>x \\<notin> fvs N\\<close> subst_simp_fn"], ["proof (prove)\nusing this:\n  A[y ::= N] = A\n  y \\<noteq> x\n  y \\<notin> fvs A\n  x \\<notin> fvs N\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N] = Fn x T A", "by metis"], ["proof (state)\nthis:\n  Fn x T A[y ::= N] = Fn x T A\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case (5 A B)"], ["proof (state)\nthis:\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B;\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N] =\n                         SimplyTyped.Pair A B\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[y ::= N] = SimplyTyped.Pair A B", "using subst_simp_pair"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A\n  y \\<notin> fvs B \\<Longrightarrow> B[y ::= N] = B\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[y ::= N] = SimplyTyped.Pair A B", "by (simp add: fvs_simp)"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[y ::= N] = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case (6 P)"], ["proof (state)\nthis:\n  y \\<notin> fvs P \\<Longrightarrow> P[y ::= N] = P\n  y \\<notin> fvs (Fst P)\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N] = Fst A\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs P \\<Longrightarrow> P[y ::= N] = P\n  y \\<notin> fvs (Fst P)\n\ngoal (1 subgoal):\n 1. Fst P[y ::= N] = Fst P", "using subst_simp_fst"], ["proof (prove)\nusing this:\n  y \\<notin> fvs P \\<Longrightarrow> P[y ::= N] = P\n  y \\<notin> fvs (Fst P)\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Fst P[y ::= N] = Fst P", "by (simp add: fvs_simp)"], ["proof (state)\nthis:\n  Fst P[y ::= N] = Fst P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "case (7 P)"], ["proof (state)\nthis:\n  y \\<notin> fvs P \\<Longrightarrow> P[y ::= N] = P\n  y \\<notin> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow> A[y ::= N] = A;\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N] = Snd A", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs P \\<Longrightarrow> P[y ::= N] = P\n  y \\<notin> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. Snd P[y ::= N] = Snd P", "using subst_simp_snd"], ["proof (prove)\nusing this:\n  y \\<notin> fvs P \\<Longrightarrow> P[y ::= N] = P\n  y \\<notin> fvs (Snd P)\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Snd P[y ::= N] = Snd P", "by (simp add: fvs_simp)"], ["proof (state)\nthis:\n  Snd P[y ::= N] = Snd P\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma subst_swp:\n  assumes \"y \\<notin> fvs A\"\n  shows \"([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] = (A[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]", "using assms"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]", "proof(induction A rule: trm_strong_induct[where S=\"{y, z} \\<union> fvs M\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]\n 2. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]\n 8. finite ({y, z} \\<union> fvs M)", "show \"finite ({y, z} \\<union> fvs M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({y, z} \\<union> fvs M)", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({y, z} \\<union> fvs M)", "by auto"], ["proof (state)\nthis:\n  finite ({y, z} \\<union> fvs M)\n\ngoal (7 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]\n 2. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]\n 2. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case 1"], ["proof (state)\nthis:\n  y \\<notin> fvs Unit\n\ngoal (7 subgoals):\n 1. y \\<notin> fvs Unit \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]\n 2. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 5. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 7. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs Unit\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]", "using trm_prm_simp(1) subst_simp_unit"], ["proof (prove)\nusing this:\n  y \\<notin> fvs Unit\n  ?\\<pi> \\<cdot> Unit = Unit\n  Unit[?x ::= ?M] = Unit\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Unit[y ::= M] = Unit[z ::= M]\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case (2 x)"], ["proof (state)\nthis:\n  y \\<notin> fvs (Var x)\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Var x)\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "using fvs_simp(2)"], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Var x)\n  fvs (Var ?x) = {?x}\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by force"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "consider \"x = z\" | \"x \\<noteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = z \\<Longrightarrow> thesis;\n     x \\<noteq> z \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = z \\<Longrightarrow> ?thesis;\n   x \\<noteq> z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       y \\<notin> fvs (Var x) \\<Longrightarrow>\n       [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 4. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 6. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = z \\<Longrightarrow> ?thesis;\n   x \\<noteq> z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. x \\<noteq> z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "case 1"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n 2. x \\<noteq> z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = z\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "using subst_simp_var1 trm_prm_simp(2) prm_unit_action prm_unit_commutes"], ["proof (prove)\nusing this:\n  x = z\n  Var ?x[?x ::= ?M] = ?M\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n  [?a \\<leftrightarrow> ?b] $ ?a = ?b\n  [?a \\<leftrightarrow> ?b] = [?b \\<leftrightarrow> ?a]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "using subst_simp_var2 trm_prm_simp(2) prm_unit_inaction \\<open>y \\<noteq> x\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  ?x \\<noteq> ?y \\<Longrightarrow> Var ?x[?y ::= ?M] = Var ?x\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Var x[y ::= M] = Var x[z ::= M]\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case (3 A B)"], ["proof (state)\nthis:\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  y \\<notin> fvs B \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n  y \\<notin> fvs (App A B)\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "from \\<open>y \\<notin> fvs (App A B)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> fvs (App A B)", "have \"y \\<notin> fvs A\" \"y \\<notin> fvs B\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (App A B)\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A &&& y \\<notin> fvs B", "by (auto simp add: fvs_simp(3))"], ["proof (state)\nthis:\n  y \\<notin> fvs A\n  y \\<notin> fvs B\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (App A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] =\n                         App A B[z ::= M]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 3. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 5. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n  y \\<notin> fvs B\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] = App A B[z ::= M]", "using \"3.IH\" subst_simp_app trm_prm_simp(3)"], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n  y \\<notin> fvs B\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  y \\<notin> fvs B \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n  ?\\<pi> \\<cdot> App ?A ?B = App (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] = App A B[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> App A B[y ::= M] = App A B[z ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case (4 x T A)"], ["proof (state)\nthis:\n  x \\<notin> {y, z} \\<union> fvs M\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  y \\<notin> fvs (Fn x T A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence \"x \\<noteq> y\" \"x \\<noteq> z\" \"x \\<notin> fvs M\""], ["proof (prove)\nusing this:\n  x \\<notin> {y, z} \\<union> fvs M\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  y \\<notin> fvs (Fn x T A)\n\ngoal (1 subgoal):\n 1. x \\<noteq> y &&& x \\<noteq> z &&& x \\<notin> fvs M", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs M\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence \"y \\<notin> fvs A\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A", "using \\<open>y \\<notin> fvs (Fn x T A)\\<close> fvs_simp(4)"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs M\n  y \\<notin> fvs (Fn x T A)\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A", "by force"], ["proof (state)\nthis:\n  y \\<notin> fvs A\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence *: \"([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] = (A[z ::= M])\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]", "using \"4.IH\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "have \"([y \\<leftrightarrow> z] \\<cdot> Fn x T A)[y ::= M] = ((Fn ([y \\<leftrightarrow> z] $ x) T ([y \\<leftrightarrow> z] \\<cdot> A))[y ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n    Fn ([y \\<leftrightarrow> z] $ x) T\n     ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]", "using trm_prm_simp(4)"], ["proof (prove)\nusing this:\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n    Fn ([y \\<leftrightarrow> z] $ x) T\n     ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n  Fn ([y \\<leftrightarrow> z] $ x) T\n   ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "also"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n  Fn ([y \\<leftrightarrow> z] $ x) T\n   ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "have \"... = ((Fn x T ([y \\<leftrightarrow> z] \\<cdot> A))[y ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn ([y \\<leftrightarrow> z] $ x) T\n     ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n    Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]", "using prm_unit_inaction \\<open>x \\<noteq> y\\<close> \\<open>x \\<noteq> z\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. Fn ([y \\<leftrightarrow> z] $ x) T\n     ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n    Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]", "by metis"], ["proof (state)\nthis:\n  Fn ([y \\<leftrightarrow> z] $ x) T\n   ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n  Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "also"], ["proof (state)\nthis:\n  Fn ([y \\<leftrightarrow> z] $ x) T\n   ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n  Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "have \"... = Fn x T (([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n    Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M]", "using subst_simp_fn \\<open>x \\<noteq> y\\<close> \\<open>x \\<notin> fvs M\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  x \\<noteq> y\n  x \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n    Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M]", "by metis"], ["proof (state)\nthis:\n  Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n  Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "also"], ["proof (state)\nthis:\n  Fn x T ([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] =\n  Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "have \"... = Fn x T (A[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = Fn x T A[z ::= M]", "using *"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n\ngoal (1 subgoal):\n 1. Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = Fn x T A[z ::= M]", "by metis"], ["proof (state)\nthis:\n  Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = Fn x T A[z ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "also"], ["proof (state)\nthis:\n  Fn x T [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = Fn x T A[z ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "have \"... = ((Fn x T A)[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] = Fn x T A[z ::= M]", "using subst_simp_fn \\<open>x \\<noteq> z\\<close> \\<open>x \\<notin> fvs M\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  x \\<noteq> z\n  x \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] = Fn x T A[z ::= M]", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] = Fn x T A[z ::= M]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs M;\n        y \\<notin> fvs A \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fn x T A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] =\n                         Fn x T A[z ::= M]\n 2. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 4. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "finally"], ["proof (chain)\npicking this:\n  [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] = Fn x T A[z ::= M]", "show ?case"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] = Fn x T A[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] = Fn x T A[z ::= M]", "."], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Fn x T A[y ::= M] = Fn x T A[z ::= M]\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case (5 A B)"], ["proof (state)\nthis:\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  y \\<notin> fvs B \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "from \\<open>y \\<notin> fvs (Pair A B)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> fvs (SimplyTyped.Pair A B)", "have \"y \\<notin> fvs A\" \"y \\<notin> fvs B\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (SimplyTyped.Pair A B)\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs A &&& y \\<notin> fvs B", "by (auto simp add: fvs_simp(5))"], ["proof (state)\nthis:\n  y \\<notin> fvs A\n  y \\<notin> fvs B\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence \"([y \\<leftrightarrow> z] \\<cdot> A)[y ::= M] = (A[z ::= M])\" \"([y \\<leftrightarrow> z] \\<cdot> B)[y ::= M] = (B[z ::= M])\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n  y \\<notin> fvs B\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M] &&&\n    [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]", "using \"5.IH\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs A\n  y \\<notin> fvs B\n  y \\<notin> fvs A \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  y \\<notin> fvs B \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M] &&&\n    [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]", "by metis+"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs B \\<Longrightarrow>\n        [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M];\n        y \\<notin> fvs (SimplyTyped.Pair A B)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot>\n                         SimplyTyped.Pair A B[y ::= M] =\n                         SimplyTyped.Pair A B[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 3. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "thus ?case"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> SimplyTyped.Pair A B[y ::= M] =\n    SimplyTyped.Pair A B[z ::= M]", "using trm_prm_simp(5) subst_simp_pair"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M]\n  [y \\<leftrightarrow> z] \\<cdot> B[y ::= M] = B[z ::= M]\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> SimplyTyped.Pair A B[y ::= M] =\n    SimplyTyped.Pair A B[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> SimplyTyped.Pair A B[y ::= M] =\n  SimplyTyped.Pair A B[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case (6 P)"], ["proof (state)\nthis:\n  y \\<notin> fvs P \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n  y \\<notin> fvs (Fst P)\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "from \\<open>y \\<notin> fvs (Fst P)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> fvs (Fst P)", "have \"y \\<notin> fvs P\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Fst P)\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs P", "by (simp add: fvs_simp(6))"], ["proof (state)\nthis:\n  y \\<notin> fvs P\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence \"([y \\<leftrightarrow> z] \\<cdot> P)[y ::= M] = (P[z ::= M])\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs P\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]", "using \"6.IH\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs P\n  y \\<notin> fvs P \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Fst A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Fst A[y ::= M] =\n                         Fst A[z ::= M]\n 2. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "thus ?case"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Fst P[y ::= M] = Fst P[z ::= M]", "using trm_prm_simp(6) subst_simp_fst"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n  ?\\<pi> \\<cdot> Fst ?P = Fst (?\\<pi> \\<cdot> ?P)\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Fst P[y ::= M] = Fst P[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Fst P[y ::= M] = Fst P[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "case (7 P)"], ["proof (state)\nthis:\n  y \\<notin> fvs P \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n  y \\<notin> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "from \\<open>y \\<notin> fvs (Snd P)\\<close>"], ["proof (chain)\npicking this:\n  y \\<notin> fvs (Snd P)", "have \"y \\<notin> fvs P\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. y \\<notin> fvs P", "by (simp add: fvs_simp(7))"], ["proof (state)\nthis:\n  y \\<notin> fvs P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "hence \"([y \\<leftrightarrow> z] \\<cdot> P)[y ::= M] = (P[z ::= M])\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs P\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]", "using \"7.IH\""], ["proof (prove)\nusing this:\n  y \\<notin> fvs P\n  y \\<notin> fvs P \\<Longrightarrow>\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>y \\<notin> fvs A \\<Longrightarrow>\n                [y \\<leftrightarrow> z] \\<cdot> A[y ::= M] = A[z ::= M];\n        y \\<notin> fvs (Snd A)\\<rbrakk>\n       \\<Longrightarrow> [y \\<leftrightarrow> z] \\<cdot> Snd A[y ::= M] =\n                         Snd A[z ::= M]", "thus ?case"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Snd P[y ::= M] = Snd P[z ::= M]", "using trm_prm_simp(7) subst_simp_snd"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> z] \\<cdot> P[y ::= M] = P[z ::= M]\n  ?\\<pi> \\<cdot> Snd ?P = Snd (?\\<pi> \\<cdot> ?P)\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> z] \\<cdot> Snd P[y ::= M] = Snd P[z ::= M]", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> z] \\<cdot> Snd P[y ::= M] = Snd P[z ::= M]\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma barendregt:\n  assumes \"y \\<noteq> z\" \"y \\<notin> fvs L\"\n  shows \"M[y ::= N][z ::= L] = (M[z ::= L][y ::= N[z ::= L]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M[y ::= N][z ::= L] = M[z ::= L][y ::= N[z ::= L]]", "using assms"], ["proof (prove)\nusing this:\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. M[y ::= N][z ::= L] = M[z ::= L][y ::= N[z ::= L]]", "proof(induction M rule: trm_strong_induct[where S=\"{y, z} \\<union> fvs N \\<union> fvs L\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n    \\<Longrightarrow> Unit[y ::= N][z ::= L] =\n                      Unit[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 7. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]\n 8. finite ({y, z} \\<union> fvs N \\<union> fvs L)", "show \"finite ({y, z} \\<union> fvs N \\<union> fvs L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({y, z} \\<union> fvs N \\<union> fvs L)", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({y, z} \\<union> fvs N \\<union> fvs L)", "by auto"], ["proof (state)\nthis:\n  finite ({y, z} \\<union> fvs N \\<union> fvs L)\n\ngoal (7 subgoals):\n 1. \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n    \\<Longrightarrow> Unit[y ::= N][z ::= L] =\n                      Unit[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 7. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n    \\<Longrightarrow> Unit[y ::= N][z ::= L] =\n                      Unit[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 7. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case 1"], ["proof (state)\nthis:\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (7 subgoals):\n 1. \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n    \\<Longrightarrow> Unit[y ::= N][z ::= L] =\n                      Unit[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 7. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. Unit[y ::= N][z ::= L] = Unit[z ::= L][y ::= N[z ::= L]]", "using subst_simp_unit"], ["proof (prove)\nusing this:\n  y \\<noteq> z\n  y \\<notin> fvs L\n  Unit[?x ::= ?M] = Unit\n\ngoal (1 subgoal):\n 1. Unit[y ::= N][z ::= L] = Unit[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Unit[y ::= N][z ::= L] = Unit[z ::= L][y ::= N[z ::= L]]\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case (2 x)"], ["proof (state)\nthis:\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "consider \"x = y\" | \"x = z\" | \"x \\<noteq> y \\<and> x \\<noteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<Longrightarrow> thesis; x = z \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<Longrightarrow> ?thesis; x = z \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Var x[y ::= N][z ::= L] =\n                         Var x[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 6. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<Longrightarrow> ?thesis; x = z \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x = y \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 3. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "case 1"], ["proof (state)\nthis:\n  x = y\n\ngoal (3 subgoals):\n 1. x = y \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 3. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "hence \"x = y\" \"x \\<noteq> z\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x = y &&& x \\<noteq> z", "using assms(1)"], ["proof (prove)\nusing this:\n  x = y\n  y \\<noteq> z\n\ngoal (1 subgoal):\n 1. x = y &&& x \\<noteq> z", "by auto"], ["proof (state)\nthis:\n  x = y\n  x \\<noteq> z\n\ngoal (3 subgoals):\n 1. x = y \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 3. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "using subst_simp_var1 subst_simp_var2"], ["proof (prove)\nusing this:\n  x = y\n  x \\<noteq> z\n  Var ?x[?x ::= ?M] = ?M\n  ?x \\<noteq> ?y \\<Longrightarrow> Var ?x[?y ::= ?M] = Var ?x\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "case 2"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "hence \"x \\<noteq> y\" \"x = z\""], ["proof (prove)\nusing this:\n  x = z\n\ngoal (1 subgoal):\n 1. x \\<noteq> y &&& x = z", "using assms(1)"], ["proof (prove)\nusing this:\n  x = z\n  y \\<noteq> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> y &&& x = z", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n  x = z\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n 2. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x = z\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "using subst_free \\<open>y \\<notin> fvs L\\<close> subst_simp_var1 subst_simp_var2"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x = z\n  ?y \\<notin> fvs ?M \\<Longrightarrow> ?M[?y ::= ?N] = ?M\n  y \\<notin> fvs L\n  Var ?x[?x ::= ?M] = ?M\n  ?x \\<noteq> ?y \\<Longrightarrow> Var ?x[?y ::= ?M] = Var ?x\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "case 3"], ["proof (state)\nthis:\n  x \\<noteq> y \\<and> x \\<noteq> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and> x \\<noteq> z \\<Longrightarrow>\n    Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y \\<and> x \\<noteq> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and> x \\<noteq> z\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "using subst_simp_var2"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and> x \\<noteq> z\n  ?x \\<noteq> ?y \\<Longrightarrow> Var ?x[?y ::= ?M] = Var ?x\n\ngoal (1 subgoal):\n 1. Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Var x[y ::= N][z ::= L] = Var x[z ::= L][y ::= N[z ::= L]]\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case (3 A B)"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> B[y ::= N][z ::= L] = B[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> App A B[y ::= N][z ::= L] =\n                         App A B[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 5. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> B[y ::= N][z ::= L] = B[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. App A B[y ::= N][z ::= L] = App A B[z ::= L][y ::= N[z ::= L]]", "using subst_simp_app"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> B[y ::= N][z ::= L] = B[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App A B[y ::= N][z ::= L] = App A B[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  App A B[y ::= N][z ::= L] = App A B[z ::= L][y ::= N[z ::= L]]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case (4 x T A)"], ["proof (state)\nthis:\n  x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "hence *: \"A[y ::= N][z ::= L] = (A[z ::= L][y ::= N[z ::= L]])\""], ["proof (prove)\nusing this:\n  x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]", "by blast"], ["proof (state)\nthis:\n  A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "from \\<open>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L\\<close>"], ["proof (chain)\npicking this:\n  x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L", "have \"x \\<noteq> y\" \"x \\<noteq> z\" \"x \\<notin> fvs N\" \"x \\<notin> fvs L\""], ["proof (prove)\nusing this:\n  x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L\n\ngoal (1 subgoal):\n 1. (x \\<noteq> y &&& x \\<noteq> z) &&&\n    x \\<notin> fvs N &&& x \\<notin> fvs L", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs N\n  x \\<notin> fvs L\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "hence \"x \\<notin> fvs (N[z ::= L])\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs N\n  x \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs N[z ::= L]", "using subst_fvs"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs N\n  x \\<notin> fvs L\n  fvs ?M[?z ::= ?N] \\<subseteq> fvs ?M - {?z} \\<union> fvs ?N\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs N[z ::= L]", "by auto"], ["proof (state)\nthis:\n  x \\<notin> fvs N[z ::= L]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "have \"(Fn x T A)[y ::= N][z ::= L] = Fn x T (A[y ::= N][z ::= L])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N][z ::= L] = Fn x T A[y ::= N][z ::= L]", "using subst_simp_fn \\<open>x \\<noteq> y\\<close> \\<open>x \\<noteq> z\\<close> \\<open>x \\<notin> fvs N\\<close> \\<open>x \\<notin> fvs L\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs N\n  x \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N][z ::= L] = Fn x T A[y ::= N][z ::= L]", "by metis"], ["proof (state)\nthis:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[y ::= N][z ::= L]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "also"], ["proof (state)\nthis:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[y ::= N][z ::= L]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "have \"... = Fn x T (A[z ::= L][y ::= N[z ::= L]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]", "using *"], ["proof (prove)\nusing this:\n  A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "also"], ["proof (state)\nthis:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "have \"... = ((Fn x T A)[z ::= L][y ::= N[z ::= L]])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[z ::= L][y ::= N[z ::= L]] =\n    Fn x T A[z ::= L][y ::= N[z ::= L]]", "using subst_simp_fn \\<open>x \\<noteq> y\\<close> \\<open>x \\<noteq> z\\<close> \\<open>x \\<notin> fvs (N[z ::= L])\\<close> \\<open>x \\<notin> fvs L\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  x \\<noteq> y\n  x \\<noteq> z\n  x \\<notin> fvs N[z ::= L]\n  x \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= L][y ::= N[z ::= L]] =\n    Fn x T A[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= L][y ::= N[z ::= L]] = Fn x T A[z ::= L][y ::= N[z ::= L]]\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {y, z} \\<union> fvs N \\<union> fvs L;\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> A[y ::= N][z ::= L] =\n                          A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[y ::= N][z ::= L] =\n                         Fn x T A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 4. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "finally"], ["proof (chain)\npicking this:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]", "show ?case"], ["proof (prove)\nusing this:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]\n\ngoal (1 subgoal):\n 1. Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]", "."], ["proof (state)\nthis:\n  Fn x T A[y ::= N][z ::= L] = Fn x T A[z ::= L][y ::= N[z ::= L]]\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case (5 A B)"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> B[y ::= N][z ::= L] = B[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n        \\<Longrightarrow> B[y ::= N][z ::= L] =\n                          B[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[y ::= N][z ::= L] =\n                         SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 3. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> B[y ::= N][z ::= L] = B[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[y ::= N][z ::= L] =\n    SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]", "using subst_simp_pair"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> A[y ::= N][z ::= L] = A[z ::= L][y ::= N[z ::= L]]\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> B[y ::= N][z ::= L] = B[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[y ::= N][z ::= L] =\n    SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[y ::= N][z ::= L] =\n  SimplyTyped.Pair A B[z ::= L][y ::= N[z ::= L]]\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case (6 P)"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> P[y ::= N][z ::= L] = P[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Fst A[y ::= N][z ::= L] =\n                         Fst A[z ::= L][y ::= N[z ::= L]]\n 2. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> P[y ::= N][z ::= L] = P[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. Fst P[y ::= N][z ::= L] = Fst P[z ::= L][y ::= N[z ::= L]]", "using subst_simp_fst"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> P[y ::= N][z ::= L] = P[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Fst P[y ::= N][z ::= L] = Fst P[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Fst P[y ::= N][z ::= L] = Fst P[z ::= L][y ::= N[z ::= L]]\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "case (7 P)"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> P[y ::= N][z ::= L] = P[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n                \\<Longrightarrow> A[y ::= N][z ::= L] =\n                                  A[z ::= L][y ::= N[z ::= L]];\n        y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n       \\<Longrightarrow> Snd A[y ::= N][z ::= L] =\n                         Snd A[z ::= L][y ::= N[z ::= L]]", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> P[y ::= N][z ::= L] = P[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n\ngoal (1 subgoal):\n 1. Snd P[y ::= N][z ::= L] = Snd P[z ::= L][y ::= N[z ::= L]]", "using subst_simp_snd"], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<noteq> z; y \\<notin> fvs L\\<rbrakk>\n  \\<Longrightarrow> P[y ::= N][z ::= L] = P[z ::= L][y ::= N[z ::= L]]\n  y \\<noteq> z\n  y \\<notin> fvs L\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Snd P[y ::= N][z ::= L] = Snd P[z ::= L][y ::= N[z ::= L]]", "by metis"], ["proof (state)\nthis:\n  Snd P[y ::= N][z ::= L] = Snd P[z ::= L][y ::= N[z ::= L]]\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma typing_subst:\n  assumes \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> M : \\<sigma>\" \"\\<Gamma> \\<turnstile> N : \\<tau>\"\n  shows \"\\<Gamma> \\<turnstile> M[z ::= N] : \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M[z ::= N] : \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> M : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M[z ::= N] : \\<sigma>", "proof(induction M arbitrary: \\<Gamma> \\<sigma> rule: trm_strong_depth_induct[where S=\"{z} \\<union> fvs N\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>\n 2. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 4. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 5. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 7. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>\n 8. finite ({z} \\<union> fvs N)", "show \"finite ({z} \\<union> fvs N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs N)", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs N)", "by auto"], ["proof (state)\nthis:\n  finite ({z} \\<union> fvs N)\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>\n 2. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 4. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 5. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 7. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>\n 2. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 4. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 5. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 7. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case 1"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>\n 2. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 4. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 5. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 7. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>", "using subst_simp_unit typing.tunit typing_unitE"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Unit : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  Unit[?x ::= ?M] = Unit\n  ?\\<Gamma> \\<turnstile> Unit : TUnit\n  ?\\<Gamma> \\<turnstile> Unit : ?\\<tau> \\<Longrightarrow> ?\\<tau> = TUnit\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Unit[z ::= N] : \\<sigma>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 3. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 4. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 3. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 4. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case (2 x)"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 3. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 4. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence *: \"(\\<Gamma>(z \\<mapsto> \\<tau>)) x = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(z \\<mapsto> \\<tau>)) x = Some \\<sigma>", "using typing_varE"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  ?\\<Gamma> \\<turnstile> Var ?x : ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> ?x = Some ?\\<tau>\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(z \\<mapsto> \\<tau>)) x = Some \\<sigma>", "by metis"], ["proof (state)\nthis:\n  (\\<Gamma>(z \\<mapsto> \\<tau>)) x = Some \\<sigma>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 3. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 4. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "consider \"x = z\" | \"x \\<noteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = z \\<Longrightarrow> thesis;\n     x \\<noteq> z \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = z \\<Longrightarrow> ?thesis;\n   x \\<noteq> z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Var x : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 3. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 4. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 6. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = z \\<Longrightarrow> ?thesis;\n   x \\<noteq> z \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "case 1"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "hence \"(\\<Gamma>(x \\<mapsto> \\<tau>)) x = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  x = z\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(x \\<mapsto> \\<tau>)) x = Some \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  x = z\n  (\\<Gamma>(z \\<mapsto> \\<tau>)) x = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<Gamma>(x \\<mapsto> \\<tau>)) x = Some \\<sigma>", "by metis"], ["proof (state)\nthis:\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) x = Some \\<sigma>\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "hence \"\\<tau> = \\<sigma>\""], ["proof (prove)\nusing this:\n  (\\<Gamma>(x \\<mapsto> \\<tau>)) x = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<tau> = \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<tau> = \\<sigma>\n\ngoal (2 subgoals):\n 1. x = z \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n 2. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<tau> = \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "using \\<open>\\<Gamma> \\<turnstile> N : \\<tau>\\<close> subst_simp_var1 \\<open>x = z\\<close>"], ["proof (prove)\nusing this:\n  \\<tau> = \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  Var ?x[?x ::= ?M] = ?M\n  x = z\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "hence \"\\<Gamma> x = Some \\<sigma>\""], ["proof (prove)\nusing this:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  (\\<Gamma>(z \\<mapsto> \\<tau>)) x = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> x = Some \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> x = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> Var x : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x : \\<sigma>", "using typing.tvar"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<sigma>\n  ?\\<Gamma> ?x = Some ?\\<tau> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Var ?x : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Var x : \\<sigma>\n\ngoal (1 subgoal):\n 1. x \\<noteq> z \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Var x : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "using \\<open>x \\<noteq> z\\<close> subst_simp_var2"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Var x : \\<sigma>\n  x \\<noteq> z\n  ?x \\<noteq> ?y \\<Longrightarrow> Var ?x[?y ::= ?M] = Var ?x\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Var x[z ::= N] : \\<sigma>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case (3 A B)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (App A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "have *: \"depth A < depth (App A B) \\<and> depth B < depth (App A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (App A B) \\<and> depth B < depth (App A B)", "using depth_app"], ["proof (prove)\nusing this:\n  depth ?A < depth (App ?A ?B)\n  depth ?B < depth (App ?A ?B)\n\ngoal (1 subgoal):\n 1. depth A < depth (App A B) \\<and> depth B < depth (App A B)", "by auto"], ["proof (state)\nthis:\n  depth A < depth (App A B) \\<and> depth B < depth (App A B)\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "from \\<open>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>", "obtain \\<sigma>' where\n      \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : (TArr \\<sigma>' \\<sigma>)\"\n      \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : \\<sigma>'\""], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<lbrakk>\\<Gamma>(z \\<mapsto>\n                 \\<tau>) \\<turnstile> A : TArr \\<sigma>'' \\<sigma>;\n         \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : \\<sigma>''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using typing_appE"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>\n  ?\\<Gamma> \\<turnstile> App ?A ?B : ?\\<sigma> \\<Longrightarrow>\n  \\<exists>\\<tau>.\n     ?\\<Gamma> \\<turnstile> ?A : TArr \\<tau> ?\\<sigma> \\<and>\n     ?\\<Gamma> \\<turnstile> ?B : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<lbrakk>\\<Gamma>(z \\<mapsto>\n                 \\<tau>) \\<turnstile> A : TArr \\<sigma>'' \\<sigma>;\n         \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : \\<sigma>''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : TArr \\<sigma>' \\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : \\<sigma>'\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence\n      \"\\<Gamma> \\<turnstile> (A[z ::= N]) : (TArr \\<sigma>' \\<sigma>)\"\n      \"\\<Gamma> \\<turnstile> (B[z ::= N]) : \\<sigma>'\""], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : TArr \\<sigma>' \\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> A[z ::= N] : TArr \\<sigma>' \\<sigma> &&&\n    \\<Gamma> \\<turnstile> B[z ::= N] : \\<sigma>'", "using 3 *"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : TArr \\<sigma>' \\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : \\<sigma>'\n  \\<lbrakk>depth ?K < depth (App A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  depth A < depth (App A B) \\<and> depth B < depth (App A B)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> A[z ::= N] : TArr \\<sigma>' \\<sigma> &&&\n    \\<Gamma> \\<turnstile> B[z ::= N] : \\<sigma>'", "by metis+"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A[z ::= N] : TArr \\<sigma>' \\<sigma>\n  \\<Gamma> \\<turnstile> B[z ::= N] : \\<sigma>'\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> App (A[z ::= N]) (B[z ::= N]) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A[z ::= N] : TArr \\<sigma>' \\<sigma>\n  \\<Gamma> \\<turnstile> B[z ::= N] : \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A[z ::= N] B[z ::= N] : \\<sigma>", "using typing.tapp"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A[z ::= N] : TArr \\<sigma>' \\<sigma>\n  \\<Gamma> \\<turnstile> B[z ::= N] : \\<sigma>'\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?f : TArr ?\\<tau> ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?x : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> App ?f ?x : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A[z ::= N] B[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> App A[z ::= N] B[z ::= N] : \\<sigma>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (App A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> App A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n 2. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 3. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 5. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A[z ::= N] B[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>", "using subst_simp_app"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A[z ::= N] B[z ::= N] : \\<sigma>\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> App A B[z ::= N] : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case (4 x T A)"], ["proof (state)\nthis:\n  x \\<notin> {z} \\<union> fvs N\n  \\<lbrakk>depth ?K < depth (Fn x T A);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"x \\<noteq> z\" \"x \\<notin> fvs N\""], ["proof (prove)\nusing this:\n  x \\<notin> {z} \\<union> fvs N\n  \\<lbrakk>depth ?K < depth (Fn x T A);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. x \\<noteq> z &&& x \\<notin> fvs N", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> z\n  x \\<notin> fvs N\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence *: \"\\<Gamma>(x \\<mapsto> T) \\<turnstile> N : \\<tau>\""], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  x \\<notin> fvs N\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T) \\<turnstile> N : \\<tau>", "using typing_weaken 4"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  x \\<notin> fvs N\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?M : ?\\<tau>; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma>(?y \\<mapsto>\n                    ?\\<sigma>) \\<turnstile> ?M : ?\\<tau>\n  x \\<notin> {z} \\<union> fvs N\n  \\<lbrakk>depth ?K < depth (Fn x T A);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T) \\<turnstile> N : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> N : \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "have **: \"depth A < depth (Fn x T A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (Fn x T A)", "using depth_fn"], ["proof (prove)\nusing this:\n  depth ?A < depth (Fn ?x ?T ?A)\n\ngoal (1 subgoal):\n 1. depth A < depth (Fn x T A)", "."], ["proof (state)\nthis:\n  depth A < depth (Fn x T A)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "from \\<open>\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>", "obtain \\<sigma>' where\n      \"\\<sigma> = TArr T \\<sigma>'\"\n      \"\\<Gamma>(z \\<mapsto> \\<tau>)(x \\<mapsto> T) \\<turnstile> A : \\<sigma>'\""], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<lbrakk>\\<sigma> = TArr T \\<sigma>'';\n         \\<Gamma>(z \\<mapsto> \\<tau>, x \\<mapsto>\n         T) \\<turnstile> A : \\<sigma>''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using typing_fnE"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?T ?A : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     ?\\<theta> = TArr ?T \\<sigma> \\<and> ?\\<Gamma>(?x \\<mapsto>\n     ?T) \\<turnstile> ?A : \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<lbrakk>\\<sigma> = TArr T \\<sigma>'';\n         \\<Gamma>(z \\<mapsto> \\<tau>, x \\<mapsto>\n         T) \\<turnstile> A : \\<sigma>''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<sigma> = TArr T \\<sigma>'\n  \\<Gamma>(z \\<mapsto> \\<tau>, x \\<mapsto> T) \\<turnstile> A : \\<sigma>'\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma>(x \\<mapsto> T)(z \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\""], ["proof (prove)\nusing this:\n  \\<sigma> = TArr T \\<sigma>'\n  \\<Gamma>(z \\<mapsto> \\<tau>, x \\<mapsto> T) \\<turnstile> A : \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T, z \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'", "using \\<open>x \\<noteq> z\\<close> fun_upd_twist"], ["proof (prove)\nusing this:\n  \\<sigma> = TArr T \\<sigma>'\n  \\<Gamma>(z \\<mapsto> \\<tau>, x \\<mapsto> T) \\<turnstile> A : \\<sigma>'\n  x \\<noteq> z\n  ?a \\<noteq> ?c \\<Longrightarrow>\n  ?m(?a := ?b, ?c := ?d) = ?m(?c := ?d, ?a := ?b)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T, z \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> T, z \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma>(x \\<mapsto> T) \\<turnstile> A[z ::= N] : \\<sigma>'\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T, z \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T) \\<turnstile> A[z ::= N] : \\<sigma>'", "using 4 * **"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T, z \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>'\n  x \\<notin> {z} \\<union> fvs N\n  \\<lbrakk>depth ?K < depth (Fn x T A);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> N : \\<tau>\n  depth A < depth (Fn x T A)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T) \\<turnstile> A[z ::= N] : \\<sigma>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A[z ::= N] : \\<sigma>'\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> Fn x T (A[z ::= N]) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A[z ::= N] : \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>", "using typing.tfn \\<open>\\<sigma> = TArr T \\<sigma>'\\<close>"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A[z ::= N] : \\<sigma>'\n  ?\\<Gamma>(?x \\<mapsto>\n  ?\\<tau>) \\<turnstile> ?A : ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?\\<tau> ?A : TArr ?\\<tau> ?\\<sigma>\n  \\<sigma> = TArr T \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<sigma>.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs N;\n        \\<And>K \\<Gamma> \\<sigma>.\n           \\<lbrakk>depth K < depth (Fn x T A);\n            \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n            \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n           \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fn x T A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n 2. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 4. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>", "using \\<open>x \\<noteq> z\\<close> \\<open>x \\<notin> fvs N\\<close> subst_simp_fn"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n  x \\<noteq> z\n  x \\<notin> fvs N\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fn x T A[z ::= N] : \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case (5 A B)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>", "obtain T S where \"\\<sigma> = TPair T S\" \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T\" \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        \\<lbrakk>\\<sigma> = TPair T S;\n         \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T;\n         \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using typing_pairE"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n                          ?B : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<tau> \\<sigma>.\n     ?\\<theta> = TPair \\<tau> \\<sigma> \\<and>\n     ?\\<Gamma> \\<turnstile> ?A : \\<tau> \\<and>\n     ?\\<Gamma> \\<turnstile> ?B : \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>T S.\n        \\<lbrakk>\\<sigma> = TPair T S;\n         \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T;\n         \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<sigma> = TPair T S\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<sigma> = TPair T S\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "have \"depth A < depth (Pair A B)\" and \"depth B < depth (Pair A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (SimplyTyped.Pair A B) &&&\n    depth B < depth (SimplyTyped.Pair A B)", "using depth_pair"], ["proof (prove)\nusing this:\n  depth ?A < depth (SimplyTyped.Pair ?A ?B)\n  depth ?B < depth (SimplyTyped.Pair ?A ?B)\n\ngoal (1 subgoal):\n 1. depth A < depth (SimplyTyped.Pair A B) &&&\n    depth B < depth (SimplyTyped.Pair A B)", "by auto"], ["proof (state)\nthis:\n  depth A < depth (SimplyTyped.Pair A B)\n  depth B < depth (SimplyTyped.Pair A B)\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma> = TPair T S\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\n  depth A < depth (SimplyTyped.Pair A B)\n  depth B < depth (SimplyTyped.Pair A B)", "have \"\\<Gamma> \\<turnstile> A[z ::= N] : T\" \"\\<Gamma> \\<turnstile> B[z ::= N] : S\""], ["proof (prove)\nusing this:\n  \\<sigma> = TPair T S\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\n  depth A < depth (SimplyTyped.Pair A B)\n  depth B < depth (SimplyTyped.Pair A B)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> A[z ::= N] : T &&&\n    \\<Gamma> \\<turnstile> B[z ::= N] : S", "using 5"], ["proof (prove)\nusing this:\n  \\<sigma> = TPair T S\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> A : T\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> B : S\n  depth A < depth (SimplyTyped.Pair A B)\n  depth B < depth (SimplyTyped.Pair A B)\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> A[z ::= N] : T &&&\n    \\<Gamma> \\<turnstile> B[z ::= N] : S", "by metis+"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A[z ::= N] : T\n  \\<Gamma> \\<turnstile> B[z ::= N] : S\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> Pair (A[z ::= N]) (B[z ::= N]) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A[z ::= N] : T\n  \\<Gamma> \\<turnstile> B[z ::= N] : S\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> SimplyTyped.Pair A[z ::= N] B[z ::= N] : \\<sigma>", "using \\<open>\\<sigma> = TPair T S\\<close> typing.tpair"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A[z ::= N] : T\n  \\<Gamma> \\<turnstile> B[z ::= N] : S\n  \\<sigma> = TPair T S\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?A : ?\\<tau>;\n   ?\\<Gamma> \\<turnstile> ?B : ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n      ?B : TPair ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> SimplyTyped.Pair A[z ::= N] B[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A[z ::= N] B[z ::= N] : \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> SimplyTyped.Pair A B : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> SimplyTyped.Pair A\n          B[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 3. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A[z ::= N] B[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> SimplyTyped.Pair A B[z ::= N] : \\<sigma>", "using subst_simp_pair"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A[z ::= N] B[z ::= N] : \\<sigma>\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> SimplyTyped.Pair A B[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A B[z ::= N] : \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case (6 P)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (Fst P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>depth ?K < depth (Fst P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>", "obtain \\<sigma>' where \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : (TPair \\<sigma> \\<sigma>')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (Fst P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using typing_fstE"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (Fst P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau> \\<Longrightarrow>\n  \\<exists>\\<sigma>. ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "have \"depth P < depth (Fst P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P < depth (Fst P)", "using depth_fst"], ["proof (prove)\nusing this:\n  depth ?P < depth (Fst ?P)\n\ngoal (1 subgoal):\n 1. depth P < depth (Fst P)", "by metis"], ["proof (state)\nthis:\n  depth P < depth (Fst P)\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'\n  depth P < depth (Fst P)", "have \"\\<Gamma> \\<turnstile> P[z ::= N] : (TPair \\<sigma> \\<sigma>')\""], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'\n  depth P < depth (Fst P)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma> \\<sigma>'", "using 6"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma> \\<sigma>'\n  depth P < depth (Fst P)\n  \\<lbrakk>depth ?K < depth (Fst P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma> \\<sigma>'", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma> \\<sigma>'\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> Fst (P[z ::= N]) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma> \\<sigma>'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>", "using typing.tfst"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma> \\<sigma>'\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Fst A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Fst A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Fst A[z ::= N] : \\<sigma>\n 2. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>", "using subst_simp_fst"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fst P[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "case (7 P)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (Snd P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>depth ?K < depth (Snd P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>", "obtain \\<sigma>' where \"\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : (TPair \\<sigma>' \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (Snd P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> P : TPair \\<sigma>'' \\<sigma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using typing_sndE"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (Snd P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma> \\<Longrightarrow>\n  \\<exists>\\<tau>. ?\\<Gamma> \\<turnstile> ?P : TPair \\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>''.\n        \\<Gamma>(z \\<mapsto>\n        \\<tau>) \\<turnstile> P : TPair \\<sigma>'' \\<sigma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma>' \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma>' \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "have \"depth P < depth (Snd P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth P < depth (Snd P)", "using depth_snd"], ["proof (prove)\nusing this:\n  depth ?P < depth (Snd ?P)\n\ngoal (1 subgoal):\n 1. depth P < depth (Snd P)", "by metis"], ["proof (state)\nthis:\n  depth P < depth (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma>' \\<sigma>\n  depth P < depth (Snd P)", "have \"\\<Gamma> \\<turnstile> P[z ::= N] : (TPair \\<sigma>' \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma>' \\<sigma>\n  depth P < depth (Snd P)\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma>' \\<sigma>", "using 7"], ["proof (prove)\nusing this:\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> P : TPair \\<sigma>' \\<sigma>\n  depth P < depth (Snd P)\n  \\<lbrakk>depth ?K < depth (Snd P);\n   ?\\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> ?K : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?K[z ::= N] : ?\\<sigma>\n  \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd P : \\<sigma>\n  \\<Gamma> \\<turnstile> N : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma>' \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma>' \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> Snd (P[z ::= N]) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma>' \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>", "using typing.tsnd"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P[z ::= N] : TPair \\<sigma>' \\<sigma>\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<sigma>.\n       \\<lbrakk>\\<And>K \\<Gamma> \\<sigma>.\n                   \\<lbrakk>depth K < depth (Snd A);\n                    \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> K : \\<sigma>;\n                    \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n                   \\<Longrightarrow> \\<Gamma> \\<turnstile> K[z ::= N] : \\<sigma>;\n        \\<Gamma>(z \\<mapsto> \\<tau>) \\<turnstile> Snd A : \\<sigma>;\n        \\<Gamma> \\<turnstile> N : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> Snd A[z ::= N] : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>", "using subst_simp_snd"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Snd P[z ::= N] : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive beta_reduction :: \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\" (\"_ \\<rightarrow>\\<beta> _\") where\n  beta:  \"(App (Fn x T A) M) \\<rightarrow>\\<beta> (A[x ::= M])\"\n| app1:  \"A \\<rightarrow>\\<beta> A' \\<Longrightarrow> (App A B) \\<rightarrow>\\<beta> (App A' B)\"\n| app2:  \"B \\<rightarrow>\\<beta> B' \\<Longrightarrow> (App A B) \\<rightarrow>\\<beta> (App A B')\"\n| fn:    \"A \\<rightarrow>\\<beta> A' \\<Longrightarrow> (Fn x T A) \\<rightarrow>\\<beta> (Fn x T A')\"\n| pair1: \"A \\<rightarrow>\\<beta> A' \\<Longrightarrow> (Pair A B) \\<rightarrow>\\<beta> (Pair A' B)\"\n| pair2: \"B \\<rightarrow>\\<beta> B' \\<Longrightarrow> (Pair A B) \\<rightarrow>\\<beta> (Pair A B')\"\n| fst1:  \"P \\<rightarrow>\\<beta> P' \\<Longrightarrow> (Fst P) \\<rightarrow>\\<beta> (Fst P')\"\n| fst2:  \"(Fst (Pair A B)) \\<rightarrow>\\<beta> A\" \n| snd1:  \"P \\<rightarrow>\\<beta> P' \\<Longrightarrow> (Snd P) \\<rightarrow>\\<beta> (Snd P')\"\n| snd2:  \"(Snd (Pair A B)) \\<rightarrow>\\<beta> B\""], ["", "lemma beta_reduction_fvs:\n  assumes \"M \\<rightarrow>\\<beta> M'\"\n  shows \"fvs M' \\<subseteq> fvs M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs M' \\<subseteq> fvs M", "using assms"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. fvs M' \\<subseteq> fvs M", "proof(induction)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x T A M. fvs A[x ::= M] \\<subseteq> fvs (App (Fn x T A) M)\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B) \\<subseteq> fvs (App A B)\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 5. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 8. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 9. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 10. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (beta x T A M)"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. \\<And>x T A M. fvs A[x ::= M] \\<subseteq> fvs (App (Fn x T A) M)\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B) \\<subseteq> fvs (App A B)\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 5. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 8. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 9. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 10. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A[x ::= M] \\<subseteq> fvs (App (Fn x T A) M)", "using fvs_simp(3) fvs_simp(4) subst_fvs"], ["proof (prove)\nusing this:\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  fvs ?M[?z ::= ?N] \\<subseteq> fvs ?M - {?z} \\<union> fvs ?N\n\ngoal (1 subgoal):\n 1. fvs A[x ::= M] \\<subseteq> fvs (App (Fn x T A) M)", "by metis"], ["proof (state)\nthis:\n  fvs A[x ::= M] \\<subseteq> fvs (App (Fn x T A) M)\n\ngoal (9 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B) \\<subseteq> fvs (App A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B) \\<subseteq> fvs (App A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (app1 A A' B)"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (9 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B) \\<subseteq> fvs (App A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "hence \"fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B", "by auto"], ["proof (state)\nthis:\n  fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\n\ngoal (9 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B) \\<subseteq> fvs (App A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\n\ngoal (1 subgoal):\n 1. fvs (App A' B) \\<subseteq> fvs (App A B)", "using fvs_simp(3)"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n\ngoal (1 subgoal):\n 1. fvs (App A' B) \\<subseteq> fvs (App A B)", "by metis"], ["proof (state)\nthis:\n  fvs (App A' B) \\<subseteq> fvs (App A B)\n\ngoal (8 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (app2 B B' A)"], ["proof (state)\nthis:\n  B \\<rightarrow>\\<beta> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "hence \"fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\""], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B", "by auto"], ["proof (state)\nthis:\n  fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\n\ngoal (1 subgoal):\n 1. fvs (App A B') \\<subseteq> fvs (App A B)", "using fvs_simp(3)"], ["proof (prove)\nusing this:\n  fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n\ngoal (1 subgoal):\n 1. fvs (App A B') \\<subseteq> fvs (App A B)", "by metis"], ["proof (state)\nthis:\n  fvs (App A B') \\<subseteq> fvs (App A B)\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fn A A' x T)"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "hence \"fvs A' - {x} \\<subseteq> fvs A - {x}\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs A' - {x} \\<subseteq> fvs A - {x}", "by auto"], ["proof (state)\nthis:\n  fvs A' - {x} \\<subseteq> fvs A - {x}\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A' - {x} \\<subseteq> fvs A - {x}\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "using fvs_simp(4)"], ["proof (prove)\nusing this:\n  fvs A' - {x} \\<subseteq> fvs A - {x}\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "by metis"], ["proof (state)\nthis:\n  fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n\ngoal (6 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (pair1 A A' B)"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (6 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "hence \"fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B", "by auto"], ["proof (state)\nthis:\n  fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\n\ngoal (6 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B)\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B) \\<subseteq> fvs (SimplyTyped.Pair A B)", "using fvs_simp(5)"], ["proof (prove)\nusing this:\n  fvs A' \\<union> fvs B \\<subseteq> fvs A \\<union> fvs B\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B) \\<subseteq> fvs (SimplyTyped.Pair A B)", "by metis"], ["proof (state)\nthis:\n  fvs (SimplyTyped.Pair A' B) \\<subseteq> fvs (SimplyTyped.Pair A B)\n\ngoal (5 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (pair2 B B' A)"], ["proof (state)\nthis:\n  B \\<rightarrow>\\<beta> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (5 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "hence \"fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\""], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B", "by auto"], ["proof (state)\nthis:\n  fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\n\ngoal (5 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A B') \\<subseteq> fvs (SimplyTyped.Pair A B)", "using fvs_simp(5)"], ["proof (prove)\nusing this:\n  fvs A \\<union> fvs B' \\<subseteq> fvs A \\<union> fvs B\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A B') \\<subseteq> fvs (SimplyTyped.Pair A B)", "by metis"], ["proof (state)\nthis:\n  fvs (SimplyTyped.Pair A B') \\<subseteq> fvs (SimplyTyped.Pair A B)\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fst1 P P')"], ["proof (state)\nthis:\n  P \\<rightarrow>\\<beta> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P)", "using fvs_simp(6)"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  fvs P' \\<subseteq> fvs P\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P)", "by metis"], ["proof (state)\nthis:\n  fvs (Fst P') \\<subseteq> fvs (Fst P)\n\ngoal (3 subgoals):\n 1. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fst2 A B)"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>A B. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))", "using fvs_simp(5, 6)"], ["proof (prove)\nusing this:\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))", "by force"], ["proof (state)\nthis:\n  fvs A \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (snd1 P P')"], ["proof (state)\nthis:\n  P \\<rightarrow>\\<beta> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P)", "using fvs_simp(7)"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  fvs P' \\<subseteq> fvs P\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P)", "by metis"], ["proof (state)\nthis:\n  fvs (Snd P') \\<subseteq> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (snd2 A B)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>A B. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "using fvs_simp(5, 7)"], ["proof (prove)\nusing this:\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "by force"], ["proof (state)\nthis:\n  fvs B \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduction_prm:\n  assumes \"M \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<pi> \\<cdot> M) \\<rightarrow>\\<beta> (\\<pi> \\<cdot> M')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> M \\<rightarrow>\\<beta> \\<pi> \\<cdot> M'", "using assms"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> M \\<rightarrow>\\<beta> \\<pi> \\<cdot> M'", "by(induction, auto simp add: beta_reduction.intros trm_prm_simp subst_prm)"], ["", "lemma beta_reduction_left_unitE:\n  assumes \"Unit \\<rightarrow>\\<beta> M'\"\n  shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  Unit \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. False", "by(cases, auto simp add: unit_not_app unit_not_fn unit_not_pair unit_not_fst unit_not_snd)"], ["", "lemma beta_reduction_left_varE:\n  assumes \"(Var x) \\<rightarrow>\\<beta> M'\"\n  shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  Var x \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. False", "by(cases, auto simp add: var_not_app var_not_fn var_not_pair var_not_fst var_not_snd)"], ["", "lemma beta_reduction_left_appE:\n  assumes \"(App A B) \\<rightarrow>\\<beta> M'\"\n  shows \"\n    (\\<exists>x T X. A = (Fn x T X) \\<and> M' = (X[x ::= B])) \\<or>\n    (\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = App A' B) \\<or>\n    (\\<exists>B'. (B \\<rightarrow>\\<beta> B') \\<and> M' = App A B')\n  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B]) \\<or>\n    (\\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B) \\<or>\n    (\\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = App A B')", "using assms"], ["proof (prove)\nusing this:\n  App A B \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. (\\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B]) \\<or>\n    (\\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B) \\<or>\n    (\\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = App A B')", "by(\n  cases,\n  metis trm_simp(2, 3),\n  metis trm_simp(2, 3),\n  metis trm_simp(2, 3),\n  auto simp add: app_not_fn app_not_pair app_not_fst app_not_snd\n)"], ["", "lemma beta_reduction_left_fnE:\n  assumes \"(Fn x T A) \\<rightarrow>\\<beta> M'\"\n  shows \"\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = (Fn x T A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "using assms"], ["proof (prove)\nusing this:\n  Fn x T A \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "proof(cases)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>xa Ta Aa M.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) M; M' = Aa[xa ::= M]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App A' B;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 3. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App Aa B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; M' = Fn xa Ta A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 5. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair A' B; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 6. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair Aa B'; B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 8. \\<And>B.\n       Fn x T A = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 10. \\<And>Aa.\n        Fn x T A = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n        \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "case (fn B B' y S)"], ["proof (state)\nthis:\n  Fn x T A = Fn y S B\n  M' = Fn y S B'\n  B \\<rightarrow>\\<beta> B'\n\ngoal (10 subgoals):\n 1. \\<And>xa Ta Aa M.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) M; M' = Aa[xa ::= M]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App A' B;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 3. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App Aa B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; M' = Fn xa Ta A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 5. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair A' B; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 6. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair Aa B'; B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 8. \\<And>B.\n       Fn x T A = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 10. \\<And>Aa.\n        Fn x T A = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n        \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "consider \"x = y \\<and> T = S \\<and> A = B\" | \"x \\<noteq> y \\<and> T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(4) \\<open>Fn x T A = Fn y S B\\<close>"], ["proof (prove)\nusing this:\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n  Fn x T A = Fn y S B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (10 subgoals):\n 1. \\<And>xa Ta Aa M.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) M; M' = Aa[xa ::= M]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App A' B;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 3. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App Aa B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; M' = Fn xa Ta A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 5. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair A' B; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 6. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair Aa B'; B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 8. \\<And>B.\n       Fn x T A = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 10. \\<And>Aa.\n        Fn x T A = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n        \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "case 1"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A = B\n\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = B\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "using fn"], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = B\n  Fn x T A = Fn y S B\n  M' = Fn y S B'\n  B \\<rightarrow>\\<beta> B'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "by auto"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "using fn beta_reduction_fvs beta_reduction_prm fn_eq"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n  Fn x T A = Fn y S B\n  M' = Fn y S B'\n  B \\<rightarrow>\\<beta> B'\n  ?M \\<rightarrow>\\<beta> ?M' \\<Longrightarrow> fvs ?M' \\<subseteq> fvs ?M\n  ?M \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  ?\\<pi> \\<cdot> ?M \\<rightarrow>\\<beta> ?\\<pi> \\<cdot> ?M'\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<notin> fvs ?B;\n   ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\\<rbrakk>\n  \\<Longrightarrow> Fn ?x ?T ?A = Fn ?y ?T ?B\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n\ngoal (9 subgoals):\n 1. \\<And>xa Ta Aa M.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) M; M' = Aa[xa ::= M]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App A' B;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 3. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App Aa B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 4. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair A' B; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 5. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair Aa B'; B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 6. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 7. \\<And>B.\n       Fn x T A = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 9. \\<And>Aa.\n       Fn x T A = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>xa Ta Aa M.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) M; M' = Aa[xa ::= M]\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 2. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App A' B;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 3. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = App Aa B; M' = App Aa B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 4. \\<And>Aa A' B.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair A' B; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 5. \\<And>B B' Aa.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        M' = SimplyTyped.Pair Aa B'; B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 6. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 7. \\<And>B.\n       Fn x T A = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'.\n                            A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'\n 9. \\<And>Aa.\n       Fn x T A = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n       \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = Fn x T A'", "qed (\n  metis app_not_fn,\n  metis app_not_fn,\n  metis app_not_fn,\n  auto simp add: fn_not_pair fn_not_fst fn_not_snd\n)"], ["", "lemma beta_reduction_left_pairE:\n  assumes \"(Pair A B) \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = (Pair A' B)) \\<or> (\\<exists>B'. (B \\<rightarrow>\\<beta> B') \\<and> M' = (Pair A B'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>A'.\n        A \\<rightarrow>\\<beta> A' \\<and> M' = SimplyTyped.Pair A' B) \\<or>\n    (\\<exists>B'.\n        B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "using assms"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. (\\<exists>A'.\n        A \\<rightarrow>\\<beta> A' \\<and> M' = SimplyTyped.Pair A' B) \\<or>\n    (\\<exists>B'.\n        B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "apply cases"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x T Aa M.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) M;\n        M' = Aa[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 2. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App A' Ba;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 3. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App Aa B';\n        Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; M' = Fn x T A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 5. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        M' = SimplyTyped.Pair A' Ba; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 6. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        M' = SimplyTyped.Pair Aa B'; Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 8. \\<And>Ba.\n       SimplyTyped.Pair A B = Fst (SimplyTyped.Pair M' Ba) \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 10. \\<And>Aa.\n        SimplyTyped.Pair A B =\n        Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n        (\\<exists>A'.\n            A \\<rightarrow>\\<beta> A' \\<and>\n            M' = SimplyTyped.Pair A' B) \\<or>\n        (\\<exists>B'.\n            B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "prefer 5"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        M' = SimplyTyped.Pair A' Ba; Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 2. \\<And>x T Aa M.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) M;\n        M' = Aa[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 3. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App A' Ba;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 4. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App Aa B';\n        Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 5. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; M' = Fn x T A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 6. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        M' = SimplyTyped.Pair Aa B'; Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 8. \\<And>Ba.\n       SimplyTyped.Pair A B = Fst (SimplyTyped.Pair M' Ba) \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 10. \\<And>Aa.\n        SimplyTyped.Pair A B =\n        Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n        (\\<exists>A'.\n            A \\<rightarrow>\\<beta> A' \\<and>\n            M' = SimplyTyped.Pair A' B) \\<or>\n        (\\<exists>B'.\n            B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "apply (metis trm_simp(5, 6))"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x T Aa M.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) M;\n        M' = Aa[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 2. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App A' Ba;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 3. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App Aa B';\n        Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; M' = Fn x T A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 5. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        M' = SimplyTyped.Pair Aa B'; Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 6. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 7. \\<And>Ba.\n       SimplyTyped.Pair A B = Fst (SimplyTyped.Pair M' Ba) \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 9. \\<And>Aa.\n       SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "prefer 5"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        M' = SimplyTyped.Pair Aa B'; Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 2. \\<And>x T Aa M.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) M;\n        M' = Aa[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 3. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App A' Ba;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 4. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App Aa B';\n        Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 5. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; M' = Fn x T A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 6. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 7. \\<And>Ba.\n       SimplyTyped.Pair A B = Fst (SimplyTyped.Pair M' Ba) \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 9. \\<And>Aa.\n       SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "apply (metis trm_simp(5, 6))"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x T Aa M.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) M;\n        M' = Aa[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 2. \\<And>Aa A' Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App A' Ba;\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 3. \\<And>Ba B' Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; M' = App Aa B';\n        Ba \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; M' = Fn x T A';\n        Aa \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 5. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; M' = Fst P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 6. \\<And>Ba.\n       SimplyTyped.Pair A B = Fst (SimplyTyped.Pair M' Ba) \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; M' = Snd P';\n        P \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>A'.\n                             A \\<rightarrow>\\<beta> A' \\<and>\n                             M' = SimplyTyped.Pair A' B) \\<or>\n                         (\\<exists>B'.\n                             B \\<rightarrow>\\<beta> B' \\<and>\n                             M' = SimplyTyped.Pair A B')\n 8. \\<And>Aa.\n       SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa M') \\<Longrightarrow>\n       (\\<exists>A'.\n           A \\<rightarrow>\\<beta> A' \\<and>\n           M' = SimplyTyped.Pair A' B) \\<or>\n       (\\<exists>B'.\n           B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B')", "apply (metis app_not_pair, metis app_not_pair, metis app_not_pair, metis fn_not_pair, metis pair_not_fst, metis pair_not_fst, metis pair_not_snd, metis pair_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma beta_reduction_left_fstE:\n  assumes \"(Fst P) \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<exists>P'. (P \\<rightarrow>\\<beta> P') \\<and> M' = (Fst P')) \\<or> (\\<exists>A B. P = (Pair A B) \\<and> M' = A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "using assms"], ["proof (prove)\nusing this:\n  Fst P \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "proof(cases)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>B.\n       Fst P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n 9. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 10. \\<And>A.\n        Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n        (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n        (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "case (fst1 P P')"], ["proof (state)\nthis:\n  Fst P = Fst P\n  M' = Fst P'\n  P \\<rightarrow>\\<beta> P'\n\ngoal (10 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>B.\n       Fst P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n 9. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 10. \\<And>A.\n        Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n        (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n        (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  M' = Fst P'\n  P \\<rightarrow>\\<beta> P'\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "using trm_simp(7)"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  M' = Fst P'\n  P \\<rightarrow>\\<beta> P'\n  Fst ?P = Fst ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n  (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n\ngoal (9 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>B.\n       Fst P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 9. \\<And>A.\n       Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>B.\n       Fst P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 9. \\<And>A.\n       Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "case (fst2 B)"], ["proof (state)\nthis:\n  Fst P = Fst (SimplyTyped.Pair M' B)\n\ngoal (9 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>B.\n       Fst P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 9. \\<And>A.\n       Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fst P = Fst (SimplyTyped.Pair M' B)\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "using trm_simp(7)"], ["proof (prove)\nusing this:\n  Fst P = Fst (SimplyTyped.Pair M' B)\n  Fst ?P = Fst ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n  (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)\n\ngoal (8 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>A.\n       Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Fst P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 2. \\<And>A A' B.\n       \\<lbrakk>Fst P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 3. \\<And>B B' A.\n       \\<lbrakk>Fst P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 5. \\<And>A A' B.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 6. \\<And>B B' A.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Fst P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = A)\n 8. \\<And>A.\n       Fst P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A)", "qed (\n  metis app_not_fst,\n  metis app_not_fst,\n  metis app_not_fst,\n  metis fn_not_fst,\n  metis pair_not_fst,\n  metis pair_not_fst,\n  metis fst_not_snd,\n  metis fst_not_snd\n)"], ["", "lemma beta_reduction_left_sndE:\n  assumes \"(Snd P) \\<rightarrow>\\<beta> M'\"\n  shows \"(\\<exists>P'. (P \\<rightarrow>\\<beta> P') \\<and> M' = (Snd P')) \\<or> (\\<exists>A B. P = Pair A B \\<and> M' = B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "using assms"], ["proof (prove)\nusing this:\n  Snd P \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "proof(cases)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n 9. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 10. \\<And>A.\n        Snd P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n        (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n        (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "case (snd1 P P')"], ["proof (state)\nthis:\n  Snd P = Snd P\n  M' = Snd P'\n  P \\<rightarrow>\\<beta> P'\n\ngoal (10 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n 9. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Snd Pa; M' = Snd P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 10. \\<And>A.\n        Snd P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n        (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n        (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  M' = Snd P'\n  P \\<rightarrow>\\<beta> P'\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "using trm_simp(8)"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  M' = Snd P'\n  P \\<rightarrow>\\<beta> P'\n  Snd ?P = Snd ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n  (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n\ngoal (9 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n 9. \\<And>A.\n       Snd P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n 9. \\<And>A.\n       Snd P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "case (snd2 A)"], ["proof (state)\nthis:\n  Snd P = Snd (SimplyTyped.Pair A M')\n\ngoal (9 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n 9. \\<And>A.\n       Snd P = Snd (SimplyTyped.Pair A M') \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Snd P = Snd (SimplyTyped.Pair A M')\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "using trm_simp(8)"], ["proof (prove)\nusing this:\n  Snd P = Snd (SimplyTyped.Pair A M')\n  Snd ?P = Snd ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n    (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "by blast"], ["proof (state)\nthis:\n  (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n  (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)\n\ngoal (8 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x T A M.\n       \\<lbrakk>Snd P = App (Fn x T A) M; M' = A[x ::= M]\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 2. \\<And>A A' B.\n       \\<lbrakk>Snd P = App A B; M' = App A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 3. \\<And>B B' A.\n       \\<lbrakk>Snd P = App A B; M' = App A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; M' = Fn x T A';\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 5. \\<And>A A' B.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A' B;\n        A \\<rightarrow>\\<beta> A'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 6. \\<And>B B' A.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; M' = SimplyTyped.Pair A B';\n        B \\<rightarrow>\\<beta> B'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; M' = Fst P';\n        Pa \\<rightarrow>\\<beta> P'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'.\n                             P \\<rightarrow>\\<beta> P' \\<and>\n                             M' = Snd P') \\<or>\n                         (\\<exists>A B.\n                             P = SimplyTyped.Pair A B \\<and> M' = B)\n 8. \\<And>B.\n       Snd P = Fst (SimplyTyped.Pair M' B) \\<Longrightarrow>\n       (\\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P') \\<or>\n       (\\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B)", "qed (\n  metis app_not_snd,\n  metis app_not_snd,\n  metis app_not_snd,\n  metis fn_not_snd,\n  metis pair_not_snd,\n  metis pair_not_snd,\n  metis fst_not_snd,\n  metis fst_not_snd\n)"], ["", "lemma preservation':\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\" and \"M \\<rightarrow>\\<beta> M'\"\n  shows \"\\<Gamma> \\<turnstile> M' : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n  M \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "proof(induction arbitrary: M' rule: typing.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> M'.\n       Unit \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> M' : TUnit\n 2. \\<And>\\<Gamma> x \\<tau> M'.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        Var x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tunit \\<Gamma>)"], ["proof (state)\nthis:\n  Unit \\<rightarrow>\\<beta> M'\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> M'.\n       Unit \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> M' : TUnit\n 2. \\<And>\\<Gamma> x \\<tau> M'.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        Var x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 3. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 4. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 7. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  Unit \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TUnit", "using beta_reduction_left_unitE"], ["proof (prove)\nusing this:\n  Unit \\<rightarrow>\\<beta> M'\n  Unit \\<rightarrow>\\<beta> ?M' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TUnit", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : TUnit\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> M'.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        Var x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> M'.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        Var x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tvar \\<Gamma> x \\<tau>)"], ["proof (state)\nthis:\n  \\<Gamma> x = Some \\<tau>\n  Var x \\<rightarrow>\\<beta> M'\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> M'.\n       \\<lbrakk>\\<Gamma> x = Some \\<tau>;\n        Var x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 6. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  Var x \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "using beta_reduction_left_varE"], ["proof (prove)\nusing this:\n  \\<Gamma> x = Some \\<tau>\n  Var x \\<rightarrow>\\<beta> M'\n  Var ?x \\<rightarrow>\\<beta> ?M' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tapp \\<Gamma> A \\<tau> \\<sigma> B M')"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> B : \\<tau>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TArr \\<tau> \\<sigma>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  App A B \\<rightarrow>\\<beta> M'\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "from \\<open>(App A B) \\<rightarrow>\\<beta> M'\\<close>"], ["proof (chain)\npicking this:\n  App A B \\<rightarrow>\\<beta> M'", "consider\n      \"(\\<exists>x T X. A = (Fn x T X) \\<and> M' = (X[x ::= B]))\" |\n      \"(\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = App A' B)\" |\n      \"(\\<exists>B'. (B \\<rightarrow>\\<beta> B') \\<and> M' = App A B')\""], ["proof (prove)\nusing this:\n  App A B \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x T X.\n                A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n             thesis;\n     \\<exists>A'.\n        A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n     thesis;\n     \\<exists>B'.\n        B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using beta_reduction_left_appE"], ["proof (prove)\nusing this:\n  App A B \\<rightarrow>\\<beta> M'\n  App ?A ?B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  (\\<exists>x T X. ?A = Fn x T X \\<and> ?M' = X[x ::= ?B]) \\<or>\n  (\\<exists>A'. ?A \\<rightarrow>\\<beta> A' \\<and> ?M' = App A' ?B) \\<or>\n  (\\<exists>B'. ?B \\<rightarrow>\\<beta> B' \\<and> ?M' = App ?A B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x T X.\n                A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n             thesis;\n     \\<exists>A'.\n        A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n     thesis;\n     \\<exists>B'.\n        B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>x T X.\n              A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A'.\n      A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n   ?thesis;\n   \\<exists>B'.\n      B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> f \\<tau> \\<sigma> x M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> f : TArr \\<tau> \\<sigma>;\n        \\<And>M'.\n           f \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>;\n        \\<Gamma> \\<turnstile> x : \\<tau>;\n        \\<And>M'.\n           x \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        App f x \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 5. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>x T X.\n              A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A'.\n      A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n   ?thesis;\n   \\<exists>B'.\n      B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "case 1"], ["proof (state)\nthis:\n  \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B]\n\ngoal (3 subgoals):\n 1. \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B]", "obtain x T X where \"A = Fn x T X\" and *: \"M' = (X[x ::= B])\""], ["proof (prove)\nusing this:\n  \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B]\n\ngoal (1 subgoal):\n 1. (\\<And>x T X.\n        \\<lbrakk>A = Fn x T X; M' = X[x ::= B]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A = Fn x T X\n  M' = X[x ::= B]\n\ngoal (3 subgoals):\n 1. \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "have \"\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> X : \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> X : \\<sigma>", "using typing_fnE \\<open>\\<Gamma> \\<turnstile> A : (TArr \\<tau> \\<sigma>)\\<close> \\<open>A = Fn x T X\\<close> type.inject"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> Fn ?x ?T ?A : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     ?\\<theta> = TArr ?T \\<sigma> \\<and> ?\\<Gamma>(?x \\<mapsto>\n     ?T) \\<turnstile> ?A : \\<sigma>\n  \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma>\n  A = Fn x T X\n  (TVar ?x2.0 = TVar ?y2.0) = (?x2.0 = ?y2.0)\n  (TArr ?x31.0 ?x32.0 = TArr ?y31.0 ?y32.0) =\n  (?x31.0 = ?y31.0 \\<and> ?x32.0 = ?y32.0)\n  (TPair ?x41.0 ?x42.0 = TPair ?y41.0 ?y42.0) =\n  (?x41.0 = ?y41.0 \\<and> ?x42.0 = ?y42.0)\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> X : \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> X : \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> (X[x ::= B]) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> X : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> X[x ::= B] : \\<sigma>", "using typing_subst \\<open>\\<Gamma> \\<turnstile> B : \\<tau>\\<close>"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> X : \\<sigma>\n  \\<lbrakk>?\\<Gamma>(?z \\<mapsto> ?\\<tau>) \\<turnstile> ?M : ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?N : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?M[?z ::= ?N] : ?\\<sigma>\n  \\<Gamma> \\<turnstile> B : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> X[x ::= B] : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> X[x ::= B] : \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<exists>x T X. A = Fn x T X \\<and> M' = X[x ::= B] \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 3. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> X[x ::= B] : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> X[x ::= B] : \\<sigma>\n  M' = X[x ::= B]\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "case 2"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B", "obtain A' where \"A \\<rightarrow>\\<beta> A'\" and *: \"M' = (App A' B)\""], ["proof (prove)\nusing this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A \\<rightarrow>\\<beta> A'; M' = App A' B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n  M' = App A' B\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> A' : (TArr \\<tau> \\<sigma>)\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  M' = App A' B\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> A' : TArr \\<tau> \\<sigma>", "using tapp.IH(1)"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  M' = App A' B\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TArr \\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> A' : TArr \\<tau> \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A' : TArr \\<tau> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> (App A' B) : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A' : TArr \\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A' B : \\<sigma>", "using \\<open>\\<Gamma> \\<turnstile> B : \\<tau>\\<close> typing.tapp"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A' : TArr \\<tau> \\<sigma>\n  \\<Gamma> \\<turnstile> B : \\<tau>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?f : TArr ?\\<tau> ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?x : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> App ?f ?x : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A' B : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> App A' B : \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and> M' = App A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A' B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A' B : \\<sigma>\n  M' = App A' B\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "case 3"], ["proof (state)\nthis:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = App A B'\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = App A B'", "obtain B' where \"B \\<rightarrow>\\<beta> B'\" and *: \"M' = (App A B')\""], ["proof (prove)\nusing this:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = App A B'\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B \\<rightarrow>\\<beta> B'; M' = App A B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<rightarrow>\\<beta> B'\n  M' = App A B'\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> B' : \\<tau>\""], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta> B'\n  M' = App A B'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> B' : \\<tau>", "using tapp.IH(2)"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta> B'\n  M' = App A B'\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> B' : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> B' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> (App A B') : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> B' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A B' : \\<sigma>", "using \\<open>\\<Gamma> \\<turnstile> A : (TArr \\<tau> \\<sigma>)\\<close> typing.tapp"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> B' : \\<tau>\n  \\<Gamma> \\<turnstile> A : TArr \\<tau> \\<sigma>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?f : TArr ?\\<tau> ?\\<sigma>;\n   ?\\<Gamma> \\<turnstile> ?x : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> App ?f ?x : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> App A B' : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> App A B' : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and> M' = App A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A B' : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A B' : \\<sigma>\n  M' = App A B'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tfn \\<Gamma> x T A \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> ?M' : \\<sigma>\n  Fn x T A \\<rightarrow>\\<beta> M'\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> ?M' : \\<sigma>\n  Fn x T A \\<rightarrow>\\<beta> M'", "obtain A' where \"A \\<rightarrow>\\<beta> A'\" and *: \"M' = (Fn x T A')\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> ?M' : \\<sigma>\n  Fn x T A \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A \\<rightarrow>\\<beta> A'; M' = Fn x T A'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using beta_reduction_left_fnE"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> ?M' : \\<sigma>\n  Fn x T A \\<rightarrow>\\<beta> M'\n  Fn ?x ?T ?A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<exists>A'. ?A \\<rightarrow>\\<beta> A' \\<and> ?M' = Fn ?x ?T A'\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A \\<rightarrow>\\<beta> A'; M' = Fn x T A'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n  M' = Fn x T A'\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma>(x \\<mapsto> T) \\<turnstile> A' : \\<sigma>\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  M' = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T) \\<turnstile> A' : \\<sigma>", "using tfn.IH"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  M' = Fn x T A'\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> ?M' : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma>(x \\<mapsto> T) \\<turnstile> A' : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A' : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "hence \"\\<Gamma> \\<turnstile> (Fn x T A') : (TArr T \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A' : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A' : TArr T \\<sigma>", "using typing.tfn"], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A' : \\<sigma>\n  ?\\<Gamma>(?x \\<mapsto>\n  ?\\<tau>) \\<turnstile> ?A : ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?\\<tau> ?A : TArr ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> Fn x T A' : TArr T \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Fn x T A' : TArr T \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> A \\<sigma> M'.\n       \\<lbrakk>\\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> A : \\<sigma>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma>(x \\<mapsto> \\<tau>) \\<turnstile> M' : \\<sigma>;\n        Fn x \\<tau> A \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TArr \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 4. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A' : TArr T \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TArr T \\<sigma>", "using *"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A' : TArr T \\<sigma>\n  M' = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TArr T \\<sigma>", "by auto"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : TArr T \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tpair \\<Gamma> A \\<tau> B \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<sigma>\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<sigma>\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'", "consider\n      \"\\<exists>A'. (A \\<rightarrow>\\<beta> A') \\<and> M' = (Pair A' B)\"\n    | \"\\<exists>B'. (B \\<rightarrow>\\<beta> B') \\<and> M' = (Pair A B')\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<sigma>\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>A'.\n                A \\<rightarrow>\\<beta> A' \\<and>\n                M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n             thesis;\n     \\<exists>B'.\n        B \\<rightarrow>\\<beta> B' \\<and>\n        M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using beta_reduction_left_pairE"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<sigma>\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\n  SimplyTyped.Pair ?A ?B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  (\\<exists>A'.\n      ?A \\<rightarrow>\\<beta> A' \\<and> ?M' = SimplyTyped.Pair A' ?B) \\<or>\n  (\\<exists>B'.\n      ?B \\<rightarrow>\\<beta> B' \\<and> ?M' = SimplyTyped.Pair ?A B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>A'.\n                A \\<rightarrow>\\<beta> A' \\<and>\n                M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n             thesis;\n     \\<exists>B'.\n        B \\<rightarrow>\\<beta> B' \\<and>\n        M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>A'.\n              A \\<rightarrow>\\<beta> A' \\<and>\n              M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n           ?thesis;\n   \\<exists>B'.\n      B \\<rightarrow>\\<beta> B' \\<and>\n      M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> A \\<tau> B \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> A : \\<tau>;\n        \\<And>M'.\n           A \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<tau>;\n        \\<Gamma> \\<turnstile> B : \\<sigma>;\n        \\<And>M'.\n           B \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : \\<sigma>;\n        SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 3. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>A'.\n              A \\<rightarrow>\\<beta> A' \\<and>\n              M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n           ?thesis;\n   \\<exists>B'.\n      B \\<rightarrow>\\<beta> B' \\<and>\n      M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and>\n       M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "case 1"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = SimplyTyped.Pair A' B\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and>\n       M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = SimplyTyped.Pair A' B", "obtain A' where \"A \\<rightarrow>\\<beta> A'\" and \"M' = Pair A' B\""], ["proof (prove)\nusing this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<and> M' = SimplyTyped.Pair A' B\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A \\<rightarrow>\\<beta> A';\n         M' = SimplyTyped.Pair A' B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n  M' = SimplyTyped.Pair A' B\n\ngoal (2 subgoals):\n 1. \\<exists>A'.\n       A \\<rightarrow>\\<beta> A' \\<and>\n       M' = SimplyTyped.Pair A' B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n 2. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  M' = SimplyTyped.Pair A' B\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "using tpair typing.tpair"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> A'\n  M' = SimplyTyped.Pair A' B\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<sigma>\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?A : ?\\<tau>;\n   ?\\<Gamma> \\<turnstile> ?B : ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n      ?B : TPair ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "case 2"], ["proof (state)\nthis:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B'\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B'", "obtain B' where \"B \\<rightarrow>\\<beta> B'\" and \"M' = Pair A B'\""], ["proof (prove)\nusing this:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<and> M' = SimplyTyped.Pair A B'\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B \\<rightarrow>\\<beta> B';\n         M' = SimplyTyped.Pair A B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<rightarrow>\\<beta> B'\n  M' = SimplyTyped.Pair A B'\n\ngoal (1 subgoal):\n 1. \\<exists>B'.\n       B \\<rightarrow>\\<beta> B' \\<and>\n       M' = SimplyTyped.Pair A B' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta> B'\n  M' = SimplyTyped.Pair A B'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "using tpair typing.tpair"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta> B'\n  M' = SimplyTyped.Pair A B'\n  \\<Gamma> \\<turnstile> A : \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  A \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<tau>\n  B \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : \\<sigma>\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta> M'\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?A : ?\\<tau>;\n   ?\\<Gamma> \\<turnstile> ?B : ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n      ?B : TPair ?\\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tfst \\<Gamma> P \\<tau> \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Fst P \\<rightarrow>\\<beta> M'\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Fst P \\<rightarrow>\\<beta> M'", "consider\n      \"\\<exists>P'. (P \\<rightarrow>\\<beta> P') \\<and> M' = Fst P'\"\n    | \"\\<exists>A B. P = Pair A B \\<and> M' = A\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Fst P \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'.\n                P \\<rightarrow>\\<beta> P' \\<and>\n                M' = Fst P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using beta_reduction_left_fstE"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Fst P \\<rightarrow>\\<beta> M'\n  Fst ?P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  (\\<exists>P'. ?P \\<rightarrow>\\<beta> P' \\<and> ?M' = Fst P') \\<or>\n  (\\<exists>A B. ?P = SimplyTyped.Pair A B \\<and> ?M' = A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'.\n                P \\<rightarrow>\\<beta> P' \\<and>\n                M' = Fst P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>P'.\n              P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Fst P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>P'.\n              P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "case 1"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P'", "obtain P' where \"P \\<rightarrow>\\<beta> P'\" and \"M' = Fst P'\""], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<rightarrow>\\<beta> P'; M' = Fst P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<rightarrow>\\<beta> P'\n  M' = Fst P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<rightarrow>\\<beta> P' \\<and> M' = Fst P' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>\n 2. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "thus ?thesis"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  M' = Fst P'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "using tfst typing.tfst"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  M' = Fst P'\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Fst P \\<rightarrow>\\<beta> M'\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "case 2"], ["proof (state)\nthis:\n  \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A\n\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A", "obtain A B where \"P = Pair A B\" and \"M' = A\""], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A\n\ngoal (1 subgoal):\n 1. (\\<And>A B.\n        \\<lbrakk>P = SimplyTyped.Pair A B; M' = A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n  M' = A\n\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = A \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<tau>", "thus ?thesis"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  M' = A\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "using \\<open>\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>)\\<close> typing_pairE"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  M' = A\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n                          ?B : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<tau> \\<sigma>.\n     ?\\<theta> = TPair \\<tau> \\<sigma> \\<and>\n     ?\\<Gamma> \\<turnstile> ?A : \\<tau> \\<and>\n     ?\\<Gamma> \\<turnstile> ?B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "case (tsnd \\<Gamma> P \\<tau> \\<sigma>)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Snd P \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Snd P \\<rightarrow>\\<beta> M'", "consider\n      \"\\<exists>P'. (P \\<rightarrow>\\<beta> P') \\<and> M' = Snd P'\"\n    | \"\\<exists>A B. P = Pair A B \\<and> M' = B\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Snd P \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'.\n                P \\<rightarrow>\\<beta> P' \\<and>\n                M' = Snd P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using beta_reduction_left_sndE"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Snd P \\<rightarrow>\\<beta> M'\n  Snd ?P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  (\\<exists>P'. ?P \\<rightarrow>\\<beta> P' \\<and> ?M' = Snd P') \\<or>\n  (\\<exists>A B. ?P = SimplyTyped.Pair A B \\<and> ?M' = B)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'.\n                P \\<rightarrow>\\<beta> P' \\<and>\n                M' = Snd P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>P'.\n              P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> P \\<tau> \\<sigma> M'.\n       \\<lbrakk>\\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>;\n        \\<And>M'.\n           P \\<rightarrow>\\<beta> M' \\<Longrightarrow>\n           \\<Gamma> \\<turnstile> M' : TPair \\<tau> \\<sigma>;\n        Snd P \\<rightarrow>\\<beta> M'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>P'.\n              P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "case 1"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P'", "obtain P' where \"P \\<rightarrow>\\<beta> P'\" and \"M' = Snd P'\""], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P \\<rightarrow>\\<beta> P'; M' = Snd P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<rightarrow>\\<beta> P'\n  M' = Snd P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'.\n       P \\<rightarrow>\\<beta> P' \\<and> M' = Snd P' \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>\n 2. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  M' = Snd P'\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "using tsnd typing.tsnd"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta> P'\n  M' = Snd P'\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  P \\<rightarrow>\\<beta> ?M' \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> ?M' : TPair \\<tau> \\<sigma>\n  Snd P \\<rightarrow>\\<beta> M'\n  ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> ?\\<sigma> \\<Longrightarrow>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "case 2"], ["proof (state)\nthis:\n  \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B\n\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B", "obtain A B where \"P = Pair A B\" and \"M' = B\""], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B\n\ngoal (1 subgoal):\n 1. (\\<And>A B.\n        \\<lbrakk>P = SimplyTyped.Pair A B; M' = B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n  M' = B\n\ngoal (1 subgoal):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<and> M' = B \\<Longrightarrow>\n    \\<Gamma> \\<turnstile> M' : \\<sigma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  M' = B\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "using \\<open>\\<Gamma> \\<turnstile> P : (TPair \\<tau> \\<sigma>)\\<close> typing_pairE"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  M' = B\n  \\<Gamma> \\<turnstile> P : TPair \\<tau> \\<sigma>\n  ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n                          ?B : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<tau> \\<sigma>.\n     ?\\<theta> = TPair \\<tau> \\<sigma> \\<and>\n     ?\\<Gamma> \\<turnstile> ?A : \\<tau> \\<and>\n     ?\\<Gamma> \\<turnstile> ?B : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<sigma>", "by blast"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<sigma>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive NF :: \"'a trm \\<Rightarrow> bool\" where\n  unit: \"NF Unit\"\n| var: \"NF (Var x)\"\n| app: \"\\<lbrakk>A \\<noteq> Fn x T A'; NF A; NF B\\<rbrakk> \\<Longrightarrow> NF (App A B)\"\n| fn: \"NF A \\<Longrightarrow> NF (Fn x T A)\"\n| pair: \"\\<lbrakk>NF A; NF B\\<rbrakk> \\<Longrightarrow> NF (Pair A B)\"\n| fst: \"\\<lbrakk>P \\<noteq> Pair A B; NF P\\<rbrakk> \\<Longrightarrow> NF (Fst P)\"\n| snd: \"\\<lbrakk>P \\<noteq> Pair A B; NF P\\<rbrakk> \\<Longrightarrow> NF (Snd P)\""], ["", "theorem progress:\n  assumes \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"NF M \\<or> (\\<exists>M'. (M \\<rightarrow>\\<beta> M'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NF M \\<or> (\\<exists>M'. M \\<rightarrow>\\<beta> M')", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. NF M \\<or> (\\<exists>M'. M \\<rightarrow>\\<beta> M')", "proof(induction M arbitrary: \\<Gamma> \\<tau> rule: trm_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Unit : \\<tau> \\<Longrightarrow>\n       NF Unit \\<or> Ex (beta_reduction Unit)\n 2. \\<And>x \\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Var x : \\<tau> \\<Longrightarrow>\n       NF (Var x) \\<or> Ex (beta_reduction (Var x))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 4. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 5. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 7. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case 1"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Unit : \\<tau>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Unit : \\<tau> \\<Longrightarrow>\n       NF Unit \\<or> Ex (beta_reduction Unit)\n 2. \\<And>x \\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Var x : \\<tau> \\<Longrightarrow>\n       NF (Var x) \\<or> Ex (beta_reduction (Var x))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 4. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 5. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 7. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Unit : \\<tau>\n\ngoal (1 subgoal):\n 1. NF Unit \\<or> (\\<exists>a. Unit \\<rightarrow>\\<beta> a)", "using NF.unit"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Unit : \\<tau>\n  NF Unit\n\ngoal (1 subgoal):\n 1. NF Unit \\<or> (\\<exists>a. Unit \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF Unit \\<or> (\\<exists>a. Unit \\<rightarrow>\\<beta> a)\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Var x : \\<tau> \\<Longrightarrow>\n       NF (Var x) \\<or> Ex (beta_reduction (Var x))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Var x : \\<tau> \\<Longrightarrow>\n       NF (Var x) \\<or> Ex (beta_reduction (Var x))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case (2 x)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> Var x : \\<tau>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> \\<tau>.\n       \\<Gamma> \\<turnstile> Var x : \\<tau> \\<Longrightarrow>\n       NF (Var x) \\<or> Ex (beta_reduction (Var x))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 3. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 4. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 6. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Var x : \\<tau>\n\ngoal (1 subgoal):\n 1. NF (Var x) \\<or> (\\<exists>a. Var x \\<rightarrow>\\<beta> a)", "using NF.var"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Var x : \\<tau>\n  NF (Var ?x)\n\ngoal (1 subgoal):\n 1. NF (Var x) \\<or> (\\<exists>a. Var x \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (Var x) \\<or> (\\<exists>a. Var x \\<rightarrow>\\<beta> a)\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case (3 A B)"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau> \\<Longrightarrow>\n  NF B \\<or> (\\<exists>a. B \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> App A B : \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "from \\<open>\\<Gamma> \\<turnstile> App A B : \\<tau>\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> App A B : \\<tau>", "obtain \\<sigma>\n      where \"\\<Gamma> \\<turnstile> A : (TArr \\<sigma> \\<tau>)\" and \"\\<Gamma> \\<turnstile> B : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A B : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>\\<Gamma> \\<turnstile> A : TArr \\<sigma> \\<tau>;\n         \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using typing_appE"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> App A B : \\<tau>\n  ?\\<Gamma> \\<turnstile> App ?A ?B : ?\\<sigma> \\<Longrightarrow>\n  \\<exists>\\<tau>.\n     ?\\<Gamma> \\<turnstile> ?A : TArr \\<tau> ?\\<sigma> \\<and>\n     ?\\<Gamma> \\<turnstile> ?B : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>\\<Gamma> \\<turnstile> A : TArr \\<sigma> \\<tau>;\n         \\<Gamma> \\<turnstile> B : \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> A : TArr \\<sigma> \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "hence A: \"NF A \\<or> (\\<exists>A'. (A \\<rightarrow>\\<beta> A'))\" and B: \"NF B \\<or> (\\<exists>B'. (B \\<rightarrow>\\<beta> B'))\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : TArr \\<sigma> \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n\ngoal (1 subgoal):\n 1. NF A \\<or> (\\<exists>A'. A \\<rightarrow>\\<beta> A') &&&\n    NF B \\<or> (\\<exists>B'. B \\<rightarrow>\\<beta> B')", "using \"3.IH\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> A : TArr \\<sigma> \\<tau>\n  \\<Gamma> \\<turnstile> B : \\<sigma>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau> \\<Longrightarrow>\n  NF B \\<or> (\\<exists>a. B \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. NF A \\<or> (\\<exists>A'. A \\<rightarrow>\\<beta> A') &&&\n    NF B \\<or> (\\<exists>B'. B \\<rightarrow>\\<beta> B')", "by auto"], ["proof (state)\nthis:\n  NF A \\<or> (\\<exists>A'. A \\<rightarrow>\\<beta> A')\n  NF B \\<or> (\\<exists>B'. B \\<rightarrow>\\<beta> B')\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "consider \"NF B\" | \"\\<exists>B'. (B \\<rightarrow>\\<beta> B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NF B \\<Longrightarrow> thesis;\n     \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using B"], ["proof (prove)\nusing this:\n  NF B \\<or> (\\<exists>B'. B \\<rightarrow>\\<beta> B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF B \\<Longrightarrow> thesis;\n     \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>NF B \\<Longrightarrow> ?thesis;\n   \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (5 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> App A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (App A B) \\<or> Ex (beta_reduction (App A B))\n 2. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 3. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 5. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>NF B \\<Longrightarrow> ?thesis;\n   \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. NF B \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  NF B\n\ngoal (2 subgoals):\n 1. NF B \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "consider \"NF A\" | \"\\<exists>A'. (A \\<rightarrow>\\<beta> A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>NF A \\<Longrightarrow> thesis;\n     \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using A"], ["proof (prove)\nusing this:\n  NF A \\<or> (\\<exists>A'. A \\<rightarrow>\\<beta> A')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF A \\<Longrightarrow> thesis;\n     \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>NF A \\<Longrightarrow> ?thesis;\n   \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. NF B \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>NF A \\<Longrightarrow> ?thesis;\n   \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. NF A \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  NF A\n\ngoal (2 subgoals):\n 1. NF A \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "consider \"\\<exists>x T A'. A = Fn x T A'\" | \"\\<nexists>x T A'. A = Fn x T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x T A'. A = Fn x T A' \\<Longrightarrow> thesis;\n     \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>x T A'. A = Fn x T A' \\<Longrightarrow> ?thesis;\n   \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. NF A \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>x T A'. A = Fn x T A' \\<Longrightarrow> ?thesis;\n   \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  \\<exists>x T A'. A = Fn x T A'\n\ngoal (2 subgoals):\n 1. \\<exists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x T A'. A = Fn x T A'", "obtain x T A' where \"A = Fn x T A'\""], ["proof (prove)\nusing this:\n  \\<exists>x T A'. A = Fn x T A'\n\ngoal (1 subgoal):\n 1. (\\<And>x T A'. A = Fn x T A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A = Fn x T A'\n\ngoal (2 subgoals):\n 1. \\<exists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "hence \"(App A B) \\<rightarrow>\\<beta> (A'[x ::= B])\""], ["proof (prove)\nusing this:\n  A = Fn x T A'\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta> A'[x ::= B]", "using beta_reduction.beta"], ["proof (prove)\nusing this:\n  A = Fn x T A'\n  App (Fn ?x ?T ?A) ?M \\<rightarrow>\\<beta> ?A[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta> A'[x ::= B]", "by metis"], ["proof (state)\nthis:\n  App A B \\<rightarrow>\\<beta> A'[x ::= B]\n\ngoal (2 subgoals):\n 1. \\<exists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n 2. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  App A B \\<rightarrow>\\<beta> A'[x ::= B]\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "by blast"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<nexists>x T A'. A = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A'. A = Fn x T A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>x T A'. A = Fn x T A'\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "using \\<open>NF A\\<close> \\<open>NF B\\<close> NF.app"], ["proof (prove)\nusing this:\n  \\<nexists>x T A'. A = Fn x T A'\n  NF A\n  NF B\n  \\<lbrakk>?A \\<noteq> Fn ?x ?T ?A'; NF ?A; NF ?B\\<rbrakk>\n  \\<Longrightarrow> NF (App ?A ?B)\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A'\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "using beta_reduction.app1"], ["proof (prove)\nusing this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A'\n  ?A \\<rightarrow>\\<beta> ?A' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta> App ?A' ?B\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B'\n\ngoal (1 subgoal):\n 1. \\<exists>B'. B \\<rightarrow>\\<beta> B' \\<Longrightarrow>\n    NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B'\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "using beta_reduction.app2"], ["proof (prove)\nusing this:\n  \\<exists>B'. B \\<rightarrow>\\<beta> B'\n  ?B \\<rightarrow>\\<beta> ?B' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta> App ?A ?B'\n\ngoal (1 subgoal):\n 1. NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (App A B) \\<or> (\\<exists>a. App A B \\<rightarrow>\\<beta> a)\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case (4 x T A)"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "from \\<open>\\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> Fn x T A : \\<tau>", "obtain \\<sigma>\n      where \"\\<tau> = TArr T \\<sigma>\" and \"\\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>\\<tau> = TArr T \\<sigma>;\n         \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using typing_fnE"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\n  ?\\<Gamma> \\<turnstile> Fn ?x ?T ?A : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<sigma>.\n     ?\\<theta> = TArr ?T \\<sigma> \\<and> ?\\<Gamma>(?x \\<mapsto>\n     ?T) \\<turnstile> ?A : \\<sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<sigma>.\n        \\<lbrakk>\\<tau> = TArr T \\<sigma>;\n         \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<tau> = TArr T \\<sigma>\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "from \\<open>\\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>", "consider \"NF A\" | \"\\<exists>A'. (A \\<rightarrow>\\<beta> A')\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF A \\<Longrightarrow> thesis;\n     \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using \"4.IH\""], ["proof (prove)\nusing this:\n  \\<Gamma>(x \\<mapsto> T) \\<turnstile> A : \\<sigma>\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF A \\<Longrightarrow> thesis;\n     \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>NF A \\<Longrightarrow> ?thesis;\n   \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (4 subgoals):\n 1. \\<And>x T A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fn x T A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fn x T A) \\<or> Ex (beta_reduction (Fn x T A))\n 2. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 4. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>NF A \\<Longrightarrow> ?thesis;\n   \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. NF A \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)\n 2. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  NF A\n\ngoal (2 subgoals):\n 1. NF A \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)\n 2. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  NF A\n\ngoal (1 subgoal):\n 1. NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "using NF.fn"], ["proof (prove)\nusing this:\n  NF A\n  NF ?A \\<Longrightarrow> NF (Fn ?x ?T ?A)\n\ngoal (1 subgoal):\n 1. NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A'", "obtain A' where \"A \\<rightarrow>\\<beta> A'\""], ["proof (prove)\nusing this:\n  \\<exists>A'. A \\<rightarrow>\\<beta> A'\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "obtain M' where \"M' = Fn x T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M'. M' = Fn x T A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  M' = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "hence \"(Fn x T A) \\<rightarrow>\\<beta> M'\""], ["proof (prove)\nusing this:\n  M' = Fn x T A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta> M'", "using \\<open>A \\<rightarrow>\\<beta> A'\\<close> beta_reduction.fn"], ["proof (prove)\nusing this:\n  M' = Fn x T A'\n  A \\<rightarrow>\\<beta> A'\n  ?A \\<rightarrow>\\<beta> ?A' \\<Longrightarrow>\n  Fn ?x ?T ?A \\<rightarrow>\\<beta> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta> M'", "by metis"], ["proof (state)\nthis:\n  Fn x T A \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A \\<rightarrow>\\<beta> A' \\<Longrightarrow>\n    NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fn x T A \\<rightarrow>\\<beta> M'\n\ngoal (1 subgoal):\n 1. NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)", "by auto"], ["proof (state)\nthis:\n  NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (Fn x T A) \\<or> (\\<exists>a. Fn x T A \\<rightarrow>\\<beta> a)\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case (5 A B)"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau> \\<Longrightarrow>\n  NF B \\<or> (\\<exists>a. B \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n\ngoal (3 subgoals):\n 1. \\<And>A B \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<And>\\<Gamma> \\<tau>.\n           \\<Gamma> \\<turnstile> B : \\<tau> \\<Longrightarrow>\n           NF B \\<or> Ex (beta_reduction B);\n        \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (SimplyTyped.Pair A B) \\<or>\n                         Ex (beta_reduction (SimplyTyped.Pair A B))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 3. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau> \\<Longrightarrow>\n  NF B \\<or> (\\<exists>a. B \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n\ngoal (1 subgoal):\n 1. NF (SimplyTyped.Pair A B) \\<or>\n    (\\<exists>a. SimplyTyped.Pair A B \\<rightarrow>\\<beta> a)", "using typing_pairE beta_reduction.pair1 beta_reduction.pair2 NF.pair"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> A : ?\\<tau> \\<Longrightarrow>\n  NF A \\<or> (\\<exists>a. A \\<rightarrow>\\<beta> a)\n  ?\\<Gamma> \\<turnstile> B : ?\\<tau> \\<Longrightarrow>\n  NF B \\<or> (\\<exists>a. B \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> SimplyTyped.Pair A B : \\<tau>\n  ?\\<Gamma> \\<turnstile> SimplyTyped.Pair ?A\n                          ?B : ?\\<theta> \\<Longrightarrow>\n  \\<exists>\\<tau> \\<sigma>.\n     ?\\<theta> = TPair \\<tau> \\<sigma> \\<and>\n     ?\\<Gamma> \\<turnstile> ?A : \\<tau> \\<and>\n     ?\\<Gamma> \\<turnstile> ?B : \\<sigma>\n  ?A \\<rightarrow>\\<beta> ?A' \\<Longrightarrow>\n  SimplyTyped.Pair ?A ?B \\<rightarrow>\\<beta> SimplyTyped.Pair ?A' ?B\n  ?B \\<rightarrow>\\<beta> ?B' \\<Longrightarrow>\n  SimplyTyped.Pair ?A ?B \\<rightarrow>\\<beta> SimplyTyped.Pair ?A ?B'\n  \\<lbrakk>NF ?A; NF ?B\\<rbrakk>\n  \\<Longrightarrow> NF (SimplyTyped.Pair ?A ?B)\n\ngoal (1 subgoal):\n 1. NF (SimplyTyped.Pair A B) \\<or>\n    (\\<exists>a. SimplyTyped.Pair A B \\<rightarrow>\\<beta> a)", "by meson"], ["proof (state)\nthis:\n  NF (SimplyTyped.Pair A B) \\<or>\n  (\\<exists>a. SimplyTyped.Pair A B \\<rightarrow>\\<beta> a)\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case (6 P)"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Fst P : \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "from this"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Fst P : \\<tau>", "consider \"NF P\" | \"\\<exists>P'. (P \\<rightarrow>\\<beta> P')\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Fst P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF P \\<Longrightarrow> thesis;\n     \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using typing_fstE"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Fst P : \\<tau>\n  ?\\<Gamma> \\<turnstile> Fst ?P : ?\\<tau> \\<Longrightarrow>\n  \\<exists>\\<sigma>. ?\\<Gamma> \\<turnstile> ?P : TPair ?\\<tau> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF P \\<Longrightarrow> thesis;\n     \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>NF P \\<Longrightarrow> ?thesis;\n   \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Fst A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Fst A) \\<or> Ex (beta_reduction (Fst A))\n 2. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>NF P \\<Longrightarrow> ?thesis;\n   \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. NF P \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  NF P\n\ngoal (2 subgoals):\n 1. NF P \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "consider \"\\<exists>A B. P = Pair A B\" | \"\\<nexists>A B. P = Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n             thesis;\n     \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. NF P \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B. P = SimplyTyped.Pair A B", "obtain A B where \"P = Pair A B\""], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. (\\<And>A B.\n        P = SimplyTyped.Pair A B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "hence \"(Fst P) \\<rightarrow>\\<beta> A\""], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. Fst P \\<rightarrow>\\<beta> A", "using beta_reduction.fst2"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  Fst (SimplyTyped.Pair ?A ?B) \\<rightarrow>\\<beta> ?A\n\ngoal (1 subgoal):\n 1. Fst P \\<rightarrow>\\<beta> A", "by metis"], ["proof (state)\nthis:\n  Fst P \\<rightarrow>\\<beta> A\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Fst P \\<rightarrow>\\<beta> A\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "by auto"], ["proof (state)\nthis:\n  NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "using \\<open>NF P\\<close> NF.fst"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n  NF P\n  \\<lbrakk>?P \\<noteq> SimplyTyped.Pair ?A ?B; NF ?P\\<rbrakk>\n  \\<Longrightarrow> NF (Fst ?P)\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P'\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "using beta_reduction.fst1"], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P'\n  ?P \\<rightarrow>\\<beta> ?P' \\<Longrightarrow>\n  Fst ?P \\<rightarrow>\\<beta> Fst ?P'\n\ngoal (1 subgoal):\n 1. NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (Fst P) \\<or> (\\<exists>a. Fst P \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "case (7 P)"], ["proof (state)\nthis:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Snd P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "from this"], ["proof (chain)\npicking this:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Snd P : \\<tau>", "consider \"NF P\" | \"\\<exists>P'. (P \\<rightarrow>\\<beta> P')\""], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Snd P : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF P \\<Longrightarrow> thesis;\n     \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using typing_sndE"], ["proof (prove)\nusing this:\n  ?\\<Gamma> \\<turnstile> P : ?\\<tau> \\<Longrightarrow>\n  NF P \\<or> (\\<exists>a. P \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> Snd P : \\<tau>\n  ?\\<Gamma> \\<turnstile> Snd ?P : ?\\<sigma> \\<Longrightarrow>\n  \\<exists>\\<tau>. ?\\<Gamma> \\<turnstile> ?P : TPair \\<tau> ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>NF P \\<Longrightarrow> thesis;\n     \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>NF P \\<Longrightarrow> ?thesis;\n   \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>A \\<Gamma> \\<tau>.\n       \\<lbrakk>\\<And>\\<Gamma> \\<tau>.\n                   \\<Gamma> \\<turnstile> A : \\<tau> \\<Longrightarrow>\n                   NF A \\<or> Ex (beta_reduction A);\n        \\<Gamma> \\<turnstile> Snd A : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF (Snd A) \\<or> Ex (beta_reduction (Snd A))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>NF P \\<Longrightarrow> ?thesis;\n   \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. NF P \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  NF P\n\ngoal (2 subgoals):\n 1. NF P \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "consider \"\\<exists>A B. P = Pair A B\" | \"\\<nexists>A B. P = Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n             thesis;\n     \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. NF P \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "case 1"], ["proof (state)\nthis:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B. P = SimplyTyped.Pair A B", "obtain A B where \"P = Pair A B\""], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. (\\<And>A B.\n        P = SimplyTyped.Pair A B \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "hence \"(Snd P) \\<rightarrow>\\<beta> B\""], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. Snd P \\<rightarrow>\\<beta> B", "using beta_reduction.snd2"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  Snd (SimplyTyped.Pair ?A ?B) \\<rightarrow>\\<beta> ?B\n\ngoal (1 subgoal):\n 1. Snd P \\<rightarrow>\\<beta> B", "by metis"], ["proof (state)\nthis:\n  Snd P \\<rightarrow>\\<beta> B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Snd P \\<rightarrow>\\<beta> B\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "by auto"], ["proof (state)\nthis:\n  NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "using \\<open>NF P\\<close> NF.snd"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n  NF P\n  \\<lbrakk>?P \\<noteq> SimplyTyped.Pair ?A ?B; NF ?P\\<rbrakk>\n  \\<Longrightarrow> NF (Snd ?P)\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "case 2"], ["proof (state)\nthis:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P'\n\ngoal (1 subgoal):\n 1. \\<exists>P'. P \\<rightarrow>\\<beta> P' \\<Longrightarrow>\n    NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P'\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "using beta_reduction.snd1"], ["proof (prove)\nusing this:\n  \\<exists>P'. P \\<rightarrow>\\<beta> P'\n  ?P \\<rightarrow>\\<beta> ?P' \\<Longrightarrow>\n  Snd ?P \\<rightarrow>\\<beta> Snd ?P'\n\ngoal (1 subgoal):\n 1. NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NF (Snd P) \\<or> (\\<exists>a. Snd P \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive beta_reduces :: \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\" (\"_ \\<rightarrow>\\<beta>\\<^sup>* _\") where\n  reflexive:  \"M \\<rightarrow>\\<beta>\\<^sup>* M\"\n| transitive: \"\\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; M' \\<rightarrow>\\<beta> M''\\<rbrakk> \\<Longrightarrow> M \\<rightarrow>\\<beta>\\<^sup>* M''\""], ["", "lemma beta_reduces_composition:\n  assumes \"A' \\<rightarrow>\\<beta>\\<^sup>* A''\" and \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"A \\<rightarrow>\\<beta>\\<^sup>* A''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A''", "using assms"], ["proof (prove)\nusing this:\n  A' \\<rightarrow>\\<beta>\\<^sup>* A''\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A''", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n       A \\<rightarrow>\\<beta>\\<^sup>* M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n        A \\<rightarrow>\\<beta>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M'';\n        A \\<rightarrow>\\<beta>\\<^sup>* M\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* M''", "case (reflexive B)"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n       A \\<rightarrow>\\<beta>\\<^sup>* M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n        A \\<rightarrow>\\<beta>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M'';\n        A \\<rightarrow>\\<beta>\\<^sup>* M\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* M''", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* B", "."], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n        A \\<rightarrow>\\<beta>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M'';\n        A \\<rightarrow>\\<beta>\\<^sup>* M\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n        A \\<rightarrow>\\<beta>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M'';\n        A \\<rightarrow>\\<beta>\\<^sup>* M\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* M''", "case (transitive B B' B'')"], ["proof (state)\nthis:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  B' \\<rightarrow>\\<beta> B''\n  A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow>\n  A \\<rightarrow>\\<beta>\\<^sup>* B'\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        A \\<rightarrow>\\<beta>\\<^sup>* M \\<Longrightarrow>\n        A \\<rightarrow>\\<beta>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M'';\n        A \\<rightarrow>\\<beta>\\<^sup>* M\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* M''", "thus ?case"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  B' \\<rightarrow>\\<beta> B''\n  A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow>\n  A \\<rightarrow>\\<beta>\\<^sup>* B'\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* B''", "using beta_reduces.transitive"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  B' \\<rightarrow>\\<beta> B''\n  A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow>\n  A \\<rightarrow>\\<beta>\\<^sup>* B'\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* B''", "by metis"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* B''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_fvs:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"fvs A' \\<subseteq> fvs A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A", "using assms"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. fvs M \\<subseteq> fvs M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; fvs M' \\<subseteq> fvs M;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> fvs M'' \\<subseteq> fvs M", "case (reflexive M)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. fvs M \\<subseteq> fvs M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; fvs M' \\<subseteq> fvs M;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> fvs M'' \\<subseteq> fvs M", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs M \\<subseteq> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs M \\<subseteq> fvs M\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; fvs M' \\<subseteq> fvs M;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> fvs M'' \\<subseteq> fvs M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; fvs M' \\<subseteq> fvs M;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> fvs M'' \\<subseteq> fvs M", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  fvs M' \\<subseteq> fvs M\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; fvs M' \\<subseteq> fvs M;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> fvs M'' \\<subseteq> fvs M", "hence \"fvs M'' \\<subseteq> fvs M'\""], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  fvs M' \\<subseteq> fvs M\n\ngoal (1 subgoal):\n 1. fvs M'' \\<subseteq> fvs M'", "using beta_reduction_fvs"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  fvs M' \\<subseteq> fvs M\n  ?M \\<rightarrow>\\<beta> ?M' \\<Longrightarrow> fvs ?M' \\<subseteq> fvs ?M\n\ngoal (1 subgoal):\n 1. fvs M'' \\<subseteq> fvs M'", "by metis"], ["proof (state)\nthis:\n  fvs M'' \\<subseteq> fvs M'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; fvs M' \\<subseteq> fvs M;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> fvs M'' \\<subseteq> fvs M", "thus ?case"], ["proof (prove)\nusing this:\n  fvs M'' \\<subseteq> fvs M'\n\ngoal (1 subgoal):\n 1. fvs M'' \\<subseteq> fvs M", "using \\<open>fvs M' \\<subseteq> fvs M\\<close>"], ["proof (prove)\nusing this:\n  fvs M'' \\<subseteq> fvs M'\n  fvs M' \\<subseteq> fvs M\n\ngoal (1 subgoal):\n 1. fvs M'' \\<subseteq> fvs M", "by auto"], ["proof (state)\nthis:\n  fvs M'' \\<subseteq> fvs M\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_app_left:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"(App A B) \\<rightarrow>\\<beta>\\<^sup>* (App A' B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B", "using assms"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. App M B \\<rightarrow>\\<beta>\\<^sup>* App M B\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App M B \\<rightarrow>\\<beta>\\<^sup>* App M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App M B \\<rightarrow>\\<beta>\\<^sup>* App M'' B", "case (reflexive A)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. App M B \\<rightarrow>\\<beta>\\<^sup>* App M B\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App M B \\<rightarrow>\\<beta>\\<^sup>* App M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App M B \\<rightarrow>\\<beta>\\<^sup>* App M'' B", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B", "."], ["proof (state)\nthis:\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App M B \\<rightarrow>\\<beta>\\<^sup>* App M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App M B \\<rightarrow>\\<beta>\\<^sup>* App M'' B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App M B \\<rightarrow>\\<beta>\\<^sup>* App M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App M B \\<rightarrow>\\<beta>\\<^sup>* App M'' B", "case (transitive A A' A'')"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App M B \\<rightarrow>\\<beta>\\<^sup>* App M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App M B \\<rightarrow>\\<beta>\\<^sup>* App M'' B", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A'' B", "using beta_reduces.transitive beta_reduction.app1"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?A \\<rightarrow>\\<beta> ?A' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta> App ?A' ?B\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A'' B", "by metis"], ["proof (state)\nthis:\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A'' B\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_app_right:\n  assumes \"B \\<rightarrow>\\<beta>\\<^sup>* B'\"\n  shows \"(App A B) \\<rightarrow>\\<beta>\\<^sup>* (App A B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B'", "using assms"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B'", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. App A M \\<rightarrow>\\<beta>\\<^sup>* App A M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App A M \\<rightarrow>\\<beta>\\<^sup>* App A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App A M \\<rightarrow>\\<beta>\\<^sup>* App A M''", "case (reflexive B)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. App A M \\<rightarrow>\\<beta>\\<^sup>* App A M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App A M \\<rightarrow>\\<beta>\\<^sup>* App A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App A M \\<rightarrow>\\<beta>\\<^sup>* App A M''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B", "."], ["proof (state)\nthis:\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App A M \\<rightarrow>\\<beta>\\<^sup>* App A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App A M \\<rightarrow>\\<beta>\\<^sup>* App A M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App A M \\<rightarrow>\\<beta>\\<^sup>* App A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App A M \\<rightarrow>\\<beta>\\<^sup>* App A M''", "case (transitive B B' B'')"], ["proof (state)\nthis:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  B' \\<rightarrow>\\<beta> B''\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A B'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        App A M \\<rightarrow>\\<beta>\\<^sup>* App A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> App A M \\<rightarrow>\\<beta>\\<^sup>* App A M''", "thus ?case"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  B' \\<rightarrow>\\<beta> B''\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A B'\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B''", "using beta_reduces.transitive beta_reduction.app2"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  B' \\<rightarrow>\\<beta> B''\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A B'\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?B \\<rightarrow>\\<beta> ?B' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta> App ?A ?B'\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A B''", "by metis"], ["proof (state)\nthis:\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A B''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_fn:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"(Fn x T A) \\<rightarrow>\\<beta>\\<^sup>* (Fn x T A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'", "using assms"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M''", "case (reflexive A)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A", "."], ["proof (state)\nthis:\n  Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M''", "case (transitive A A' A'')"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fn x T M \\<rightarrow>\\<beta>\\<^sup>* Fn x T M''", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A''", "using beta_reduces.transitive beta_reduction.fn"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?A \\<rightarrow>\\<beta> ?A' \\<Longrightarrow>\n  Fn ?x ?T ?A \\<rightarrow>\\<beta> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A''", "by metis"], ["proof (state)\nthis:\n  Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_pair_left:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* A'\"\n  shows \"(Pair A B) \\<rightarrow>\\<beta>\\<^sup>* (Pair A' B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A' B", "using assms"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A' B", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       SimplyTyped.Pair M\n        B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M B\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair M\n         B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair M\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair\n                    M'' B", "case (reflexive M)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M.\n       SimplyTyped.Pair M\n        B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M B\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair M\n         B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair M\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair\n                    M'' B", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M B", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M B", "."], ["proof (state)\nthis:\n  SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair M\n         B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair M\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair\n                    M'' B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair M\n         B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair M\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair\n                    M'' B", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair M\n         B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B;\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair M\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair\n                    M'' B", "thus ?case"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M'' B", "using beta_reduces.transitive beta_reduction.pair1"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M' B\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?A \\<rightarrow>\\<beta> ?A' \\<Longrightarrow>\n  SimplyTyped.Pair ?A ?B \\<rightarrow>\\<beta> SimplyTyped.Pair ?A' ?B\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M'' B", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair M B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair M'' B\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_pair_right:\n  assumes \"B \\<rightarrow>\\<beta>\\<^sup>* B'\"\n  shows \"(Pair A B) \\<rightarrow>\\<beta>\\<^sup>* (Pair A B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A B'", "using assms"], ["proof (prove)\nusing this:\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A B'", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       SimplyTyped.Pair A\n        M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair A\n         M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A\n                    M''", "case (reflexive M)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M.\n       SimplyTyped.Pair A\n        M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair A\n         M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A\n                    M''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M", "."], ["proof (state)\nthis:\n  SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair A\n         M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A\n                    M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair A\n         M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A\n                    M''", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        SimplyTyped.Pair A\n         M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A\n                    M''", "thus ?case"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M''", "using beta_reduces.transitive beta_reduction.pair2"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M'\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?B \\<rightarrow>\\<beta> ?B' \\<Longrightarrow>\n  SimplyTyped.Pair ?A ?B \\<rightarrow>\\<beta> SimplyTyped.Pair ?A ?B'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M''", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A M \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A M''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_fst:\n  assumes \"P \\<rightarrow>\\<beta>\\<^sup>* P'\"\n  shows \"(Fst P) \\<rightarrow>\\<beta>\\<^sup>* (Fst P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n\ngoal (1 subgoal):\n 1. Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "case (reflexive M)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M", "."], ["proof (state)\nthis:\n  Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "thus ?case"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M'\n\ngoal (1 subgoal):\n 1. Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "using beta_reduces.transitive beta_reduction.fst1"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M'\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?P \\<rightarrow>\\<beta> ?P' \\<Longrightarrow>\n  Fst ?P \\<rightarrow>\\<beta> Fst ?P'\n\ngoal (1 subgoal):\n 1. Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''", "by metis"], ["proof (state)\nthis:\n  Fst M \\<rightarrow>\\<beta>\\<^sup>* Fst M''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduces_snd:\n  assumes \"P \\<rightarrow>\\<beta>\\<^sup>* P'\"\n  shows \"(Snd P) \\<rightarrow>\\<beta>\\<^sup>* (Snd P')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n\ngoal (1 subgoal):\n 1. Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "case (reflexive M)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M", "."], ["proof (state)\nthis:\n  Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "thus ?case"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M'\n\ngoal (1 subgoal):\n 1. Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "using beta_reduces.transitive beta_reduction.snd1"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M'\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  ?P \\<rightarrow>\\<beta> ?P' \\<Longrightarrow>\n  Snd ?P \\<rightarrow>\\<beta> Snd ?P'\n\ngoal (1 subgoal):\n 1. Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''", "by metis"], ["proof (state)\nthis:\n  Snd M \\<rightarrow>\\<beta>\\<^sup>* Snd M''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "theorem preservation:\n  assumes \"M \\<rightarrow>\\<beta>\\<^sup>* M'\" \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"\\<Gamma> \\<turnstile> M' : \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "using assms"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> M : \\<tau>\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        \\<Gamma> \\<turnstile> M' : \\<tau>;\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M'' : \\<tau>", "case (reflexive M)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n       \\<Gamma> \\<turnstile> M : \\<tau>\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        \\<Gamma> \\<turnstile> M' : \\<tau>;\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M'' : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M : \\<tau>", "."], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        \\<Gamma> \\<turnstile> M' : \\<tau>;\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M'' : \\<tau>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        \\<Gamma> \\<turnstile> M' : \\<tau>;\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M'' : \\<tau>", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        \\<Gamma> \\<turnstile> M' : \\<tau>;\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<turnstile> M'' : \\<tau>", "thus ?case"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M'' : \\<tau>", "using preservation'"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n  \\<Gamma> \\<turnstile> M : \\<tau>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?M : ?\\<tau>;\n   ?M \\<rightarrow>\\<beta> ?M'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?M' : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M'' : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M'' : \\<tau>\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "theorem safety:\n  assumes \"M \\<rightarrow>\\<beta>\\<^sup>* M'\" \"\\<Gamma> \\<turnstile> M : \\<tau>\"\n  shows \"NF M' \\<or> (\\<exists>M''. (M' \\<rightarrow>\\<beta> M''))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NF M' \\<or> (\\<exists>M''. M' \\<rightarrow>\\<beta> M'')", "using assms"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. NF M' \\<or> (\\<exists>M''. M' \\<rightarrow>\\<beta> M'')", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n       NF M \\<or> Ex (beta_reduction M)\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "case (reflexive M)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n       NF M \\<or> Ex (beta_reduction M)\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. NF M \\<or> (\\<exists>a. M \\<rightarrow>\\<beta> a)", "using progress"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M : \\<tau>\n  ?\\<Gamma> \\<turnstile> ?M : ?\\<tau> \\<Longrightarrow>\n  NF ?M \\<or> (\\<exists>M'. ?M \\<rightarrow>\\<beta> M')\n\ngoal (1 subgoal):\n 1. NF M \\<or> (\\<exists>a. M \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF M \\<or> (\\<exists>a. M \\<rightarrow>\\<beta> a)\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "case (transitive M M' M'')"], ["proof (state)\nthis:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n  NF M' \\<or> (\\<exists>a. M' \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "hence \"\\<Gamma> \\<turnstile> M' : \\<tau>\""], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n  NF M' \\<or> (\\<exists>a. M' \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> M : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "using preservation"], ["proof (prove)\nusing this:\n  M \\<rightarrow>\\<beta>\\<^sup>* M'\n  M' \\<rightarrow>\\<beta> M''\n  \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n  NF M' \\<or> (\\<exists>a. M' \\<rightarrow>\\<beta> a)\n  \\<Gamma> \\<turnstile> M : \\<tau>\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?\\<Gamma> \\<turnstile> ?M : ?\\<tau>\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?M' : ?\\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M' : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "hence \"\\<Gamma> \\<turnstile> M'' : \\<tau>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M'' : \\<tau>", "using preservation' \\<open>M' \\<rightarrow>\\<beta> M''\\<close>"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M' : \\<tau>\n  \\<lbrakk>?\\<Gamma> \\<turnstile> ?M : ?\\<tau>;\n   ?M \\<rightarrow>\\<beta> ?M'\\<rbrakk>\n  \\<Longrightarrow> ?\\<Gamma> \\<turnstile> ?M' : ?\\<tau>\n  M' \\<rightarrow>\\<beta> M''\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<turnstile> M'' : \\<tau>", "by metis"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile> M'' : \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M';\n        \\<Gamma> \\<turnstile> M : \\<tau> \\<Longrightarrow>\n        NF M' \\<or> Ex (beta_reduction M');\n        M' \\<rightarrow>\\<beta> M'';\n        \\<Gamma> \\<turnstile> M : \\<tau>\\<rbrakk>\n       \\<Longrightarrow> NF M'' \\<or> Ex (beta_reduction M'')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M'' : \\<tau>\n\ngoal (1 subgoal):\n 1. NF M'' \\<or> (\\<exists>a. M'' \\<rightarrow>\\<beta> a)", "using progress"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> M'' : \\<tau>\n  ?\\<Gamma> \\<turnstile> ?M : ?\\<tau> \\<Longrightarrow>\n  NF ?M \\<or> (\\<exists>M'. ?M \\<rightarrow>\\<beta> M')\n\ngoal (1 subgoal):\n 1. NF M'' \\<or> (\\<exists>a. M'' \\<rightarrow>\\<beta> a)", "by metis"], ["proof (state)\nthis:\n  NF M'' \\<or> (\\<exists>a. M'' \\<rightarrow>\\<beta> a)\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive parallel_reduction :: \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\" (\"_ >> _\") where\n  refl: \"A >> A\"\n| beta: \"\\<lbrakk>A >> A'; B >> B'\\<rbrakk> \\<Longrightarrow> (App (Fn x T A) B) >> (A'[x ::= B'])\"\n| eta:  \"A >> A' \\<Longrightarrow> (Fn x T A) >> (Fn x T A')\"\n| app:  \"\\<lbrakk>A >> A'; B >> B'\\<rbrakk> \\<Longrightarrow> (App A B) >> (App A' B')\"\n| pair: \"\\<lbrakk>A >> A'; B >> B'\\<rbrakk> \\<Longrightarrow> (Pair A B) >> (Pair A' B')\"\n| fst1: \"P >> P' \\<Longrightarrow> (Fst P) >> (Fst P')\"\n| fst2: \"A >> A' \\<Longrightarrow> (Fst (Pair A B)) >> A'\"\n| snd1: \"P >> P' \\<Longrightarrow> (Snd P) >> (Snd P')\"\n| snd2: \"B >> B' \\<Longrightarrow> (Snd (Pair A B)) >> B'\""], ["", "lemma parallel_reduction_prm:\n  assumes \"A >> A'\"\n  shows \"(\\<pi> \\<cdot> A) >> (\\<pi> \\<cdot> A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'", "using assms"], ["proof (prove)\nusing this:\n  A >> A'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'", "apply induction"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>A. \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >> \\<pi> \\<cdot> A'[x ::= B']\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >> \\<pi> \\<cdot> Fn x T A'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >> \\<pi> \\<cdot> App A' B'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >> \\<pi> \\<cdot> Fst P'\n 7. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 8. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 9. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (rule parallel_reduction.refl)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >> \\<pi> \\<cdot> A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >> \\<pi> \\<cdot> Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >> \\<pi> \\<cdot> App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >> \\<pi> \\<cdot> Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.beta subst_prm trm_prm_simp(3, 4))"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >> \\<pi> \\<cdot> Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >> \\<pi> \\<cdot> App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >> \\<pi> \\<cdot> Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.eta trm_prm_simp(4))"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >> \\<pi> \\<cdot> App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >> \\<pi> \\<cdot> Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.app trm_prm_simp(3))"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'; B >> B';\n        \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >> \\<pi> \\<cdot> Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.pair trm_prm_simp(5))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >> \\<pi> \\<cdot> Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.fst1 trm_prm_simp(6))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; \\<pi> \\<cdot> A >> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.fst2 trm_prm_simp(5, 6))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; \\<pi> \\<cdot> P >> \\<pi> \\<cdot> P'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >> \\<pi> \\<cdot> Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.snd1 trm_prm_simp(7))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; \\<pi> \\<cdot> B >> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >> \\<pi> \\<cdot> B'", "apply (metis parallel_reduction.snd2 trm_prm_simp(5, 7))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parallel_reduction_fvs:\n  assumes \"A >> A'\"\n  shows \"fvs A' \\<subseteq> fvs A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A", "using assms"], ["proof (prove)\nusing this:\n  A >> A'\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A", "proof(induction)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A. fvs A \\<subseteq> fvs A\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (refl A)"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>A. fvs A \\<subseteq> fvs A\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A \\<subseteq> fvs A", "by auto"], ["proof (state)\nthis:\n  fvs A \\<subseteq> fvs A\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (beta A A' B B' x T)"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have *:\"fvs (App (Fn x T A) B) = fvs A - {x} \\<union> fvs B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs (App (Fn x T A) B) = fvs A - {x} \\<union> fvs B", "using fvs_simp(3, 4)"], ["proof (prove)\nusing this:\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. fvs (App (Fn x T A) B) = fvs A - {x} \\<union> fvs B", "by metis"], ["proof (state)\nthis:\n  fvs (App (Fn x T A) B) = fvs A - {x} \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have \"fvs (A'[x ::= B']) \\<subseteq> fvs A' - {x} \\<union> fvs B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'", "using subst_fvs"], ["proof (prove)\nusing this:\n  fvs ?M[?z ::= ?N] \\<subseteq> fvs ?M - {?z} \\<union> fvs ?N\n\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'", "."], ["proof (state)\nthis:\n  fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "also"], ["proof (state)\nthis:\n  fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have \"... \\<subseteq> fvs A - {x} \\<union> fvs B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B", "using beta.IH"], ["proof (prove)\nusing this:\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B", "by auto"], ["proof (state)\nthis:\n  fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "finally"], ["proof (chain)\npicking this:\n  fvs A'[x ::= B'] \\<subseteq> fvs A - {x} \\<union> fvs B", "show ?case"], ["proof (prove)\nusing this:\n  fvs A'[x ::= B'] \\<subseteq> fvs A - {x} \\<union> fvs B\n\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)", "using fvs_simp(3, 4)"], ["proof (prove)\nusing this:\n  fvs A'[x ::= B'] \\<subseteq> fvs A - {x} \\<union> fvs B\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)", "by metis"], ["proof (state)\nthis:\n  fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (eta A A' x T)"], ["proof (state)\nthis:\n  A >> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "using fvs_simp(4) Un_Diff subset_Un_eq"], ["proof (prove)\nusing this:\n  A >> A'\n  fvs A' \\<subseteq> fvs A\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  ?A \\<union> ?B - ?C = ?A - ?C \\<union> (?B - ?C)\n  (?A \\<subseteq> ?B) = (?A \\<union> ?B = ?B)\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "by metis"], ["proof (state)\nthis:\n  fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (app A A' B B')"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs (App A' B') \\<subseteq> fvs (App A B)", "using fvs_simp(3) Un_mono"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  \\<lbrakk>?A \\<subseteq> ?C; ?B \\<subseteq> ?D\\<rbrakk>\n  \\<Longrightarrow> ?A \\<union> ?B \\<subseteq> ?C \\<union> ?D\n\ngoal (1 subgoal):\n 1. fvs (App A' B') \\<subseteq> fvs (App A B)", "by metis"], ["proof (state)\nthis:\n  fvs (App A' B') \\<subseteq> fvs (App A B)\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (pair A A' B B')"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A; B >> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B') \\<subseteq> fvs (SimplyTyped.Pair A B)", "using fvs_simp(5) Un_mono"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  \\<lbrakk>?A \\<subseteq> ?C; ?B \\<subseteq> ?D\\<rbrakk>\n  \\<Longrightarrow> ?A \\<union> ?B \\<subseteq> ?C \\<union> ?D\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B') \\<subseteq> fvs (SimplyTyped.Pair A B)", "by metis"], ["proof (state)\nthis:\n  fvs (SimplyTyped.Pair A' B') \\<subseteq> fvs (SimplyTyped.Pair A B)\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fst1 P P')"], ["proof (state)\nthis:\n  P >> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  P >> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P)", "using fvs_simp(6)"], ["proof (prove)\nusing this:\n  P >> P'\n  fvs P' \\<subseteq> fvs P\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P)", "by force"], ["proof (state)\nthis:\n  fvs (Fst P') \\<subseteq> fvs (Fst P)\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fst2 A A' B)"], ["proof (state)\nthis:\n  A >> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))", "using fvs_simp(5, 6)"], ["proof (prove)\nusing this:\n  A >> A'\n  fvs A' \\<subseteq> fvs A\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))", "by force"], ["proof (state)\nthis:\n  fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (snd1 P P')"], ["proof (state)\nthis:\n  P >> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; fvs P' \\<subseteq> fvs P\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  P >> P'\n  fvs P' \\<subseteq> fvs P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P)", "using fvs_simp(7)"], ["proof (prove)\nusing this:\n  P >> P'\n  fvs P' \\<subseteq> fvs P\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P)", "by force"], ["proof (state)\nthis:\n  fvs (Snd P') \\<subseteq> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (snd2 B B' A)"], ["proof (state)\nthis:\n  B >> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  B >> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "using fvs_simp(5, 7)"], ["proof (prove)\nusing this:\n  B >> B'\n  fvs B' \\<subseteq> fvs B\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "by force"], ["proof (state)\nthis:\n  fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive_cases parallel_reduction_unitE': \"Unit >> A\""], ["", "lemma parallel_reduction_unitE:\n  assumes \"Unit >> A\"\n  shows \"A = Unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = Unit", "using assms"], ["proof (prove)\nusing this:\n  Unit >> A\n\ngoal (1 subgoal):\n 1. A = Unit", "apply (rule parallel_reduction_unitE'[where A=A])"], ["proof (prove)\ngoal (9 subgoals):\n 1. A = Unit \\<Longrightarrow> A = Unit\n 2. \\<And>Aa A' B B' x T.\n       \\<lbrakk>Unit = App (Fn x T Aa) B; A = A'[x ::= B']; Aa >> A';\n        B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 3. \\<And>Aa A' x T.\n       \\<lbrakk>Unit = Fn x T Aa; A = Fn x T A'; Aa >> A'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Unit = App Aa B; A = App A' B'; Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Unit = SimplyTyped.Pair Aa B; A = SimplyTyped.Pair A' B';\n        Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 6. \\<And>P P'.\n       \\<lbrakk>Unit = Fst P; A = Fst P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 7. \\<And>Aa B.\n       \\<lbrakk>Unit = Fst (SimplyTyped.Pair Aa B); Aa >> A\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 8. \\<And>P P'.\n       \\<lbrakk>Unit = Snd P; A = Snd P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 9. \\<And>B Aa.\n       \\<lbrakk>Unit = Snd (SimplyTyped.Pair Aa B); B >> A\\<rbrakk>\n       \\<Longrightarrow> A = Unit", "apply blast"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Aa A' B B' x T.\n       \\<lbrakk>Unit = App (Fn x T Aa) B; A = A'[x ::= B']; Aa >> A';\n        B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 2. \\<And>Aa A' x T.\n       \\<lbrakk>Unit = Fn x T Aa; A = Fn x T A'; Aa >> A'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 3. \\<And>Aa A' B B'.\n       \\<lbrakk>Unit = App Aa B; A = App A' B'; Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Unit = SimplyTyped.Pair Aa B; A = SimplyTyped.Pair A' B';\n        Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 5. \\<And>P P'.\n       \\<lbrakk>Unit = Fst P; A = Fst P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 6. \\<And>Aa B.\n       \\<lbrakk>Unit = Fst (SimplyTyped.Pair Aa B); Aa >> A\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 7. \\<And>P P'.\n       \\<lbrakk>Unit = Snd P; A = Snd P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Unit\n 8. \\<And>B Aa.\n       \\<lbrakk>Unit = Snd (SimplyTyped.Pair Aa B); B >> A\\<rbrakk>\n       \\<Longrightarrow> A = Unit", "apply (auto simp add: unit_not_app unit_not_fn unit_not_pair unit_not_fst unit_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "inductive_cases parallel_reduction_varE': \"(Var x) >> A\""], ["", "lemma parallel_reduction_varE:\n  assumes \"(Var x) >> A\"\n  shows \"A = Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = Var x", "using assms"], ["proof (prove)\nusing this:\n  Var x >> A\n\ngoal (1 subgoal):\n 1. A = Var x", "apply (rule parallel_reduction_varE'[where x=x and A=A])"], ["proof (prove)\ngoal (9 subgoals):\n 1. A = Var x \\<Longrightarrow> A = Var x\n 2. \\<And>Aa A' B B' xa T.\n       \\<lbrakk>Var x = App (Fn xa T Aa) B; A = A'[xa ::= B']; Aa >> A';\n        B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 3. \\<And>Aa A' xa T.\n       \\<lbrakk>Var x = Fn xa T Aa; A = Fn xa T A'; Aa >> A'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Var x = App Aa B; A = App A' B'; Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Var x = SimplyTyped.Pair Aa B; A = SimplyTyped.Pair A' B';\n        Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 6. \\<And>P P'.\n       \\<lbrakk>Var x = Fst P; A = Fst P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 7. \\<And>Aa B.\n       \\<lbrakk>Var x = Fst (SimplyTyped.Pair Aa B); Aa >> A\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 8. \\<And>P P'.\n       \\<lbrakk>Var x = Snd P; A = Snd P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 9. \\<And>B Aa.\n       \\<lbrakk>Var x = Snd (SimplyTyped.Pair Aa B); B >> A\\<rbrakk>\n       \\<Longrightarrow> A = Var x", "apply blast"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>Aa A' B B' xa T.\n       \\<lbrakk>Var x = App (Fn xa T Aa) B; A = A'[xa ::= B']; Aa >> A';\n        B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 2. \\<And>Aa A' xa T.\n       \\<lbrakk>Var x = Fn xa T Aa; A = Fn xa T A'; Aa >> A'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 3. \\<And>Aa A' B B'.\n       \\<lbrakk>Var x = App Aa B; A = App A' B'; Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Var x = SimplyTyped.Pair Aa B; A = SimplyTyped.Pair A' B';\n        Aa >> A'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 5. \\<And>P P'.\n       \\<lbrakk>Var x = Fst P; A = Fst P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 6. \\<And>Aa B.\n       \\<lbrakk>Var x = Fst (SimplyTyped.Pair Aa B); Aa >> A\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 7. \\<And>P P'.\n       \\<lbrakk>Var x = Snd P; A = Snd P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> A = Var x\n 8. \\<And>B Aa.\n       \\<lbrakk>Var x = Snd (SimplyTyped.Pair Aa B); B >> A\\<rbrakk>\n       \\<Longrightarrow> A = Var x", "apply (auto simp add: var_not_app var_not_fn var_not_pair var_not_fst var_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "inductive_cases parallel_reduction_fnE': \"(Fn x T A) >> X\""], ["", "lemma parallel_reduction_fnE:\n  assumes \"(Fn x T A) >> X\"\n  shows \"X = Fn x T A \\<or> (\\<exists>A'. (A >> A') \\<and> X = Fn x T A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "using assms"], ["proof (prove)\nusing this:\n  Fn x T A >> X\n\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "proof(induction rule: parallel_reduction_fnE'[where x=x and T=T and A=A and X=X])"], ["proof (state)\ngoal (10 subgoals):\n 1. Fn x T A >> X\n 2. \\<lbrakk>X = Fn x T A; Fn x T A >> X\\<rbrakk>\n    \\<Longrightarrow> X = Fn x T A \\<or>\n                      (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B']; Aa >> A';\n        B >> B'; Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >> X;\n         Fn x T A >> X\\<rbrakk>\n        \\<Longrightarrow> X = Fn x T A \\<or>\n                          (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "case (4 B B' y S)"], ["proof (state)\nthis:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >> B'\n  Fn x T A >> X\n\ngoal (10 subgoals):\n 1. Fn x T A >> X\n 2. \\<lbrakk>X = Fn x T A; Fn x T A >> X\\<rbrakk>\n    \\<Longrightarrow> X = Fn x T A \\<or>\n                      (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B']; Aa >> A';\n        B >> B'; Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >> X;\n         Fn x T A >> X\\<rbrakk>\n        \\<Longrightarrow> X = Fn x T A \\<or>\n                          (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "from this"], ["proof (chain)\npicking this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >> B'\n  Fn x T A >> X", "consider \"x = y \\<and> T = S \\<and> A = B\" | \"x \\<noteq> y \\<and> T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\""], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >> B'\n  Fn x T A >> X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >> B'\n  Fn x T A >> X\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (10 subgoals):\n 1. Fn x T A >> X\n 2. \\<lbrakk>X = Fn x T A; Fn x T A >> X\\<rbrakk>\n    \\<Longrightarrow> X = Fn x T A \\<or>\n                      (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B']; Aa >> A';\n        B >> B'; Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >> X;\n         Fn x T A >> X\\<rbrakk>\n        \\<Longrightarrow> X = Fn x T A \\<or>\n                          (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "case 1"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A = B\n\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "hence \"x = y\" \"T = S\" \"A = B\""], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = B\n\ngoal (1 subgoal):\n 1. x = y &&& T = S &&& A = B", "by auto"], ["proof (state)\nthis:\n  x = y\n  T = S\n  A = B\n\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n  T = S\n  A = B\n\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "using 4"], ["proof (prove)\nusing this:\n  x = y\n  T = S\n  A = B\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >> B'\n  Fn x T A >> X\n\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "by metis"], ["proof (state)\nthis:\n  X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "hence \"x \\<noteq> y\" \"T = S\" \"x \\<notin> fvs B\" \"A = [x \\<leftrightarrow> y] \\<cdot> B\""], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  T = S \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. (x \\<noteq> y &&& T = S) &&&\n    x \\<notin> fvs B &&& A = [x \\<leftrightarrow> y] \\<cdot> B", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n  T = S\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "hence \"x \\<notin> fvs B'\" \"A >> ([x \\<leftrightarrow> y] \\<cdot> B')\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  T = S\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs B' &&& A >> [x \\<leftrightarrow> y] \\<cdot> B'", "using parallel_reduction_fvs parallel_reduction_prm \\<open>B >> B'\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  T = S\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n  ?A >> ?A' \\<Longrightarrow> fvs ?A' \\<subseteq> fvs ?A\n  ?A >> ?A' \\<Longrightarrow> ?\\<pi> \\<cdot> ?A >> ?\\<pi> \\<cdot> ?A'\n  B >> B'\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs B' &&& A >> [x \\<leftrightarrow> y] \\<cdot> B'", "by auto"], ["proof (state)\nthis:\n  x \\<notin> fvs B'\n  A >> [x \\<leftrightarrow> y] \\<cdot> B'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> fvs B'\n  A >> [x \\<leftrightarrow> y] \\<cdot> B'\n\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "using fn_eq \\<open>X = Fn y S B'\\<close> \\<open>x \\<noteq> y\\<close> \\<open>T = S\\<close>"], ["proof (prove)\nusing this:\n  x \\<notin> fvs B'\n  A >> [x \\<leftrightarrow> y] \\<cdot> B'\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<notin> fvs ?B;\n   ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\\<rbrakk>\n  \\<Longrightarrow> Fn ?x ?T ?A = Fn ?y ?T ?B\n  X = Fn y S B'\n  x \\<noteq> y\n  T = S\n\ngoal (1 subgoal):\n 1. X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "by metis"], ["proof (state)\nthis:\n  X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X = Fn x T A \\<or> (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n\ngoal (9 subgoals):\n 1. Fn x T A >> X\n 2. \\<lbrakk>X = Fn x T A; Fn x T A >> X\\<rbrakk>\n    \\<Longrightarrow> X = Fn x T A \\<or>\n                      (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B']; Aa >> A';\n        B >> B'; Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 6. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 7. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 8. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 9. \\<And>B Aa.\n       \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. Fn x T A >> X\n 2. \\<lbrakk>X = Fn x T A; Fn x T A >> X\\<rbrakk>\n    \\<Longrightarrow> X = Fn x T A \\<or>\n                      (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B']; Aa >> A';\n        B >> B'; Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; B >> B';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 6. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 7. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 8. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >> P';\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')\n 9. \\<And>B Aa.\n       \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >> X;\n        Fn x T A >> X\\<rbrakk>\n       \\<Longrightarrow> X = Fn x T A \\<or>\n                         (\\<exists>A'. A >> A' \\<and> X = Fn x T A')", "qed (\n  metis assms,\n  blast,\n  metis app_not_fn,\n  metis app_not_fn,\n  metis fn_not_pair,\n  metis fn_not_fst,\n  metis fn_not_fst,\n  metis fn_not_snd,\n  metis fn_not_snd\n)"], ["", "inductive_cases parallel_reduction_redexE': \"(App (Fn x T A) B) >> X\""], ["", "lemma parallel_reduction_redexE:\n  assumes \"(App (Fn x T A) B) >> X\"\n  shows \"\n    (X = App (Fn x T A) B) \\<or>\n    (\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> X = (A'[x ::= B'])) \\<or>\n    (\\<exists>A' B'. ((Fn x T A) >> (Fn x T A')) \\<and> (B >> B') \\<and> X = (App (Fn x T A') B'))\n  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "using assms"], ["proof (prove)\nusing this:\n  App (Fn x T A) B >> X\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "proof(induction rule: parallel_reduction_redexE'[where x=x and T=T and A=A and B=B and X=X])"], ["proof (state)\ngoal (10 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App (Fn x T A) B >> X\\<rbrakk>\n        \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                          (\\<exists>A' B'.\n                              A >> A' \\<and>\n                              B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                          (\\<exists>A' B'.\n                              Fn x T A >> Fn x T A' \\<and>\n                              B >> B' \\<and> X = App (Fn x T A') B')", "case (5 C C' D D')"], ["proof (state)\nthis:\n  App (Fn x T A) B = App C D\n  X = App C' D'\n  C >> C'\n  D >> D'\n  App (Fn x T A) B >> X\n\ngoal (10 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App (Fn x T A) B >> X\\<rbrakk>\n        \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                          (\\<exists>A' B'.\n                              A >> A' \\<and>\n                              B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                          (\\<exists>A' B'.\n                              Fn x T A >> Fn x T A' \\<and>\n                              B >> B' \\<and> X = App (Fn x T A') B')", "from \\<open>App (Fn x T A) B = App C D\\<close>"], ["proof (chain)\npicking this:\n  App (Fn x T A) B = App C D", "have C: \"C = Fn x T A\" and D: \"D = B\""], ["proof (prove)\nusing this:\n  App (Fn x T A) B = App C D\n\ngoal (1 subgoal):\n 1. C = Fn x T A &&& D = B", "by (metis trm_simp(2), metis trm_simp(3))"], ["proof (state)\nthis:\n  C = Fn x T A\n  D = B\n\ngoal (10 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App (Fn x T A) B >> X\\<rbrakk>\n        \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                          (\\<exists>A' B'.\n                              A >> A' \\<and>\n                              B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                          (\\<exists>A' B'.\n                              Fn x T A >> Fn x T A' \\<and>\n                              B >> B' \\<and> X = App (Fn x T A') B')", "from C and \\<open>C >> C'\\<close>"], ["proof (chain)\npicking this:\n  C = Fn x T A\n  C >> C'", "obtain A' where C': \"C' = Fn x T A'\""], ["proof (prove)\nusing this:\n  C = Fn x T A\n  C >> C'\n\ngoal (1 subgoal):\n 1. (\\<And>A'. C' = Fn x T A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_fnE"], ["proof (prove)\nusing this:\n  C = Fn x T A\n  C >> C'\n  Fn ?x ?T ?A >> ?X \\<Longrightarrow>\n  ?X = Fn ?x ?T ?A \\<or> (\\<exists>A'. ?A >> A' \\<and> ?X = Fn ?x ?T A')\n\ngoal (1 subgoal):\n 1. (\\<And>A'. C' = Fn x T A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  C' = Fn x T A'\n\ngoal (10 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App (Fn x T A) B >> X\\<rbrakk>\n        \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                          (\\<exists>A' B'.\n                              A >> A' \\<and>\n                              B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                          (\\<exists>A' B'.\n                              Fn x T A >> Fn x T A' \\<and>\n                              B >> B' \\<and> X = App (Fn x T A') B')", "thus ?thesis"], ["proof (prove)\nusing this:\n  C' = Fn x T A'\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "using C C' D \\<open>C >> C'\\<close> \\<open>D >> D'\\<close> \\<open>X = App C' D'\\<close>"], ["proof (prove)\nusing this:\n  C' = Fn x T A'\n  C = Fn x T A\n  C' = Fn x T A'\n  D = B\n  C >> C'\n  D >> D'\n  X = App C' D'\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "by metis"], ["proof (state)\nthis:\n  X = App (Fn x T A) B \\<or>\n  (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n  (\\<exists>A' B'.\n      Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')\n\ngoal (9 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "case (3 C C' D D' y S)"], ["proof (state)\nthis:\n  App (Fn x T A) B = App (Fn y S C) D\n  X = C'[y ::= D']\n  C >> C'\n  D >> D'\n  App (Fn x T A) B >> X\n\ngoal (9 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "from \\<open>App (Fn x T A) B = App (Fn y S C) D\\<close>"], ["proof (chain)\npicking this:\n  App (Fn x T A) B = App (Fn y S C) D", "have \"Fn x T A = Fn y S C\" and B: \"B = D\""], ["proof (prove)\nusing this:\n  App (Fn x T A) B = App (Fn y S C) D\n\ngoal (1 subgoal):\n 1. Fn x T A = Fn y S C &&& B = D", "by (metis trm_simp(2), metis trm_simp(3))"], ["proof (state)\nthis:\n  Fn x T A = Fn y S C\n  B = D\n\ngoal (9 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "from this"], ["proof (chain)\npicking this:\n  Fn x T A = Fn y S C\n  B = D", "consider\n      \"x = y \\<and> T = S \\<and> A = C\"\n    | \"x \\<noteq> y \\<and> T = S \\<and> A = [x \\<leftrightarrow> y] \\<cdot> C \\<and> x \\<notin> fvs C\""], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S C\n  B = D\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = C \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n     x \\<notin> fvs C \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S C\n  B = D\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> T = S \\<and> A = C \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     T = S \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n     x \\<notin> fvs C \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = C \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n   x \\<notin> fvs C \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (9 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' Ba B' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = App (Fn xa Ta Aa) Ba; X = A'[xa ::= B'];\n        Aa >> A'; Ba >> B'; App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<and> T = S \\<and> A = C \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   T = S \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n   x \\<notin> fvs C \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "case 1"], ["proof (state)\nthis:\n  x = y \\<and> T = S \\<and> A = C\n\ngoal (2 subgoals):\n 1. x = y \\<and> T = S \\<and> A = C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')\n 2. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = C\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "using \\<open>C >> C'\\<close> \\<open>X = (C'[y ::= D'])\\<close> \\<open>D >> D'\\<close> B"], ["proof (prove)\nusing this:\n  x = y \\<and> T = S \\<and> A = C\n  C >> C'\n  X = C'[y ::= D']\n  D >> D'\n  B = D\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "by metis"], ["proof (state)\nthis:\n  X = App (Fn x T A) B \\<or>\n  (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n  (\\<exists>A' B'.\n      Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<and>\n  T = S \\<and> A = [x \\<leftrightarrow> y] \\<cdot> C \\<and> x \\<notin> fvs C\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "hence \"x \\<noteq> y\" \"T = S\" and A: \"A = [x \\<leftrightarrow> y] \\<cdot> C\" \"x \\<notin> fvs C\""], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  T = S \\<and> A = [x \\<leftrightarrow> y] \\<cdot> C \\<and> x \\<notin> fvs C\n\ngoal (1 subgoal):\n 1. (x \\<noteq> y &&& T = S) &&&\n    A = [x \\<leftrightarrow> y] \\<cdot> C &&& x \\<notin> fvs C", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n  T = S\n  A = [x \\<leftrightarrow> y] \\<cdot> C\n  x \\<notin> fvs C\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "have \"x \\<notin> fvs C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> fvs C'", "using parallel_reduction_fvs \\<open>x \\<notin> fvs C\\<close> \\<open>C >> C'\\<close>"], ["proof (prove)\nusing this:\n  ?A >> ?A' \\<Longrightarrow> fvs ?A' \\<subseteq> fvs ?A\n  x \\<notin> fvs C\n  C >> C'\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs C'", "by force"], ["proof (state)\nthis:\n  x \\<notin> fvs C'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "have \"A >> ([x \\<leftrightarrow> y] \\<cdot> C')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A >> [x \\<leftrightarrow> y] \\<cdot> C'", "using parallel_reduction_prm \\<open>C >> C'\\<close> A"], ["proof (prove)\nusing this:\n  ?A >> ?A' \\<Longrightarrow> ?\\<pi> \\<cdot> ?A >> ?\\<pi> \\<cdot> ?A'\n  C >> C'\n  A = [x \\<leftrightarrow> y] \\<cdot> C\n  x \\<notin> fvs C\n\ngoal (1 subgoal):\n 1. A >> [x \\<leftrightarrow> y] \\<cdot> C'", "by metis"], ["proof (state)\nthis:\n  A >> [x \\<leftrightarrow> y] \\<cdot> C'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "moreover"], ["proof (state)\nthis:\n  A >> [x \\<leftrightarrow> y] \\<cdot> C'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "have \"X = (([x \\<leftrightarrow> y] \\<cdot> C')[x ::= D'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = [x \\<leftrightarrow> y] \\<cdot> C'[x ::= D']", "using \\<open>X = (C'[y ::= D'])\\<close> subst_swp \\<open>x \\<notin> fvs C'\\<close>"], ["proof (prove)\nusing this:\n  X = C'[y ::= D']\n  ?y \\<notin> fvs ?A \\<Longrightarrow>\n  [?y \\<leftrightarrow> ?z] \\<cdot> ?A[?y ::= ?M] = ?A[?z ::= ?M]\n  x \\<notin> fvs C'\n\ngoal (1 subgoal):\n 1. X = [x \\<leftrightarrow> y] \\<cdot> C'[x ::= D']", "by metis"], ["proof (state)\nthis:\n  X = [x \\<leftrightarrow> y] \\<cdot> C'[x ::= D']\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    T = S \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> C \\<and>\n    x \\<notin> fvs C \\<Longrightarrow>\n    X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "ultimately"], ["proof (chain)\npicking this:\n  A >> [x \\<leftrightarrow> y] \\<cdot> C'\n  X = [x \\<leftrightarrow> y] \\<cdot> C'[x ::= D']", "show ?thesis"], ["proof (prove)\nusing this:\n  A >> [x \\<leftrightarrow> y] \\<cdot> C'\n  X = [x \\<leftrightarrow> y] \\<cdot> C'[x ::= D']\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "using \\<open>D >> D'\\<close> B"], ["proof (prove)\nusing this:\n  A >> [x \\<leftrightarrow> y] \\<cdot> C'\n  X = [x \\<leftrightarrow> y] \\<cdot> C'[x ::= D']\n  D >> D'\n  B = D\n\ngoal (1 subgoal):\n 1. X = App (Fn x T A) B \\<or>\n    (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n    (\\<exists>A' B'.\n        Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')", "by metis"], ["proof (state)\nthis:\n  X = App (Fn x T A) B \\<or>\n  (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n  (\\<exists>A' B'.\n      Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  X = App (Fn x T A) B \\<or>\n  (\\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = A'[x ::= B']) \\<or>\n  (\\<exists>A' B'.\n      Fn x T A >> Fn x T A' \\<and> B >> B' \\<and> X = App (Fn x T A') B')\n\ngoal (8 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. App (Fn x T A) B >> X\n 2. \\<lbrakk>X = App (Fn x T A) B; App (Fn x T A) B >> X\\<rbrakk>\n    \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                      (\\<exists>A' B'.\n                          A >> A' \\<and>\n                          B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                      (\\<exists>A' B'.\n                          Fn x T A >> Fn x T A' \\<and>\n                          B >> B' \\<and> X = App (Fn x T A') B')\n 3. \\<And>Aa A' xa Ta.\n       \\<lbrakk>App (Fn x T A) B = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >> A';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App (Fn x T A) B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 5. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Fst P; X = Fst P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 6. \\<And>Aa Ba.\n       \\<lbrakk>App (Fn x T A) B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 7. \\<And>P P'.\n       \\<lbrakk>App (Fn x T A) B = Snd P; X = Snd P'; P >> P';\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')\n 8. \\<And>Ba Aa.\n       \\<lbrakk>App (Fn x T A) B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App (Fn x T A) B >> X\\<rbrakk>\n       \\<Longrightarrow> X = App (Fn x T A) B \\<or>\n                         (\\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = A'[x ::= B']) \\<or>\n                         (\\<exists>A' B'.\n                             Fn x T A >> Fn x T A' \\<and>\n                             B >> B' \\<and> X = App (Fn x T A') B')", "qed (\n  metis assms,\n  blast,\n  metis app_not_fn,\n  metis app_not_pair,\n  metis app_not_fst,\n  metis app_not_fst,\n  metis app_not_snd,\n  metis app_not_snd\n)"], ["", "inductive_cases parallel_reduction_nonredexE': \"(App A B) >> X\""], ["", "lemma parallel_reduction_nonredexE:\n  assumes \"(App A B) >> X\" and \"\\<And>x T A'. A \\<noteq> Fn x T A'\"\n  shows \"\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> X = (App A' B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = App A' B'", "using assms"], ["proof (prove)\nusing this:\n  App A B >> X\n  A \\<noteq> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = App A' B'", "proof(induction rule: parallel_reduction_nonredexE'[where A=A and B=B and X=X])"], ["proof (state)\ngoal (10 subgoals):\n 1. App A B >> X\n 2. \\<lbrakk>X = App A B; App A B >> X;\n     \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>App A B = App (Fn x T Aa) Ba; X = A'[x ::= B']; Aa >> A';\n        Ba >> B'; App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>App A B = Fn x T Aa; X = Fn x T A'; Aa >> A'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = App Aa Ba; X = App A' B'; Aa >> A'; Ba >> B';\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>App A B = Fst P; X = Fst P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App A B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>App A B = Snd P; X = Snd P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App A B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A' B'.\n                             A >> A' \\<and> B >> B' \\<and> X = App A' B'", "case (5 C C' D D')"], ["proof (state)\nthis:\n  App A B = App C D\n  X = App C' D'\n  C >> C'\n  D >> D'\n  App A B >> X\n  A \\<noteq> Fn ?x ?T ?A'\n\ngoal (10 subgoals):\n 1. App A B >> X\n 2. \\<lbrakk>X = App A B; App A B >> X;\n     \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>App A B = App (Fn x T Aa) Ba; X = A'[x ::= B']; Aa >> A';\n        Ba >> B'; App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>App A B = Fn x T Aa; X = Fn x T A'; Aa >> A'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = App Aa Ba; X = App A' B'; Aa >> A'; Ba >> B';\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>App A B = Fst P; X = Fst P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App A B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>App A B = Snd P; X = Snd P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App A B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A' B'.\n                             A >> A' \\<and> B >> B' \\<and> X = App A' B'", "hence \"A = C\" \"B = D\""], ["proof (prove)\nusing this:\n  App A B = App C D\n  X = App C' D'\n  C >> C'\n  D >> D'\n  App A B >> X\n  A \\<noteq> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. A = C &&& B = D", "using trm_simp(2, 3)"], ["proof (prove)\nusing this:\n  App A B = App C D\n  X = App C' D'\n  C >> C'\n  D >> D'\n  App A B >> X\n  A \\<noteq> Fn ?x ?T ?A'\n  App ?A ?B = App ?C ?D \\<Longrightarrow> ?A = ?C\n  App ?A ?B = App ?C ?D \\<Longrightarrow> ?B = ?D\n\ngoal (1 subgoal):\n 1. A = C &&& B = D", "by auto"], ["proof (state)\nthis:\n  A = C\n  B = D\n\ngoal (10 subgoals):\n 1. App A B >> X\n 2. \\<lbrakk>X = App A B; App A B >> X;\n     \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>App A B = App (Fn x T Aa) Ba; X = A'[x ::= B']; Aa >> A';\n        Ba >> B'; App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>App A B = Fn x T Aa; X = Fn x T A'; Aa >> A'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = App Aa Ba; X = App A' B'; Aa >> A'; Ba >> B';\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>App A B = Fst P; X = Fst P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 8. \\<And>Aa Ba.\n       \\<lbrakk>App A B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>App A B = Snd P; X = Snd P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 10. \\<And>Ba Aa.\n        \\<lbrakk>App A B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n         App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A' B'.\n                             A >> A' \\<and> B >> B' \\<and> X = App A' B'", "thus ?case"], ["proof (prove)\nusing this:\n  A = C\n  B = D\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = App A' B'", "using \\<open>C >> C'\\<close> \\<open>D >> D'\\<close> \\<open>X = App C' D'\\<close>"], ["proof (prove)\nusing this:\n  A = C\n  B = D\n  C >> C'\n  D >> D'\n  X = App C' D'\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = App A' B'", "by metis"], ["proof (state)\nthis:\n  \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = App A' B'\n\ngoal (9 subgoals):\n 1. App A B >> X\n 2. \\<lbrakk>X = App A B; App A B >> X;\n     \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>App A B = App (Fn x T Aa) Ba; X = A'[x ::= B']; Aa >> A';\n        Ba >> B'; App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>App A B = Fn x T Aa; X = Fn x T A'; Aa >> A'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>App A B = Fst P; X = Fst P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App A B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>App A B = Snd P; X = Snd P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App A B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. App A B >> X\n 2. \\<lbrakk>X = App A B; App A B >> X;\n     \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>App A B = App (Fn x T Aa) Ba; X = A'[x ::= B']; Aa >> A';\n        Ba >> B'; App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>App A B = Fn x T Aa; X = Fn x T A'; Aa >> A'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>App A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>App A B = Fst P; X = Fst P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 7. \\<And>Aa Ba.\n       \\<lbrakk>App A B = Fst (SimplyTyped.Pair Aa Ba); Aa >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>App A B = Snd P; X = Snd P'; P >> P'; App A B >> X;\n        \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'\n 9. \\<And>Ba Aa.\n       \\<lbrakk>App A B = Snd (SimplyTyped.Pair Aa Ba); Ba >> X;\n        App A B >> X; \\<And>x T A'. A \\<noteq> Fn x T A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and> B >> B' \\<and> X = App A' B'", "qed (\n  metis assms(1),\n  metis parallel_reduction.refl,\n  metis trm_simp(2, 3) assms(2),\n  metis app_not_fn,\n  metis app_not_pair,\n  metis app_not_fst,\n  metis app_not_fst,\n  metis app_not_snd,\n  metis app_not_snd\n)"], ["", "inductive_cases parallel_reduction_pairE': \"(Pair A B) >> X\""], ["", "lemma parallel_reduction_pairE:\n  assumes \"(Pair A B) >> X\"\n  shows \"\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> (X = Pair A' B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'", "using assms"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B >> X\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'", "proof(induction rule: parallel_reduction_pairE'[where A=A and B=B and X=X])"], ["proof (state)\ngoal (10 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<lbrakk>X = SimplyTyped.Pair A B; SimplyTyped.Pair A B >> X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and>\n                         B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 10. \\<And>Ba Aa.\n        \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n         Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = SimplyTyped.Pair A' B'", "case 2"], ["proof (state)\nthis:\n  X = SimplyTyped.Pair A B\n  SimplyTyped.Pair A B >> X\n\ngoal (10 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<lbrakk>X = SimplyTyped.Pair A B; SimplyTyped.Pair A B >> X\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >> A' \\<and>\n                         B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 10. \\<And>Ba Aa.\n        \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n         Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A' B'.\n                             A >> A' \\<and>\n                             B >> B' \\<and> X = SimplyTyped.Pair A' B'", "thus ?case"], ["proof (prove)\nusing this:\n  X = SimplyTyped.Pair A B\n  SimplyTyped.Pair A B >> X\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'", "using parallel_reduction.refl"], ["proof (prove)\nusing this:\n  X = SimplyTyped.Pair A B\n  SimplyTyped.Pair A B >> X\n  ?A >> ?A\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'", "by blast"], ["proof (state)\nthis:\n  \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'\n\ngoal (9 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 9. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 9. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'", "case (6 A A' B B')"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  X = SimplyTyped.Pair A' B'\n  A >> A'\n  B >> B'\n  SimplyTyped.Pair A B >> X\n\ngoal (9 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >> A'; Ba >> B';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 9. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'", "thus ?case"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  X = SimplyTyped.Pair A' B'\n  A >> A'\n  B >> B'\n  SimplyTyped.Pair A B >> X\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'", "using parallel_reduction.pair trm_simp(5, 6)"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B = SimplyTyped.Pair A B\n  X = SimplyTyped.Pair A' B'\n  A >> A'\n  B >> B'\n  SimplyTyped.Pair A B >> X\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> SimplyTyped.Pair ?A ?B >> SimplyTyped.Pair ?A' ?B'\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?A = ?C\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?B = ?D\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X = SimplyTyped.Pair A' B'\n\ngoal (8 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. SimplyTyped.Pair A B >> X\n 2. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >> A'; Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A'; Aa >> A';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >> A';\n        Ba >> B'; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >> P';\n        SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >> X; SimplyTyped.Pair A B >> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >> A' \\<and>\n                            B >> B' \\<and> X = SimplyTyped.Pair A' B'", "qed (\n  metis assms,\n  metis app_not_pair,\n  metis fn_not_pair,\n  metis app_not_pair,\n  metis pair_not_fst,\n  metis pair_not_fst,\n  metis pair_not_snd,\n  metis pair_not_snd\n)"], ["", "inductive_cases parallel_reduction_fstE': \"(Fst P) >> X\""], ["", "lemma parallel_reduction_fstE:\n  assumes \"(Fst P) >> X\"\n  shows \"(\\<exists>P'. (P >> P') \\<and> X = (Fst P')) \\<or> (\\<exists>A A' B. (P = Pair A B) \\<and> (A >> A') \\<and> X = A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n    (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')", "using assms"], ["proof (prove)\nusing this:\n  Fst P >> X\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n    (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')", "proof(induction rule: parallel_reduction_fstE'[where P=P and X=X])"], ["proof (state)\ngoal (10 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Fst Pa; X = Fst P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>A B.\n       \\<lbrakk>Fst P = Fst (SimplyTyped.Pair A B); A >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 9. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 10. \\<And>B A.\n        \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n         Fst P >> X\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                          (\\<exists>A A' B.\n                              P = SimplyTyped.Pair A B \\<and>\n                              A >> A' \\<and> X = A')", "case (7 P P')"], ["proof (state)\nthis:\n  Fst P = Fst P\n  X = Fst P'\n  P >> P'\n  Fst P >> X\n\ngoal (10 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Fst Pa; X = Fst P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>A B.\n       \\<lbrakk>Fst P = Fst (SimplyTyped.Pair A B); A >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 9. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 10. \\<And>B A.\n        \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n         Fst P >> X\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                          (\\<exists>A A' B.\n                              P = SimplyTyped.Pair A B \\<and>\n                              A >> A' \\<and> X = A')", "thus ?case"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  X = Fst P'\n  P >> P'\n  Fst P >> X\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n    (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')", "using parallel_reduction.fst1 trm_simp(7)"], ["proof (prove)\nusing this:\n  Fst P = Fst P\n  X = Fst P'\n  P >> P'\n  Fst P >> X\n  ?P >> ?P' \\<Longrightarrow> Fst ?P >> Fst ?P'\n  Fst ?P = Fst ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n    (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')", "by metis"], ["proof (state)\nthis:\n  (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n  (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')\n\ngoal (9 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>A B.\n       \\<lbrakk>Fst P = Fst (SimplyTyped.Pair A B); A >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 9. \\<And>B A.\n       \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>A B.\n       \\<lbrakk>Fst P = Fst (SimplyTyped.Pair A B); A >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 9. \\<And>B A.\n       \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')", "case (8 A B)"], ["proof (state)\nthis:\n  Fst P = Fst (SimplyTyped.Pair A B)\n  A >> X\n  Fst P >> X\n\ngoal (9 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>A B.\n       \\<lbrakk>Fst P = Fst (SimplyTyped.Pair A B); A >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 9. \\<And>B A.\n       \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')", "thus ?case"], ["proof (prove)\nusing this:\n  Fst P = Fst (SimplyTyped.Pair A B)\n  A >> X\n  Fst P >> X\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n    (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')", "using parallel_reduction.fst2 trm_simp(7)"], ["proof (prove)\nusing this:\n  Fst P = Fst (SimplyTyped.Pair A B)\n  A >> X\n  Fst P >> X\n  ?A >> ?A' \\<Longrightarrow> Fst (SimplyTyped.Pair ?A ?B) >> ?A'\n  Fst ?P = Fst ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n    (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')", "by metis"], ["proof (state)\nthis:\n  (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n  (\\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X = A')\n\ngoal (8 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>B A.\n       \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. Fst P >> X\n 2. \\<lbrakk>X = Fst P; Fst P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                      (\\<exists>A A' B.\n                          P = SimplyTyped.Pair A B \\<and>\n                          A >> A' \\<and> X = A')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Fst P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Fst P = Fn x T A; X = Fn x T A'; A >> A';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = App A B; X = App A' B'; A >> A'; B >> B';\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Fst P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Fst P = Snd Pa; X = Snd P'; Pa >> P'; Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')\n 8. \\<And>B A.\n       \\<lbrakk>Fst P = Snd (SimplyTyped.Pair A B); B >> X;\n        Fst P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Fst P') \\<or>\n                         (\\<exists>A A' B.\n                             P = SimplyTyped.Pair A B \\<and>\n                             A >> A' \\<and> X = A')", "qed (\n  metis assms,\n  insert parallel_reduction.refl, metis,\n  metis app_not_fst,\n  metis fn_not_fst,\n  metis app_not_fst,\n  metis pair_not_fst,\n  metis fst_not_snd,\n  metis fst_not_snd\n)"], ["", "inductive_cases parallel_reduction_sndE': \"(Snd P) >> X\""], ["", "lemma parallel_reduction_sndE:\n  assumes \"(Snd P) >> X\"\n  shows \"(\\<exists>P'. (P >> P') \\<and> X = (Snd P')) \\<or> (\\<exists>A B B'. (P = Pair A B) \\<and> (B >> B') \\<and> X = B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n    (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')", "using assms"], ["proof (prove)\nusing this:\n  Snd P >> X\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n    (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')", "proof(induction rule: parallel_reduction_sndE'[where P=P and X=X])"], ["proof (state)\ngoal (10 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 9. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Snd Pa; X = Snd P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 10. \\<And>B A.\n        \\<lbrakk>Snd P = Snd (SimplyTyped.Pair A B); B >> X;\n         Snd P >> X\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                          (\\<exists>A B B'.\n                              P = SimplyTyped.Pair A B \\<and>\n                              B >> B' \\<and> X = B')", "case (9 P P')"], ["proof (state)\nthis:\n  Snd P = Snd P\n  X = Snd P'\n  P >> P'\n  Snd P >> X\n\ngoal (10 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 9. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Snd Pa; X = Snd P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 10. \\<And>B A.\n        \\<lbrakk>Snd P = Snd (SimplyTyped.Pair A B); B >> X;\n         Snd P >> X\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                          (\\<exists>A B B'.\n                              P = SimplyTyped.Pair A B \\<and>\n                              B >> B' \\<and> X = B')", "thus ?case"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  X = Snd P'\n  P >> P'\n  Snd P >> X\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n    (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')", "using parallel_reduction.snd1 trm_simp(8)"], ["proof (prove)\nusing this:\n  Snd P = Snd P\n  X = Snd P'\n  P >> P'\n  Snd P >> X\n  ?P >> ?P' \\<Longrightarrow> Snd ?P >> Snd ?P'\n  Snd ?P = Snd ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n    (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')", "by metis"], ["proof (state)\nthis:\n  (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n  (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')\n\ngoal (9 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 9. \\<And>B A.\n       \\<lbrakk>Snd P = Snd (SimplyTyped.Pair A B); B >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 9. \\<And>B A.\n       \\<lbrakk>Snd P = Snd (SimplyTyped.Pair A B); B >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')", "case (10 A B)"], ["proof (state)\nthis:\n  Snd P = Snd (SimplyTyped.Pair B A)\n  A >> X\n  Snd P >> X\n\ngoal (9 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 9. \\<And>B A.\n       \\<lbrakk>Snd P = Snd (SimplyTyped.Pair A B); B >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')", "thus ?case"], ["proof (prove)\nusing this:\n  Snd P = Snd (SimplyTyped.Pair B A)\n  A >> X\n  Snd P >> X\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n    (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')", "using parallel_reduction.snd2 trm_simp(8)"], ["proof (prove)\nusing this:\n  Snd P = Snd (SimplyTyped.Pair B A)\n  A >> X\n  Snd P >> X\n  ?B >> ?B' \\<Longrightarrow> Snd (SimplyTyped.Pair ?A ?B) >> ?B'\n  Snd ?P = Snd ?Q \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n    (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')", "by metis"], ["proof (state)\nthis:\n  (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n  (\\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X = B')\n\ngoal (8 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. Snd P >> X\n 2. \\<lbrakk>X = Snd P; Snd P >> X\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                      (\\<exists>A B B'.\n                          P = SimplyTyped.Pair A B \\<and>\n                          B >> B' \\<and> X = B')\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>Snd P = App (Fn x T A) B; X = A'[x ::= B']; A >> A';\n        B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 4. \\<And>A A' x T.\n       \\<lbrakk>Snd P = Fn x T A; X = Fn x T A'; A >> A';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 5. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = App A B; X = App A' B'; A >> A'; B >> B';\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 6. \\<And>A A' B B'.\n       \\<lbrakk>Snd P = SimplyTyped.Pair A B; X = SimplyTyped.Pair A' B';\n        A >> A'; B >> B'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 7. \\<And>Pa P'.\n       \\<lbrakk>Snd P = Fst Pa; X = Fst P'; Pa >> P'; Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')\n 8. \\<And>A B.\n       \\<lbrakk>Snd P = Fst (SimplyTyped.Pair A B); A >> X;\n        Snd P >> X\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>P'. P >> P' \\<and> X = Snd P') \\<or>\n                         (\\<exists>A B B'.\n                             P = SimplyTyped.Pair A B \\<and>\n                             B >> B' \\<and> X = B')", "qed (\n  metis assms,\n  insert parallel_reduction.refl, metis,\n  metis app_not_snd,\n  metis fn_not_snd,\n  metis app_not_snd,\n  metis pair_not_snd,\n  metis fst_not_snd,\n  metis fst_not_snd\n)"], ["", "lemma parallel_reduction_subst_inner:\n  assumes \"M >> M'\"\n  shows \"X[z ::= M] >> (X[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X[z ::= M] >> X[z ::= M']", "using assms"], ["proof (prove)\nusing this:\n  M >> M'\n\ngoal (1 subgoal):\n 1. X[z ::= M] >> X[z ::= M']", "proof(induction X rule: trm_strong_induct[where S=\"{z} \\<union> fvs M \\<union> fvs M'\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. M >> M' \\<Longrightarrow> Unit[z ::= M] >> Unit[z ::= M']\n 2. \\<And>x. M >> M' \\<Longrightarrow> Var x[z ::= M] >> Var x[z ::= M']\n 3. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 5. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 6. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 7. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']\n 8. finite ({z} \\<union> fvs M \\<union> fvs M')", "show \"finite ({z} \\<union> fvs M \\<union> fvs M')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs M \\<union> fvs M')", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs M \\<union> fvs M')", "by auto"], ["proof (state)\nthis:\n  finite ({z} \\<union> fvs M \\<union> fvs M')\n\ngoal (7 subgoals):\n 1. M >> M' \\<Longrightarrow> Unit[z ::= M] >> Unit[z ::= M']\n 2. \\<And>x. M >> M' \\<Longrightarrow> Var x[z ::= M] >> Var x[z ::= M']\n 3. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 5. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 6. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 7. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case 1"], ["proof (state)\nthis:\n  M >> M'\n\ngoal (7 subgoals):\n 1. M >> M' \\<Longrightarrow> Unit[z ::= M] >> Unit[z ::= M']\n 2. \\<And>x. M >> M' \\<Longrightarrow> Var x[z ::= M] >> Var x[z ::= M']\n 3. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 4. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 5. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 6. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 7. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  M >> M'\n\ngoal (1 subgoal):\n 1. Unit[z ::= M] >> Unit[z ::= M']", "using subst_simp_unit parallel_reduction.refl"], ["proof (prove)\nusing this:\n  M >> M'\n  Unit[?x ::= ?M] = Unit\n  ?A >> ?A\n\ngoal (1 subgoal):\n 1. Unit[z ::= M] >> Unit[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Unit[z ::= M] >> Unit[z ::= M']\n\ngoal (6 subgoals):\n 1. \\<And>x. M >> M' \\<Longrightarrow> Var x[z ::= M] >> Var x[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 4. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 5. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 6. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x. M >> M' \\<Longrightarrow> Var x[z ::= M] >> Var x[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 4. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 5. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 6. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case (2 x)"], ["proof (state)\nthis:\n  M >> M'\n\ngoal (6 subgoals):\n 1. \\<And>x. M >> M' \\<Longrightarrow> Var x[z ::= M] >> Var x[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 3. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 4. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 5. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 6. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  M >> M'\n\ngoal (1 subgoal):\n 1. Var x[z ::= M] >> Var x[z ::= M']", "by(cases \"x = z\", metis subst_simp_var1, metis subst_simp_var2 parallel_reduction.refl)"], ["proof (state)\nthis:\n  Var x[z ::= M] >> Var x[z ::= M']\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 3. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 5. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 3. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 5. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case (3 A B)"], ["proof (state)\nthis:\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M']\n  M >> M'\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> App A B[z ::= M']\n 2. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 3. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 5. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. App A B[z ::= M] >> App A B[z ::= M']", "using subst_simp_app parallel_reduction.app"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M']\n  M >> M'\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App ?A ?B >> App ?A' ?B'\n\ngoal (1 subgoal):\n 1. App A B[z ::= M] >> App A B[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App A B[z ::= M] >> App A B[z ::= M']\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case (4 x T A)"], ["proof (state)\nthis:\n  x \\<notin> {z} \\<union> fvs M \\<union> fvs M'\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M'\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "hence \"x \\<noteq> z\" \"x \\<notin> fvs M\" \"x \\<notin> fvs M'\""], ["proof (prove)\nusing this:\n  x \\<notin> {z} \\<union> fvs M \\<union> fvs M'\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. x \\<noteq> z &&& x \\<notin> fvs M &&& x \\<notin> fvs M'", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> z\n  x \\<notin> fvs M\n  x \\<notin> fvs M'\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n 2. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 4. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  x \\<notin> fvs M\n  x \\<notin> fvs M'\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> Fn x T A[z ::= M']", "using 4 subst_simp_fn parallel_reduction.eta"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  x \\<notin> fvs M\n  x \\<notin> fvs M'\n  x \\<notin> {z} \\<union> fvs M \\<union> fvs M'\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M'\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  ?A >> ?A' \\<Longrightarrow> Fn ?x ?T ?A >> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> Fn x T A[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> Fn x T A[z ::= M']\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 2. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 2. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case (5 A B)"], ["proof (state)\nthis:\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M']\n  M >> M'\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n 2. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 3. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']", "using subst_simp_pair parallel_reduction.pair"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M']\n  M >> M' \\<Longrightarrow> B[z ::= M] >> B[z ::= M']\n  M >> M'\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> SimplyTyped.Pair ?A ?B >> SimplyTyped.Pair ?A' ?B'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[z ::= M] >> SimplyTyped.Pair A B[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 2. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 2. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case (6 P)"], ["proof (state)\nthis:\n  M >> M' \\<Longrightarrow> P[z ::= M] >> P[z ::= M']\n  M >> M'\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> Fst A[z ::= M']\n 2. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> P[z ::= M] >> P[z ::= M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> Fst P[z ::= M']", "using subst_simp_fst parallel_reduction.fst1"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> P[z ::= M] >> P[z ::= M']\n  M >> M'\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n  ?P >> ?P' \\<Longrightarrow> Fst ?P >> Fst ?P'\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> Fst P[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst P[z ::= M] >> Fst P[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "case (7 P)"], ["proof (state)\nthis:\n  M >> M' \\<Longrightarrow> P[z ::= M] >> P[z ::= M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>M >> M' \\<Longrightarrow> A[z ::= M] >> A[z ::= M'];\n        M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> Snd A[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> P[z ::= M] >> P[z ::= M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> Snd P[z ::= M']", "using subst_simp_snd parallel_reduction.snd1"], ["proof (prove)\nusing this:\n  M >> M' \\<Longrightarrow> P[z ::= M] >> P[z ::= M']\n  M >> M'\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n  ?P >> ?P' \\<Longrightarrow> Snd ?P >> Snd ?P'\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> Snd P[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd P[z ::= M] >> Snd P[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma parallel_reduction_subst:\n  assumes \"X >> X'\" \"M >> M'\"\n  shows \"X[z ::= M] >> (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X[z ::= M] >> X'[z ::= M']", "using assms"], ["proof (prove)\nusing this:\n  X >> X'\n  M >> M'\n\ngoal (1 subgoal):\n 1. X[z ::= M] >> X'[z ::= M']", "proof(induction X arbitrary: X' rule: trm_strong_depth_induct[where S=\"{z} \\<union> fvs M \\<union> fvs M'\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>X'.\n       \\<lbrakk>Unit >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Unit[z ::= M] >> X'[z ::= M']\n 2. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 7. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']\n 8. finite ({z} \\<union> fvs M \\<union> fvs M')", "show \"finite ({z} \\<union> fvs M \\<union> fvs M')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs M \\<union> fvs M')", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs M \\<union> fvs M')", "by auto"], ["proof (state)\nthis:\n  finite ({z} \\<union> fvs M \\<union> fvs M')\n\ngoal (7 subgoals):\n 1. \\<And>X'.\n       \\<lbrakk>Unit >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Unit[z ::= M] >> X'[z ::= M']\n 2. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 7. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>X'.\n       \\<lbrakk>Unit >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Unit[z ::= M] >> X'[z ::= M']\n 2. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 7. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  Unit >> X'\n  M >> M'\n\ngoal (7 subgoals):\n 1. \\<And>X'.\n       \\<lbrakk>Unit >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Unit[z ::= M] >> X'[z ::= M']\n 2. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 7. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "hence \"X' = Unit\""], ["proof (prove)\nusing this:\n  Unit >> X'\n  M >> M'\n\ngoal (1 subgoal):\n 1. X' = Unit", "using parallel_reduction_unitE"], ["proof (prove)\nusing this:\n  Unit >> X'\n  M >> M'\n  Unit >> ?A \\<Longrightarrow> ?A = Unit\n\ngoal (1 subgoal):\n 1. X' = Unit", "by metis"], ["proof (state)\nthis:\n  X' = Unit\n\ngoal (7 subgoals):\n 1. \\<And>X'.\n       \\<lbrakk>Unit >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Unit[z ::= M] >> X'[z ::= M']\n 2. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 7. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  X' = Unit\n\ngoal (1 subgoal):\n 1. Unit[z ::= M] >> X'[z ::= M']", "using parallel_reduction.refl subst_simp_unit"], ["proof (prove)\nusing this:\n  X' = Unit\n  ?A >> ?A\n  Unit[?x ::= ?M] = Unit\n\ngoal (1 subgoal):\n 1. Unit[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Unit[z ::= M] >> X'[z ::= M']\n\ngoal (6 subgoals):\n 1. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case (2 x)"], ["proof (state)\nthis:\n  Var x >> X'\n  M >> M'\n\ngoal (6 subgoals):\n 1. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "hence \"X' = Var x\""], ["proof (prove)\nusing this:\n  Var x >> X'\n  M >> M'\n\ngoal (1 subgoal):\n 1. X' = Var x", "using parallel_reduction_varE"], ["proof (prove)\nusing this:\n  Var x >> X'\n  M >> M'\n  Var ?x >> ?A \\<Longrightarrow> ?A = Var ?x\n\ngoal (1 subgoal):\n 1. X' = Var x", "by metis"], ["proof (state)\nthis:\n  X' = Var x\n\ngoal (6 subgoals):\n 1. \\<And>x X'.\n       \\<lbrakk>Var x >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Var x[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 6. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  X' = Var x\n\ngoal (1 subgoal):\n 1. Var x[z ::= M] >> X'[z ::= M']", "using parallel_reduction_subst_inner \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  X' = Var x\n  ?M >> ?M' \\<Longrightarrow> ?X[?z ::= ?M] >> ?X[?z ::= ?M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. Var x[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Var x[z ::= M] >> X'[z ::= M']\n\ngoal (5 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case (3 C D)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  App C D >> X'\n  M >> M'\n\ngoal (5 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "consider \"\\<exists>x T A. C = Fn x T A\" | \"\\<nexists>x T A. C = Fn x T A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x T A. C = Fn x T A \\<Longrightarrow> thesis;\n     \\<nexists>x T A. C = Fn x T A \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>x T A. C = Fn x T A \\<Longrightarrow> ?thesis;\n   \\<nexists>x T A. C = Fn x T A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (5 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (App A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        App A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> App A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 5. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>x T A. C = Fn x T A \\<Longrightarrow> ?thesis;\n   \\<nexists>x T A. C = Fn x T A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  \\<exists>x T A. C = Fn x T A\n\ngoal (2 subgoals):\n 1. \\<exists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x T A. C = Fn x T A", "obtain x T A where C: \"C = Fn x T A\""], ["proof (prove)\nusing this:\n  \\<exists>x T A. C = Fn x T A\n\ngoal (1 subgoal):\n 1. (\\<And>x T A. C = Fn x T A \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C = Fn x T A\n\ngoal (2 subgoals):\n 1. \\<exists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"depth C < depth (App C D)\" \"depth D < depth (App C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth C < depth (App C D) &&& depth D < depth (App C D)", "using depth_app"], ["proof (prove)\nusing this:\n  depth ?A < depth (App ?A ?B)\n  depth ?B < depth (App ?A ?B)\n\ngoal (1 subgoal):\n 1. depth C < depth (App C D) &&& depth D < depth (App C D)", "by auto"], ["proof (state)\nthis:\n  depth C < depth (App C D)\n  depth D < depth (App C D)\n\ngoal (2 subgoals):\n 1. \\<exists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "consider\n          \"X' = App (Fn x T A) D\"\n        | \"\\<exists>A' D'. ((Fn x T A) >> (Fn x T A')) \\<and> (D >> D') \\<and> X' = (App (Fn x T A') D')\" \n        | \"\\<exists>A' D'. (A >> A') \\<and> (D >> D') \\<and> X' = (A'[x ::= D'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X' = App (Fn x T A) D \\<Longrightarrow> thesis;\n     \\<exists>A' D'.\n        Fn x T A >> Fn x T A' \\<and>\n        D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n     thesis;\n     \\<exists>A' D'.\n        A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_redexE \\<open>(App C D) >> X'\\<close> C"], ["proof (prove)\nusing this:\n  App (Fn ?x ?T ?A) ?B >> ?X \\<Longrightarrow>\n  ?X = App (Fn ?x ?T ?A) ?B \\<or>\n  (\\<exists>A' B'. ?A >> A' \\<and> ?B >> B' \\<and> ?X = A'[?x ::= B']) \\<or>\n  (\\<exists>A' B'.\n      Fn ?x ?T ?A >> Fn ?x ?T A' \\<and>\n      ?B >> B' \\<and> ?X = App (Fn ?x ?T A') B')\n  App C D >> X'\n  C = Fn x T A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X' = App (Fn x T A) D \\<Longrightarrow> thesis;\n     \\<exists>A' D'.\n        Fn x T A >> Fn x T A' \\<and>\n        D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n     thesis;\n     \\<exists>A' D'.\n        A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>X' = App (Fn x T A) D \\<Longrightarrow> ?thesis;\n   \\<exists>A' D'.\n      Fn x T A >> Fn x T A' \\<and>\n      D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n   ?thesis;\n   \\<exists>A' D'.\n      A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<exists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>X' = App (Fn x T A) D \\<Longrightarrow> ?thesis;\n   \\<exists>A' D'.\n      Fn x T A >> Fn x T A' \\<and>\n      D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n   ?thesis;\n   \\<exists>A' D'.\n      A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. X' = App (Fn x T A) D \\<Longrightarrow> App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 3. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  X' = App (Fn x T A) D\n\ngoal (3 subgoals):\n 1. X' = App (Fn x T A) D \\<Longrightarrow> App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 3. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "thus ?thesis"], ["proof (prove)\nusing this:\n  X' = App (Fn x T A) D\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "using parallel_reduction_subst_inner \\<open>M >> M'\\<close> C"], ["proof (prove)\nusing this:\n  X' = App (Fn x T A) D\n  ?M >> ?M' \\<Longrightarrow> ?X[?z ::= ?M] >> ?X[?z ::= ?M']\n  M >> M'\n  C = Fn x T A\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] >> X'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "case 2"], ["proof (state)\nthis:\n  \\<exists>A' D'.\n     Fn x T A >> Fn x T A' \\<and> D >> D' \\<and> X' = App (Fn x T A') D'\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A' D'.\n     Fn x T A >> Fn x T A' \\<and> D >> D' \\<and> X' = App (Fn x T A') D'", "obtain A' D'\n              where \"(Fn x T A) >> (Fn x T A')\" \"D >> D'\" and X': \"X' = App (Fn x T A') D'\""], ["proof (prove)\nusing this:\n  \\<exists>A' D'.\n     Fn x T A >> Fn x T A' \\<and> D >> D' \\<and> X' = App (Fn x T A') D'\n\ngoal (1 subgoal):\n 1. (\\<And>A' D'.\n        \\<lbrakk>Fn x T A >> Fn x T A'; D >> D';\n         X' = App (Fn x T A') D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Fn x T A >> Fn x T A'\n  D >> D'\n  X' = App (Fn x T A') D'\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have *: \"((Fn x T A)[z ::= M]) >> ((Fn x T A')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> Fn x T A'[z ::= M']", "using \"3.IH\" \\<open>depth C < depth (App C D)\\<close> C \\<open>(Fn x T A) >> (Fn x T A')\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth C < depth (App C D)\n  C = Fn x T A\n  Fn x T A >> Fn x T A'\n  M >> M'\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> Fn x T A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> Fn x T A'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have **: \"(D[z ::= M]) >> (D'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D[z ::= M] >> D'[z ::= M']", "using \"3.IH\" \\<open>depth D < depth (App C D)\\<close> \\<open>D >> D'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth D < depth (App C D)\n  D >> D'\n  M >> M'\n\ngoal (1 subgoal):\n 1. D[z ::= M] >> D'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  D[z ::= M] >> D'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"(App C D)[z ::= M] = App ((Fn x T A)[z ::= M]) (D[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App C D[z ::= M] = App Fn x T A[z ::= M] D[z ::= M]", "using subst_simp_app C"], ["proof (prove)\nusing this:\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n  C = Fn x T A\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] = App Fn x T A[z ::= M] D[z ::= M]", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] = App Fn x T A[z ::= M] D[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App C D[z ::= M] = App Fn x T A[z ::= M] D[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... >> (App ((Fn x T A')[z ::= M']) (D'[z ::= M']))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App Fn x T A[z ::= M] D[z ::= M] >> App Fn x T A'[z ::= M'] D'[z ::= M']", "using * ** parallel_reduction.app"], ["proof (prove)\nusing this:\n  Fn x T A[z ::= M] >> Fn x T A'[z ::= M']\n  D[z ::= M] >> D'[z ::= M']\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App ?A ?B >> App ?A' ?B'\n\ngoal (1 subgoal):\n 1. App Fn x T A[z ::= M] D[z ::= M] >> App Fn x T A'[z ::= M'] D'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App Fn x T A[z ::= M] D[z ::= M] >> App Fn x T A'[z ::= M'] D'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App Fn x T A[z ::= M] D[z ::= M] >> App Fn x T A'[z ::= M'] D'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = ((App (Fn x T A') D')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App Fn x T A'[z ::= M'] D'[z ::= M'] = App (Fn x T A') D'[z ::= M']", "using subst_simp_app"], ["proof (prove)\nusing this:\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App Fn x T A'[z ::= M'] D'[z ::= M'] = App (Fn x T A') D'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App Fn x T A'[z ::= M'] D'[z ::= M'] = App (Fn x T A') D'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App Fn x T A'[z ::= M'] D'[z ::= M'] = App (Fn x T A') D'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (Fn x T A') D'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = App (Fn x T A') D'\n\ngoal (1 subgoal):\n 1. App (Fn x T A') D'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App (Fn x T A') D'[z ::= M'] = X'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>A' D'.\n       Fn x T A >> Fn x T A' \\<and>\n       D >> D' \\<and> X' = App (Fn x T A') D' \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  App C D[z ::= M] = App Fn x T A[z ::= M] D[z ::= M]\n  App Fn x T A[z ::= M] D[z ::= M] >> App Fn x T A'[z ::= M'] D'[z ::= M']\n  App Fn x T A'[z ::= M'] D'[z ::= M'] = App (Fn x T A') D'[z ::= M']\n  App (Fn x T A') D'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  App C D[z ::= M] = App Fn x T A[z ::= M] D[z ::= M]\n  App Fn x T A[z ::= M] D[z ::= M] >> App Fn x T A'[z ::= M'] D'[z ::= M']\n  App Fn x T A'[z ::= M'] D'[z ::= M'] = App (Fn x T A') D'[z ::= M']\n  App (Fn x T A') D'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "case 3"], ["proof (state)\nthis:\n  \\<exists>A' D'. A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A' D'. A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D']", "obtain A' D' where \"A >> A'\" \"D >> D'\" and X': \"X' = (A'[x ::= D'])\""], ["proof (prove)\nusing this:\n  \\<exists>A' D'. A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D']\n\ngoal (1 subgoal):\n 1. (\\<And>A' D'.\n        \\<lbrakk>A >> A'; D >> D'; X' = A'[x ::= D']\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >> A'\n  D >> D'\n  X' = A'[x ::= D']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"depth A < depth (App C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (App C D)", "using C depth_app depth_fn dual_order.strict_trans"], ["proof (prove)\nusing this:\n  C = Fn x T A\n  depth ?A < depth (App ?A ?B)\n  depth ?B < depth (App ?A ?B)\n  depth ?A < depth (Fn ?x ?T ?A)\n  \\<lbrakk>?b < ?a; ?c < ?b\\<rbrakk> \\<Longrightarrow> ?c < ?a\n\ngoal (1 subgoal):\n 1. depth A < depth (App C D)", "by fastforce"], ["proof (state)\nthis:\n  depth A < depth (App C D)\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')", "using fvs_finite"], ["proof (prove)\nusing this:\n  finite (fvs ?M)\n\ngoal (1 subgoal):\n 1. finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')", "by auto"], ["proof (state)\nthis:\n  finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')", "obtain y\n              where \"y \\<notin> {z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A'\" and C: \"C = Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)\""], ["proof (prove)\nusing this:\n  finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<notin> {z} \\<union> fvs M \\<union> fvs M' \\<union>\n                            fvs A';\n         C = Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using fresh_fn C"], ["proof (prove)\nusing this:\n  finite ({z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A')\n  finite ?S \\<Longrightarrow>\n  \\<exists>y B.\n     y \\<notin> ?S \\<and>\n     B = [y \\<leftrightarrow> ?x] \\<cdot> ?A \\<and> Fn ?x ?T ?A = Fn y ?T B\n  C = Fn x T A\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<notin> {z} \\<union> fvs M \\<union> fvs M' \\<union>\n                            fvs A';\n         C = Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  y \\<notin> {z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A'\n  C = Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "hence \"y \\<noteq> z\" \"y \\<notin> fvs M\" \"y \\<notin> fvs M'\" \"y \\<notin> fvs A'\""], ["proof (prove)\nusing this:\n  y \\<notin> {z} \\<union> fvs M \\<union> fvs M' \\<union> fvs A'\n  C = Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)\n\ngoal (1 subgoal):\n 1. (y \\<noteq> z &&& y \\<notin> fvs M) &&&\n    y \\<notin> fvs M' &&& y \\<notin> fvs A'", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> z\n  y \\<notin> fvs M\n  y \\<notin> fvs M'\n  y \\<notin> fvs A'\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"([y \\<leftrightarrow> x] \\<cdot> A) >> ([y \\<leftrightarrow> x] \\<cdot> A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'", "using parallel_reduction_prm \\<open>A >> A'\\<close>"], ["proof (prove)\nusing this:\n  ?A >> ?A' \\<Longrightarrow> ?\\<pi> \\<cdot> ?A >> ?\\<pi> \\<cdot> ?A'\n  A >> A'\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "hence *: \"([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] >> (([y \\<leftrightarrow> x] \\<cdot> A')[z ::= M'])\""], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot>\n    A[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M']", "using \"3.IH\" \\<open>depth A < depth (App C D)\\<close> depth_prm"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth A < depth (App C D)\n  depth (?\\<pi> \\<cdot> ?A) = depth ?A\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot>\n    A[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M']", "using \\<open>([y \\<leftrightarrow> x] \\<cdot> A) >> ([y \\<leftrightarrow> x] \\<cdot>A')\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth A < depth (App C D)\n  depth (?\\<pi> \\<cdot> ?A) = depth ?A\n  [y \\<leftrightarrow> x] \\<cdot> A >> [y \\<leftrightarrow> x] \\<cdot> A'\n  M >> M'\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot>\n    A[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> x] \\<cdot>\n  A[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have **: \"(D[z ::= M]) >> (D'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D[z ::= M] >> D'[z ::= M']", "using \"3.IH\" \\<open>depth D < depth (App C D)\\<close> \\<open>D >> D'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth D < depth (App C D)\n  D >> D'\n  M >> M'\n\ngoal (1 subgoal):\n 1. D[z ::= M] >> D'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  D[z ::= M] >> D'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"(App C D)[z ::= M] = (App ((Fn y T ([y \\<leftrightarrow> x] \\<cdot> A))[z ::= M]) (D[z ::= M]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App C D[z ::= M] =\n    App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M]", "using C subst_simp_app"], ["proof (prove)\nusing this:\n  C = Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] =\n    App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M]", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] =\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App C D[z ::= M] =\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = (App (Fn y T (([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M])) (D[z ::= M]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M] =\n    App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M]) D[z ::= M]", "using \\<open>y \\<noteq> z\\<close> \\<open>y \\<notin> fvs M\\<close> subst_simp_fn"], ["proof (prove)\nusing this:\n  y \\<noteq> z\n  y \\<notin> fvs M\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M] =\n    App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M]) D[z ::= M]", "by metis"], ["proof (state)\nthis:\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M] =\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M]) D[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M] =\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M]) D[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... >> (([y \\<leftrightarrow> x] \\<cdot> A')[z ::= M'][y ::= D'[z ::= M']])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M])\n     D[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot>\n                   A'[z ::= M'][y ::= D'[z ::= M']]", "using parallel_reduction.beta * **"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App (Fn ?x ?T ?A) ?B >> ?A'[?x ::= ?B']\n  [y \\<leftrightarrow> x] \\<cdot>\n  A[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M']\n  D[z ::= M] >> D'[z ::= M']\n\ngoal (1 subgoal):\n 1. App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M])\n     D[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot>\n                   A'[z ::= M'][y ::= D'[z ::= M']]", "by metis"], ["proof (state)\nthis:\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M])\n   D[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot>\n                 A'[z ::= M'][y ::= D'[z ::= M']]\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M])\n   D[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot>\n                 A'[z ::= M'][y ::= D'[z ::= M']]\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = (([y \\<leftrightarrow> x] \\<cdot> A')[y ::= D'][z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M'][y ::= D'[z ::= M']] =\n    [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M']", "using barendregt \\<open>y \\<noteq> z\\<close> \\<open>y \\<notin> fvs M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y \\<noteq> ?z; ?y \\<notin> fvs ?L\\<rbrakk>\n  \\<Longrightarrow> ?M[?y ::= ?N][?z ::= ?L] =\n                    ?M[?z ::= ?L][?y ::= ?N[?z ::= ?L]]\n  y \\<noteq> z\n  y \\<notin> fvs M'\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M'][y ::= D'[z ::= M']] =\n    [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M']", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M'][y ::= D'[z ::= M']] =\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M'][y ::= D'[z ::= M']] =\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = (A'[x ::= D'][z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M'] =\n    A'[x ::= D'][z ::= M']", "using subst_swp \\<open>y \\<notin> fvs A'\\<close>"], ["proof (prove)\nusing this:\n  ?y \\<notin> fvs ?A \\<Longrightarrow>\n  [?y \\<leftrightarrow> ?z] \\<cdot> ?A[?y ::= ?M] = ?A[?z ::= ?M]\n  y \\<notin> fvs A'\n\ngoal (1 subgoal):\n 1. [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M'] =\n    A'[x ::= D'][z ::= M']", "by metis"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M'] =\n  A'[x ::= D'][z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M'] =\n  A'[x ::= D'][z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A'[x ::= D'][z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = A'[x ::= D']\n\ngoal (1 subgoal):\n 1. A'[x ::= D'][z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  A'[x ::= D'][z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' D'.\n       A >> A' \\<and> D >> D' \\<and> X' = A'[x ::= D'] \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  App C D[z ::= M] =\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M]\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M] =\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M]) D[z ::= M]\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M])\n   D[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot>\n                 A'[z ::= M'][y ::= D'[z ::= M']]\n  [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M'][y ::= D'[z ::= M']] =\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M']\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M'] =\n  A'[x ::= D'][z ::= M']\n  A'[x ::= D'][z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  App C D[z ::= M] =\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M]\n  App Fn y T ([y \\<leftrightarrow> x] \\<cdot> A)[z ::= M] D[z ::= M] =\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M]) D[z ::= M]\n  App (Fn y T [y \\<leftrightarrow> x] \\<cdot> A[z ::= M])\n   D[z ::= M] >> [y \\<leftrightarrow> x] \\<cdot>\n                 A'[z ::= M'][y ::= D'[z ::= M']]\n  [y \\<leftrightarrow> x] \\<cdot> A'[z ::= M'][y ::= D'[z ::= M']] =\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M']\n  [y \\<leftrightarrow> x] \\<cdot> A'[y ::= D'][z ::= M'] =\n  A'[x ::= D'][z ::= M']\n  A'[x ::= D'][z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  App C D[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "case 2"], ["proof (state)\nthis:\n  \\<nexists>x T A. C = Fn x T A\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<nexists>x T A. C = Fn x T A", "obtain C' D' where \"C >> C'\" \"D >> D'\" and X': \"X' = App C' D'\""], ["proof (prove)\nusing this:\n  \\<nexists>x T A. C = Fn x T A\n\ngoal (1 subgoal):\n 1. (\\<And>C' D'.\n        \\<lbrakk>C >> C'; D >> D'; X' = App C' D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_nonredexE \\<open>(App C D) >> X'\\<close>"], ["proof (prove)\nusing this:\n  \\<nexists>x T A. C = Fn x T A\n  \\<lbrakk>App ?A ?B >> ?X; \\<And>x T A'. ?A \\<noteq> Fn x T A'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A' B'.\n                       ?A >> A' \\<and> ?B >> B' \\<and> ?X = App A' B'\n  App C D >> X'\n\ngoal (1 subgoal):\n 1. (\\<And>C' D'.\n        \\<lbrakk>C >> C'; D >> D'; X' = App C' D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  C >> C'\n  D >> D'\n  X' = App C' D'\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"depth C < depth (App C D)\" \"depth D < depth (App C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth C < depth (App C D) &&& depth D < depth (App C D)", "using depth_app"], ["proof (prove)\nusing this:\n  depth ?A < depth (App ?A ?B)\n  depth ?B < depth (App ?A ?B)\n\ngoal (1 subgoal):\n 1. depth C < depth (App C D) &&& depth D < depth (App C D)", "by auto"], ["proof (state)\nthis:\n  depth C < depth (App C D)\n  depth D < depth (App C D)\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "hence *: \"(C[z ::= M]) >> (C'[z ::= M'])\" and **: \"(D[z ::= M]) >> (D'[z ::= M'])\""], ["proof (prove)\nusing this:\n  depth C < depth (App C D)\n  depth D < depth (App C D)\n\ngoal (1 subgoal):\n 1. C[z ::= M] >> C'[z ::= M'] &&& D[z ::= M] >> D'[z ::= M']", "using \"3.IH\" \\<open>C >> C'\\<close> \\<open>D >> D'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  depth C < depth (App C D)\n  depth D < depth (App C D)\n  \\<lbrakk>depth ?K < depth (App C D); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  C >> C'\n  D >> D'\n  M >> M'\n\ngoal (1 subgoal):\n 1. C[z ::= M] >> C'[z ::= M'] &&& D[z ::= M] >> D'[z ::= M']", "by metis+"], ["proof (state)\nthis:\n  C[z ::= M] >> C'[z ::= M']\n  D[z ::= M] >> D'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"(App C D)[z ::= M] = App (C[z ::= M]) (D[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App C D[z ::= M] = App C[z ::= M] D[z ::= M]", "using subst_simp_app"], ["proof (prove)\nusing this:\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] = App C[z ::= M] D[z ::= M]", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] = App C[z ::= M] D[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App C D[z ::= M] = App C[z ::= M] D[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... >> (App (C'[z ::= M']) (D'[z ::= M']))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App C[z ::= M] D[z ::= M] >> App C'[z ::= M'] D'[z ::= M']", "using parallel_reduction.app * **"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App ?A ?B >> App ?A' ?B'\n  C[z ::= M] >> C'[z ::= M']\n  D[z ::= M] >> D'[z ::= M']\n\ngoal (1 subgoal):\n 1. App C[z ::= M] D[z ::= M] >> App C'[z ::= M'] D'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C[z ::= M] D[z ::= M] >> App C'[z ::= M'] D'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App C[z ::= M] D[z ::= M] >> App C'[z ::= M'] D'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = ((App C' D')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App C'[z ::= M'] D'[z ::= M'] = App C' D'[z ::= M']", "using subst_simp_app"], ["proof (prove)\nusing this:\n  App ?A ?B[?x ::= ?M] = App ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App C'[z ::= M'] D'[z ::= M'] = App C' D'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C'[z ::= M'] D'[z ::= M'] = App C' D'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  App C'[z ::= M'] D'[z ::= M'] = App C' D'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App C' D'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = App C' D'\n\ngoal (1 subgoal):\n 1. App C' D'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C' D'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<nexists>x T A. C = Fn x T A \\<Longrightarrow>\n    App C D[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  App C D[z ::= M] = App C[z ::= M] D[z ::= M]\n  App C[z ::= M] D[z ::= M] >> App C'[z ::= M'] D'[z ::= M']\n  App C'[z ::= M'] D'[z ::= M'] = App C' D'[z ::= M']\n  App C' D'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  App C D[z ::= M] = App C[z ::= M] D[z ::= M]\n  App C[z ::= M] D[z ::= M] >> App C'[z ::= M'] D'[z ::= M']\n  App C'[z ::= M'] D'[z ::= M'] = App C' D'[z ::= M']\n  App C' D'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. App C D[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  App C D[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  App C D[z ::= M] >> X'[z ::= M']\n\ngoal (4 subgoals):\n 1. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case (4 x T A)"], ["proof (state)\nthis:\n  x \\<notin> {z} \\<union> fvs M \\<union> fvs M'\n  \\<lbrakk>depth ?K < depth (Fn x T A); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  Fn x T A >> X'\n  M >> M'\n\ngoal (4 subgoals):\n 1. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "hence \"x \\<noteq> z\" \"x \\<notin> fvs M\" \"x \\<notin> fvs M'\""], ["proof (prove)\nusing this:\n  x \\<notin> {z} \\<union> fvs M \\<union> fvs M'\n  \\<lbrakk>depth ?K < depth (Fn x T A); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  Fn x T A >> X'\n  M >> M'\n\ngoal (1 subgoal):\n 1. x \\<noteq> z &&& x \\<notin> fvs M &&& x \\<notin> fvs M'", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> z\n  x \\<notin> fvs M\n  x \\<notin> fvs M'\n\ngoal (4 subgoals):\n 1. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "from \\<open>(Fn x T A) >> X'\\<close>"], ["proof (chain)\npicking this:\n  Fn x T A >> X'", "consider\n      \"X' = Fn x T A\"\n    | \"\\<exists>A'. (A >> A') \\<and> X' = Fn x T A'\""], ["proof (prove)\nusing this:\n  Fn x T A >> X'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X' = Fn x T A \\<Longrightarrow> thesis;\n     \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_fnE"], ["proof (prove)\nusing this:\n  Fn x T A >> X'\n  Fn ?x ?T ?A >> ?X \\<Longrightarrow>\n  ?X = Fn ?x ?T ?A \\<or> (\\<exists>A'. ?A >> A' \\<and> ?X = Fn ?x ?T A')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X' = Fn x T A \\<Longrightarrow> thesis;\n     \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>X' = Fn x T A \\<Longrightarrow> ?thesis;\n   \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (4 subgoals):\n 1. \\<And>x T A X'.\n       \\<lbrakk>x \\<notin> {z} \\<union> fvs M \\<union> fvs M';\n        \\<And>K X'.\n           \\<lbrakk>depth K < depth (Fn x T A); K >> X'; M >> M'\\<rbrakk>\n           \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fn x T A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 4. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>X' = Fn x T A \\<Longrightarrow> ?thesis;\n   \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> X'[z ::= M']", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. X' = Fn x T A \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  X' = Fn x T A\n\ngoal (2 subgoals):\n 1. X' = Fn x T A \\<Longrightarrow> Fn x T A[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "thus ?thesis"], ["proof (prove)\nusing this:\n  X' = Fn x T A\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> X'[z ::= M']", "using parallel_reduction_subst_inner \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  X' = Fn x T A\n  ?M >> ?M' \\<Longrightarrow> ?X[?z ::= ?M] >> ?X[?z ::= ?M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "case 2"], ["proof (state)\nthis:\n  \\<exists>A'. A >> A' \\<and> X' = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'. A >> A' \\<and> X' = Fn x T A'", "obtain A' where \"A >> A'\" and X': \"X' = Fn x T A'\""], ["proof (prove)\nusing this:\n  \\<exists>A'. A >> A' \\<and> X' = Fn x T A'\n\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        \\<lbrakk>A >> A'; X' = Fn x T A'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >> A'\n  X' = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "hence *: \"(A[z ::= M]) >> (A'[z ::= M'])\""], ["proof (prove)\nusing this:\n  A >> A'\n  X' = Fn x T A'\n\ngoal (1 subgoal):\n 1. A[z ::= M] >> A'[z ::= M']", "using \"4.IH\" depth_fn \\<open>A >> A'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  A >> A'\n  X' = Fn x T A'\n  \\<lbrakk>depth ?K < depth (Fn x T A); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth ?A < depth (Fn ?x ?T ?A)\n  A >> A'\n  M >> M'\n\ngoal (1 subgoal):\n 1. A[z ::= M] >> A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  A[z ::= M] >> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "have \"((Fn x T A)[z ::= M]) = (Fn x T (A[z ::= M]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] = Fn x T A[z ::= M]", "using subst_simp_fn \\<open>x \\<noteq> z\\<close> \\<open>x \\<notin> fvs M\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  x \\<noteq> z\n  x \\<notin> fvs M\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] = Fn x T A[z ::= M]", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] = Fn x T A[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] = Fn x T A[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "have \"... >> (Fn x T (A'[z ::= M']))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> Fn x T A'[z ::= M']", "using parallel_reduction.eta *"], ["proof (prove)\nusing this:\n  ?A >> ?A' \\<Longrightarrow> Fn ?x ?T ?A >> Fn ?x ?T ?A'\n  A[z ::= M] >> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> Fn x T A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> Fn x T A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> Fn x T A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "have \"... = ((Fn x T A')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A'[z ::= M'] = Fn x T A'[z ::= M']", "using subst_simp_fn \\<open>x \\<noteq> z\\<close> \\<open>x \\<notin> fvs M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?y \\<notin> fvs ?M\\<rbrakk>\n  \\<Longrightarrow> Fn ?y ?T ?A[?x ::= ?M] = Fn ?y ?T ?A[?x ::= ?M]\n  x \\<noteq> z\n  x \\<notin> fvs M'\n\ngoal (1 subgoal):\n 1. Fn x T A'[z ::= M'] = Fn x T A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A'[z ::= M'] = Fn x T A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fn x T A'[z ::= M'] = Fn x T A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fn x T A'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = Fn x T A'\n\ngoal (1 subgoal):\n 1. Fn x T A'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >> A' \\<and> X' = Fn x T A' \\<Longrightarrow>\n    Fn x T A[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  Fn x T A[z ::= M] = Fn x T A[z ::= M]\n  Fn x T A[z ::= M] >> Fn x T A'[z ::= M']\n  Fn x T A'[z ::= M'] = Fn x T A'[z ::= M']\n  Fn x T A'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  Fn x T A[z ::= M] = Fn x T A[z ::= M]\n  Fn x T A[z ::= M] >> Fn x T A'[z ::= M']\n  Fn x T A'[z ::= M'] = Fn x T A'[z ::= M']\n  Fn x T A'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. Fn x T A[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Fn x T A[z ::= M] >> X'[z ::= M']\n\ngoal (3 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case (5 A B)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B); ?K >> ?X';\n   M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  SimplyTyped.Pair A B >> X'\n  M >> M'\n\ngoal (3 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "from \\<open>(Pair A B) >> X'\\<close>"], ["proof (chain)\npicking this:\n  SimplyTyped.Pair A B >> X'", "consider\n      \"X' = Pair A B\"\n    | \"\\<exists>A' B'. (A >> A') \\<and> (B >> B') \\<and> X' = Pair A' B'\""], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B >> X'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X' = SimplyTyped.Pair A B \\<Longrightarrow> thesis;\n     \\<exists>A' B'.\n        A >> A' \\<and>\n        B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_pairE"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B >> X'\n  SimplyTyped.Pair ?A ?B >> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >> A' \\<and> ?B >> B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X' = SimplyTyped.Pair A B \\<Longrightarrow> thesis;\n     \\<exists>A' B'.\n        A >> A' \\<and>\n        B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>X' = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<exists>A' B'.\n      A >> A' \\<and>\n      B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (3 subgoals):\n 1. \\<And>A B X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (SimplyTyped.Pair A B); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        SimplyTyped.Pair A B >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 3. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>X' = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<exists>A' B'.\n      A >> A' \\<and>\n      B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. X' = SimplyTyped.Pair A B \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  X' = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. X' = SimplyTyped.Pair A B \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "thus ?thesis"], ["proof (prove)\nusing this:\n  X' = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "using parallel_reduction_subst_inner \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  X' = SimplyTyped.Pair A B\n  ?M >> ?M' \\<Longrightarrow> ?X[?z ::= ?M] >> ?X[?z ::= ?M']\n  M >> M'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "case 2"], ["proof (state)\nthis:\n  \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X' = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X' = SimplyTyped.Pair A' B'", "obtain A' B' where \"A >> A'\" \"B >> B'\" and X': \"X' = Pair A' B'\""], ["proof (prove)\nusing this:\n  \\<exists>A' B'. A >> A' \\<and> B >> B' \\<and> X' = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A >> A'; B >> B'; X' = SimplyTyped.Pair A' B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  X' = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "have *: \"(A[z ::= M]) >> (A'[z ::= M'])\" and **: \"(B[z ::= M]) >> (B'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A[z ::= M] >> A'[z ::= M'] &&& B[z ::= M] >> B'[z ::= M']", "using \"5.IH\" \\<open>A >> A'\\<close> \\<open>B >> B'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (SimplyTyped.Pair A B); ?K >> ?X';\n   M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  A >> A'\n  B >> B'\n  M >> M'\n\ngoal (1 subgoal):\n 1. A[z ::= M] >> A'[z ::= M'] &&& B[z ::= M] >> B'[z ::= M']", "by (metis depth_pair(1), metis depth_pair(2))"], ["proof (state)\nthis:\n  A[z ::= M] >> A'[z ::= M']\n  B[z ::= M] >> B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "have \"(Pair A B)[z ::= M] = (Pair (A[z ::= M]) (B[z ::= M]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] = SimplyTyped.Pair A[z ::= M] B[z ::= M]", "using subst_simp_pair"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] = SimplyTyped.Pair A[z ::= M] B[z ::= M]", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[z ::= M] = SimplyTyped.Pair A[z ::= M] B[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[z ::= M] = SimplyTyped.Pair A[z ::= M] B[z ::= M]\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "have \"... >> (Pair (A'[z ::= M']) (B'[z ::= M']))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A[z ::= M]\n     B[z ::= M] >> SimplyTyped.Pair A'[z ::= M'] B'[z ::= M']", "using parallel_reduction.pair * **"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> SimplyTyped.Pair ?A ?B >> SimplyTyped.Pair ?A' ?B'\n  A[z ::= M] >> A'[z ::= M']\n  B[z ::= M] >> B'[z ::= M']\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A[z ::= M]\n     B[z ::= M] >> SimplyTyped.Pair A'[z ::= M'] B'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A[z ::= M]\n   B[z ::= M] >> SimplyTyped.Pair A'[z ::= M'] B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  SimplyTyped.Pair A[z ::= M]\n   B[z ::= M] >> SimplyTyped.Pair A'[z ::= M'] B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "have \"... = ((Pair A' B')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A'[z ::= M'] B'[z ::= M'] =\n    SimplyTyped.Pair A' B'[z ::= M']", "using subst_simp_pair"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A'[z ::= M'] B'[z ::= M'] =\n    SimplyTyped.Pair A' B'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A'[z ::= M'] B'[z ::= M'] =\n  SimplyTyped.Pair A' B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  SimplyTyped.Pair A'[z ::= M'] B'[z ::= M'] =\n  SimplyTyped.Pair A' B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A' B'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A' B'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A' B'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >> A' \\<and>\n       B >> B' \\<and> X' = SimplyTyped.Pair A' B' \\<Longrightarrow>\n    SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  SimplyTyped.Pair A B[z ::= M] = SimplyTyped.Pair A[z ::= M] B[z ::= M]\n  SimplyTyped.Pair A[z ::= M]\n   B[z ::= M] >> SimplyTyped.Pair A'[z ::= M'] B'[z ::= M']\n  SimplyTyped.Pair A'[z ::= M'] B'[z ::= M'] =\n  SimplyTyped.Pair A' B'[z ::= M']\n  SimplyTyped.Pair A' B'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B[z ::= M] = SimplyTyped.Pair A[z ::= M] B[z ::= M]\n  SimplyTyped.Pair A[z ::= M]\n   B[z ::= M] >> SimplyTyped.Pair A'[z ::= M'] B'[z ::= M']\n  SimplyTyped.Pair A'[z ::= M'] B'[z ::= M'] =\n  SimplyTyped.Pair A' B'[z ::= M']\n  SimplyTyped.Pair A' B'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B[z ::= M] >> X'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case (6 P)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (Fst P); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  Fst P >> X'\n  M >> M'\n\ngoal (2 subgoals):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "from \\<open>(Fst P) >> X'\\<close>"], ["proof (chain)\npicking this:\n  Fst P >> X'", "consider\n      \"\\<exists>P'. (P >> P') \\<and> X' = Fst P'\"\n    | \"\\<exists>A A' B. P = Pair A B \\<and> (A >> A') \\<and> X' = A'\""], ["proof (prove)\nusing this:\n  Fst P >> X'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A A' B.\n        P = SimplyTyped.Pair A B \\<and>\n        A >> A' \\<and> X' = A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_fstE"], ["proof (prove)\nusing this:\n  Fst P >> X'\n  Fst ?P >> ?X \\<Longrightarrow>\n  (\\<exists>P'. ?P >> P' \\<and> ?X = Fst P') \\<or>\n  (\\<exists>A A' B. ?P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> ?X = A')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A A' B.\n        P = SimplyTyped.Pair A B \\<and>\n        A >> A' \\<and> X' = A' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A A' B.\n      P = SimplyTyped.Pair A B \\<and>\n      A >> A' \\<and> X' = A' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Fst A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Fst A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Fst A[z ::= M] >> X'[z ::= M']\n 2. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A A' B.\n      P = SimplyTyped.Pair A B \\<and>\n      A >> A' \\<and> X' = A' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> X'[z ::= M']", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  \\<exists>P'. P >> P' \\<and> X' = Fst P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>P'. P >> P' \\<and> X' = Fst P'", "obtain P' where \"P >> P'\" and X': \"X' = Fst P'\""], ["proof (prove)\nusing this:\n  \\<exists>P'. P >> P' \\<and> X' = Fst P'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P >> P'; X' = Fst P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P >> P'\n  X' = Fst P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have *: \"(P[z ::= M]) >> (P'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P[z ::= M] >> P'[z ::= M']", "using \"6.IH\" depth_fst \\<open>P >> P'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (Fst P); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth ?P < depth (Fst ?P)\n  P >> P'\n  M >> M'\n\ngoal (1 subgoal):\n 1. P[z ::= M] >> P'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  P[z ::= M] >> P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"(Fst P)[z ::= M] = Fst (P[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P[z ::= M] = Fst P[z ::= M]", "using subst_simp_fst"], ["proof (prove)\nusing this:\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] = Fst P[z ::= M]", "by metis"], ["proof (state)\nthis:\n  Fst P[z ::= M] = Fst P[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fst P[z ::= M] = Fst P[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"... >> (Fst (P'[z ::= M']))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> Fst P'[z ::= M']", "using parallel_reduction.fst1 *"], ["proof (prove)\nusing this:\n  ?P >> ?P' \\<Longrightarrow> Fst ?P >> Fst ?P'\n  P[z ::= M] >> P'[z ::= M']\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> Fst P'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst P[z ::= M] >> Fst P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fst P[z ::= M] >> Fst P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"... = ((Fst P')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P'[z ::= M'] = Fst P'[z ::= M']", "using subst_simp_fst"], ["proof (prove)\nusing this:\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Fst P'[z ::= M'] = Fst P'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst P'[z ::= M'] = Fst P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fst P'[z ::= M'] = Fst P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = Fst P'\n\ngoal (1 subgoal):\n 1. Fst P'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst P'[z ::= M'] = X'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Fst P' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  Fst P[z ::= M] = Fst P[z ::= M]\n  Fst P[z ::= M] >> Fst P'[z ::= M']\n  Fst P'[z ::= M'] = Fst P'[z ::= M']\n  Fst P'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  Fst P[z ::= M] = Fst P[z ::= M]\n  Fst P[z ::= M] >> Fst P'[z ::= M']\n  Fst P'[z ::= M'] = Fst P'[z ::= M']\n  Fst P'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst P[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "case 2"], ["proof (state)\nthis:\n  \\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X' = A'\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X' = A'", "obtain A A' B where P: \"P = Pair A B\" \"A >> A'\" and X': \"X' = A'\""], ["proof (prove)\nusing this:\n  \\<exists>A A' B. P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> X' = A'\n\ngoal (1 subgoal):\n 1. (\\<And>A B A'.\n        \\<lbrakk>P = SimplyTyped.Pair A B; A >> A'; X' = A'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n  A >> A'\n  X' = A'\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"depth A < depth (Fst P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth A < depth (Fst P)", "using P depth_fst depth_pair dual_order.strict_trans"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  A >> A'\n  depth ?P < depth (Fst ?P)\n  depth ?A < depth (SimplyTyped.Pair ?A ?B)\n  depth ?B < depth (SimplyTyped.Pair ?A ?B)\n  \\<lbrakk>?b < ?a; ?c < ?b\\<rbrakk> \\<Longrightarrow> ?c < ?a\n\ngoal (1 subgoal):\n 1. depth A < depth (Fst P)", "by fastforce"], ["proof (state)\nthis:\n  depth A < depth (Fst P)\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "hence *: \"(A[z ::= M]) >> (A'[z ::= M'])\""], ["proof (prove)\nusing this:\n  depth A < depth (Fst P)\n\ngoal (1 subgoal):\n 1. A[z ::= M] >> A'[z ::= M']", "using \"6.IH\" \\<open>A >> A'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  depth A < depth (Fst P)\n  \\<lbrakk>depth ?K < depth (Fst P); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  A >> A'\n  M >> M'\n\ngoal (1 subgoal):\n 1. A[z ::= M] >> A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  A[z ::= M] >> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"(Fst P)[z ::= M] = (Fst (Pair (A[z ::= M]) (B[z ::= M])))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst P[z ::= M] = Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M])", "using P subst_simp_fst subst_simp_pair"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  A >> A'\n  Fst ?P[?x ::= ?M] = Fst ?P[?x ::= ?M]\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] = Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M])", "by metis"], ["proof (state)\nthis:\n  Fst P[z ::= M] = Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fst P[z ::= M] = Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"... >> (A'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> A'[z ::= M']", "using parallel_reduction.fst2 *"], ["proof (prove)\nusing this:\n  ?A >> ?A' \\<Longrightarrow> Fst (SimplyTyped.Pair ?A ?B) >> ?A'\n  A[z ::= M] >> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> A'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> A'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = A'\n\ngoal (1 subgoal):\n 1. A'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  A'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A A' B.\n       P = SimplyTyped.Pair A B \\<and>\n       A >> A' \\<and> X' = A' \\<Longrightarrow>\n    Fst P[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  Fst P[z ::= M] = Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n  Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> A'[z ::= M']\n  A'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  Fst P[z ::= M] = Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n  Fst (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> A'[z ::= M']\n  A'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. Fst P[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Fst P[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Fst P[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "case (7 P)"], ["proof (state)\nthis:\n  \\<lbrakk>depth ?K < depth (Snd P); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  Snd P >> X'\n  M >> M'\n\ngoal (1 subgoal):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "from \\<open>(Snd P) >> X'\\<close>"], ["proof (chain)\npicking this:\n  Snd P >> X'", "consider\n      \"\\<exists>P'. (P >> P') \\<and> X' = Snd P'\"\n    | \"\\<exists>A B B'. P = Pair A B \\<and> (B >> B') \\<and> X' = B'\""], ["proof (prove)\nusing this:\n  Snd P >> X'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A B B'.\n        P = SimplyTyped.Pair A B \\<and>\n        B >> B' \\<and> X' = B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_sndE"], ["proof (prove)\nusing this:\n  Snd P >> X'\n  Snd ?P >> ?X \\<Longrightarrow>\n  (\\<exists>P'. ?P >> P' \\<and> ?X = Snd P') \\<or>\n  (\\<exists>A B B'. ?P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> ?X = B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n             thesis;\n     \\<exists>A B B'.\n        P = SimplyTyped.Pair A B \\<and>\n        B >> B' \\<and> X' = B' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A B B'.\n      P = SimplyTyped.Pair A B \\<and>\n      B >> B' \\<and> X' = B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>A X'.\n       \\<lbrakk>\\<And>K X'.\n                   \\<lbrakk>depth K < depth (Snd A); K >> X';\n                    M >> M'\\<rbrakk>\n                   \\<Longrightarrow> K[z ::= M] >> X'[z ::= M'];\n        Snd A >> X'; M >> M'\\<rbrakk>\n       \\<Longrightarrow> Snd A[z ::= M] >> X'[z ::= M']", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A B B'.\n      P = SimplyTyped.Pair A B \\<and>\n      B >> B' \\<and> X' = B' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> X'[z ::= M']", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "case 1"], ["proof (state)\nthis:\n  \\<exists>P'. P >> P' \\<and> X' = Snd P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>P'. P >> P' \\<and> X' = Snd P'", "obtain P' where \"P >> P'\" and X': \"X' = Snd P'\""], ["proof (prove)\nusing this:\n  \\<exists>P'. P >> P' \\<and> X' = Snd P'\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>P >> P'; X' = Snd P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P >> P'\n  X' = Snd P'\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have *: \"(P[z ::= M]) >> (P'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P[z ::= M] >> P'[z ::= M']", "using \"7.IH\" depth_snd \\<open>P >> P'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>depth ?K < depth (Snd P); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  depth ?P < depth (Snd ?P)\n  P >> P'\n  M >> M'\n\ngoal (1 subgoal):\n 1. P[z ::= M] >> P'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  P[z ::= M] >> P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"(Snd P)[z ::= M] = Snd (P[z ::= M])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P[z ::= M] = Snd P[z ::= M]", "using subst_simp_snd"], ["proof (prove)\nusing this:\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] = Snd P[z ::= M]", "by metis"], ["proof (state)\nthis:\n  Snd P[z ::= M] = Snd P[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Snd P[z ::= M] = Snd P[z ::= M]\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"... >> (Snd (P'[z ::= M']))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> Snd P'[z ::= M']", "using parallel_reduction.snd1 *"], ["proof (prove)\nusing this:\n  ?P >> ?P' \\<Longrightarrow> Snd ?P >> Snd ?P'\n  P[z ::= M] >> P'[z ::= M']\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> Snd P'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd P[z ::= M] >> Snd P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Snd P[z ::= M] >> Snd P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"... = ((Snd P')[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P'[z ::= M'] = Snd P'[z ::= M']", "using subst_simp_snd"], ["proof (prove)\nusing this:\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Snd P'[z ::= M'] = Snd P'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd P'[z ::= M'] = Snd P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Snd P'[z ::= M'] = Snd P'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = Snd P'\n\ngoal (1 subgoal):\n 1. Snd P'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd P'[z ::= M'] = X'[z ::= M']\n\ngoal (2 subgoals):\n 1. \\<exists>P'. P >> P' \\<and> X' = Snd P' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']\n 2. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  Snd P[z ::= M] = Snd P[z ::= M]\n  Snd P[z ::= M] >> Snd P'[z ::= M']\n  Snd P'[z ::= M'] = Snd P'[z ::= M']\n  Snd P'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  Snd P[z ::= M] = Snd P[z ::= M]\n  Snd P[z ::= M] >> Snd P'[z ::= M']\n  Snd P'[z ::= M'] = Snd P'[z ::= M']\n  Snd P'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd P[z ::= M] >> X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "case 2"], ["proof (state)\nthis:\n  \\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X' = B'\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X' = B'", "obtain A B B' where P: \"P = Pair A B\" \"B >> B'\" and X': \"X' = B'\""], ["proof (prove)\nusing this:\n  \\<exists>A B B'. P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> X' = B'\n\ngoal (1 subgoal):\n 1. (\\<And>A B B'.\n        \\<lbrakk>P = SimplyTyped.Pair A B; B >> B'; X' = B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n  B >> B'\n  X' = B'\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"depth B < depth (Snd P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. depth B < depth (Snd P)", "using P depth_snd depth_pair dual_order.strict_trans"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  B >> B'\n  depth ?P < depth (Snd ?P)\n  depth ?A < depth (SimplyTyped.Pair ?A ?B)\n  depth ?B < depth (SimplyTyped.Pair ?A ?B)\n  \\<lbrakk>?b < ?a; ?c < ?b\\<rbrakk> \\<Longrightarrow> ?c < ?a\n\ngoal (1 subgoal):\n 1. depth B < depth (Snd P)", "by fastforce"], ["proof (state)\nthis:\n  depth B < depth (Snd P)\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "hence *: \"(B[z ::= M]) >> (B'[z ::= M'])\""], ["proof (prove)\nusing this:\n  depth B < depth (Snd P)\n\ngoal (1 subgoal):\n 1. B[z ::= M] >> B'[z ::= M']", "using \"7.IH\" \\<open>B >> B'\\<close> \\<open>M >> M'\\<close>"], ["proof (prove)\nusing this:\n  depth B < depth (Snd P)\n  \\<lbrakk>depth ?K < depth (Snd P); ?K >> ?X'; M >> M'\\<rbrakk>\n  \\<Longrightarrow> ?K[z ::= M] >> ?X'[z ::= M']\n  B >> B'\n  M >> M'\n\ngoal (1 subgoal):\n 1. B[z ::= M] >> B'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  B[z ::= M] >> B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"(Snd P)[z ::= M] = (Snd (Pair (A[z ::= M]) (B[z ::= M])))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd P[z ::= M] = Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M])", "using P subst_simp_snd subst_simp_pair"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  B >> B'\n  Snd ?P[?x ::= ?M] = Snd ?P[?x ::= ?M]\n  SimplyTyped.Pair ?A ?B[?x ::= ?M] =\n  SimplyTyped.Pair ?A[?x ::= ?M] ?B[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] = Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M])", "by metis"], ["proof (state)\nthis:\n  Snd P[z ::= M] = Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Snd P[z ::= M] = Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"... >> (B'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> B'[z ::= M']", "using parallel_reduction.snd2 *"], ["proof (prove)\nusing this:\n  ?B >> ?B' \\<Longrightarrow> Snd (SimplyTyped.Pair ?A ?B) >> ?B'\n  B[z ::= M] >> B'[z ::= M']\n\ngoal (1 subgoal):\n 1. Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> B'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "moreover"], ["proof (state)\nthis:\n  Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> B'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "have \"... = (X'[z ::= M'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B'[z ::= M'] = X'[z ::= M']", "using X'"], ["proof (prove)\nusing this:\n  X' = B'\n\ngoal (1 subgoal):\n 1. B'[z ::= M'] = X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  B'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. \\<exists>A B B'.\n       P = SimplyTyped.Pair A B \\<and>\n       B >> B' \\<and> X' = B' \\<Longrightarrow>\n    Snd P[z ::= M] >> X'[z ::= M']", "ultimately"], ["proof (chain)\npicking this:\n  Snd P[z ::= M] = Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n  Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> B'[z ::= M']\n  B'[z ::= M'] = X'[z ::= M']", "show ?thesis"], ["proof (prove)\nusing this:\n  Snd P[z ::= M] = Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M])\n  Snd (SimplyTyped.Pair A[z ::= M] B[z ::= M]) >> B'[z ::= M']\n  B'[z ::= M'] = X'[z ::= M']\n\ngoal (1 subgoal):\n 1. Snd P[z ::= M] >> X'[z ::= M']", "by metis"], ["proof (state)\nthis:\n  Snd P[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Snd P[z ::= M] >> X'[z ::= M']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "inductive complete_development :: \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\" (\"_ >>> _\") where\n  unit: \"Unit >>> Unit\"\n| var:  \"(Var x) >>> (Var x)\"\n| beta: \"\\<lbrakk>A >>> A'; B >>> B'\\<rbrakk> \\<Longrightarrow> (App (Fn x T A) B) >>> (A'[x ::= B'])\"\n| eta:  \"A >>> A' \\<Longrightarrow> (Fn x T A) >>> (Fn x T A')\"\n| app:  \"\\<lbrakk>A >>> A'; B >>> B'; (\\<And>x T M. A \\<noteq> Fn x T M)\\<rbrakk> \\<Longrightarrow> (App A B) >>> (App A' B')\"\n| pair: \"\\<lbrakk>A >>> A'; B >>> B'\\<rbrakk> \\<Longrightarrow> (Pair A B) >>> (Pair A' B')\"\n| fst1: \"\\<lbrakk>P >>> P'; (\\<And>A B. P \\<noteq> Pair A B)\\<rbrakk> \\<Longrightarrow> (Fst P) >>> (Fst P')\"\n| fst2: \"A >>> A' \\<Longrightarrow> (Fst (Pair A B)) >>> A'\"\n| snd1: \"\\<lbrakk>P >>> P'; (\\<And>A B. P \\<noteq> Pair A B)\\<rbrakk> \\<Longrightarrow> (Snd P) >>> (Snd P')\"\n| snd2: \"B >>> B' \\<Longrightarrow> (Snd (Pair A B)) >>> B'\""], ["", "lemma not_fn_prm:\n  assumes \"\\<And>x T M. A \\<noteq> Fn x T M\"\n  shows \"\\<pi> \\<cdot> A \\<noteq> Fn x T M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A \\<noteq> Fn x T M", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "fix x T M"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "obtain \\<pi>' where *: \"\\<pi>' = prm_inv \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>'.\n        \\<pi>' = prm_inv \\<pi> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<pi>' = prm_inv \\<pi>\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "assume \"\\<not>(\\<pi> \\<cdot> A \\<noteq> Fn x T M)\""], ["proof (state)\nthis:\n  \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "hence \"\\<pi> \\<cdot> A = Fn x T M\""], ["proof (prove)\nusing this:\n  \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A = Fn x T M", "by blast"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> A = Fn x T M\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "hence \"\\<pi>' \\<cdot> (\\<pi> \\<cdot> A) = \\<pi>' \\<cdot> Fn x T M\""], ["proof (prove)\nusing this:\n  \\<pi> \\<cdot> A = Fn x T M\n\ngoal (1 subgoal):\n 1. \\<pi>' \\<cdot> \\<pi> \\<cdot> A = \\<pi>' \\<cdot> Fn x T M", "by fastforce"], ["proof (state)\nthis:\n  \\<pi>' \\<cdot> \\<pi> \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "hence \"(\\<pi>' \\<diamondop> \\<pi>) \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\""], ["proof (prove)\nusing this:\n  \\<pi>' \\<cdot> \\<pi> \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\n\ngoal (1 subgoal):\n 1. (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> A = \\<pi>' \\<cdot> Fn x T M", "using trm_prm_apply_compose"], ["proof (prove)\nusing this:\n  \\<pi>' \\<cdot> \\<pi> \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\n  ?\\<pi> \\<cdot> ?\\<sigma> \\<cdot> ?A =\n  (?\\<pi> \\<diamondop> ?\\<sigma>) \\<cdot> ?A\n\ngoal (1 subgoal):\n 1. (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> A = \\<pi>' \\<cdot> Fn x T M", "by metis"], ["proof (state)\nthis:\n  (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "hence \"A = \\<pi>' \\<cdot> Fn x T M\""], ["proof (prove)\nusing this:\n  (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\n\ngoal (1 subgoal):\n 1. A = \\<pi>' \\<cdot> Fn x T M", "using * prm_inv_compose trm_prm_apply_id"], ["proof (prove)\nusing this:\n  (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> A = \\<pi>' \\<cdot> Fn x T M\n  \\<pi>' = prm_inv \\<pi>\n  prm_inv ?\\<pi> \\<diamondop> ?\\<pi> = \\<epsilon>\n  \\<epsilon> \\<cdot> ?M = ?M\n\ngoal (1 subgoal):\n 1. A = \\<pi>' \\<cdot> Fn x T M", "by metis"], ["proof (state)\nthis:\n  A = \\<pi>' \\<cdot> Fn x T M\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "hence \"A = Fn (\\<pi>' $ x) T (\\<pi>' \\<cdot> M)\""], ["proof (prove)\nusing this:\n  A = \\<pi>' \\<cdot> Fn x T M\n\ngoal (1 subgoal):\n 1. A = Fn (\\<pi>' $ x) T (\\<pi>' \\<cdot> M)", "using trm_prm_simp(4)"], ["proof (prove)\nusing this:\n  A = \\<pi>' \\<cdot> Fn x T M\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n\ngoal (1 subgoal):\n 1. A = Fn (\\<pi>' $ x) T (\\<pi>' \\<cdot> M)", "by metis"], ["proof (state)\nthis:\n  A = Fn (\\<pi>' $ x) T (\\<pi>' \\<cdot> M)\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "hence False"], ["proof (prove)\nusing this:\n  A = Fn (\\<pi>' $ x) T (\\<pi>' \\<cdot> M)\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  A = Fn (\\<pi>' $ x) T (\\<pi>' \\<cdot> M)\n  A \\<noteq> Fn ?x ?T ?M\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> A \\<noteq> Fn x T M \\<Longrightarrow>\n    \\<pi> \\<cdot> A \\<noteq> Fn x T M", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A \\<noteq> Fn x T M", "by blast"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> A \\<noteq> Fn x T M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_pair_prm:\n  assumes \"\\<And>A B. P \\<noteq> Pair A B\"\n  shows \"\\<pi> \\<cdot> P \\<noteq> Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "proof(rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "fix A B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "obtain \\<pi>' where *: \"\\<pi>' = prm_inv \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>'.\n        \\<pi>' = prm_inv \\<pi> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<pi>' = prm_inv \\<pi>\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "assume \"\\<not>(\\<pi> \\<cdot> P \\<noteq> Pair A B)\""], ["proof (state)\nthis:\n  \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "hence \"\\<pi> \\<cdot> P = Pair A B\""], ["proof (prove)\nusing this:\n  \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P = SimplyTyped.Pair A B", "by blast"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "hence \"\\<pi>' \\<cdot> \\<pi> \\<cdot> P = \\<pi>' \\<cdot> (Pair A B)\""], ["proof (prove)\nusing this:\n  \\<pi> \\<cdot> P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<pi>' \\<cdot> \\<pi> \\<cdot> P = \\<pi>' \\<cdot> SimplyTyped.Pair A B", "by fastforce"], ["proof (state)\nthis:\n  \\<pi>' \\<cdot> \\<pi> \\<cdot> P = \\<pi>' \\<cdot> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "hence \"(\\<pi>' \\<diamondop> \\<pi>) \\<cdot> P = \\<pi>' \\<cdot> (Pair A B)\""], ["proof (prove)\nusing this:\n  \\<pi>' \\<cdot> \\<pi> \\<cdot> P = \\<pi>' \\<cdot> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> P =\n    \\<pi>' \\<cdot> SimplyTyped.Pair A B", "using trm_prm_apply_compose"], ["proof (prove)\nusing this:\n  \\<pi>' \\<cdot> \\<pi> \\<cdot> P = \\<pi>' \\<cdot> SimplyTyped.Pair A B\n  ?\\<pi> \\<cdot> ?\\<sigma> \\<cdot> ?A =\n  (?\\<pi> \\<diamondop> ?\\<sigma>) \\<cdot> ?A\n\ngoal (1 subgoal):\n 1. (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> P =\n    \\<pi>' \\<cdot> SimplyTyped.Pair A B", "by metis"], ["proof (state)\nthis:\n  (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> P =\n  \\<pi>' \\<cdot> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "hence \"P = \\<pi>' \\<cdot> (Pair A B)\""], ["proof (prove)\nusing this:\n  (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> P =\n  \\<pi>' \\<cdot> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. P = \\<pi>' \\<cdot> SimplyTyped.Pair A B", "using * prm_inv_compose trm_prm_apply_id"], ["proof (prove)\nusing this:\n  (\\<pi>' \\<diamondop> \\<pi>) \\<cdot> P =\n  \\<pi>' \\<cdot> SimplyTyped.Pair A B\n  \\<pi>' = prm_inv \\<pi>\n  prm_inv ?\\<pi> \\<diamondop> ?\\<pi> = \\<epsilon>\n  \\<epsilon> \\<cdot> ?M = ?M\n\ngoal (1 subgoal):\n 1. P = \\<pi>' \\<cdot> SimplyTyped.Pair A B", "by metis"], ["proof (state)\nthis:\n  P = \\<pi>' \\<cdot> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "hence \"P = Pair (\\<pi>' \\<cdot> A) (\\<pi>' \\<cdot> B)\""], ["proof (prove)\nusing this:\n  P = \\<pi>' \\<cdot> SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. P = SimplyTyped.Pair (\\<pi>' \\<cdot> A) (\\<pi>' \\<cdot> B)", "using trm_prm_simp(5)"], ["proof (prove)\nusing this:\n  P = \\<pi>' \\<cdot> SimplyTyped.Pair A B\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. P = SimplyTyped.Pair (\\<pi>' \\<cdot> A) (\\<pi>' \\<cdot> B)", "by metis"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair (\\<pi>' \\<cdot> A) (\\<pi>' \\<cdot> B)\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "hence False"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair (\\<pi>' \\<cdot> A) (\\<pi>' \\<cdot> B)\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair (\\<pi>' \\<cdot> A) (\\<pi>' \\<cdot> B)\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "by blast"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma complete_development_prm:\n  assumes \"A >>> A'\"\n  shows \"(\\<pi> \\<cdot> A) >>> (\\<pi> \\<cdot> A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'", "using assms"], ["proof (prove)\nusing this:\n  A >>> A'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'", "proof(induction)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<pi> \\<cdot> Unit >>> \\<pi> \\<cdot> Unit\n 2. \\<And>x. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 4. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 6. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 8. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 9. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 10. \\<And>B B' A.\n        \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n        \\<Longrightarrow> \\<pi> \\<cdot>\n                          Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case unit"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. \\<pi> \\<cdot> Unit >>> \\<pi> \\<cdot> Unit\n 2. \\<And>x. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 4. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 6. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 8. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 9. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 10. \\<And>B B' A.\n        \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n        \\<Longrightarrow> \\<pi> \\<cdot>\n                          Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Unit >>> \\<pi> \\<cdot> Unit", "using complete_development.unit trm_prm_simp(1)"], ["proof (prove)\nusing this:\n  Unit >>> Unit\n  ?\\<pi> \\<cdot> Unit = Unit\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Unit >>> \\<pi> \\<cdot> Unit", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Unit >>> \\<pi> \\<cdot> Unit\n\ngoal (9 subgoals):\n 1. \\<And>x. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 7. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 8. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 9. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 7. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 8. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 9. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (var x)"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>x. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 7. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 8. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 9. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x", "using complete_development.var trm_prm_simp(2)"], ["proof (prove)\nusing this:\n  Var ?x >>> Var ?x\n  ?\\<pi> \\<cdot> Var ?x = Var (?\\<pi> $ ?x)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Var x >>> \\<pi> \\<cdot> Var x\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (beta A A' B B' x T)"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']", "using complete_development.beta subst_prm trm_prm_simp(3, 4)"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n  \\<lbrakk>?A >>> ?A'; ?B >>> ?B'\\<rbrakk>\n  \\<Longrightarrow> App (Fn ?x ?T ?A) ?B >>> ?A'[?x ::= ?B']\n  ?\\<pi> \\<cdot> ?M[?z ::= ?N] =\n  ?\\<pi> \\<cdot> ?M[?\\<pi> $ ?z ::= ?\\<pi> \\<cdot> ?N]\n  ?\\<pi> \\<cdot> App ?A ?B = App (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> App (Fn x T A) B >>> \\<pi> \\<cdot> A'[x ::= B']\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (eta A A' x T)"], ["proof (state)\nthis:\n  A >>> A'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'", "using complete_development.eta trm_prm_simp(4)"], ["proof (prove)\nusing this:\n  A >>> A'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  ?A >>> ?A' \\<Longrightarrow> Fn ?x ?T ?A >>> Fn ?x ?T ?A'\n  ?\\<pi> \\<cdot> Fn ?x ?T ?A = Fn (?\\<pi> $ ?x) ?T (?\\<pi> \\<cdot> ?A)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Fn x T A >>> \\<pi> \\<cdot> Fn x T A'\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (app A A' B B')"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  A \\<noteq> Fn ?x ?T ?M\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B';\n        \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  A \\<noteq> Fn ?x ?T ?M\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'", "using complete_development.app"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  A \\<noteq> Fn ?x ?T ?M\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n  \\<lbrakk>?A >>> ?A'; ?B >>> ?B';\n   \\<And>x T M. ?A \\<noteq> Fn x T M\\<rbrakk>\n  \\<Longrightarrow> App ?A ?B >>> App ?A' ?B'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'", "by (simp add: trm_prm_simp(3) not_fn_prm)"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> App A B >>> \\<pi> \\<cdot> App A' B'\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (pair A A' B B')"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'; B >>> B';\n        \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         SimplyTyped.Pair A\n                          B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot>\n    SimplyTyped.Pair A B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'", "using complete_development.pair trm_prm_simp(5)"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n  \\<lbrakk>?A >>> ?A'; ?B >>> ?B'\\<rbrakk>\n  \\<Longrightarrow> SimplyTyped.Pair ?A ?B >>> SimplyTyped.Pair ?A' ?B'\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot>\n    SimplyTyped.Pair A B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot>\n  SimplyTyped.Pair A B >>> \\<pi> \\<cdot> SimplyTyped.Pair A' B'\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (fst1 P P')"], ["proof (state)\nthis:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "hence \"\\<pi> \\<cdot> P \\<noteq> Pair A B\" for A B"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "using not_pair_prm"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n  (\\<And>A B. ?P \\<noteq> SimplyTyped.Pair A B) \\<Longrightarrow>\n  ?\\<pi> \\<cdot> ?P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'", "using trm_prm_simp(6) fst1.IH complete_development.fst1"], ["proof (prove)\nusing this:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair ?A ?B\n  ?\\<pi> \\<cdot> Fst ?P = Fst (?\\<pi> \\<cdot> ?P)\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n  \\<lbrakk>?P >>> ?P'; \\<And>A B. ?P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n  \\<Longrightarrow> Fst ?P >>> Fst ?P'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Fst P >>> \\<pi> \\<cdot> Fst P'\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (fst2 A A' B)"], ["proof (state)\nthis:\n  A >>> A'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'", "using trm_prm_simp(5, 6) complete_development.fst2"], ["proof (prove)\nusing this:\n  A >>> A'\n  \\<pi> \\<cdot> A >>> \\<pi> \\<cdot> A'\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n  ?\\<pi> \\<cdot> Fst ?P = Fst (?\\<pi> \\<cdot> ?P)\n  ?A >>> ?A' \\<Longrightarrow> Fst (SimplyTyped.Pair ?A ?B) >>> ?A'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Fst (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> A'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (snd1 P P')"], ["proof (state)\nthis:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "hence \"\\<pi> \\<cdot> P \\<noteq> Pair A B\" for A B"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "using not_pair_prm"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n  (\\<And>A B. ?P \\<noteq> SimplyTyped.Pair A B) \\<Longrightarrow>\n  ?\\<pi> \\<cdot> ?P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair A B", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair ?A ?B\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'", "using trm_prm_simp(7) snd1.IH complete_development.snd1"], ["proof (prove)\nusing this:\n  \\<pi> \\<cdot> P \\<noteq> SimplyTyped.Pair ?A ?B\n  ?\\<pi> \\<cdot> Snd ?P = Snd (?\\<pi> \\<cdot> ?P)\n  \\<pi> \\<cdot> P >>> \\<pi> \\<cdot> P'\n  \\<lbrakk>?P >>> ?P'; \\<And>A B. ?P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n  \\<Longrightarrow> Snd ?P >>> Snd ?P'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Snd P >>> \\<pi> \\<cdot> Snd P'\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "case (snd2 B B' A)"], ["proof (state)\nthis:\n  B >>> B'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<cdot>\n                         Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "thus ?case"], ["proof (prove)\nusing this:\n  B >>> B'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "using trm_prm_simp(5, 7) complete_development.snd2"], ["proof (prove)\nusing this:\n  B >>> B'\n  \\<pi> \\<cdot> B >>> \\<pi> \\<cdot> B'\n  ?\\<pi> \\<cdot> SimplyTyped.Pair ?A ?B =\n  SimplyTyped.Pair (?\\<pi> \\<cdot> ?A) (?\\<pi> \\<cdot> ?B)\n  ?\\<pi> \\<cdot> Snd ?P = Snd (?\\<pi> \\<cdot> ?P)\n  ?B >>> ?B' \\<Longrightarrow> Snd (SimplyTyped.Pair ?A ?B) >>> ?B'\n\ngoal (1 subgoal):\n 1. \\<pi> \\<cdot> Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'", "by metis"], ["proof (state)\nthis:\n  \\<pi> \\<cdot> Snd (SimplyTyped.Pair A B) >>> \\<pi> \\<cdot> B'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma complete_development_fvs:\n  assumes \"A >>> A'\"\n  shows \"fvs A' \\<subseteq> fvs A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A", "using assms"], ["proof (prove)\nusing this:\n  A >>> A'\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs A", "proof(induction)"], ["proof (state)\ngoal (10 subgoals):\n 1. fvs Unit \\<subseteq> fvs Unit\n 2. \\<And>x. fvs (Var x) \\<subseteq> fvs (Var x)\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 6. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 8. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 9. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 10. \\<And>B B' A.\n        \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n        \\<Longrightarrow> fvs B'\n                          \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case unit"], ["proof (state)\nthis:\n  \n\ngoal (10 subgoals):\n 1. fvs Unit \\<subseteq> fvs Unit\n 2. \\<And>x. fvs (Var x) \\<subseteq> fvs (Var x)\n 3. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 4. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 6. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 8. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 9. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 10. \\<And>B B' A.\n        \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n        \\<Longrightarrow> fvs B'\n                          \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs Unit \\<subseteq> fvs Unit", "using fvs_simp"], ["proof (prove)\nusing this:\n  fvs Unit = {}\n  fvs (Var ?x) = {?x}\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fst ?P) = fvs ?P\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs Unit \\<subseteq> fvs Unit", "by auto"], ["proof (state)\nthis:\n  fvs Unit \\<subseteq> fvs Unit\n\ngoal (9 subgoals):\n 1. \\<And>x. fvs (Var x) \\<subseteq> fvs (Var x)\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x. fvs (Var x) \\<subseteq> fvs (Var x)\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (var x)"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>x. fvs (Var x) \\<subseteq> fvs (Var x)\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 7. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 8. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 9. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs (Var x) \\<subseteq> fvs (Var x)", "using fvs_simp"], ["proof (prove)\nusing this:\n  fvs Unit = {}\n  fvs (Var ?x) = {?x}\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Fst ?P) = fvs ?P\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Var x) \\<subseteq> fvs (Var x)", "by auto"], ["proof (state)\nthis:\n  fvs (Var x) \\<subseteq> fvs (Var x)\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (beta A A' B B' x T)"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have \"fvs (A'[x ::= B']) \\<subseteq> fvs A' - {x} \\<union> fvs B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'", "using subst_fvs"], ["proof (prove)\nusing this:\n  fvs ?M[?z ::= ?N] \\<subseteq> fvs ?M - {?z} \\<union> fvs ?N\n\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'", "."], ["proof (state)\nthis:\n  fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "also"], ["proof (state)\nthis:\n  fvs A'[x ::= B'] \\<subseteq> fvs A' - {x} \\<union> fvs B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have \"... \\<subseteq> fvs A - {x} \\<union> fvs B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B", "using beta.IH"], ["proof (prove)\nusing this:\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B", "by auto"], ["proof (state)\nthis:\n  fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "also"], ["proof (state)\nthis:\n  fvs A' - {x} \\<union> fvs B' \\<subseteq> fvs A - {x} \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have \"... \\<subseteq> fvs (Fn x T A) \\<union> fvs B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs A - {x} \\<union> fvs B \\<subseteq> fvs (Fn x T A) \\<union> fvs B", "using fvs_simp(4) subset_refl"], ["proof (prove)\nusing this:\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  ?A \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. fvs A - {x} \\<union> fvs B \\<subseteq> fvs (Fn x T A) \\<union> fvs B", "by force"], ["proof (state)\nthis:\n  fvs A - {x} \\<union> fvs B \\<subseteq> fvs (Fn x T A) \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "also"], ["proof (state)\nthis:\n  fvs A - {x} \\<union> fvs B \\<subseteq> fvs (Fn x T A) \\<union> fvs B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "have \"... \\<subseteq> fvs (App (Fn x T A) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fvs (Fn x T A) \\<union> fvs B \\<subseteq> fvs (App (Fn x T A) B)", "using fvs_simp(3) subset_refl"], ["proof (prove)\nusing this:\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  ?A \\<subseteq> ?A\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A) \\<union> fvs B \\<subseteq> fvs (App (Fn x T A) B)", "by force"], ["proof (state)\nthis:\n  fvs (Fn x T A) \\<union> fvs B \\<subseteq> fvs (App (Fn x T A) B)\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 6. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 7. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 8. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "finally"], ["proof (chain)\npicking this:\n  fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)", "show ?case"], ["proof (prove)\nusing this:\n  fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n\ngoal (1 subgoal):\n 1. fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)", "."], ["proof (state)\nthis:\n  fvs A'[x ::= B'] \\<subseteq> fvs (App (Fn x T A) B)\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (eta A A' x T)"], ["proof (state)\nthis:\n  A >>> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 5. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 6. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 7. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "using fvs_simp(4)"], ["proof (prove)\nusing this:\n  A >>> A'\n  fvs A' \\<subseteq> fvs A\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "using Un_Diff subset_Un_eq"], ["proof (prove)\nusing this:\n  A >>> A'\n  fvs A' \\<subseteq> fvs A\n  fvs (Fn ?x ?T ?A) = fvs ?A - {?x}\n  ?A \\<union> ?B - ?C = ?A - ?C \\<union> (?B - ?C)\n  (?A \\<subseteq> ?B) = (?A \\<union> ?B = ?B)\n\ngoal (1 subgoal):\n 1. fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)", "by (metis (no_types, lifting))"], ["proof (state)\nthis:\n  fvs (Fn x T A') \\<subseteq> fvs (Fn x T A)\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (app A A' B B')"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  A \\<noteq> Fn ?x ?T ?M\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B; \\<And>x T M. A \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> fvs (App A' B') \\<subseteq> fvs (App A B)\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 4. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 5. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 6. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  A \\<noteq> Fn ?x ?T ?M\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs (App A' B') \\<subseteq> fvs (App A B)", "using fvs_simp(3) Un_mono"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  A \\<noteq> Fn ?x ?T ?M\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n  fvs (App ?A ?B) = fvs ?A \\<union> fvs ?B\n  \\<lbrakk>?A \\<subseteq> ?C; ?B \\<subseteq> ?D\\<rbrakk>\n  \\<Longrightarrow> ?A \\<union> ?B \\<subseteq> ?C \\<union> ?D\n\ngoal (1 subgoal):\n 1. fvs (App A' B') \\<subseteq> fvs (App A B)", "by metis"], ["proof (state)\nthis:\n  fvs (App A' B') \\<subseteq> fvs (App A B)\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (pair A A' B B')"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A; B >>> B';\n        fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs (SimplyTyped.Pair A' B')\n                         \\<subseteq> fvs (SimplyTyped.Pair A B)\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 3. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 4. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 5. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B') \\<subseteq> fvs (SimplyTyped.Pair A B)", "using fvs_simp(5) Un_mono"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  fvs A' \\<subseteq> fvs A\n  fvs B' \\<subseteq> fvs B\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  \\<lbrakk>?A \\<subseteq> ?C; ?B \\<subseteq> ?D\\<rbrakk>\n  \\<Longrightarrow> ?A \\<union> ?B \\<subseteq> ?C \\<union> ?D\n\ngoal (1 subgoal):\n 1. fvs (SimplyTyped.Pair A' B') \\<subseteq> fvs (SimplyTyped.Pair A B)", "by metis"], ["proof (state)\nthis:\n  fvs (SimplyTyped.Pair A' B') \\<subseteq> fvs (SimplyTyped.Pair A B)\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fst1 P P')"], ["proof (state)\nthis:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  fvs P' \\<subseteq> fvs P\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Fst P') \\<subseteq> fvs (Fst P)\n 2. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 3. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 4. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  fvs P' \\<subseteq> fvs P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P)", "using fvs_simp(6)"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  fvs P' \\<subseteq> fvs P\n  fvs (Fst ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Fst P') \\<subseteq> fvs (Fst P)", "by force"], ["proof (state)\nthis:\n  fvs (Fst P') \\<subseteq> fvs (Fst P)\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (fst2 A A' B)"], ["proof (state)\nthis:\n  A >>> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >>> A'; fvs A' \\<subseteq> fvs A\\<rbrakk>\n       \\<Longrightarrow> fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n 2. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 3. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  A >>> A'\n  fvs A' \\<subseteq> fvs A\n\ngoal (1 subgoal):\n 1. fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))", "by (simp add: fvs_simp(5, 6) sup.coboundedI1)"], ["proof (state)\nthis:\n  fvs A' \\<subseteq> fvs (Fst (SimplyTyped.Pair A B))\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (snd1 P P')"], ["proof (state)\nthis:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  fvs P' \\<subseteq> fvs P\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >>> P'; fvs P' \\<subseteq> fvs P;\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> fvs (Snd P') \\<subseteq> fvs (Snd P)\n 2. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  fvs P' \\<subseteq> fvs P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P)", "using fvs_simp(7)"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  fvs P' \\<subseteq> fvs P\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs (Snd P') \\<subseteq> fvs (Snd P)", "by fastforce"], ["proof (state)\nthis:\n  fvs (Snd P') \\<subseteq> fvs (Snd P)\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "case (snd2 B B' A)"], ["proof (state)\nthis:\n  B >>> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >>> B'; fvs B' \\<subseteq> fvs B\\<rbrakk>\n       \\<Longrightarrow> fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "thus ?case"], ["proof (prove)\nusing this:\n  B >>> B'\n  fvs B' \\<subseteq> fvs B\n\ngoal (1 subgoal):\n 1. fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "using fvs_simp(5, 7)"], ["proof (prove)\nusing this:\n  B >>> B'\n  fvs B' \\<subseteq> fvs B\n  fvs (SimplyTyped.Pair ?A ?B) = fvs ?A \\<union> fvs ?B\n  fvs (Snd ?P) = fvs ?P\n\ngoal (1 subgoal):\n 1. fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))", "by fastforce"], ["proof (state)\nthis:\n  fvs B' \\<subseteq> fvs (Snd (SimplyTyped.Pair A B))\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma complete_development_fnE:\n  assumes \"(Fn x T A) >>> X\"\n  shows \"\\<exists>A'. (A >>> A') \\<and> X = Fn x T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "using assms"], ["proof (prove)\nusing this:\n  Fn x T A >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "proof(cases)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; X = Var xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B'];\n        Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >>> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >>> A'; B >>> B';\n        \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >>> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "case (eta B B' y S)"], ["proof (state)\nthis:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'\n\ngoal (10 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; X = Var xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B'];\n        Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >>> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >>> A'; B >>> B';\n        \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >>> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "hence \"T = S\""], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'\n\ngoal (1 subgoal):\n 1. T = S", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. T = S", "by metis"], ["proof (state)\nthis:\n  T = S\n\ngoal (10 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; X = Var xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B'];\n        Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >>> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >>> A'; B >>> B';\n        \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >>> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "from eta"], ["proof (chain)\npicking this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'", "consider \"x = y \\<and> A = B\" | \"x \\<noteq> y \\<and> x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\""], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y \\<and> A = B \\<Longrightarrow> thesis;\n     x \\<noteq> y \\<and>\n     x \\<notin> fvs B \\<and>\n     A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>x = y \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (10 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; X = Var xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B'];\n        Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 4. \\<And>Aa A' xa Ta.\n       \\<lbrakk>Fn x T A = Fn xa Ta Aa; X = Fn xa Ta A'; Aa >>> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >>> A'; B >>> B';\n        \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 6. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 7. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 8. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 9. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 10. \\<And>B Aa.\n        \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >>> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y \\<and> A = B \\<Longrightarrow> ?thesis;\n   x \\<noteq> y \\<and>\n   x \\<notin> fvs B \\<and>\n   A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "case 1"], ["proof (state)\nthis:\n  x = y \\<and> A = B\n\ngoal (2 subgoals):\n 1. x = y \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "hence \"x = y\" and \"A = B\""], ["proof (prove)\nusing this:\n  x = y \\<and> A = B\n\ngoal (1 subgoal):\n 1. x = y &&& A = B", "by auto"], ["proof (state)\nthis:\n  x = y\n  A = B\n\ngoal (2 subgoals):\n 1. x = y \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "obtain A' where \"A' = B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A'. A' = B' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  A' = B'\n\ngoal (2 subgoals):\n 1. x = y \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "hence \"A >>> A'\" and \"X = Fn x T A'\""], ["proof (prove)\nusing this:\n  A' = B'\n\ngoal (1 subgoal):\n 1. A >>> A' &&& X = Fn x T A'", "using eta \\<open>A = B\\<close> \\<open>x = y\\<close> \\<open>T = S\\<close>"], ["proof (prove)\nusing this:\n  A' = B'\n  Fn x T A = Fn y S B\n  X = Fn y S B'\n  B >>> B'\n  A = B\n  x = y\n  T = S\n\ngoal (1 subgoal):\n 1. A >>> A' &&& X = Fn x T A'", "by auto"], ["proof (state)\nthis:\n  A >>> A'\n  X = Fn x T A'\n\ngoal (2 subgoals):\n 1. x = y \\<and> A = B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >>> A'\n  X = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "by auto"], ["proof (state)\nthis:\n  \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<and>\n  x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "hence \"x \\<noteq> y\" \"x \\<notin> fvs B\" and A: \"A = [x \\<leftrightarrow> y] \\<cdot> B\""], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<and>\n  x \\<notin> fvs B \\<and> A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. (x \\<noteq> y &&& x \\<notin> fvs B) &&&\n    A = [x \\<leftrightarrow> y] \\<cdot> B", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "hence \"x \\<notin> fvs B'\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs B'", "using \\<open>B >>> B'\\<close> complete_development_fvs"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<notin> fvs B\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n  B >>> B'\n  ?A >>> ?A' \\<Longrightarrow> fvs ?A' \\<subseteq> fvs ?A\n\ngoal (1 subgoal):\n 1. x \\<notin> fvs B'", "by auto"], ["proof (state)\nthis:\n  x \\<notin> fvs B'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "obtain A' where A': \"A' = [x \\<leftrightarrow> y] \\<cdot> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A'.\n        A' = [x \\<leftrightarrow> y] \\<cdot> B' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A' = [x \\<leftrightarrow> y] \\<cdot> B'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "hence \"A >>> A'\""], ["proof (prove)\nusing this:\n  A' = [x \\<leftrightarrow> y] \\<cdot> B'\n\ngoal (1 subgoal):\n 1. A >>> A'", "using A \\<open>B >>> B'\\<close> complete_development_prm"], ["proof (prove)\nusing this:\n  A' = [x \\<leftrightarrow> y] \\<cdot> B'\n  A = [x \\<leftrightarrow> y] \\<cdot> B\n  B >>> B'\n  ?A >>> ?A' \\<Longrightarrow> ?\\<pi> \\<cdot> ?A >>> ?\\<pi> \\<cdot> ?A'\n\ngoal (1 subgoal):\n 1. A >>> A'", "by auto"], ["proof (state)\nthis:\n  A >>> A'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "have \"X = Fn x T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X = Fn x T A'", "using fn_eq \\<open>x \\<noteq> y\\<close> \\<open>x \\<notin> fvs B'\\<close> A' \\<open>X = Fn y S B'\\<close> \\<open>T = S\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<notin> fvs ?B;\n   ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\\<rbrakk>\n  \\<Longrightarrow> Fn ?x ?T ?A = Fn ?y ?T ?B\n  x \\<noteq> y\n  x \\<notin> fvs B'\n  A' = [x \\<leftrightarrow> y] \\<cdot> B'\n  X = Fn y S B'\n  T = S\n\ngoal (1 subgoal):\n 1. X = Fn x T A'", "by metis"], ["proof (state)\nthis:\n  X = Fn x T A'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<and>\n    x \\<notin> fvs B \\<and>\n    A = [x \\<leftrightarrow> y] \\<cdot> B \\<Longrightarrow>\n    \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  X = Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "using \\<open>A >>> A'\\<close>"], ["proof (prove)\nusing this:\n  X = Fn x T A'\n  A >>> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "by auto"], ["proof (state)\nthis:\n  \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n\ngoal (9 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; X = Var xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B'];\n        Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >>> A'; B >>> B';\n        \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 6. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 7. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 9. \\<And>B Aa.\n       \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<lbrakk>Fn x T A = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 2. \\<And>xa.\n       \\<lbrakk>Fn x T A = Var xa; X = Var xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 3. \\<And>Aa A' B B' xa Ta.\n       \\<lbrakk>Fn x T A = App (Fn xa Ta Aa) B; X = A'[xa ::= B'];\n        Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 4. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = App Aa B; X = App A' B'; Aa >>> A'; B >>> B';\n        \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 5. \\<And>Aa A' B B'.\n       \\<lbrakk>Fn x T A = SimplyTyped.Pair Aa B;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; B >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 6. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 7. \\<And>Aa B.\n       \\<lbrakk>Fn x T A = Fst (SimplyTyped.Pair Aa B); Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 8. \\<And>P P'.\n       \\<lbrakk>Fn x T A = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'\n 9. \\<And>B Aa.\n       \\<lbrakk>Fn x T A = Snd (SimplyTyped.Pair Aa B); B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A'. A >>> A' \\<and> X = Fn x T A'", "qed (\n  metis unit_not_fn,\n  metis var_not_fn,\n  metis app_not_fn,\n  metis app_not_fn,\n  metis fn_not_pair,\n  metis fn_not_fst,\n  metis fn_not_fst,\n  metis fn_not_snd,\n  metis fn_not_snd\n)"], ["", "lemma complete_development_pairE:\n  assumes \"(Pair A B) >>> X\"\n  shows \"\\<exists>A' B'. (A >>> A') \\<and> (B >>> B') \\<and> X = Pair A' B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >>> A' \\<and> B >>> B' \\<and> X = SimplyTyped.Pair A' B'", "using assms"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A B >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>A' B'.\n       A >>> A' \\<and> B >>> B' \\<and> X = SimplyTyped.Pair A' B'", "apply cases"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<lbrakk>SimplyTyped.Pair A B = Unit; X = Unit\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A' B'.\n                         A >>> A' \\<and>\n                         B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 2. \\<And>x.\n       \\<lbrakk>SimplyTyped.Pair A B = Var x; X = Var x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa A' Ba B' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = App (Fn x T Aa) Ba; X = A'[x ::= B'];\n        Aa >>> A'; Ba >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Aa A' x T.\n       \\<lbrakk>SimplyTyped.Pair A B = Fn x T Aa; X = Fn x T A';\n        Aa >>> A'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = App Aa Ba; X = App A' B'; Aa >>> A';\n        Ba >>> B'; \\<And>x T M. Aa \\<noteq> Fn x T M\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 6. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; Ba >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 7. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 8. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 9. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 10. \\<And>Ba Aa.\n        \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n         Ba >>> X\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A' B'.\n                             A >>> A' \\<and>\n                             B >>> B' \\<and> X = SimplyTyped.Pair A' B'", "apply (metis unit_not_pair, metis var_not_pair, metis app_not_pair, metis fn_not_pair, metis app_not_pair)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>Aa A' Ba B'.\n       \\<lbrakk>SimplyTyped.Pair A B = SimplyTyped.Pair Aa Ba;\n        X = SimplyTyped.Pair A' B'; Aa >>> A'; Ba >>> B'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 2. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 5. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'", "apply (metis trm_simp(5, 6))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst P; X = Fst P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 2. \\<And>Aa Ba.\n       \\<lbrakk>SimplyTyped.Pair A B = Fst (SimplyTyped.Pair Aa Ba);\n        Aa >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 3. \\<And>P P'.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd P; X = Snd P'; P >>> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'\n 4. \\<And>Ba Aa.\n       \\<lbrakk>SimplyTyped.Pair A B = Snd (SimplyTyped.Pair Aa Ba);\n        Ba >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A' B'.\n                            A >>> A' \\<and>\n                            B >>> B' \\<and> X = SimplyTyped.Pair A' B'", "apply (metis pair_not_fst, metis pair_not_fst, metis pair_not_snd, metis pair_not_snd)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma complete_development_exists:\n  shows \"\\<exists>X. (A >>> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>X. A >>> X", "proof(induction A rule: trm_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<exists>X. Unit >>> X\n 2. \\<And>x. \\<exists>X. Var x >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 4. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 7. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<exists>X. Unit >>> X\n 2. \\<And>x. \\<exists>X. Var x >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 4. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 7. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "obtain X :: \"'a trm\" where \"X = Unit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = Unit \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = Unit\n\ngoal (7 subgoals):\n 1. \\<exists>X. Unit >>> X\n 2. \\<And>x. \\<exists>X. Var x >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 4. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 7. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "hence \"Unit >>> X\""], ["proof (prove)\nusing this:\n  X = Unit\n\ngoal (1 subgoal):\n 1. Unit >>> X", "using complete_development.unit"], ["proof (prove)\nusing this:\n  X = Unit\n  Unit >>> Unit\n\ngoal (1 subgoal):\n 1. Unit >>> X", "by metis"], ["proof (state)\nthis:\n  Unit >>> X\n\ngoal (7 subgoals):\n 1. \\<exists>X. Unit >>> X\n 2. \\<And>x. \\<exists>X. Var x >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 4. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 5. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 7. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  Unit >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. Unit >>> X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. Unit >>> X\n\ngoal (6 subgoals):\n 1. \\<And>x. \\<exists>X. Var x >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 3. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x. \\<exists>X. Var x >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 3. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case (2 x)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>x. \\<exists>X. Var x >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 3. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "obtain X where \"X = Var x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = Var x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  X = Var x\n\ngoal (6 subgoals):\n 1. \\<And>x. \\<exists>X. Var x >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 3. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "hence \"(Var x) >>> X\""], ["proof (prove)\nusing this:\n  X = Var x\n\ngoal (1 subgoal):\n 1. Var x >>> X", "using complete_development.var"], ["proof (prove)\nusing this:\n  X = Var x\n  Var ?x >>> Var ?x\n\ngoal (1 subgoal):\n 1. Var x >>> X", "by metis"], ["proof (state)\nthis:\n  Var x >>> X\n\ngoal (6 subgoals):\n 1. \\<And>x. \\<exists>X. Var x >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 3. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 4. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 6. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  Var x >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. Var x >>> X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. Var x >>> X\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case (3 A B)"], ["proof (state)\nthis:\n  \\<exists>X. A >>> X\n  \\<exists>X. B >>> X\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>X. A >>> X\n  \\<exists>X. B >>> X", "obtain A' B' where A': \"A >>> A'\" and B': \"B >>> B'\""], ["proof (prove)\nusing this:\n  \\<exists>X. A >>> X\n  \\<exists>X. B >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A >>> A'; B >>> B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "consider \"(\\<exists>x T M. A = Fn x T M)\" | \"\\<not>(\\<exists>x T M. A = Fn x T M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>x T M. A = Fn x T M \\<Longrightarrow> thesis;\n     \\<nexists>x T M. A = Fn x T M \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>x T M. A = Fn x T M \\<Longrightarrow> ?thesis;\n   \\<nexists>x T M. A = Fn x T M \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (5 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 3. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 5. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>x T M. A = Fn x T M \\<Longrightarrow> ?thesis;\n   \\<nexists>x T M. A = Fn x T M \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>X. App A B >>> X", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>x T M. A = Fn x T M \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "case 1"], ["proof (state)\nthis:\n  \\<exists>x T M. A = Fn x T M\n\ngoal (2 subgoals):\n 1. \\<exists>x T M. A = Fn x T M \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>x T M. A = Fn x T M", "obtain x T M where A: \"A = Fn x T M\""], ["proof (prove)\nusing this:\n  \\<exists>x T M. A = Fn x T M\n\ngoal (1 subgoal):\n 1. (\\<And>x T M. A = Fn x T M \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A = Fn x T M\n\ngoal (2 subgoals):\n 1. \\<exists>x T M. A = Fn x T M \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "from this"], ["proof (chain)\npicking this:\n  A = Fn x T M", "obtain M' where \"A' = Fn x T M'\" and \"M >>> M'\""], ["proof (prove)\nusing this:\n  A = Fn x T M\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        \\<lbrakk>A' = Fn x T M'; M >>> M'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using complete_development_fnE A'"], ["proof (prove)\nusing this:\n  A = Fn x T M\n  Fn ?x ?T ?A >>> ?X \\<Longrightarrow>\n  \\<exists>A'. ?A >>> A' \\<and> ?X = Fn ?x ?T A'\n  A >>> A'\n\ngoal (1 subgoal):\n 1. (\\<And>M'.\n        \\<lbrakk>A' = Fn x T M'; M >>> M'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A' = Fn x T M'\n  M >>> M'\n\ngoal (2 subgoals):\n 1. \\<exists>x T M. A = Fn x T M \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "obtain X where \"X = (M'[x ::= B'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = M'[x ::= B'] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = M'[x ::= B']\n\ngoal (2 subgoals):\n 1. \\<exists>x T M. A = Fn x T M \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "hence \"(App A B) >>> X\""], ["proof (prove)\nusing this:\n  X = M'[x ::= B']\n\ngoal (1 subgoal):\n 1. App A B >>> X", "using complete_development.beta \\<open>M >>> M'\\<close> B' A"], ["proof (prove)\nusing this:\n  X = M'[x ::= B']\n  \\<lbrakk>?A >>> ?A'; ?B >>> ?B'\\<rbrakk>\n  \\<Longrightarrow> App (Fn ?x ?T ?A) ?B >>> ?A'[?x ::= ?B']\n  M >>> M'\n  B >>> B'\n  A = Fn x T M\n\ngoal (1 subgoal):\n 1. App A B >>> X", "by metis"], ["proof (state)\nthis:\n  App A B >>> X\n\ngoal (2 subgoals):\n 1. \\<exists>x T M. A = Fn x T M \\<Longrightarrow> \\<exists>X. App A B >>> X\n 2. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  App A B >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. App A B >>> X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. App A B >>> X\n\ngoal (1 subgoal):\n 1. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "case 2"], ["proof (state)\nthis:\n  \\<nexists>x T M. A = Fn x T M\n\ngoal (1 subgoal):\n 1. \\<nexists>x T M. A = Fn x T M \\<Longrightarrow>\n    \\<exists>X. App A B >>> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>x T M. A = Fn x T M\n\ngoal (1 subgoal):\n 1. \\<exists>X. App A B >>> X", "using complete_development.app A' B'"], ["proof (prove)\nusing this:\n  \\<nexists>x T M. A = Fn x T M\n  \\<lbrakk>?A >>> ?A'; ?B >>> ?B';\n   \\<And>x T M. ?A \\<noteq> Fn x T M\\<rbrakk>\n  \\<Longrightarrow> App ?A ?B >>> App ?A' ?B'\n  A >>> A'\n  B >>> B'\n\ngoal (1 subgoal):\n 1. \\<exists>X. App A B >>> X", "by metis"], ["proof (state)\nthis:\n  \\<exists>X. App A B >>> X\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X. App A B >>> X\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case (4 x T A)"], ["proof (state)\nthis:\n  \\<exists>X. A >>> X\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>X. A >>> X", "obtain A' where A': \"A >>> A'\""], ["proof (prove)\nusing this:\n  \\<exists>X. A >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>A'. A >>> A' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  A >>> A'\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "obtain X where \"X = Fn x T A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X. X = Fn x T A' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = Fn x T A'\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "hence \"(Fn x T A) >>> X\""], ["proof (prove)\nusing this:\n  X = Fn x T A'\n\ngoal (1 subgoal):\n 1. Fn x T A >>> X", "using complete_development.eta A'"], ["proof (prove)\nusing this:\n  X = Fn x T A'\n  ?A >>> ?A' \\<Longrightarrow> Fn ?x ?T ?A >>> Fn ?x ?T ?A'\n  A >>> A'\n\ngoal (1 subgoal):\n 1. Fn x T A >>> X", "by metis"], ["proof (state)\nthis:\n  Fn x T A >>> X\n\ngoal (4 subgoals):\n 1. \\<And>x T A.\n       \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fn x T A >>> X\n 2. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 4. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  Fn x T A >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. Fn x T A >>> X", "by auto"], ["proof (state)\nthis:\n  \\<exists>X. Fn x T A >>> X\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case (5 A B)"], ["proof (state)\nthis:\n  \\<exists>X. A >>> X\n  \\<exists>X. B >>> X\n\ngoal (3 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>\\<exists>X. A >>> X; \\<exists>X. B >>> X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>X. SimplyTyped.Pair A B >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 3. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  \\<exists>X. A >>> X\n  \\<exists>X. B >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. SimplyTyped.Pair A B >>> X", "using complete_development.pair"], ["proof (prove)\nusing this:\n  \\<exists>X. A >>> X\n  \\<exists>X. B >>> X\n  \\<lbrakk>?A >>> ?A'; ?B >>> ?B'\\<rbrakk>\n  \\<Longrightarrow> SimplyTyped.Pair ?A ?B >>> SimplyTyped.Pair ?A' ?B'\n\ngoal (1 subgoal):\n 1. \\<exists>X. SimplyTyped.Pair A B >>> X", "by blast"], ["proof (state)\nthis:\n  \\<exists>X. SimplyTyped.Pair A B >>> X\n\ngoal (2 subgoals):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case (6 P)"], ["proof (state)\nthis:\n  \\<exists>X. P >>> X\n\ngoal (2 subgoals):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "consider \"\\<exists>A B. P = Pair A B\" | \"\\<nexists>A B. P = Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n             thesis;\n     \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Fst A >>> X\n 2. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>X. Fst P >>> X", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "case 1"], ["proof (state)\nthis:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B. P = SimplyTyped.Pair A B", "obtain A B X where \"P = Pair A B\" \"P >>> X\""], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. (\\<And>A B X.\n        \\<lbrakk>P = SimplyTyped.Pair A B; P >>> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 6"], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n  \\<exists>X. P >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>A B X.\n        \\<lbrakk>P = SimplyTyped.Pair A B; P >>> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n  P >>> X\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "from this"], ["proof (chain)\npicking this:\n  P = SimplyTyped.Pair A B\n  P >>> X", "obtain A' B' where \"A >>> A'\" \"B >>> B'\" \"X = Pair A' B'\""], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  P >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A >>> A'; B >>> B'; X = SimplyTyped.Pair A' B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using complete_development_pairE"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  P >>> X\n  SimplyTyped.Pair ?A ?B >>> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >>> A' \\<and> ?B >>> B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A >>> A'; B >>> B'; X = SimplyTyped.Pair A' B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  X = SimplyTyped.Pair A' B'\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. \\<exists>X. Fst P >>> X", "using complete_development.fst2 \\<open>P = Pair A B\\<close>"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  X = SimplyTyped.Pair A' B'\n  ?A >>> ?A' \\<Longrightarrow> Fst (SimplyTyped.Pair ?A ?B) >>> ?A'\n  P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<exists>X. Fst P >>> X", "by metis"], ["proof (state)\nthis:\n  \\<exists>X. Fst P >>> X\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "case 2"], ["proof (state)\nthis:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Fst P >>> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<exists>X. Fst P >>> X", "using complete_development.fst1 6"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n  \\<lbrakk>?P >>> ?P'; \\<And>A B. ?P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n  \\<Longrightarrow> Fst ?P >>> Fst ?P'\n  \\<exists>X. P >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. Fst P >>> X", "by blast"], ["proof (state)\nthis:\n  \\<exists>X. Fst P >>> X\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X. Fst P >>> X\n\ngoal (1 subgoal):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "case (7 P)"], ["proof (state)\nthis:\n  \\<exists>X. P >>> X\n\ngoal (1 subgoal):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "consider \"\\<exists>A B. P = Pair A B\" | \"\\<nexists>A B. P = Pair A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n             thesis;\n     \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>A. \\<exists>X. A >>> X \\<Longrightarrow> \\<exists>X. Snd A >>> X", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow> ?thesis;\n   \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>X. Snd P >>> X", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "case 1"], ["proof (state)\nthis:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A B. P = SimplyTyped.Pair A B", "obtain A B X where \"P = Pair A B\" \"P >>> X\""], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. (\\<And>A B X.\n        \\<lbrakk>P = SimplyTyped.Pair A B; P >>> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 7"], ["proof (prove)\nusing this:\n  \\<exists>A B. P = SimplyTyped.Pair A B\n  \\<exists>X. P >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>A B X.\n        \\<lbrakk>P = SimplyTyped.Pair A B; P >>> X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P = SimplyTyped.Pair A B\n  P >>> X\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "from this"], ["proof (chain)\npicking this:\n  P = SimplyTyped.Pair A B\n  P >>> X", "obtain A' B' where \"A >>> A'\" \"B >>> B'\" \"X = Pair A' B'\""], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  P >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A >>> A'; B >>> B'; X = SimplyTyped.Pair A' B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using complete_development_pairE"], ["proof (prove)\nusing this:\n  P = SimplyTyped.Pair A B\n  P >>> X\n  SimplyTyped.Pair ?A ?B >>> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >>> A' \\<and> ?B >>> B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A' B'.\n        \\<lbrakk>A >>> A'; B >>> B'; X = SimplyTyped.Pair A' B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A >>> A'\n  B >>> B'\n  X = SimplyTyped.Pair A' B'\n\ngoal (2 subgoals):\n 1. \\<exists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X\n 2. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. \\<exists>X. Snd P >>> X", "using complete_development.snd2 \\<open>P = Pair A B\\<close>"], ["proof (prove)\nusing this:\n  A >>> A'\n  B >>> B'\n  X = SimplyTyped.Pair A' B'\n  ?B >>> ?B' \\<Longrightarrow> Snd (SimplyTyped.Pair ?A ?B) >>> ?B'\n  P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<exists>X. Snd P >>> X", "by metis"], ["proof (state)\nthis:\n  \\<exists>X. Snd P >>> X\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "case 2"], ["proof (state)\nthis:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<nexists>A B. P = SimplyTyped.Pair A B \\<Longrightarrow>\n    \\<exists>X. Snd P >>> X", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n\ngoal (1 subgoal):\n 1. \\<exists>X. Snd P >>> X", "using complete_development.snd1 7"], ["proof (prove)\nusing this:\n  \\<nexists>A B. P = SimplyTyped.Pair A B\n  \\<lbrakk>?P >>> ?P'; \\<And>A B. ?P \\<noteq> SimplyTyped.Pair A B\\<rbrakk>\n  \\<Longrightarrow> Snd ?P >>> Snd ?P'\n  \\<exists>X. P >>> X\n\ngoal (1 subgoal):\n 1. \\<exists>X. Snd P >>> X", "by blast"], ["proof (state)\nthis:\n  \\<exists>X. Snd P >>> X\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>X. Snd P >>> X\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma complete_development_triangle:\n  assumes \"A >>> D\" \"A >> B\"\n  shows \"B >> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B >> D", "using assms"], ["proof (prove)\nusing this:\n  A >>> D\n  A >> B\n\ngoal (1 subgoal):\n 1. B >> D", "proof(induction arbitrary: B rule: complete_development.induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>B. Unit >> B \\<Longrightarrow> B >> Unit\n 2. \\<And>x B. Var x >> B \\<Longrightarrow> B >> Var x\n 3. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 4. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 5. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 6. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 8. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 9. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 10. \\<And>B B' A Ba.\n        \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n         Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n        \\<Longrightarrow> Ba >> B'", "case unit"], ["proof (state)\nthis:\n  Unit >> B\n\ngoal (10 subgoals):\n 1. \\<And>B. Unit >> B \\<Longrightarrow> B >> Unit\n 2. \\<And>x B. Var x >> B \\<Longrightarrow> B >> Var x\n 3. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 4. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 5. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 6. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 8. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 9. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 10. \\<And>B B' A Ba.\n        \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n         Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n        \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  Unit >> B\n\ngoal (1 subgoal):\n 1. B >> Unit", "using parallel_reduction_unitE parallel_reduction.refl"], ["proof (prove)\nusing this:\n  Unit >> B\n  Unit >> ?A \\<Longrightarrow> ?A = Unit\n  ?A >> ?A\n\ngoal (1 subgoal):\n 1. B >> Unit", "by metis"], ["proof (state)\nthis:\n  B >> Unit\n\ngoal (9 subgoals):\n 1. \\<And>x B. Var x >> B \\<Longrightarrow> B >> Var x\n 2. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 3. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 5. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 7. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 8. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 9. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x B. Var x >> B \\<Longrightarrow> B >> Var x\n 2. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 3. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 5. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 7. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 8. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 9. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (var x)"], ["proof (state)\nthis:\n  Var x >> B\n\ngoal (9 subgoals):\n 1. \\<And>x B. Var x >> B \\<Longrightarrow> B >> Var x\n 2. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 3. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 5. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 7. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 8. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 9. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  Var x >> B\n\ngoal (1 subgoal):\n 1. B >> Var x", "using parallel_reduction_varE parallel_reduction.refl"], ["proof (prove)\nusing this:\n  Var x >> B\n  Var ?x >> ?A \\<Longrightarrow> ?A = Var ?x\n  ?A >> ?A\n\ngoal (1 subgoal):\n 1. B >> Var x", "by metis"], ["proof (state)\nthis:\n  B >> Var x\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 2. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 6. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 8. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 2. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 6. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 8. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (beta A A' C C' x T)"], ["proof (state)\nthis:\n  A >>> A'\n  C >>> C'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App (Fn x T A) C >> B\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 2. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 6. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 8. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "hence \"A >> A'\" \"C >> C'\""], ["proof (prove)\nusing this:\n  A >>> A'\n  C >>> C'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App (Fn x T A) C >> B\n\ngoal (1 subgoal):\n 1. A >> A' &&& C >> C'", "using parallel_reduction.refl"], ["proof (prove)\nusing this:\n  A >>> A'\n  C >>> C'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App (Fn x T A) C >> B\n  ?A >> ?A\n\ngoal (1 subgoal):\n 1. A >> A' &&& C >> C'", "by metis+"], ["proof (state)\nthis:\n  A >> A'\n  C >> C'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 2. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 6. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 8. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from \\<open>(App (Fn x T A) C) >> B\\<close>"], ["proof (chain)\npicking this:\n  App (Fn x T A) C >> B", "consider\n        \"B = App (Fn x T A) C\"\n      | \"\\<exists>A'' C''. (A >> A'') \\<and> (C >> C'') \\<and> B = (A''[x ::= C''])\"\n      | \"\\<exists>A'' C''. ((Fn x T A) >> (Fn x T A'')) \\<and> (C >> C'') \\<and> B = (App (Fn x T A'') C'')\""], ["proof (prove)\nusing this:\n  App (Fn x T A) C >> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B = App (Fn x T A) C \\<Longrightarrow> thesis;\n     \\<exists>A'' C''.\n        A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n     thesis;\n     \\<exists>A'' C''.\n        Fn x T A >> Fn x T A'' \\<and>\n        C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_redexE"], ["proof (prove)\nusing this:\n  App (Fn x T A) C >> B\n  App (Fn ?x ?T ?A) ?B >> ?X \\<Longrightarrow>\n  ?X = App (Fn ?x ?T ?A) ?B \\<or>\n  (\\<exists>A' B'. ?A >> A' \\<and> ?B >> B' \\<and> ?X = A'[?x ::= B']) \\<or>\n  (\\<exists>A' B'.\n      Fn ?x ?T ?A >> Fn ?x ?T A' \\<and>\n      ?B >> B' \\<and> ?X = App (Fn ?x ?T A') B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B = App (Fn x T A) C \\<Longrightarrow> thesis;\n     \\<exists>A'' C''.\n        A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n     thesis;\n     \\<exists>A'' C''.\n        Fn x T A >> Fn x T A'' \\<and>\n        C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>B = App (Fn x T A) C \\<Longrightarrow> ?thesis;\n   \\<exists>A'' C''.\n      A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n   ?thesis;\n   \\<exists>A'' C''.\n      Fn x T A >> Fn x T A'' \\<and>\n      C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        App (Fn x T A) B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'[x ::= B']\n 2. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 4. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 6. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 7. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 8. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>B = App (Fn x T A) C \\<Longrightarrow> ?thesis;\n   \\<exists>A'' C''.\n      A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n   ?thesis;\n   \\<exists>A'' C''.\n      Fn x T A >> Fn x T A'' \\<and>\n      C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. B = App (Fn x T A) C \\<Longrightarrow> B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 3. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "case 1"], ["proof (state)\nthis:\n  B = App (Fn x T A) C\n\ngoal (3 subgoals):\n 1. B = App (Fn x T A) C \\<Longrightarrow> B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 3. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "thus ?thesis"], ["proof (prove)\nusing this:\n  B = App (Fn x T A) C\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "using parallel_reduction.beta \\<open>A >> A'\\<close> \\<open>C >> C'\\<close>"], ["proof (prove)\nusing this:\n  B = App (Fn x T A) C\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App (Fn ?x ?T ?A) ?B >> ?A'[?x ::= ?B']\n  A >> A'\n  C >> C'\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "by metis"], ["proof (state)\nthis:\n  B >> A'[x ::= C']\n\ngoal (2 subgoals):\n 1. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "case 2"], ["proof (state)\nthis:\n  \\<exists>A'' C''. A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C'']\n\ngoal (2 subgoals):\n 1. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'' C''. A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C'']", "obtain A'' C'' where \"A >> A''\" \"C >> C''\" and B: \"B = (A''[x ::= C''])\""], ["proof (prove)\nusing this:\n  \\<exists>A'' C''. A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C'']\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>A >> A''; C >> C''; B = A''[x ::= C'']\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >> A''\n  C >> C''\n  B = A''[x ::= C'']\n\ngoal (2 subgoals):\n 1. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "hence \"A'' >> A'\" \"C'' >> C'\""], ["proof (prove)\nusing this:\n  A >> A''\n  C >> C''\n  B = A''[x ::= C'']\n\ngoal (1 subgoal):\n 1. A'' >> A' &&& C'' >> C'", "using beta.IH"], ["proof (prove)\nusing this:\n  A >> A''\n  C >> C''\n  B = A''[x ::= C'']\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n\ngoal (1 subgoal):\n 1. A'' >> A' &&& C'' >> C'", "by metis+"], ["proof (state)\nthis:\n  A'' >> A'\n  C'' >> C'\n\ngoal (2 subgoals):\n 1. \\<exists>A'' C''.\n       A >> A'' \\<and> C >> C'' \\<and> B = A''[x ::= C''] \\<Longrightarrow>\n    B >> A'[x ::= C']\n 2. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "thus ?thesis"], ["proof (prove)\nusing this:\n  A'' >> A'\n  C'' >> C'\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "using B parallel_reduction_subst"], ["proof (prove)\nusing this:\n  A'' >> A'\n  C'' >> C'\n  B = A''[x ::= C'']\n  \\<lbrakk>?X >> ?X'; ?M >> ?M'\\<rbrakk>\n  \\<Longrightarrow> ?X[?z ::= ?M] >> ?X'[?z ::= ?M']\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "by metis"], ["proof (state)\nthis:\n  B >> A'[x ::= C']\n\ngoal (1 subgoal):\n 1. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "case 3"], ["proof (state)\nthis:\n  \\<exists>A'' C''.\n     Fn x T A >> Fn x T A'' \\<and> C >> C'' \\<and> B = App (Fn x T A'') C''\n\ngoal (1 subgoal):\n 1. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'' C''.\n     Fn x T A >> Fn x T A'' \\<and> C >> C'' \\<and> B = App (Fn x T A'') C''", "obtain A'' C''\n          where \"(Fn x T A) >> (Fn x T A'')\" \"C >> C''\" and B: \"B = App (Fn x T A'') C''\""], ["proof (prove)\nusing this:\n  \\<exists>A'' C''.\n     Fn x T A >> Fn x T A'' \\<and> C >> C'' \\<and> B = App (Fn x T A'') C''\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>Fn x T A >> Fn x T A''; C >> C'';\n         B = App (Fn x T A'') C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Fn x T A >> Fn x T A''\n  C >> C''\n  B = App (Fn x T A'') C''\n\ngoal (1 subgoal):\n 1. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "hence \"C'' >> C'\""], ["proof (prove)\nusing this:\n  Fn x T A >> Fn x T A''\n  C >> C''\n  B = App (Fn x T A'') C''\n\ngoal (1 subgoal):\n 1. C'' >> C'", "using beta.IH"], ["proof (prove)\nusing this:\n  Fn x T A >> Fn x T A''\n  C >> C''\n  B = App (Fn x T A'') C''\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n\ngoal (1 subgoal):\n 1. C'' >> C'", "by metis"], ["proof (state)\nthis:\n  C'' >> C'\n\ngoal (1 subgoal):\n 1. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "have \"A'' >> A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A'' >> A'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A'' >> A'", "thm parallel_reduction_fnE"], ["proof (state)\ngoal (1 subgoal):\n 1. A'' >> A'", "from \\<open>(Fn x T A) >> (Fn x T A'')\\<close>"], ["proof (chain)\npicking this:\n  Fn x T A >> Fn x T A''", "consider\n            \"Fn x T A = Fn x T A''\"\n          | \"\\<exists>A'''. (A >> A''') \\<and> Fn x T A'' = Fn x T A'''\""], ["proof (prove)\nusing this:\n  Fn x T A >> Fn x T A''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Fn x T A = Fn x T A'' \\<Longrightarrow> thesis;\n     \\<exists>A'''.\n        A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_fnE"], ["proof (prove)\nusing this:\n  Fn x T A >> Fn x T A''\n  Fn ?x ?T ?A >> ?X \\<Longrightarrow>\n  ?X = Fn ?x ?T ?A \\<or> (\\<exists>A'. ?A >> A' \\<and> ?X = Fn ?x ?T A')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Fn x T A = Fn x T A'' \\<Longrightarrow> thesis;\n     \\<exists>A'''.\n        A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>Fn x T A = Fn x T A'' \\<Longrightarrow> ?thesis;\n   \\<exists>A'''.\n      A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. A'' >> A'", "hence \"A >> A''\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Fn x T A = Fn x T A'' \\<Longrightarrow> ?thesis;\n   \\<exists>A'''.\n      A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. A >> A''", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. Fn x T A = Fn x T A'' \\<Longrightarrow> A >> A''\n 2. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "case 1"], ["proof (state)\nthis:\n  Fn x T A = Fn x T A''\n\ngoal (2 subgoals):\n 1. Fn x T A = Fn x T A'' \\<Longrightarrow> A >> A''\n 2. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "hence \"A = A''\""], ["proof (prove)\nusing this:\n  Fn x T A = Fn x T A''\n\ngoal (1 subgoal):\n 1. A = A''", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  Fn x T A = Fn x T A''\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. A = A''", "by metis"], ["proof (state)\nthis:\n  A = A''\n\ngoal (2 subgoals):\n 1. Fn x T A = Fn x T A'' \\<Longrightarrow> A >> A''\n 2. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = A''\n\ngoal (1 subgoal):\n 1. A >> A''", "using parallel_reduction.refl"], ["proof (prove)\nusing this:\n  A = A''\n  ?A >> ?A\n\ngoal (1 subgoal):\n 1. A >> A''", "by metis"], ["proof (state)\nthis:\n  A >> A''\n\ngoal (1 subgoal):\n 1. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "case 2"], ["proof (state)\nthis:\n  \\<exists>A'''. A >> A''' \\<and> Fn x T A'' = Fn x T A'''\n\ngoal (1 subgoal):\n 1. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A'''. A >> A''' \\<and> Fn x T A'' = Fn x T A'''", "obtain A''' where \"A >> A'''\" \"Fn x T A'' = Fn x T A'''\""], ["proof (prove)\nusing this:\n  \\<exists>A'''. A >> A''' \\<and> Fn x T A'' = Fn x T A'''\n\ngoal (1 subgoal):\n 1. (\\<And>A'''.\n        \\<lbrakk>A >> A'''; Fn x T A'' = Fn x T A'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >> A'''\n  Fn x T A'' = Fn x T A'''\n\ngoal (1 subgoal):\n 1. \\<exists>A'''.\n       A >> A''' \\<and> Fn x T A'' = Fn x T A''' \\<Longrightarrow>\n    A >> A''", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >> A'''\n  Fn x T A'' = Fn x T A'''\n\ngoal (1 subgoal):\n 1. A >> A''", "using trm_simp(4)"], ["proof (prove)\nusing this:\n  A >> A'''\n  Fn x T A'' = Fn x T A'''\n  Fn ?x ?T ?A = Fn ?y ?S ?B \\<Longrightarrow>\n  ?x = ?y \\<and> ?T = ?S \\<and> ?A = ?B \\<or>\n  ?x \\<noteq> ?y \\<and>\n  ?T = ?S \\<and>\n  ?x \\<notin> fvs ?B \\<and> ?A = [?x \\<leftrightarrow> ?y] \\<cdot> ?B\n\ngoal (1 subgoal):\n 1. A >> A''", "by metis"], ["proof (state)\nthis:\n  A >> A''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A >> A''\n\ngoal (1 subgoal):\n 1. A'' >> A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >> A''\n\ngoal (1 subgoal):\n 1. A'' >> A'", "using beta.IH"], ["proof (prove)\nusing this:\n  A >> A''\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n\ngoal (1 subgoal):\n 1. A'' >> A'", "by metis"], ["proof (state)\nthis:\n  A'' >> A'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A'' >> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A'' C''.\n       Fn x T A >> Fn x T A'' \\<and>\n       C >> C'' \\<and> B = App (Fn x T A'') C'' \\<Longrightarrow>\n    B >> A'[x ::= C']", "thus ?thesis"], ["proof (prove)\nusing this:\n  A'' >> A'\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "using B \\<open>C'' >> C'\\<close> parallel_reduction.beta"], ["proof (prove)\nusing this:\n  A'' >> A'\n  B = App (Fn x T A'') C''\n  C'' >> C'\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App (Fn ?x ?T ?A) ?B >> ?A'[?x ::= ?B']\n\ngoal (1 subgoal):\n 1. B >> A'[x ::= C']", "by metis"], ["proof (state)\nthis:\n  B >> A'[x ::= C']\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B >> A'[x ::= C']\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 5. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 7. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 5. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 7. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (eta A A' x T B)"], ["proof (state)\nthis:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fn x T A >> B\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 5. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 7. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from this"], ["proof (chain)\npicking this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fn x T A >> B", "consider\n      \"B = Fn x T A\"\n    | \"\\<exists>A''. (A >> A'') \\<and> B = Fn x T A''\""], ["proof (prove)\nusing this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fn x T A >> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B = Fn x T A \\<Longrightarrow> thesis;\n     \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_fnE"], ["proof (prove)\nusing this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fn x T A >> B\n  Fn ?x ?T ?A >> ?X \\<Longrightarrow>\n  ?X = Fn ?x ?T ?A \\<or> (\\<exists>A'. ?A >> A' \\<and> ?X = Fn ?x ?T A')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B = Fn x T A \\<Longrightarrow> thesis;\n     \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>B = Fn x T A \\<Longrightarrow> ?thesis;\n   \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T B.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fn x T A >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fn x T A'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 3. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 5. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 6. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 7. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>B = Fn x T A \\<Longrightarrow> ?thesis;\n   \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. B >> Fn x T A'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. B = Fn x T A \\<Longrightarrow> B >> Fn x T A'\n 2. \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n    B >> Fn x T A'", "case 1"], ["proof (state)\nthis:\n  B = Fn x T A\n\ngoal (2 subgoals):\n 1. B = Fn x T A \\<Longrightarrow> B >> Fn x T A'\n 2. \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n    B >> Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  B = Fn x T A\n\ngoal (1 subgoal):\n 1. B >> Fn x T A'", "using eta.IH parallel_reduction.refl parallel_reduction.eta"], ["proof (prove)\nusing this:\n  B = Fn x T A\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  ?A >> ?A\n  ?A >> ?A' \\<Longrightarrow> Fn ?x ?T ?A >> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. B >> Fn x T A'", "by metis"], ["proof (state)\nthis:\n  B >> Fn x T A'\n\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n    B >> Fn x T A'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n    B >> Fn x T A'", "case 2"], ["proof (state)\nthis:\n  \\<exists>A''. A >> A'' \\<and> B = Fn x T A''\n\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n    B >> Fn x T A'", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A''. A >> A'' \\<and> B = Fn x T A''", "obtain A'' where \"A >> A''\" and \"B = Fn x T A''\""], ["proof (prove)\nusing this:\n  \\<exists>A''. A >> A'' \\<and> B = Fn x T A''\n\ngoal (1 subgoal):\n 1. (\\<And>A''.\n        \\<lbrakk>A >> A''; B = Fn x T A''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A >> A''\n  B = Fn x T A''\n\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = Fn x T A'' \\<Longrightarrow>\n    B >> Fn x T A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >> A''\n  B = Fn x T A''\n\ngoal (1 subgoal):\n 1. B >> Fn x T A'", "using eta.IH parallel_reduction.eta"], ["proof (prove)\nusing this:\n  A >> A''\n  B = Fn x T A''\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  ?A >> ?A' \\<Longrightarrow> Fn ?x ?T ?A >> Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. B >> Fn x T A'", "by metis"], ["proof (state)\nthis:\n  B >> Fn x T A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B >> Fn x T A'\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 4. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 6. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 4. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 6. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (app A A' C C')"], ["proof (state)\nthis:\n  A >>> A'\n  C >>> C'\n  A \\<noteq> Fn ?x ?T ?M\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App A C >> B\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 4. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 6. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from this"], ["proof (chain)\npicking this:\n  A >>> A'\n  C >>> C'\n  A \\<noteq> Fn ?x ?T ?M\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App A C >> B", "obtain A'' C'' where \"A >> A''\" \"C >> C''\" and B: \"B = App A'' C''\""], ["proof (prove)\nusing this:\n  A >>> A'\n  C >>> C'\n  A \\<noteq> Fn ?x ?T ?M\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App A C >> B\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>A >> A''; C >> C''; B = App A'' C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_nonredexE"], ["proof (prove)\nusing this:\n  A >>> A'\n  C >>> C'\n  A \\<noteq> Fn ?x ?T ?M\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  App A C >> B\n  \\<lbrakk>App ?A ?B >> ?X; \\<And>x T A'. ?A \\<noteq> Fn x T A'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A' B'.\n                       ?A >> A' \\<and> ?B >> B' \\<and> ?X = App A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>A >> A''; C >> C''; B = App A'' C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A >> A''\n  C >> C''\n  B = App A'' C''\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 4. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 6. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "hence \"A'' >> A'\" \"C'' >> C'\""], ["proof (prove)\nusing this:\n  A >> A''\n  C >> C''\n  B = App A'' C''\n\ngoal (1 subgoal):\n 1. A'' >> A' &&& C'' >> C'", "using app.IH"], ["proof (prove)\nusing this:\n  A >> A''\n  C >> C''\n  B = App A'' C''\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n\ngoal (1 subgoal):\n 1. A'' >> A' &&& C'' >> C'", "by metis+"], ["proof (state)\nthis:\n  A'' >> A'\n  C'' >> C'\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        \\<And>x T M. A \\<noteq> Fn x T M; App A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> App A' B'\n 2. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 4. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 5. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 6. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A'' >> A'\n  C'' >> C'\n\ngoal (1 subgoal):\n 1. B >> App A' C'", "using B parallel_reduction.app"], ["proof (prove)\nusing this:\n  A'' >> A'\n  C'' >> C'\n  B = App A'' C''\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> App ?A ?B >> App ?A' ?B'\n\ngoal (1 subgoal):\n 1. B >> App A' C'", "by metis"], ["proof (state)\nthis:\n  B >> App A' C'\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 3. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 5. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 3. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 5. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (pair A A' C C')"], ["proof (state)\nthis:\n  A >>> A'\n  C >>> C'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  SimplyTyped.Pair A C >> B\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 3. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 5. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from \\<open>(Pair A C) >> B\\<close> and parallel_reduction_pairE"], ["proof (chain)\npicking this:\n  SimplyTyped.Pair A C >> B\n  SimplyTyped.Pair ?A ?B >> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >> A' \\<and> ?B >> B' \\<and> ?X = SimplyTyped.Pair A' B'", "obtain A'' C'' where\n      \"A >> A''\" \"C >> C''\" \"B = Pair A'' C''\""], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A C >> B\n  SimplyTyped.Pair ?A ?B >> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >> A' \\<and> ?B >> B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>A >> A''; C >> C''; B = SimplyTyped.Pair A'' C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A >> A''\n  C >> C''\n  B = SimplyTyped.Pair A'' C''\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B' Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        SimplyTyped.Pair A B >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> SimplyTyped.Pair A' B'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 3. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 4. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 5. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A''\n  C >> C''\n  B = SimplyTyped.Pair A'' C''\n\ngoal (1 subgoal):\n 1. B >> SimplyTyped.Pair A' C'", "using pair.IH parallel_reduction.pair"], ["proof (prove)\nusing this:\n  A >> A''\n  C >> C''\n  B = SimplyTyped.Pair A'' C''\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  C >> ?B \\<Longrightarrow> ?B >> C'\n  \\<lbrakk>?A >> ?A'; ?B >> ?B'\\<rbrakk>\n  \\<Longrightarrow> SimplyTyped.Pair ?A ?B >> SimplyTyped.Pair ?A' ?B'\n\ngoal (1 subgoal):\n 1. B >> SimplyTyped.Pair A' C'", "by metis"], ["proof (state)\nthis:\n  B >> SimplyTyped.Pair A' C'\n\ngoal (4 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 2. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 4. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 2. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 4. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (fst1 P P')"], ["proof (state)\nthis:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Fst P >> B\n\ngoal (4 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 2. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 4. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from this"], ["proof (chain)\npicking this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Fst P >> B", "obtain P'' where \"P >> P''\" \"B = Fst P''\""], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Fst P >> B\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P >> P''; B = Fst P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_fstE"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Fst P >> B\n  Fst ?P >> ?X \\<Longrightarrow>\n  (\\<exists>P'. ?P >> P' \\<and> ?X = Fst P') \\<or>\n  (\\<exists>A A' B. ?P = SimplyTyped.Pair A B \\<and> A >> A' \\<and> ?X = A')\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P >> P''; B = Fst P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P >> P''\n  B = Fst P''\n\ngoal (4 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Fst P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Fst P'\n 2. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 3. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 4. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  P >> P''\n  B = Fst P''\n\ngoal (1 subgoal):\n 1. B >> Fst P'", "using fst1.IH parallel_reduction.fst1"], ["proof (prove)\nusing this:\n  P >> P''\n  B = Fst P''\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  ?P >> ?P' \\<Longrightarrow> Fst ?P >> Fst ?P'\n\ngoal (1 subgoal):\n 1. B >> Fst P'", "by metis"], ["proof (state)\nthis:\n  B >> Fst P'\n\ngoal (3 subgoals):\n 1. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 3. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 3. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (fst2 A A' C B)"], ["proof (state)\nthis:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B\n\ngoal (3 subgoals):\n 1. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 3. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from this"], ["proof (chain)\npicking this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B", "consider\n      \"\\<exists>P''. ((Pair A C) >> P'') \\<and> B = Fst P''\"\n    | \"\\<exists>A''. (A >> A'') \\<and> (B = A'')\""], ["proof (prove)\nusing this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P''.\n                SimplyTyped.Pair A C >> P'' \\<and>\n                B = Fst P'' \\<Longrightarrow>\n             thesis;\n     \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_fstE[where P=\"(Pair A C)\" and X=B]"], ["proof (prove)\nusing this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B\n  Fst (SimplyTyped.Pair A C) >> B \\<Longrightarrow>\n  (\\<exists>P'. SimplyTyped.Pair A C >> P' \\<and> B = Fst P') \\<or>\n  (\\<exists>A A' B.\n      SimplyTyped.Pair A C = SimplyTyped.Pair A B \\<and>\n      A >> A' \\<and> B = A')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P''.\n                SimplyTyped.Pair A C >> P'' \\<and>\n                B = Fst P'' \\<Longrightarrow>\n             thesis;\n     \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(5)"], ["proof (prove)\nusing this:\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B\n  Fst (SimplyTyped.Pair A C) >> B \\<Longrightarrow>\n  (\\<exists>P'. SimplyTyped.Pair A C >> P' \\<and> B = Fst P') \\<or>\n  (\\<exists>A A' B.\n      SimplyTyped.Pair A C = SimplyTyped.Pair A B \\<and>\n      A >> A' \\<and> B = A')\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?A = ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P''.\n                SimplyTyped.Pair A C >> P'' \\<and>\n                B = Fst P'' \\<Longrightarrow>\n             thesis;\n     \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>P''.\n              SimplyTyped.Pair A C >> P'' \\<and>\n              B = Fst P'' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (3 subgoals):\n 1. \\<And>A A' B Ba.\n       \\<lbrakk>A >>> A'; \\<And>B. A >> B \\<Longrightarrow> B >> A';\n        Fst (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> A'\n 2. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 3. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>P''.\n              SimplyTyped.Pair A C >> P'' \\<and>\n              B = Fst P'' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. B >> A'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Fst P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "case 1"], ["proof (state)\nthis:\n  \\<exists>P''. SimplyTyped.Pair A C >> P'' \\<and> B = Fst P''\n\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Fst P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "from this"], ["proof (chain)\npicking this:\n  \\<exists>P''. SimplyTyped.Pair A C >> P'' \\<and> B = Fst P''", "obtain P'' where \"(Pair A C) >> P''\" and \"B = Fst P''\""], ["proof (prove)\nusing this:\n  \\<exists>P''. SimplyTyped.Pair A C >> P'' \\<and> B = Fst P''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>SimplyTyped.Pair A C >> P''; B = Fst P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  SimplyTyped.Pair A C >> P''\n  B = Fst P''\n\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Fst P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "from this"], ["proof (chain)\npicking this:\n  SimplyTyped.Pair A C >> P''\n  B = Fst P''", "obtain A'' C'' where \"P'' = Pair A'' C''\" \"A >> A''\" \"C >> C''\""], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A C >> P''\n  B = Fst P''\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>P'' = SimplyTyped.Pair A'' C''; A >> A''; C >> C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_pairE"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A C >> P''\n  B = Fst P''\n  SimplyTyped.Pair ?A ?B >> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >> A' \\<and> ?B >> B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>P'' = SimplyTyped.Pair A'' C''; A >> A''; C >> C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P'' = SimplyTyped.Pair A'' C''\n  A >> A''\n  C >> C''\n\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Fst P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  P'' = SimplyTyped.Pair A'' C''\n  A >> A''\n  C >> C''\n\ngoal (1 subgoal):\n 1. B >> A'", "using fst2 parallel_reduction.fst2 \\<open>B = Fst P''\\<close>"], ["proof (prove)\nusing this:\n  P'' = SimplyTyped.Pair A'' C''\n  A >> A''\n  C >> C''\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B\n  ?A >> ?A' \\<Longrightarrow> Fst (SimplyTyped.Pair ?A ?B) >> ?A'\n  B = Fst P''\n\ngoal (1 subgoal):\n 1. B >> A'", "by metis"], ["proof (state)\nthis:\n  B >> A'\n\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "case 2"], ["proof (state)\nthis:\n  \\<exists>A''. A >> A'' \\<and> B = A''\n\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "from this"], ["proof (chain)\npicking this:\n  \\<exists>A''. A >> A'' \\<and> B = A''", "obtain A'' where \"A >> A''\" \"B = A''\""], ["proof (prove)\nusing this:\n  \\<exists>A''. A >> A'' \\<and> B = A''\n\ngoal (1 subgoal):\n 1. (\\<And>A''.\n        \\<lbrakk>A >> A''; B = A''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A >> A''\n  B = A''\n\ngoal (1 subgoal):\n 1. \\<exists>A''. A >> A'' \\<and> B = A'' \\<Longrightarrow> B >> A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  A >> A''\n  B = A''\n\ngoal (1 subgoal):\n 1. B >> A'", "using fst2"], ["proof (prove)\nusing this:\n  A >> A''\n  B = A''\n  A >>> A'\n  A >> ?B \\<Longrightarrow> ?B >> A'\n  Fst (SimplyTyped.Pair A C) >> B\n\ngoal (1 subgoal):\n 1. B >> A'", "by metis"], ["proof (state)\nthis:\n  B >> A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B >> A'\n\ngoal (2 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 2. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 2. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (snd1 P P')"], ["proof (state)\nthis:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Snd P >> B\n\ngoal (2 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 2. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from this"], ["proof (chain)\npicking this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Snd P >> B", "obtain P'' where \"P >> P''\" \"B = Snd P''\""], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Snd P >> B\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P >> P''; B = Snd P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_sndE"], ["proof (prove)\nusing this:\n  P >>> P'\n  P \\<noteq> SimplyTyped.Pair ?A ?B\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  Snd P >> B\n  Snd ?P >> ?X \\<Longrightarrow>\n  (\\<exists>P'. ?P >> P' \\<and> ?X = Snd P') \\<or>\n  (\\<exists>A B B'. ?P = SimplyTyped.Pair A B \\<and> B >> B' \\<and> ?X = B')\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>P >> P''; B = Snd P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P >> P''\n  B = Snd P''\n\ngoal (2 subgoals):\n 1. \\<And>P P' B.\n       \\<lbrakk>P >>> P'; \\<And>B. P >> B \\<Longrightarrow> B >> P';\n        \\<And>A B. P \\<noteq> SimplyTyped.Pair A B; Snd P >> B\\<rbrakk>\n       \\<Longrightarrow> B >> Snd P'\n 2. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  P >> P''\n  B = Snd P''\n\ngoal (1 subgoal):\n 1. B >> Snd P'", "using snd1.IH parallel_reduction.snd1"], ["proof (prove)\nusing this:\n  P >> P''\n  B = Snd P''\n  P >> ?B \\<Longrightarrow> ?B >> P'\n  ?P >> ?P' \\<Longrightarrow> Snd ?P >> Snd ?P'\n\ngoal (1 subgoal):\n 1. B >> Snd P'", "by metis"], ["proof (state)\nthis:\n  B >> Snd P'\n\ngoal (1 subgoal):\n 1. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "case (snd2 C A' A B)"], ["proof (state)\nthis:\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B\n\ngoal (1 subgoal):\n 1. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "from this"], ["proof (chain)\npicking this:\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B", "consider\n      \"\\<exists>P''. ((Pair A C) >> P'') \\<and> B = Snd P''\"\n    | \"\\<exists>C''. (C >> C'') \\<and> (B = C'')\""], ["proof (prove)\nusing this:\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P''.\n                SimplyTyped.Pair A C >> P'' \\<and>\n                B = Snd P'' \\<Longrightarrow>\n             thesis;\n     \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using parallel_reduction_sndE[where P=\"(Pair A C)\" and X=B]"], ["proof (prove)\nusing this:\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B\n  Snd (SimplyTyped.Pair A C) >> B \\<Longrightarrow>\n  (\\<exists>P'. SimplyTyped.Pair A C >> P' \\<and> B = Snd P') \\<or>\n  (\\<exists>A B B'.\n      SimplyTyped.Pair A C = SimplyTyped.Pair A B \\<and>\n      B >> B' \\<and> B = B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P''.\n                SimplyTyped.Pair A C >> P'' \\<and>\n                B = Snd P'' \\<Longrightarrow>\n             thesis;\n     \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using trm_simp(5, 6)"], ["proof (prove)\nusing this:\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B\n  Snd (SimplyTyped.Pair A C) >> B \\<Longrightarrow>\n  (\\<exists>P'. SimplyTyped.Pair A C >> P' \\<and> B = Snd P') \\<or>\n  (\\<exists>A B B'.\n      SimplyTyped.Pair A C = SimplyTyped.Pair A B \\<and>\n      B >> B' \\<and> B = B')\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?A = ?C\n  SimplyTyped.Pair ?A ?B = SimplyTyped.Pair ?C ?D \\<Longrightarrow> ?B = ?D\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>P''.\n                SimplyTyped.Pair A C >> P'' \\<and>\n                B = Snd P'' \\<Longrightarrow>\n             thesis;\n     \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>P''.\n              SimplyTyped.Pair A C >> P'' \\<and>\n              B = Snd P'' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>B B' A Ba.\n       \\<lbrakk>B >>> B'; \\<And>Ba. B >> Ba \\<Longrightarrow> Ba >> B';\n        Snd (SimplyTyped.Pair A B) >> Ba\\<rbrakk>\n       \\<Longrightarrow> Ba >> B'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<exists>P''.\n              SimplyTyped.Pair A C >> P'' \\<and>\n              B = Snd P'' \\<Longrightarrow>\n           ?thesis;\n   \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. B >> A'", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Snd P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "case 1"], ["proof (state)\nthis:\n  \\<exists>P''. SimplyTyped.Pair A C >> P'' \\<and> B = Snd P''\n\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Snd P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "from this"], ["proof (chain)\npicking this:\n  \\<exists>P''. SimplyTyped.Pair A C >> P'' \\<and> B = Snd P''", "obtain P'' where \"(Pair A C) >> P''\" and \"B = Snd P''\""], ["proof (prove)\nusing this:\n  \\<exists>P''. SimplyTyped.Pair A C >> P'' \\<and> B = Snd P''\n\ngoal (1 subgoal):\n 1. (\\<And>P''.\n        \\<lbrakk>SimplyTyped.Pair A C >> P''; B = Snd P''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  SimplyTyped.Pair A C >> P''\n  B = Snd P''\n\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Snd P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "from this"], ["proof (chain)\npicking this:\n  SimplyTyped.Pair A C >> P''\n  B = Snd P''", "obtain A'' C'' where \"P'' = Pair A'' C''\" \"A >> A''\" \"C >> C''\""], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A C >> P''\n  B = Snd P''\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>P'' = SimplyTyped.Pair A'' C''; A >> A''; C >> C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_pairE"], ["proof (prove)\nusing this:\n  SimplyTyped.Pair A C >> P''\n  B = Snd P''\n  SimplyTyped.Pair ?A ?B >> ?X \\<Longrightarrow>\n  \\<exists>A' B'.\n     ?A >> A' \\<and> ?B >> B' \\<and> ?X = SimplyTyped.Pair A' B'\n\ngoal (1 subgoal):\n 1. (\\<And>A'' C''.\n        \\<lbrakk>P'' = SimplyTyped.Pair A'' C''; A >> A''; C >> C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  P'' = SimplyTyped.Pair A'' C''\n  A >> A''\n  C >> C''\n\ngoal (2 subgoals):\n 1. \\<exists>P''.\n       SimplyTyped.Pair A C >> P'' \\<and> B = Snd P'' \\<Longrightarrow>\n    B >> A'\n 2. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  P'' = SimplyTyped.Pair A'' C''\n  A >> A''\n  C >> C''\n\ngoal (1 subgoal):\n 1. B >> A'", "using snd2 parallel_reduction.snd2 \\<open>B = Snd P''\\<close>"], ["proof (prove)\nusing this:\n  P'' = SimplyTyped.Pair A'' C''\n  A >> A''\n  C >> C''\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B\n  ?B >> ?B' \\<Longrightarrow> Snd (SimplyTyped.Pair ?A ?B) >> ?B'\n  B = Snd P''\n\ngoal (1 subgoal):\n 1. B >> A'", "by metis"], ["proof (state)\nthis:\n  B >> A'\n\ngoal (1 subgoal):\n 1. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "case 2"], ["proof (state)\nthis:\n  \\<exists>C''. C >> C'' \\<and> B = C''\n\ngoal (1 subgoal):\n 1. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "from this"], ["proof (chain)\npicking this:\n  \\<exists>C''. C >> C'' \\<and> B = C''", "obtain C'' where \"C >> C''\" \"B = C''\""], ["proof (prove)\nusing this:\n  \\<exists>C''. C >> C'' \\<and> B = C''\n\ngoal (1 subgoal):\n 1. (\\<And>C''.\n        \\<lbrakk>C >> C''; B = C''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  C >> C''\n  B = C''\n\ngoal (1 subgoal):\n 1. \\<exists>C''. C >> C'' \\<and> B = C'' \\<Longrightarrow> B >> A'", "thus ?thesis"], ["proof (prove)\nusing this:\n  C >> C''\n  B = C''\n\ngoal (1 subgoal):\n 1. B >> A'", "using snd2"], ["proof (prove)\nusing this:\n  C >> C''\n  B = C''\n  C >>> A'\n  C >> ?B \\<Longrightarrow> ?B >> A'\n  Snd (SimplyTyped.Pair A C) >> B\n\ngoal (1 subgoal):\n 1. B >> A'", "by metis"], ["proof (state)\nthis:\n  B >> A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B >> A'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma parallel_reduction_diamond:\n  assumes \"A >> B\" \"A >> C\"\n  shows \"\\<exists>D. (B >> D) \\<and> (C >> D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D. B >> D \\<and> C >> D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D. B >> D \\<and> C >> D", "obtain D where \"A >>> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D. A >>> D \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using complete_development_exists"], ["proof (prove)\nusing this:\n  \\<exists>X. ?A >>> X\n\ngoal (1 subgoal):\n 1. (\\<And>D. A >>> D \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  A >>> D\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >> D \\<and> C >> D", "hence \"(B >> D) \\<and> (C >> D)\""], ["proof (prove)\nusing this:\n  A >>> D\n\ngoal (1 subgoal):\n 1. B >> D \\<and> C >> D", "using complete_development_triangle assms"], ["proof (prove)\nusing this:\n  A >>> D\n  \\<lbrakk>?A >>> ?D; ?A >> ?B\\<rbrakk> \\<Longrightarrow> ?B >> ?D\n  A >> B\n  A >> C\n\ngoal (1 subgoal):\n 1. B >> D \\<and> C >> D", "by auto"], ["proof (state)\nthis:\n  B >> D \\<and> C >> D\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >> D \\<and> C >> D", "thus ?thesis"], ["proof (prove)\nusing this:\n  B >> D \\<and> C >> D\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >> D \\<and> C >> D", "by blast"], ["proof (state)\nthis:\n  \\<exists>D. B >> D \\<and> C >> D\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive parallel_reduces :: \"'a trm \\<Rightarrow> 'a trm \\<Rightarrow> bool\" (\"_ >>\\<^sup>* _\") where\n  reflexive: \"A >>\\<^sup>* A\"\n| transitive: \"\\<lbrakk>A >>\\<^sup>* A'; A' >> A''\\<rbrakk> \\<Longrightarrow> A >>\\<^sup>* A''\""], ["", "lemma parallel_reduces_diamond':\n  assumes \"A >>\\<^sup>* C\" \"A >> B\"\n  shows \"\\<exists>D. (B >>\\<^sup>* D) \\<and> (C >> D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> C >> D", "using assms"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* C\n  A >> B\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> C >> D", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A >> D\n 2. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "case (reflexive A)"], ["proof (state)\nthis:\n  A >> B\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A >> D\n 2. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "thus ?case"], ["proof (prove)\nusing this:\n  A >> B\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> A >> D", "using parallel_reduces.reflexive"], ["proof (prove)\nusing this:\n  A >> B\n  ?A >>\\<^sup>* ?A\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> A >> D", "by metis"], ["proof (state)\nthis:\n  \\<exists>D. B >>\\<^sup>* D \\<and> A >> D\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "case (transitive A A' A'')"], ["proof (state)\nthis:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D\n  A >> B\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "from this"], ["proof (chain)\npicking this:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D\n  A >> B", "obtain C where \"B >>\\<^sup>* C\" \"A' >> C\""], ["proof (prove)\nusing this:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D\n  A >> B\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>B >>\\<^sup>* C; A' >> C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  B >>\\<^sup>* C\n  A' >> C\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "from \\<open>A' >> C\\<close> \\<open>A' >> A''\\<close>"], ["proof (chain)\npicking this:\n  A' >> C\n  A' >> A''", "obtain D where \"C >> D\" \"A'' >> D\""], ["proof (prove)\nusing this:\n  A' >> C\n  A' >> A''\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>C >> D; A'' >> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using parallel_reduction_diamond"], ["proof (prove)\nusing this:\n  A' >> C\n  A' >> A''\n  \\<lbrakk>?A >> ?B; ?A >> ?C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>D. ?B >> D \\<and> ?C >> D\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>C >> D; A'' >> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  C >> D\n  A'' >> D\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >> B \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A' >> D;\n        A' >> A''; A >> B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "thus ?case"], ["proof (prove)\nusing this:\n  C >> D\n  A'' >> D\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "using parallel_reduces.transitive \\<open>B >>\\<^sup>* C\\<close>"], ["proof (prove)\nusing this:\n  C >> D\n  A'' >> D\n  \\<lbrakk>?A >>\\<^sup>* ?A'; ?A' >> ?A''\\<rbrakk>\n  \\<Longrightarrow> ?A >>\\<^sup>* ?A''\n  B >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D", "by metis"], ["proof (state)\nthis:\n  \\<exists>D. B >>\\<^sup>* D \\<and> A'' >> D\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma parallel_reduces_diamond:\n  assumes \"A >>\\<^sup>* B\" \"A >>\\<^sup>* C\"\n  shows \"\\<exists>D. (B >>\\<^sup>* D) \\<and> (C >>\\<^sup>* D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "using assms"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* B\n  A >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "proof(induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       A >>\\<^sup>* C \\<Longrightarrow>\n       \\<exists>D. A >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n 2. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "case (reflexive A)"], ["proof (state)\nthis:\n  A >>\\<^sup>* C\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       A >>\\<^sup>* C \\<Longrightarrow>\n       \\<exists>D. A >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n 2. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "thus ?case"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. \\<exists>D. A >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "using parallel_reduces.reflexive"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* C\n  ?A >>\\<^sup>* ?A\n\ngoal (1 subgoal):\n 1. \\<exists>D. A >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "by metis"], ["proof (state)\nthis:\n  \\<exists>D. A >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "case (transitive A A' A'')"], ["proof (state)\nthis:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A >>\\<^sup>* C \\<Longrightarrow>\n  \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n  A >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "from this"], ["proof (chain)\npicking this:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A >>\\<^sup>* C \\<Longrightarrow>\n  \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n  A >>\\<^sup>* C", "obtain C' where \"A' >>\\<^sup>* C'\" \"C >>\\<^sup>* C'\""], ["proof (prove)\nusing this:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A >>\\<^sup>* C \\<Longrightarrow>\n  \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n  A >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        \\<lbrakk>A' >>\\<^sup>* C'; C >>\\<^sup>* C'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A' >>\\<^sup>* C'\n  C >>\\<^sup>* C'\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "from this"], ["proof (chain)\npicking this:\n  A' >>\\<^sup>* C'\n  C >>\\<^sup>* C'", "obtain D where \"A'' >>\\<^sup>* D\" \"C' >> D\""], ["proof (prove)\nusing this:\n  A' >>\\<^sup>* C'\n  C >>\\<^sup>* C'\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>A'' >>\\<^sup>* D; C' >> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>A' >> A''\\<close> \\<open>A' >>\\<^sup>* C'\\<close> parallel_reduces_diamond'"], ["proof (prove)\nusing this:\n  A' >>\\<^sup>* C'\n  C >>\\<^sup>* C'\n  A' >> A''\n  A' >>\\<^sup>* C'\n  \\<lbrakk>?A >>\\<^sup>* ?C; ?A >> ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>D. ?B >>\\<^sup>* D \\<and> ?C >> D\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>A'' >>\\<^sup>* D; C' >> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  A'' >>\\<^sup>* D\n  C' >> D\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A';\n        A >>\\<^sup>* C \\<Longrightarrow>\n        \\<exists>D. A' >>\\<^sup>* D \\<and> C >>\\<^sup>* D;\n        A' >> A''; A >>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "thus ?case"], ["proof (prove)\nusing this:\n  A'' >>\\<^sup>* D\n  C' >> D\n\ngoal (1 subgoal):\n 1. \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "using parallel_reduces.transitive \\<open>C >>\\<^sup>* C'\\<close>"], ["proof (prove)\nusing this:\n  A'' >>\\<^sup>* D\n  C' >> D\n  \\<lbrakk>?A >>\\<^sup>* ?A'; ?A' >> ?A''\\<rbrakk>\n  \\<Longrightarrow> ?A >>\\<^sup>* ?A''\n  C >>\\<^sup>* C'\n\ngoal (1 subgoal):\n 1. \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "by metis"], ["proof (state)\nthis:\n  \\<exists>D. A'' >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_reduction_is_parallel_reduction:\n  assumes \"A \\<rightarrow>\\<beta> B\"\n  shows \"A >> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A >> B", "using assms"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta> B\n\ngoal (1 subgoal):\n 1. A >> B", "apply induction"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x T A M. App (Fn x T A) M >> A[x ::= M]\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> App A B >> App A' B\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> App A B >> App A B'\n 4. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A >> Fn x T A'\n 5. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A' B\n 6. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A B'\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 8. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 9. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 10. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.beta parallel_reduction.refl)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> App A B >> App A' B\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> App A B >> App A B'\n 3. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A >> Fn x T A'\n 4. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A' B\n 5. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A B'\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 7. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 8. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 9. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.app parallel_reduction.refl)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> App A B >> App A B'\n 2. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A >> Fn x T A'\n 3. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A' B\n 4. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A B'\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 6. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 7. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 8. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.app parallel_reduction.refl)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A >> Fn x T A'\n 2. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A' B\n 3. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A B'\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 5. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 6. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 7. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.eta)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A \\<rightarrow>\\<beta> A'; A >> A'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A' B\n 2. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A B'\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 4. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 5. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 6. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.pair parallel_reduction.refl)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>B B' A.\n       \\<lbrakk>B \\<rightarrow>\\<beta> B'; B >> B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A B >> SimplyTyped.Pair A B'\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 3. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 4. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 5. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.pair parallel_reduction.refl)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Fst P >> Fst P'\n 2. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 3. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 4. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.fst1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A B. Fst (SimplyTyped.Pair A B) >> A\n 2. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 3. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.fst2 parallel_reduction.refl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P \\<rightarrow>\\<beta> P'; P >> P'\\<rbrakk>\n       \\<Longrightarrow> Snd P >> Snd P'\n 2. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.snd1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A B. Snd (SimplyTyped.Pair A B) >> B", "apply (metis parallel_reduction.snd2 parallel_reduction.refl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma parallel_reduction_is_beta_reduction:\n  assumes \"A >> B\"\n  shows \"A \\<rightarrow>\\<beta>\\<^sup>* B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* B", "using assms"], ["proof (prove)\nusing this:\n  A >> B\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* B", "proof(induction)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A. A \\<rightarrow>\\<beta>\\<^sup>* A\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 7. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 8. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 9. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (refl A)"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>A. A \\<rightarrow>\\<beta>\\<^sup>* A\n 2. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 3. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 5. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 7. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 8. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 9. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A", "."], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* A\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (beta A A' B B' x T)"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "hence \"(App (Fn x T A) B) \\<rightarrow>\\<beta>\\<^sup>* (App (Fn x T A') B')\""], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'", "using \\<open>A \\<rightarrow>\\<beta>\\<^sup>* A'\\<close>\n      beta_reduces_fn beta_reduces_app_left beta_reduces_app_right beta_reduces_composition"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  Fn ?x ?T ?A \\<rightarrow>\\<beta>\\<^sup>* Fn ?x ?T ?A'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta>\\<^sup>* App ?A' ?B\n  ?B \\<rightarrow>\\<beta>\\<^sup>* ?B' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta>\\<^sup>* App ?A ?B'\n  \\<lbrakk>?A' \\<rightarrow>\\<beta>\\<^sup>* ?A'';\n   ?A \\<rightarrow>\\<beta>\\<^sup>* ?A'\\<rbrakk>\n  \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?A''\n\ngoal (1 subgoal):\n 1. App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'", "by metis"], ["proof (state)\nthis:\n  App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "moreover"], ["proof (state)\nthis:\n  App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "have \"(App (Fn x T A') B') \\<rightarrow>\\<beta> (A'[x ::= B'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (Fn x T A') B' \\<rightarrow>\\<beta> A'[x ::= B']", "using beta_reduction.beta"], ["proof (prove)\nusing this:\n  App (Fn ?x ?T ?A) ?M \\<rightarrow>\\<beta> ?A[?x ::= ?M]\n\ngoal (1 subgoal):\n 1. App (Fn x T A') B' \\<rightarrow>\\<beta> A'[x ::= B']", "."], ["proof (state)\nthis:\n  App (Fn x T A') B' \\<rightarrow>\\<beta> A'[x ::= B']\n\ngoal (8 subgoals):\n 1. \\<And>A A' B B' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App (Fn x T A)\n                          B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n 2. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 4. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 6. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 7. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 8. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "ultimately"], ["proof (chain)\npicking this:\n  App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'\n  App (Fn x T A') B' \\<rightarrow>\\<beta> A'[x ::= B']", "show ?case"], ["proof (prove)\nusing this:\n  App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'\n  App (Fn x T A') B' \\<rightarrow>\\<beta> A'[x ::= B']\n\ngoal (1 subgoal):\n 1. App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']", "using beta_reduces.transitive"], ["proof (prove)\nusing this:\n  App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* App (Fn x T A') B'\n  App (Fn x T A') B' \\<rightarrow>\\<beta> A'[x ::= B']\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n\ngoal (1 subgoal):\n 1. App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']", "by metis"], ["proof (state)\nthis:\n  App (Fn x T A) B \\<rightarrow>\\<beta>\\<^sup>* A'[x ::= B']\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (eta A A' x T)"], ["proof (state)\nthis:\n  A >> A'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (7 subgoals):\n 1. \\<And>A A' x T.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 3. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 5. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 6. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 7. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'", "using beta_reduces_fn"], ["proof (prove)\nusing this:\n  A >> A'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  Fn ?x ?T ?A \\<rightarrow>\\<beta>\\<^sup>* Fn ?x ?T ?A'\n\ngoal (1 subgoal):\n 1. Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'", "by metis"], ["proof (state)\nthis:\n  Fn x T A \\<rightarrow>\\<beta>\\<^sup>* Fn x T A'\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (app A A' B B')"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (6 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n 2. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 4. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 5. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 6. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'", "using beta_reduces_app_left beta_reduces_app_right beta_reduces_composition"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta>\\<^sup>* App ?A' ?B\n  ?B \\<rightarrow>\\<beta>\\<^sup>* ?B' \\<Longrightarrow>\n  App ?A ?B \\<rightarrow>\\<beta>\\<^sup>* App ?A ?B'\n  \\<lbrakk>?A' \\<rightarrow>\\<beta>\\<^sup>* ?A'';\n   ?A \\<rightarrow>\\<beta>\\<^sup>* ?A'\\<rbrakk>\n  \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?A''\n\ngoal (1 subgoal):\n 1. App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'", "by metis"], ["proof (state)\nthis:\n  App A B \\<rightarrow>\\<beta>\\<^sup>* App A' B'\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (pair A A' B B')"], ["proof (state)\nthis:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (5 subgoals):\n 1. \\<And>A A' B B'.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'; B >> B';\n        B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> SimplyTyped.Pair A\n                          B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A'\n                    B'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 3. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 4. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 5. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A' B'", "using beta_reduces_pair_left beta_reduces_pair_right beta_reduces_composition"], ["proof (prove)\nusing this:\n  A >> A'\n  B >> B'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  SimplyTyped.Pair ?A\n   ?B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair ?A' ?B\n  ?B \\<rightarrow>\\<beta>\\<^sup>* ?B' \\<Longrightarrow>\n  SimplyTyped.Pair ?A\n   ?B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair ?A ?B'\n  \\<lbrakk>?A' \\<rightarrow>\\<beta>\\<^sup>* ?A'';\n   ?A \\<rightarrow>\\<beta>\\<^sup>* ?A'\\<rbrakk>\n  \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?A''\n\ngoal (1 subgoal):\n 1. SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A' B'", "by metis"], ["proof (state)\nthis:\n  SimplyTyped.Pair A B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair A' B'\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (fst1 P P')"], ["proof (state)\nthis:\n  P >> P'\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n\ngoal (4 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n 2. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 3. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 4. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  P >> P'\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n\ngoal (1 subgoal):\n 1. Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'", "using beta_reduces_fst"], ["proof (prove)\nusing this:\n  P >> P'\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n  ?P \\<rightarrow>\\<beta>\\<^sup>* ?P' \\<Longrightarrow>\n  Fst ?P \\<rightarrow>\\<beta>\\<^sup>* Fst ?P'\n\ngoal (1 subgoal):\n 1. Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'", "by metis"], ["proof (state)\nthis:\n  Fst P \\<rightarrow>\\<beta>\\<^sup>* Fst P'\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (fst2 A A' B)"], ["proof (state)\nthis:\n  A >> A'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (3 subgoals):\n 1. \\<And>A A' B.\n       \\<lbrakk>A >> A'; A \\<rightarrow>\\<beta>\\<^sup>* A'\\<rbrakk>\n       \\<Longrightarrow> Fst (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* A'\n 2. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 3. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  A >> A'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. Fst (SimplyTyped.Pair A B) \\<rightarrow>\\<beta>\\<^sup>* A'", "using beta_reduces_pair_left beta_reduction.fst2 beta_reduces.intros beta_reduces_composition"], ["proof (prove)\nusing this:\n  A >> A'\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  SimplyTyped.Pair ?A\n   ?B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair ?A' ?B\n  Fst (SimplyTyped.Pair ?A ?B) \\<rightarrow>\\<beta> ?A\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  \\<lbrakk>?A' \\<rightarrow>\\<beta>\\<^sup>* ?A'';\n   ?A \\<rightarrow>\\<beta>\\<^sup>* ?A'\\<rbrakk>\n  \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?A''\n\ngoal (1 subgoal):\n 1. Fst (SimplyTyped.Pair A B) \\<rightarrow>\\<beta>\\<^sup>* A'", "by blast"], ["proof (state)\nthis:\n  Fst (SimplyTyped.Pair A B) \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (snd1 P P')"], ["proof (state)\nthis:\n  P >> P'\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n\ngoal (2 subgoals):\n 1. \\<And>P P'.\n       \\<lbrakk>P >> P'; P \\<rightarrow>\\<beta>\\<^sup>* P'\\<rbrakk>\n       \\<Longrightarrow> Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n 2. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  P >> P'\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n\ngoal (1 subgoal):\n 1. Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'", "using beta_reduces_snd"], ["proof (prove)\nusing this:\n  P >> P'\n  P \\<rightarrow>\\<beta>\\<^sup>* P'\n  ?P \\<rightarrow>\\<beta>\\<^sup>* ?P' \\<Longrightarrow>\n  Snd ?P \\<rightarrow>\\<beta>\\<^sup>* Snd ?P'\n\ngoal (1 subgoal):\n 1. Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'", "by metis"], ["proof (state)\nthis:\n  Snd P \\<rightarrow>\\<beta>\\<^sup>* Snd P'\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "case (snd2 B B' A)"], ["proof (state)\nthis:\n  B >> B'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. \\<And>B B' A.\n       \\<lbrakk>B >> B'; B \\<rightarrow>\\<beta>\\<^sup>* B'\\<rbrakk>\n       \\<Longrightarrow> Snd (SimplyTyped.Pair A\n                               B) \\<rightarrow>\\<beta>\\<^sup>* B'", "thus ?case"], ["proof (prove)\nusing this:\n  B >> B'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal (1 subgoal):\n 1. Snd (SimplyTyped.Pair A B) \\<rightarrow>\\<beta>\\<^sup>* B'", "using beta_reduces_pair_left beta_reduction.snd2 beta_reduces.intros beta_reduces_composition"], ["proof (prove)\nusing this:\n  B >> B'\n  B \\<rightarrow>\\<beta>\\<^sup>* B'\n  ?A \\<rightarrow>\\<beta>\\<^sup>* ?A' \\<Longrightarrow>\n  SimplyTyped.Pair ?A\n   ?B \\<rightarrow>\\<beta>\\<^sup>* SimplyTyped.Pair ?A' ?B\n  Snd (SimplyTyped.Pair ?A ?B) \\<rightarrow>\\<beta> ?B\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n  \\<lbrakk>?M \\<rightarrow>\\<beta>\\<^sup>* ?M';\n   ?M' \\<rightarrow>\\<beta> ?M''\\<rbrakk>\n  \\<Longrightarrow> ?M \\<rightarrow>\\<beta>\\<^sup>* ?M''\n  \\<lbrakk>?A' \\<rightarrow>\\<beta>\\<^sup>* ?A'';\n   ?A \\<rightarrow>\\<beta>\\<^sup>* ?A'\\<rbrakk>\n  \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?A''\n\ngoal (1 subgoal):\n 1. Snd (SimplyTyped.Pair A B) \\<rightarrow>\\<beta>\\<^sup>* B'", "by blast"], ["proof (state)\nthis:\n  Snd (SimplyTyped.Pair A B) \\<rightarrow>\\<beta>\\<^sup>* B'\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma parallel_beta_reduces_equivalent:\n  shows \"(A >>\\<^sup>* B) = (A \\<rightarrow>\\<beta>\\<^sup>* B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B = A \\<rightarrow>\\<beta>\\<^sup>* B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B = A \\<rightarrow>\\<beta>\\<^sup>* B", "have \\<rightarrow>: \"(A >>\\<^sup>* B) \\<Longrightarrow> (A \\<rightarrow>\\<beta>\\<^sup>* B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* B", "proof(induction rule: parallel_reduces.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A. A \\<rightarrow>\\<beta>\\<^sup>* A\n 2. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A'; A \\<rightarrow>\\<beta>\\<^sup>* A';\n        A' >> A''\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* A''", "case (reflexive A)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A. A \\<rightarrow>\\<beta>\\<^sup>* A\n 2. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A'; A \\<rightarrow>\\<beta>\\<^sup>* A';\n        A' >> A''\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* A''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A", "using beta_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?M \\<rightarrow>\\<beta>\\<^sup>* ?M\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A", "."], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* A\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A'; A \\<rightarrow>\\<beta>\\<^sup>* A';\n        A' >> A''\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* A''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A'; A \\<rightarrow>\\<beta>\\<^sup>* A';\n        A' >> A''\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* A''", "case (transitive A A' A'')"], ["proof (state)\nthis:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. \\<And>A A' A''.\n       \\<lbrakk>A >>\\<^sup>* A'; A \\<rightarrow>\\<beta>\\<^sup>* A';\n        A' >> A''\\<rbrakk>\n       \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* A''", "thus ?case"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A''", "using beta_reduces_composition parallel_reduction_is_beta_reduction"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* A'\n  A' >> A''\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  \\<lbrakk>?A' \\<rightarrow>\\<beta>\\<^sup>* ?A'';\n   ?A \\<rightarrow>\\<beta>\\<^sup>* ?A'\\<rbrakk>\n  \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?A''\n  ?A >> ?B \\<Longrightarrow> ?A \\<rightarrow>\\<beta>\\<^sup>* ?B\n\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* A''", "by metis"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* A''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A >>\\<^sup>* B \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B = A \\<rightarrow>\\<beta>\\<^sup>* B", "have \\<leftarrow>: \"(A \\<rightarrow>\\<beta>\\<^sup>* B) \\<Longrightarrow> (A >>\\<^sup>* B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow> A >>\\<^sup>* B", "proof(induction rule: beta_reduces.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M. M >>\\<^sup>* M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; M >>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> M >>\\<^sup>* M''", "case (reflexive A)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M. M >>\\<^sup>* M\n 2. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; M >>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> M >>\\<^sup>* M''", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. A >>\\<^sup>* A", "using parallel_reduces.reflexive"], ["proof (prove)\nusing this:\n  ?A >>\\<^sup>* ?A\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* A", "."], ["proof (state)\nthis:\n  A >>\\<^sup>* A\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; M >>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> M >>\\<^sup>* M''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; M >>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> M >>\\<^sup>* M''", "case (transitive A A' A'')"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  A >>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. \\<And>M M' M''.\n       \\<lbrakk>M \\<rightarrow>\\<beta>\\<^sup>* M'; M >>\\<^sup>* M';\n        M' \\<rightarrow>\\<beta> M''\\<rbrakk>\n       \\<Longrightarrow> M >>\\<^sup>* M''", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  A >>\\<^sup>* A'\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* A''", "using parallel_reduces.transitive beta_reduction_is_parallel_reduction"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* A'\n  A' \\<rightarrow>\\<beta> A''\n  A >>\\<^sup>* A'\n  \\<lbrakk>?A >>\\<^sup>* ?A'; ?A' >> ?A''\\<rbrakk>\n  \\<Longrightarrow> ?A >>\\<^sup>* ?A''\n  ?A \\<rightarrow>\\<beta> ?B \\<Longrightarrow> ?A >> ?B\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* A''", "by metis"], ["proof (state)\nthis:\n  A >>\\<^sup>* A''\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow> A >>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B = A \\<rightarrow>\\<beta>\\<^sup>* B", "from \\<leftarrow>\\<rightarrow>"], ["proof (chain)\npicking this:\n  A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow> A >>\\<^sup>* B\n  A >>\\<^sup>* B \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* B", "show \"(A >>\\<^sup>* B) = (A \\<rightarrow>\\<beta>\\<^sup>* B)\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* B \\<Longrightarrow> A >>\\<^sup>* B\n  A >>\\<^sup>* B \\<Longrightarrow> A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B = A \\<rightarrow>\\<beta>\\<^sup>* B", "by blast"], ["proof (state)\nthis:\n  A >>\\<^sup>* B = A \\<rightarrow>\\<beta>\\<^sup>* B\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem confluence:\n  assumes \"A \\<rightarrow>\\<beta>\\<^sup>* B\" \"A \\<rightarrow>\\<beta>\\<^sup>* C\"\n  shows \"\\<exists>D. (B \\<rightarrow>\\<beta>\\<^sup>* D) \\<and> (C \\<rightarrow>\\<beta>\\<^sup>* D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D.\n       B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n       C \\<rightarrow>\\<beta>\\<^sup>* D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D.\n       B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n       C \\<rightarrow>\\<beta>\\<^sup>* D", "from assms"], ["proof (chain)\npicking this:\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n  A \\<rightarrow>\\<beta>\\<^sup>* C", "have \"A >>\\<^sup>* B\" \"A >>\\<^sup>* C\""], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n  A \\<rightarrow>\\<beta>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B &&& A >>\\<^sup>* C", "using parallel_beta_reduces_equivalent"], ["proof (prove)\nusing this:\n  A \\<rightarrow>\\<beta>\\<^sup>* B\n  A \\<rightarrow>\\<beta>\\<^sup>* C\n  ?A >>\\<^sup>* ?B = ?A \\<rightarrow>\\<beta>\\<^sup>* ?B\n\ngoal (1 subgoal):\n 1. A >>\\<^sup>* B &&& A >>\\<^sup>* C", "by metis+"], ["proof (state)\nthis:\n  A >>\\<^sup>* B\n  A >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n       C \\<rightarrow>\\<beta>\\<^sup>* D", "hence \"\\<exists>D. (B >>\\<^sup>* D) \\<and> (C >>\\<^sup>* D)\""], ["proof (prove)\nusing this:\n  A >>\\<^sup>* B\n  A >>\\<^sup>* C\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "using parallel_reduces_diamond"], ["proof (prove)\nusing this:\n  A >>\\<^sup>* B\n  A >>\\<^sup>* C\n  \\<lbrakk>?A >>\\<^sup>* ?B; ?A >>\\<^sup>* ?C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>D. ?B >>\\<^sup>* D \\<and> ?C >>\\<^sup>* D\n\ngoal (1 subgoal):\n 1. \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D", "by metis"], ["proof (state)\nthis:\n  \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n       C \\<rightarrow>\\<beta>\\<^sup>* D", "thus \"\\<exists>D. (B \\<rightarrow>\\<beta>\\<^sup>* D) \\<and> (C \\<rightarrow>\\<beta>\\<^sup>* D)\""], ["proof (prove)\nusing this:\n  \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n       C \\<rightarrow>\\<beta>\\<^sup>* D", "using parallel_beta_reduces_equivalent"], ["proof (prove)\nusing this:\n  \\<exists>D. B >>\\<^sup>* D \\<and> C >>\\<^sup>* D\n  ?A >>\\<^sup>* ?B = ?A \\<rightarrow>\\<beta>\\<^sup>* ?B\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n       C \\<rightarrow>\\<beta>\\<^sup>* D", "by metis"], ["proof (state)\nthis:\n  \\<exists>D.\n     B \\<rightarrow>\\<beta>\\<^sup>* D \\<and>\n     C \\<rightarrow>\\<beta>\\<^sup>* D\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}