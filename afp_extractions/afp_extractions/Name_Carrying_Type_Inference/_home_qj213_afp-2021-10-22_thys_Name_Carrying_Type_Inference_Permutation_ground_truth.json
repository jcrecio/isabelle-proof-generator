{"file_name": "/home/qj213/afp-2021-10-22/thys/Name_Carrying_Type_Inference/Permutation.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Name_Carrying_Type_Inference", "problem_names": ["lemma swp_apply_unequal:\n  assumes \"x \\<noteq> y\"\n  shows \"swp_apply s x \\<noteq> swp_apply s y\"", "lemma preprm_ext_reflexive:\n  shows \"x =p x\"", "lemma preprm_ext_symmetric:\n  assumes \"x =p y\"\n  shows \"y =p x\"", "lemma preprm_ext_transitive:\n  assumes \"x =p y\" and \"y =p z\"\n  shows \"x =p z\"", "lemma preprm_apply_composition:\n  shows \"preprm_apply (preprm_compose f g) x = preprm_apply f (preprm_apply g x)\"", "lemma preprm_apply_unequal:\n  assumes \"x \\<noteq> y\"\n  shows \"preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y\"", "lemma preprm_unit_equal_id:\n  shows \"preprm_unit a a =p preprm_id\"", "lemma preprm_unit_inaction:\n  assumes \"x \\<noteq> a\" and \"x \\<noteq> b\"\n  shows \"preprm_apply (preprm_unit a b) x = x\"", "lemma preprm_unit_action:\n  shows \"preprm_apply (preprm_unit a b) a = b\"", "lemma preprm_unit_commutes:\n  shows \"preprm_unit a b =p preprm_unit b a\"", "lemma preprm_singleton_involution:\n  shows \"preprm_compose [s] [s] =p preprm_id\"", "lemma preprm_unit_involution:\n  shows \"preprm_compose (preprm_unit a b) (preprm_unit a b) =p preprm_id\"", "lemma preprm_apply_id:\n  shows \"preprm_apply preprm_id x = x\"", "lemma preprm_apply_injective:\n  shows \"inj (preprm_apply \\<pi>)\"", "lemma preprm_disagreement_composition:\n  assumes \"a \\<noteq> b\" \"b \\<noteq> c\" \"a \\<noteq> c\"\n  shows \"{x.\n    preprm_apply (preprm_compose (preprm_unit a b) (preprm_unit b c)) x \\<noteq>\n    preprm_apply (preprm_unit a c) x\n  } = {a, b}\"", "lemma preprm_compose_push:\n  shows \"\n    preprm_compose \\<pi> (preprm_unit a b) =p\n    preprm_compose (preprm_unit (preprm_apply \\<pi> a) (preprm_apply \\<pi> b)) \\<pi>\n  \"", "lemma preprm_ext_compose_left:\n  assumes \"P =p S\"\n  shows \"preprm_compose \\<pi> P =p preprm_compose \\<pi> S\"", "lemma preprm_ext_compose_right:\n  assumes \"P =p S\"\n  shows \"preprm_compose P \\<pi> =p preprm_compose S \\<pi>\"", "lemma preprm_ext_uncompose:\n  assumes \"\\<pi> =p \\<sigma>\" \"preprm_compose \\<pi> P =p preprm_compose \\<sigma> S\"\n  shows \"P =p S\"", "lemma preprm_inv_compose:\n  shows \"preprm_compose (preprm_inv \\<pi>) \\<pi> =p preprm_id\"", "lemma preprm_inv_involution:\n  shows \"preprm_inv (preprm_inv \\<pi>) = \\<pi>\"", "lemma preprm_inv_ext:\n  assumes \"\\<pi> =p \\<sigma>\"\n  shows \"preprm_inv \\<pi> =p preprm_inv \\<sigma>\"", "lemma prm_apply_composition:\n  fixes f g :: \"'a prm\" and x :: 'a\n  shows \"f \\<diamondop> g $ x = f $ (g $ x)\"", "lemma prm_apply_unequal:\n  fixes \\<pi> :: \"'a prm\" and x y :: 'a\n  assumes \"x \\<noteq> y\"\n  shows \"\\<pi> $ x \\<noteq> \\<pi> $ y\"", "lemma prm_unit_equal_id:\n  fixes a :: 'a\n  shows \"[a \\<leftrightarrow> a] = \\<epsilon>\"", "lemma prm_unit_inaction:\n  fixes a b x :: 'a\n  assumes \"x \\<noteq> a\" and \"x \\<noteq> b\"\n  shows \"[a \\<leftrightarrow> b] $ x = x\"", "lemma prm_unit_action:\n  fixes a b :: 'a\n  shows \"[a \\<leftrightarrow> b] $ a = b\"", "lemma prm_unit_commutes:\n  fixes a b :: 'a\n  shows \"[a \\<leftrightarrow> b] = [b \\<leftrightarrow> a]\"", "lemma prm_unit_involution:\n  fixes a b :: 'a\n  shows \"[a \\<leftrightarrow> b] \\<diamondop> [a \\<leftrightarrow> b] = \\<epsilon>\"", "lemma prm_apply_id:\n  fixes x :: 'a\n  shows \"\\<epsilon> $ x = x\"", "lemma prm_apply_injective:\n  shows \"inj (prm_apply \\<pi>)\"", "lemma prm_inv_compose:\n  shows \"(prm_inv \\<pi>) \\<diamondop> \\<pi> = \\<epsilon>\"", "lemma prm_set_apply_compose:\n  shows \"\\<pi> {$} (\\<sigma> {$} S) = (\\<pi> \\<diamondop> \\<sigma>) {$} S\"", "lemma prm_set_membership:\n  assumes \"x \\<in> S\"\n  shows \"\\<pi> $ x \\<in> \\<pi> {$} S\"", "lemma prm_set_notmembership:\n  assumes \"x \\<notin> S\"\n  shows \"\\<pi> $ x \\<notin> \\<pi> {$} S\"", "lemma prm_set_singleton:\n  shows \"\\<pi> {$} {x} = {\\<pi> $ x}\"", "lemma prm_set_id:\n  shows \"\\<epsilon> {$} S = S\"", "lemma prm_set_unit_inaction:\n  assumes \"a \\<notin> S\" and \"b \\<notin> S\"\n  shows \"[a \\<leftrightarrow> b] {$} S = S\"", "lemma prm_set_unit_action:\n  assumes \"a \\<in> S\" and \"b \\<notin> S\"\n  shows \"[a \\<leftrightarrow> b] {$} S = S - {a} \\<union> {b}\"", "lemma prm_set_distributes_union:\n  shows \"\\<pi> {$} (S \\<union> T) = (\\<pi> {$} S) \\<union> (\\<pi> {$} T)\"", "lemma prm_set_distributes_difference:\n  shows \"\\<pi> {$} (S - T) = (\\<pi> {$} S) - (\\<pi> {$} T)\"", "lemma prm_disagreement_ext:\n  shows \"x \\<in> ds \\<pi> \\<sigma> \\<equiv> \\<pi> $ x \\<noteq> \\<sigma> $ x\"", "lemma prm_disagreement_composition:\n  assumes \"a \\<noteq> b\" \"b \\<noteq> c\" \"a \\<noteq> c\"\n  shows \"ds ([a \\<leftrightarrow> b] \\<diamondop> [b \\<leftrightarrow> c]) [a \\<leftrightarrow> c] = {a, b}\"", "lemma prm_compose_push:\n  shows \"\\<pi> \\<diamondop> [a \\<leftrightarrow> b] = [\\<pi> $ a \\<leftrightarrow> \\<pi> $ b] \\<diamondop> \\<pi>\""], "translations": [["", "lemma swp_apply_unequal:\n  assumes \"x \\<noteq> y\"\n  shows \"swp_apply s x \\<noteq> swp_apply s y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swp_apply s x \\<noteq> swp_apply s y", "proof(cases s)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       s = (a, b) \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y", "case (Pair a b)"], ["proof (state)\nthis:\n  s = (a, b)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       s = (a, b) \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y", "consider \"x = a\" | \"x = b\" | \"x \\<noteq> a \\<and> x \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = a \\<Longrightarrow> thesis; x = b \\<Longrightarrow> thesis;\n     x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = a \\<Longrightarrow> ?thesis; x = b \\<Longrightarrow> ?thesis;\n   x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       s = (a, b) \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = a \\<Longrightarrow> ?thesis; x = b \\<Longrightarrow> ?thesis;\n   x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. swp_apply s x \\<noteq> swp_apply s y", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x = a \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 3. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "case 1"], ["proof (state)\nthis:\n  x = a\n\ngoal (3 subgoals):\n 1. x = a \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 3. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "have \"swp_apply s x = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swp_apply s x = b", "using \\<open>s = (a, b)\\<close> \\<open>x = a\\<close>"], ["proof (prove)\nusing this:\n  s = (a, b)\n  x = a\n\ngoal (1 subgoal):\n 1. swp_apply s x = b", "by simp"], ["proof (state)\nthis:\n  swp_apply s x = b\n\ngoal (3 subgoals):\n 1. x = a \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 3. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "moreover"], ["proof (state)\nthis:\n  swp_apply s x = b\n\ngoal (3 subgoals):\n 1. x = a \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 3. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "have \"swp_apply s y \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> b", "using \\<open>s = (a, b)\\<close> \\<open>x = a\\<close> \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  s = (a, b)\n  x = a\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> b", "by(cases \"y = b\", simp_all)"], ["proof (state)\nthis:\n  swp_apply s y \\<noteq> b\n\ngoal (3 subgoals):\n 1. x = a \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 3. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "ultimately"], ["proof (chain)\npicking this:\n  swp_apply s x = b\n  swp_apply s y \\<noteq> b", "show ?thesis"], ["proof (prove)\nusing this:\n  swp_apply s x = b\n  swp_apply s y \\<noteq> b\n\ngoal (1 subgoal):\n 1. swp_apply s x \\<noteq> swp_apply s y", "by metis"], ["proof (state)\nthis:\n  swp_apply s x \\<noteq> swp_apply s y\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "case 2"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "have \"swp_apply s x = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swp_apply s x = a", "using \\<open>s = (a, b)\\<close> \\<open>x = b\\<close>"], ["proof (prove)\nusing this:\n  s = (a, b)\n  x = b\n\ngoal (1 subgoal):\n 1. swp_apply s x = a", "by simp"], ["proof (state)\nthis:\n  swp_apply s x = a\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "moreover"], ["proof (state)\nthis:\n  swp_apply s x = a\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "have \"swp_apply s y \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> a", "using \\<open>s = (a, b)\\<close> \\<open>x = b\\<close> \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  s = (a, b)\n  x = b\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> a", "by(cases \"y = a\", simp_all)"], ["proof (state)\nthis:\n  swp_apply s y \\<noteq> a\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> swp_apply s x \\<noteq> swp_apply s y\n 2. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "ultimately"], ["proof (chain)\npicking this:\n  swp_apply s x = a\n  swp_apply s y \\<noteq> a", "show ?thesis"], ["proof (prove)\nusing this:\n  swp_apply s x = a\n  swp_apply s y \\<noteq> a\n\ngoal (1 subgoal):\n 1. swp_apply s x \\<noteq> swp_apply s y", "by metis"], ["proof (state)\nthis:\n  swp_apply s x \\<noteq> swp_apply s y\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "case 3"], ["proof (state)\nthis:\n  x \\<noteq> a \\<and> x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "have \"swp_apply s x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swp_apply s x = x", "using \\<open>s = (a, b)\\<close> \\<open>x \\<noteq> a \\<and> x \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  s = (a, b)\n  x \\<noteq> a \\<and> x \\<noteq> b\n\ngoal (1 subgoal):\n 1. swp_apply s x = x", "by simp"], ["proof (state)\nthis:\n  swp_apply s x = x\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "consider \"y = a\" | \"y = b\" | \"y \\<noteq> a \\<and> y \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = a \\<Longrightarrow> thesis; y = b \\<Longrightarrow> thesis;\n     y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>y = a \\<Longrightarrow> ?thesis; y = b \\<Longrightarrow> ?thesis;\n   y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "hence \"swp_apply s y \\<noteq> x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>y = a \\<Longrightarrow> ?thesis; y = b \\<Longrightarrow> ?thesis;\n   y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "proof(cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. y = a \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 3. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "case 1"], ["proof (state)\nthis:\n  y = a\n\ngoal (3 subgoals):\n 1. y = a \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 3. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "hence \"swp_apply s y = b\""], ["proof (prove)\nusing this:\n  y = a\n\ngoal (1 subgoal):\n 1. swp_apply s y = b", "using \\<open>s = (a, b)\\<close>"], ["proof (prove)\nusing this:\n  y = a\n  s = (a, b)\n\ngoal (1 subgoal):\n 1. swp_apply s y = b", "by simp"], ["proof (state)\nthis:\n  swp_apply s y = b\n\ngoal (3 subgoals):\n 1. y = a \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 3. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  swp_apply s y = b\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "using \\<open>x \\<noteq> a \\<and> x \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  swp_apply s y = b\n  x \\<noteq> a \\<and> x \\<noteq> b\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "by metis"], ["proof (state)\nthis:\n  swp_apply s y \\<noteq> x\n\ngoal (2 subgoals):\n 1. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "case 2"], ["proof (state)\nthis:\n  y = b\n\ngoal (2 subgoals):\n 1. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "hence \"swp_apply s y = a\""], ["proof (prove)\nusing this:\n  y = b\n\ngoal (1 subgoal):\n 1. swp_apply s y = a", "using \\<open>s = (a, b)\\<close>"], ["proof (prove)\nusing this:\n  y = b\n  s = (a, b)\n\ngoal (1 subgoal):\n 1. swp_apply s y = a", "by simp"], ["proof (state)\nthis:\n  swp_apply s y = a\n\ngoal (2 subgoals):\n 1. y = b \\<Longrightarrow> swp_apply s y \\<noteq> x\n 2. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  swp_apply s y = a\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "using \\<open>x \\<noteq> a \\<and> x \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  swp_apply s y = a\n  x \\<noteq> a \\<and> x \\<noteq> b\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "by metis"], ["proof (state)\nthis:\n  swp_apply s y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "case 3"], ["proof (state)\nthis:\n  y \\<noteq> a \\<and> y \\<noteq> b\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "hence \"swp_apply s y = y\""], ["proof (prove)\nusing this:\n  y \\<noteq> a \\<and> y \\<noteq> b\n\ngoal (1 subgoal):\n 1. swp_apply s y = y", "using \\<open>s = (a, b)\\<close>"], ["proof (prove)\nusing this:\n  y \\<noteq> a \\<and> y \\<noteq> b\n  s = (a, b)\n\ngoal (1 subgoal):\n 1. swp_apply s y = y", "by simp"], ["proof (state)\nthis:\n  swp_apply s y = y\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<and> y \\<noteq> b \\<Longrightarrow>\n    swp_apply s y \\<noteq> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  swp_apply s y = y\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "using \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  swp_apply s y = y\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. swp_apply s y \\<noteq> x", "by metis"], ["proof (state)\nthis:\n  swp_apply s y \\<noteq> x\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  swp_apply s y \\<noteq> x\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b \\<Longrightarrow>\n    swp_apply s x \\<noteq> swp_apply s y", "thus ?thesis"], ["proof (prove)\nusing this:\n  swp_apply s y \\<noteq> x\n\ngoal (1 subgoal):\n 1. swp_apply s x \\<noteq> swp_apply s y", "using \\<open>swp_apply s x = x\\<close> \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  swp_apply s y \\<noteq> x\n  swp_apply s x = x\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. swp_apply s x \\<noteq> swp_apply s y", "by metis"], ["proof (state)\nthis:\n  swp_apply s x \\<noteq> swp_apply s y\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  swp_apply s x \\<noteq> swp_apply s y\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_ext_reflexive:\n  shows \"x =p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =p x", "unfolding preprm_ext_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa. preprm_apply x xa = preprm_apply x xa", "by auto"], ["", "corollary preprm_ext_reflp:\n  shows \"reflp preprm_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (=p)", "unfolding reflp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x =p x", "using preprm_ext_reflexive"], ["proof (prove)\nusing this:\n  ?x =p ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x. x =p x", "by auto"], ["", "lemma preprm_ext_symmetric:\n  assumes \"x =p y\"\n  shows \"y =p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y =p x", "using assms"], ["proof (prove)\nusing this:\n  x =p y\n\ngoal (1 subgoal):\n 1. y =p x", "unfolding preprm_ext_def"], ["proof (prove)\nusing this:\n  \\<forall>xa. preprm_apply x xa = preprm_apply y xa\n\ngoal (1 subgoal):\n 1. \\<forall>xa. preprm_apply y xa = preprm_apply x xa", "by auto"], ["", "corollary preprm_ext_symp:\n  shows \"symp preprm_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (=p)", "unfolding symp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. x =p y \\<longrightarrow> y =p x", "using preprm_ext_symmetric"], ["proof (prove)\nusing this:\n  ?x =p ?y \\<Longrightarrow> ?y =p ?x\n\ngoal (1 subgoal):\n 1. \\<forall>x y. x =p y \\<longrightarrow> y =p x", "by auto"], ["", "lemma preprm_ext_transitive:\n  assumes \"x =p y\" and \"y =p z\"\n  shows \"x =p z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =p z", "using assms"], ["proof (prove)\nusing this:\n  x =p y\n  y =p z\n\ngoal (1 subgoal):\n 1. x =p z", "unfolding preprm_ext_def"], ["proof (prove)\nusing this:\n  \\<forall>xa. preprm_apply x xa = preprm_apply y xa\n  \\<forall>x. preprm_apply y x = preprm_apply z x\n\ngoal (1 subgoal):\n 1. \\<forall>xa. preprm_apply x xa = preprm_apply z xa", "by auto"], ["", "corollary preprm_ext_transp:\n  shows \"transp preprm_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (=p)", "unfolding transp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y z. x =p y \\<longrightarrow> y =p z \\<longrightarrow> x =p z", "using preprm_ext_transitive"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x =p ?y; ?y =p ?z\\<rbrakk> \\<Longrightarrow> ?x =p ?z\n\ngoal (1 subgoal):\n 1. \\<forall>x y z. x =p y \\<longrightarrow> y =p z \\<longrightarrow> x =p z", "by auto"], ["", "lemma preprm_apply_composition:\n  shows \"preprm_apply (preprm_compose f g) x = preprm_apply f (preprm_apply g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply (preprm_compose f g) x = preprm_apply f (preprm_apply g x)", "unfolding preprm_compose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply (f @ g) x = preprm_apply f (preprm_apply g x)", "by(induction f, simp_all)"], ["", "lemma preprm_apply_unequal:\n  assumes \"x \\<noteq> y\"\n  shows \"preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y", "proof(induction \\<pi>, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>x \\<noteq> y \\<Longrightarrow>\n                preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> preprm_apply (a # \\<pi>) x \\<noteq>\n                         preprm_apply (a # \\<pi>) y", "case (Cons s ss)"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  preprm_apply ss x \\<noteq> preprm_apply ss y\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>x \\<noteq> y \\<Longrightarrow>\n                preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> preprm_apply (a # \\<pi>) x \\<noteq>\n                         preprm_apply (a # \\<pi>) y", "have  \"preprm_apply (s # ss) x = swp_apply s (preprm_apply ss x)\"\n      and \"preprm_apply (s # ss) y = swp_apply s (preprm_apply ss y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply (s # ss) x = swp_apply s (preprm_apply ss x) &&&\n    preprm_apply (s # ss) y = swp_apply s (preprm_apply ss y)", "by auto"], ["proof (state)\nthis:\n  preprm_apply (s # ss) x = swp_apply s (preprm_apply ss x)\n  preprm_apply (s # ss) y = swp_apply s (preprm_apply ss y)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>x \\<noteq> y \\<Longrightarrow>\n                preprm_apply \\<pi> x \\<noteq> preprm_apply \\<pi> y;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> preprm_apply (a # \\<pi>) x \\<noteq>\n                         preprm_apply (a # \\<pi>) y", "thus ?case"], ["proof (prove)\nusing this:\n  preprm_apply (s # ss) x = swp_apply s (preprm_apply ss x)\n  preprm_apply (s # ss) y = swp_apply s (preprm_apply ss y)\n\ngoal (1 subgoal):\n 1. preprm_apply (s # ss) x \\<noteq> preprm_apply (s # ss) y", "using Cons.IH \\<open>x \\<noteq> y\\<close> swp_apply_unequal"], ["proof (prove)\nusing this:\n  preprm_apply (s # ss) x = swp_apply s (preprm_apply ss x)\n  preprm_apply (s # ss) y = swp_apply s (preprm_apply ss y)\n  x \\<noteq> y \\<Longrightarrow>\n  preprm_apply ss x \\<noteq> preprm_apply ss y\n  x \\<noteq> y\n  ?x \\<noteq> ?y \\<Longrightarrow> swp_apply ?s ?x \\<noteq> swp_apply ?s ?y\n\ngoal (1 subgoal):\n 1. preprm_apply (s # ss) x \\<noteq> preprm_apply (s # ss) y", "by metis"], ["proof (state)\nthis:\n  preprm_apply (s # ss) x \\<noteq> preprm_apply (s # ss) y\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_unit_equal_id:\n  shows \"preprm_unit a a =p preprm_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_unit a a =p preprm_id", "unfolding preprm_ext_def preprm_unit_def preprm_id_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply [(a, a)] x = preprm_apply [] x", "by simp"], ["", "lemma preprm_unit_inaction:\n  assumes \"x \\<noteq> a\" and \"x \\<noteq> b\"\n  shows \"preprm_apply (preprm_unit a b) x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply (preprm_unit a b) x = x", "unfolding preprm_unit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply [(a, b)] x = x", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. preprm_apply [(a, b)] x = x", "by simp"], ["", "lemma preprm_unit_action:\n  shows \"preprm_apply (preprm_unit a b) a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply (preprm_unit a b) a = b", "unfolding preprm_unit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply [(a, b)] a = b", "by simp"], ["", "lemma preprm_unit_commutes:\n  shows \"preprm_unit a b =p preprm_unit b a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_unit a b =p preprm_unit b a", "unfolding preprm_ext_def preprm_unit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply [(a, b)] x = preprm_apply [(b, a)] x", "by simp"], ["", "lemma preprm_singleton_involution:\n  shows \"preprm_compose [s] [s] =p preprm_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose [s] [s] =p preprm_id", "unfolding preprm_ext_def preprm_compose_def preprm_unit_def preprm_id_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x", "obtain s1 s2 where \"s1 = fst s\" \"s2 = snd s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s1 s2.\n        \\<lbrakk>s1 = fst s; s2 = snd s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1 = fst s\n  s2 = snd s\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x", "hence \"s = (s1, s2)\""], ["proof (prove)\nusing this:\n  s1 = fst s\n  s2 = snd s\n\ngoal (1 subgoal):\n 1. s = (s1, s2)", "by simp"], ["proof (state)\nthis:\n  s = (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x", "thus \"\\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x\""], ["proof (prove)\nusing this:\n  s = (s1, s2)\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x. preprm_apply ([s] @ [s]) x = preprm_apply [] x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_unit_involution:\n  shows \"preprm_compose (preprm_unit a b) (preprm_unit a b) =p preprm_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (preprm_unit a b) (preprm_unit a b) =p preprm_id", "unfolding preprm_unit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose [(a, b)] [(a, b)] =p preprm_id", "using preprm_singleton_involution"], ["proof (prove)\nusing this:\n  preprm_compose [?s] [?s] =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose [(a, b)] [(a, b)] =p preprm_id", "."], ["", "lemma preprm_apply_id:\n  shows \"preprm_apply preprm_id x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply preprm_id x = x", "unfolding preprm_id_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_apply [] x = x", "by simp"], ["", "lemma preprm_apply_injective:\n  shows \"inj (preprm_apply \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (preprm_apply \\<pi>)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>UNIV.\n       \\<forall>y\\<in>UNIV.\n          preprm_apply \\<pi> x = preprm_apply \\<pi> y \\<longrightarrow>\n          x = y", "proof(rule+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        preprm_apply \\<pi> x = preprm_apply \\<pi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        preprm_apply \\<pi> x = preprm_apply \\<pi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"preprm_apply \\<pi> x = preprm_apply \\<pi> y\""], ["proof (state)\nthis:\n  preprm_apply \\<pi> x = preprm_apply \\<pi> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> UNIV; y \\<in> UNIV;\n        preprm_apply \\<pi> x = preprm_apply \\<pi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"x = y\""], ["proof (prove)\nusing this:\n  preprm_apply \\<pi> x = preprm_apply \\<pi> y\n\ngoal (1 subgoal):\n 1. x = y", "proof(induction \\<pi>)"], ["proof (state)\ngoal (2 subgoals):\n 1. preprm_apply [] x = preprm_apply [] y \\<Longrightarrow> x = y\n 2. \\<And>a \\<pi>.\n       \\<lbrakk>preprm_apply \\<pi> x =\n                preprm_apply \\<pi> y \\<Longrightarrow>\n                x = y;\n        preprm_apply (a # \\<pi>) x = preprm_apply (a # \\<pi>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "case Nil"], ["proof (state)\nthis:\n  preprm_apply [] x = preprm_apply [] y\n\ngoal (2 subgoals):\n 1. preprm_apply [] x = preprm_apply [] y \\<Longrightarrow> x = y\n 2. \\<And>a \\<pi>.\n       \\<lbrakk>preprm_apply \\<pi> x =\n                preprm_apply \\<pi> y \\<Longrightarrow>\n                x = y;\n        preprm_apply (a # \\<pi>) x = preprm_apply (a # \\<pi>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus ?case"], ["proof (prove)\nusing this:\n  preprm_apply [] x = preprm_apply [] y\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>preprm_apply \\<pi> x =\n                preprm_apply \\<pi> y \\<Longrightarrow>\n                x = y;\n        preprm_apply (a # \\<pi>) x = preprm_apply (a # \\<pi>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>preprm_apply \\<pi> x =\n                preprm_apply \\<pi> y \\<Longrightarrow>\n                x = y;\n        preprm_apply (a # \\<pi>) x = preprm_apply (a # \\<pi>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "case (Cons s ss)"], ["proof (state)\nthis:\n  preprm_apply ss x = preprm_apply ss y \\<Longrightarrow> x = y\n  preprm_apply (s # ss) x = preprm_apply (s # ss) y\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>preprm_apply \\<pi> x =\n                preprm_apply \\<pi> y \\<Longrightarrow>\n                x = y;\n        preprm_apply (a # \\<pi>) x = preprm_apply (a # \\<pi>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"swp_apply s (preprm_apply ss x) = swp_apply s (preprm_apply ss y)\""], ["proof (prove)\nusing this:\n  preprm_apply ss x = preprm_apply ss y \\<Longrightarrow> x = y\n  preprm_apply (s # ss) x = preprm_apply (s # ss) y\n\ngoal (1 subgoal):\n 1. swp_apply s (preprm_apply ss x) = swp_apply s (preprm_apply ss y)", "by auto"], ["proof (state)\nthis:\n  swp_apply s (preprm_apply ss x) = swp_apply s (preprm_apply ss y)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       \\<lbrakk>preprm_apply \\<pi> x =\n                preprm_apply \\<pi> y \\<Longrightarrow>\n                x = y;\n        preprm_apply (a # \\<pi>) x = preprm_apply (a # \\<pi>) y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus ?case"], ["proof (prove)\nusing this:\n  swp_apply s (preprm_apply ss x) = swp_apply s (preprm_apply ss y)\n\ngoal (1 subgoal):\n 1. x = y", "using swp_apply_unequal Cons.IH"], ["proof (prove)\nusing this:\n  swp_apply s (preprm_apply ss x) = swp_apply s (preprm_apply ss y)\n  ?x \\<noteq> ?y \\<Longrightarrow> swp_apply ?s ?x \\<noteq> swp_apply ?s ?y\n  preprm_apply ss x = preprm_apply ss y \\<Longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. x = y", "by metis"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_disagreement_composition:\n  assumes \"a \\<noteq> b\" \"b \\<noteq> c\" \"a \\<noteq> c\"\n  shows \"{x.\n    preprm_apply (preprm_compose (preprm_unit a b) (preprm_unit b c)) x \\<noteq>\n    preprm_apply (preprm_unit a c) x\n  } = {a, b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. preprm_apply (preprm_compose (preprm_unit a b) (preprm_unit b c))\n         x \\<noteq>\n        preprm_apply (preprm_unit a c) x} =\n    {a, b}", "unfolding preprm_unit_def preprm_compose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n        preprm_apply [(a, c)] x} =\n    {a, b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n        preprm_apply [(a, c)] x}\n    \\<subseteq> {a, b}\n 2. {a, b}\n    \\<subseteq> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                    preprm_apply [(a, c)] x}", "show \"{x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x} \\<subseteq> {a, b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n        preprm_apply [(a, c)] x}\n    \\<subseteq> {a, b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x} \\<Longrightarrow>\n       x \\<in> {a, b}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x} \\<Longrightarrow>\n       x \\<in> {a, b}", "have \"x \\<notin> {a, b} \\<Longrightarrow> x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> {a, b} \\<Longrightarrow>\n    x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> {a, b} \\<Longrightarrow>\n    x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "assume \"x \\<notin> {a, b}\""], ["proof (state)\nthis:\n  x \\<notin> {a, b}\n\ngoal (1 subgoal):\n 1. x \\<notin> {a, b} \\<Longrightarrow>\n    x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "hence \"x \\<noteq> a \\<and> x \\<noteq> b\""], ["proof (prove)\nusing this:\n  x \\<notin> {a, b}\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<and> x \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> a \\<and> x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<notin> {a, b} \\<Longrightarrow>\n    x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "hence \"preprm_apply ([(a, b)] @ [(b, c)]) x = preprm_apply [(a, c)] x\""], ["proof (prove)\nusing this:\n  x \\<noteq> a \\<and> x \\<noteq> b\n\ngoal (1 subgoal):\n 1. preprm_apply ([(a, b)] @ [(b, c)]) x = preprm_apply [(a, c)] x", "by simp"], ["proof (state)\nthis:\n  preprm_apply ([(a, b)] @ [(b, c)]) x = preprm_apply [(a, c)] x\n\ngoal (1 subgoal):\n 1. x \\<notin> {a, b} \\<Longrightarrow>\n    x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "thus \"x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x}\""], ["proof (prove)\nusing this:\n  preprm_apply ([(a, b)] @ [(b, c)]) x = preprm_apply [(a, c)] x\n\ngoal (1 subgoal):\n 1. x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "by auto"], ["proof (state)\nthis:\n  x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                 preprm_apply [(a, c)] x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> {a, b} \\<Longrightarrow>\n  x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                 preprm_apply [(a, c)] x}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x} \\<Longrightarrow>\n       x \\<in> {a, b}", "thus \"x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x} \\<Longrightarrow> x \\<in> {a, b}\""], ["proof (prove)\nusing this:\n  x \\<notin> {a, b} \\<Longrightarrow>\n  x \\<notin> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                 preprm_apply [(a, c)] x}\n\ngoal (1 subgoal):\n 1. x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                preprm_apply [(a, c)] x} \\<Longrightarrow>\n    x \\<in> {a, b}", "by blast"], ["proof (state)\nthis:\n  x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n              preprm_apply [(a, c)] x} \\<Longrightarrow>\n  x \\<in> {a, b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x}\n  \\<subseteq> {a, b}\n\ngoal (1 subgoal):\n 1. {a, b}\n    \\<subseteq> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                    preprm_apply [(a, c)] x}", "show \"{a, b} \\<subseteq> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a, b}\n    \\<subseteq> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                    preprm_apply [(a, c)] x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<Longrightarrow>\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<Longrightarrow>\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "assume \"x \\<in> {a, b}\""], ["proof (state)\nthis:\n  x \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<Longrightarrow>\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> {a, b}", "consider \"x = a\" | \"x = b\""], ["proof (prove)\nusing this:\n  x \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = a \\<Longrightarrow> thesis;\n     x = b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = a \\<Longrightarrow> ?thesis;\n   x = b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<Longrightarrow>\n       x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                   preprm_apply [(a, c)] x}", "thus \"x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq> preprm_apply [(a, c)] x}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x = a \\<Longrightarrow> ?thesis;\n   x = b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                preprm_apply [(a, c)] x}", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = a \\<Longrightarrow> ?thesis;\n   x = b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n\ngoal (1 subgoal):\n 1. x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                preprm_apply [(a, c)] x}", "by(cases, simp_all)"], ["proof (state)\nthis:\n  x \\<in> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n              preprm_apply [(a, c)] x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {a, b}\n  \\<subseteq> {x. preprm_apply ([(a, b)] @ [(b, c)]) x \\<noteq>\n                  preprm_apply [(a, c)] x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_compose_push:\n  shows \"\n    preprm_compose \\<pi> (preprm_unit a b) =p\n    preprm_compose (preprm_unit (preprm_apply \\<pi> a) (preprm_apply \\<pi> b)) \\<pi>\n  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> (preprm_unit a b) =p\n    preprm_compose\n     (preprm_unit (preprm_apply \\<pi> a) (preprm_apply \\<pi> b)) \\<pi>", "unfolding preprm_ext_def preprm_unit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply (preprm_compose \\<pi> [(a, b)]) x =\n       preprm_apply\n        (preprm_compose [(preprm_apply \\<pi> a, preprm_apply \\<pi> b)]\n          \\<pi>)\n        x", "by (simp add: inj_eq preprm_apply_composition preprm_apply_injective)"], ["", "lemma preprm_ext_compose_left:\n  assumes \"P =p S\"\n  shows \"preprm_compose \\<pi> P =p preprm_compose \\<pi> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> P =p preprm_compose \\<pi> S", "using assms"], ["proof (prove)\nusing this:\n  P =p S\n\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> P =p preprm_compose \\<pi> S", "unfolding preprm_ext_def"], ["proof (prove)\nusing this:\n  \\<forall>x. preprm_apply P x = preprm_apply S x\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply (preprm_compose \\<pi> P) x =\n       preprm_apply (preprm_compose \\<pi> S) x", "using preprm_apply_composition"], ["proof (prove)\nusing this:\n  \\<forall>x. preprm_apply P x = preprm_apply S x\n  preprm_apply (preprm_compose ?f ?g) ?x =\n  preprm_apply ?f (preprm_apply ?g ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply (preprm_compose \\<pi> P) x =\n       preprm_apply (preprm_compose \\<pi> S) x", "by metis"], ["", "lemma preprm_ext_compose_right:\n  assumes \"P =p S\"\n  shows \"preprm_compose P \\<pi> =p preprm_compose S \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose P \\<pi> =p preprm_compose S \\<pi>", "using assms"], ["proof (prove)\nusing this:\n  P =p S\n\ngoal (1 subgoal):\n 1. preprm_compose P \\<pi> =p preprm_compose S \\<pi>", "unfolding preprm_ext_def"], ["proof (prove)\nusing this:\n  \\<forall>x. preprm_apply P x = preprm_apply S x\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply (preprm_compose P \\<pi>) x =\n       preprm_apply (preprm_compose S \\<pi>) x", "using preprm_apply_composition"], ["proof (prove)\nusing this:\n  \\<forall>x. preprm_apply P x = preprm_apply S x\n  preprm_apply (preprm_compose ?f ?g) ?x =\n  preprm_apply ?f (preprm_apply ?g ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply (preprm_compose P \\<pi>) x =\n       preprm_apply (preprm_compose S \\<pi>) x", "by metis"], ["", "lemma preprm_ext_uncompose:\n  assumes \"\\<pi> =p \\<sigma>\" \"preprm_compose \\<pi> P =p preprm_compose \\<sigma> S\"\n  shows \"P =p S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =p S", "using assms"], ["proof (prove)\nusing this:\n  \\<pi> =p \\<sigma>\n  preprm_compose \\<pi> P =p preprm_compose \\<sigma> S\n\ngoal (1 subgoal):\n 1. P =p S", "unfolding preprm_ext_def"], ["proof (prove)\nusing this:\n  \\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x\n  \\<forall>x.\n     preprm_apply (preprm_compose \\<pi> P) x =\n     preprm_apply (preprm_compose \\<sigma> S) x\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply P x = preprm_apply S x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x;\n     \\<forall>x.\n        preprm_apply (preprm_compose \\<pi> P) x =\n        preprm_apply (preprm_compose \\<sigma> S) x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. preprm_apply P x = preprm_apply S x", "assume *: \"\\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x\""], ["proof (state)\nthis:\n  \\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x;\n     \\<forall>x.\n        preprm_apply (preprm_compose \\<pi> P) x =\n        preprm_apply (preprm_compose \\<sigma> S) x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. preprm_apply P x = preprm_apply S x", "assume \"\\<forall>x. preprm_apply (preprm_compose \\<pi> P) x = preprm_apply (preprm_compose \\<sigma> S) x\""], ["proof (state)\nthis:\n  \\<forall>x.\n     preprm_apply (preprm_compose \\<pi> P) x =\n     preprm_apply (preprm_compose \\<sigma> S) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x;\n     \\<forall>x.\n        preprm_apply (preprm_compose \\<pi> P) x =\n        preprm_apply (preprm_compose \\<sigma> S) x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. preprm_apply P x = preprm_apply S x", "hence \"\\<forall>x. preprm_apply \\<pi> (preprm_apply P x) = preprm_apply \\<sigma> (preprm_apply S x)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply (preprm_compose \\<pi> P) x =\n     preprm_apply (preprm_compose \\<sigma> S) x\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply \\<pi> (preprm_apply P x) =\n       preprm_apply \\<sigma> (preprm_apply S x)", "using preprm_apply_composition"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply (preprm_compose \\<pi> P) x =\n     preprm_apply (preprm_compose \\<sigma> S) x\n  preprm_apply (preprm_compose ?f ?g) ?x =\n  preprm_apply ?f (preprm_apply ?g ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply \\<pi> (preprm_apply P x) =\n       preprm_apply \\<sigma> (preprm_apply S x)", "by metis"], ["proof (state)\nthis:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<sigma> (preprm_apply S x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x;\n     \\<forall>x.\n        preprm_apply (preprm_compose \\<pi> P) x =\n        preprm_apply (preprm_compose \\<sigma> S) x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. preprm_apply P x = preprm_apply S x", "hence \"\\<forall>x. preprm_apply \\<pi> (preprm_apply P x) = preprm_apply \\<pi> (preprm_apply S x)\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<sigma> (preprm_apply S x)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply \\<pi> (preprm_apply P x) =\n       preprm_apply \\<pi> (preprm_apply S x)", "using *"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<sigma> (preprm_apply S x)\n  \\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       preprm_apply \\<pi> (preprm_apply P x) =\n       preprm_apply \\<pi> (preprm_apply S x)", "by metis"], ["proof (state)\nthis:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<pi> (preprm_apply S x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. preprm_apply \\<pi> x = preprm_apply \\<sigma> x;\n     \\<forall>x.\n        preprm_apply (preprm_compose \\<pi> P) x =\n        preprm_apply (preprm_compose \\<sigma> S) x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. preprm_apply P x = preprm_apply S x", "thus \"\\<forall>x. preprm_apply P x = preprm_apply S x\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<pi> (preprm_apply S x)\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply P x = preprm_apply S x", "using preprm_apply_injective"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<pi> (preprm_apply S x)\n  inj (preprm_apply ?\\<pi>)\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply P x = preprm_apply S x", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     preprm_apply \\<pi> (preprm_apply P x) =\n     preprm_apply \\<pi> (preprm_apply S x)\n  \\<forall>x\\<in>UNIV.\n     \\<forall>y\\<in>UNIV.\n        preprm_apply ?\\<pi> x = preprm_apply ?\\<pi> y \\<longrightarrow>\n        x = y\n\ngoal (1 subgoal):\n 1. \\<forall>x. preprm_apply P x = preprm_apply S x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x. preprm_apply P x = preprm_apply S x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_inv_compose:\n  shows \"preprm_compose (preprm_inv \\<pi>) \\<pi> =p preprm_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (preprm_inv \\<pi>) \\<pi> =p preprm_id", "unfolding preprm_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (rev \\<pi>) \\<pi> =p preprm_id", "proof(induction \\<pi>, simp add: preprm_ext_def preprm_id_def preprm_compose_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "case (Cons p ps)"], ["proof (state)\nthis:\n  preprm_compose (rev ps) ps =p preprm_id\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "hence IH: \"(preprm_compose (rev ps) ps) =p preprm_id\""], ["proof (prove)\nusing this:\n  preprm_compose (rev ps) ps =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose (rev ps) ps =p preprm_id", "by auto"], ["proof (state)\nthis:\n  preprm_compose (rev ps) ps =p preprm_id\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "have \"(preprm_compose (rev (p # ps)) (p # ps)) =p (preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (rev (p # ps)) (p # ps) =p\n    preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps)", "unfolding preprm_compose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev (p # ps) @ p # ps) =p (rev ps @ ([p] @ [p]) @ ps)", "using preprm_ext_reflexive"], ["proof (prove)\nusing this:\n  ?x =p ?x\n\ngoal (1 subgoal):\n 1. (rev (p # ps) @ p # ps) =p (rev ps @ ([p] @ [p]) @ ps)", "by simp"], ["proof (state)\nthis:\n  preprm_compose (rev (p # ps)) (p # ps) =p\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "moreover"], ["proof (state)\nthis:\n  preprm_compose (rev (p # ps)) (p # ps) =p\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "have \"... =p (preprm_compose (rev ps) (preprm_compose preprm_id ps))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n    preprm_compose (rev ps) (preprm_compose preprm_id ps)", "using preprm_singleton_involution preprm_ext_compose_left preprm_ext_compose_right"], ["proof (prove)\nusing this:\n  preprm_compose [?s] [?s] =p preprm_id\n  ?P =p ?S \\<Longrightarrow>\n  preprm_compose ?\\<pi> ?P =p preprm_compose ?\\<pi> ?S\n  ?P =p ?S \\<Longrightarrow>\n  preprm_compose ?P ?\\<pi> =p preprm_compose ?S ?\\<pi>\n\ngoal (1 subgoal):\n 1. preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n    preprm_compose (rev ps) (preprm_compose preprm_id ps)", "by metis"], ["proof (state)\nthis:\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n  preprm_compose (rev ps) (preprm_compose preprm_id ps)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "moreover"], ["proof (state)\nthis:\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n  preprm_compose (rev ps) (preprm_compose preprm_id ps)\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "have \"... =p (preprm_compose (rev ps) ps)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (rev ps) (preprm_compose preprm_id ps) =p\n    preprm_compose (rev ps) ps", "unfolding preprm_compose_def preprm_id_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev ps @ [] @ ps) =p (rev ps @ ps)", "using preprm_ext_reflexive"], ["proof (prove)\nusing this:\n  ?x =p ?x\n\ngoal (1 subgoal):\n 1. (rev ps @ [] @ ps) =p (rev ps @ ps)", "by simp"], ["proof (state)\nthis:\n  preprm_compose (rev ps) (preprm_compose preprm_id ps) =p\n  preprm_compose (rev ps) ps\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "moreover"], ["proof (state)\nthis:\n  preprm_compose (rev ps) (preprm_compose preprm_id ps) =p\n  preprm_compose (rev ps) ps\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "have \"... =p preprm_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (rev ps) ps =p preprm_id", "using IH"], ["proof (prove)\nusing this:\n  preprm_compose (rev ps) ps =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose (rev ps) ps =p preprm_id", "."], ["proof (state)\nthis:\n  preprm_compose (rev ps) ps =p preprm_id\n\ngoal (1 subgoal):\n 1. \\<And>a \\<pi>.\n       preprm_compose (rev \\<pi>) \\<pi> =p preprm_id \\<Longrightarrow>\n       preprm_compose (rev (a # \\<pi>)) (a # \\<pi>) =p preprm_id", "ultimately"], ["proof (chain)\npicking this:\n  preprm_compose (rev (p # ps)) (p # ps) =p\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps)\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n  preprm_compose (rev ps) (preprm_compose preprm_id ps)\n  preprm_compose (rev ps) (preprm_compose preprm_id ps) =p\n  preprm_compose (rev ps) ps\n  preprm_compose (rev ps) ps =p preprm_id", "show ?case"], ["proof (prove)\nusing this:\n  preprm_compose (rev (p # ps)) (p # ps) =p\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps)\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n  preprm_compose (rev ps) (preprm_compose preprm_id ps)\n  preprm_compose (rev ps) (preprm_compose preprm_id ps) =p\n  preprm_compose (rev ps) ps\n  preprm_compose (rev ps) ps =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose (rev (p # ps)) (p # ps) =p preprm_id", "using preprm_ext_transitive"], ["proof (prove)\nusing this:\n  preprm_compose (rev (p # ps)) (p # ps) =p\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps)\n  preprm_compose (rev ps) (preprm_compose (preprm_compose [p] [p]) ps) =p\n  preprm_compose (rev ps) (preprm_compose preprm_id ps)\n  preprm_compose (rev ps) (preprm_compose preprm_id ps) =p\n  preprm_compose (rev ps) ps\n  preprm_compose (rev ps) ps =p preprm_id\n  \\<lbrakk>?x =p ?y; ?y =p ?z\\<rbrakk> \\<Longrightarrow> ?x =p ?z\n\ngoal (1 subgoal):\n 1. preprm_compose (rev (p # ps)) (p # ps) =p preprm_id", "by metis"], ["proof (state)\nthis:\n  preprm_compose (rev (p # ps)) (p # ps) =p preprm_id\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["", "lemma preprm_inv_involution:\n  shows \"preprm_inv (preprm_inv \\<pi>) = \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_inv (preprm_inv \\<pi>) = \\<pi>", "unfolding preprm_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (rev \\<pi>) = \\<pi>", "by simp"], ["", "lemma preprm_inv_ext:\n  assumes \"\\<pi> =p \\<sigma>\"\n  shows \"preprm_inv \\<pi> =p preprm_inv \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "have\n    \"(preprm_compose (preprm_inv (preprm_inv \\<pi>)) (preprm_inv \\<pi>)) =p preprm_id\"\n    \"(preprm_compose (preprm_inv (preprm_inv \\<sigma>)) (preprm_inv \\<sigma>)) =p preprm_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preprm_compose (preprm_inv (preprm_inv \\<pi>)) (preprm_inv \\<pi>) =p\n    preprm_id &&&\n    preprm_compose (preprm_inv (preprm_inv \\<sigma>))\n     (preprm_inv \\<sigma>) =p\n    preprm_id", "using preprm_inv_compose"], ["proof (prove)\nusing this:\n  preprm_compose (preprm_inv ?\\<pi>) ?\\<pi> =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose (preprm_inv (preprm_inv \\<pi>)) (preprm_inv \\<pi>) =p\n    preprm_id &&&\n    preprm_compose (preprm_inv (preprm_inv \\<sigma>))\n     (preprm_inv \\<sigma>) =p\n    preprm_id", "by metis+"], ["proof (state)\nthis:\n  preprm_compose (preprm_inv (preprm_inv \\<pi>)) (preprm_inv \\<pi>) =p\n  preprm_id\n  preprm_compose (preprm_inv (preprm_inv \\<sigma>)) (preprm_inv \\<sigma>) =p\n  preprm_id\n\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "hence\n    \"(preprm_compose \\<pi> (preprm_inv \\<pi>)) =p preprm_id\"\n    \"(preprm_compose \\<sigma> (preprm_inv \\<sigma>)) =p preprm_id\""], ["proof (prove)\nusing this:\n  preprm_compose (preprm_inv (preprm_inv \\<pi>)) (preprm_inv \\<pi>) =p\n  preprm_id\n  preprm_compose (preprm_inv (preprm_inv \\<sigma>)) (preprm_inv \\<sigma>) =p\n  preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> (preprm_inv \\<pi>) =p preprm_id &&&\n    preprm_compose \\<sigma> (preprm_inv \\<sigma>) =p preprm_id", "using preprm_inv_involution"], ["proof (prove)\nusing this:\n  preprm_compose (preprm_inv (preprm_inv \\<pi>)) (preprm_inv \\<pi>) =p\n  preprm_id\n  preprm_compose (preprm_inv (preprm_inv \\<sigma>)) (preprm_inv \\<sigma>) =p\n  preprm_id\n  preprm_inv (preprm_inv ?\\<pi>) = ?\\<pi>\n\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> (preprm_inv \\<pi>) =p preprm_id &&&\n    preprm_compose \\<sigma> (preprm_inv \\<sigma>) =p preprm_id", "by metis+"], ["proof (state)\nthis:\n  preprm_compose \\<pi> (preprm_inv \\<pi>) =p preprm_id\n  preprm_compose \\<sigma> (preprm_inv \\<sigma>) =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "hence \"(preprm_compose \\<pi> (preprm_inv \\<pi>)) =p (preprm_compose \\<sigma> (preprm_inv \\<sigma>))\""], ["proof (prove)\nusing this:\n  preprm_compose \\<pi> (preprm_inv \\<pi>) =p preprm_id\n  preprm_compose \\<sigma> (preprm_inv \\<sigma>) =p preprm_id\n\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> (preprm_inv \\<pi>) =p\n    preprm_compose \\<sigma> (preprm_inv \\<sigma>)", "using preprm_ext_transitive preprm_ext_symmetric"], ["proof (prove)\nusing this:\n  preprm_compose \\<pi> (preprm_inv \\<pi>) =p preprm_id\n  preprm_compose \\<sigma> (preprm_inv \\<sigma>) =p preprm_id\n  \\<lbrakk>?x =p ?y; ?y =p ?z\\<rbrakk> \\<Longrightarrow> ?x =p ?z\n  ?x =p ?y \\<Longrightarrow> ?y =p ?x\n\ngoal (1 subgoal):\n 1. preprm_compose \\<pi> (preprm_inv \\<pi>) =p\n    preprm_compose \\<sigma> (preprm_inv \\<sigma>)", "by metis"], ["proof (state)\nthis:\n  preprm_compose \\<pi> (preprm_inv \\<pi>) =p\n  preprm_compose \\<sigma> (preprm_inv \\<sigma>)\n\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "thus \"preprm_inv \\<pi> =p preprm_inv \\<sigma>\""], ["proof (prove)\nusing this:\n  preprm_compose \\<pi> (preprm_inv \\<pi>) =p\n  preprm_compose \\<sigma> (preprm_inv \\<sigma>)\n\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "using preprm_ext_uncompose assms"], ["proof (prove)\nusing this:\n  preprm_compose \\<pi> (preprm_inv \\<pi>) =p\n  preprm_compose \\<sigma> (preprm_inv \\<sigma>)\n  \\<lbrakk>?\\<pi> =p ?\\<sigma>;\n   preprm_compose ?\\<pi> ?P =p preprm_compose ?\\<sigma> ?S\\<rbrakk>\n  \\<Longrightarrow> ?P =p ?S\n  \\<pi> =p \\<sigma>\n\ngoal (1 subgoal):\n 1. preprm_inv \\<pi> =p preprm_inv \\<sigma>", "by metis"], ["proof (state)\nthis:\n  preprm_inv \\<pi> =p preprm_inv \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "quotient_type 'a prm = \"'a preprm\" / preprm_ext"], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (=p)", "proof(rule equivpI)"], ["proof (state)\ngoal (3 subgoals):\n 1. reflp (=p)\n 2. symp (=p)\n 3. transp (=p)", "show \"reflp preprm_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (=p)", "using preprm_ext_reflp"], ["proof (prove)\nusing this:\n  reflp (=p)\n\ngoal (1 subgoal):\n 1. reflp (=p)", "."], ["proof (state)\nthis:\n  reflp (=p)\n\ngoal (2 subgoals):\n 1. symp (=p)\n 2. transp (=p)", "show \"symp preprm_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (=p)", "using preprm_ext_symp"], ["proof (prove)\nusing this:\n  symp (=p)\n\ngoal (1 subgoal):\n 1. symp (=p)", "."], ["proof (state)\nthis:\n  symp (=p)\n\ngoal (1 subgoal):\n 1. transp (=p)", "show \"transp preprm_ext\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (=p)", "using preprm_ext_transp"], ["proof (prove)\nusing this:\n  transp (=p)\n\ngoal (1 subgoal):\n 1. transp (=p)", "."], ["proof (state)\nthis:\n  transp (=p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition prm_id :: \"'a prm\" (\"\\<epsilon>\") is preprm_id"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition prm_apply :: \"'a prm \\<Rightarrow> 'a \\<Rightarrow> 'a\" (infix \"$\" 140) is preprm_apply"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list1 list2.\n       list1 =p list2 \\<Longrightarrow>\n       preprm_apply list1 = preprm_apply list2", "unfolding preprm_ext_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list1 list2.\n       \\<forall>x.\n          preprm_apply list1 x = preprm_apply list2 x \\<Longrightarrow>\n       preprm_apply list1 = preprm_apply list2", "using preprm_apply.simps"], ["proof (prove)\nusing this:\n  preprm_apply [] ?x = ?x\n  preprm_apply (?s # ?ss) ?x = swp_apply ?s (preprm_apply ?ss ?x)\n\ngoal (1 subgoal):\n 1. \\<And>list1 list2.\n       \\<forall>x.\n          preprm_apply list1 x = preprm_apply list2 x \\<Longrightarrow>\n       preprm_apply list1 = preprm_apply list2", "by auto"], ["", "lift_definition prm_compose :: \"'a prm \\<Rightarrow> 'a prm \\<Rightarrow> 'a prm\" (infixr \"\\<diamondop>\" 145) is preprm_compose"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list1 list2 list3 list4.\n       \\<lbrakk>list1 =p list2; list3 =p list4\\<rbrakk>\n       \\<Longrightarrow> preprm_compose list1 list3 =p\n                         preprm_compose list2 list4", "unfolding preprm_ext_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list1 list2 list3 list4.\n       \\<lbrakk>\\<forall>x. preprm_apply list1 x = preprm_apply list2 x;\n        \\<forall>x. preprm_apply list3 x = preprm_apply list4 x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            preprm_apply (preprm_compose list1 list3) x =\n                            preprm_apply (preprm_compose list2 list4) x", "by(simp only: preprm_apply_composition, simp)"], ["", "lift_definition prm_unit :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a prm\" (\"[_ \\<leftrightarrow> _]\") is preprm_unit"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition prm_inv :: \"'a prm \\<Rightarrow> 'a prm\" is preprm_inv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list1 list2.\n       list1 =p list2 \\<Longrightarrow> preprm_inv list1 =p preprm_inv list2", "using preprm_inv_ext"], ["proof (prove)\nusing this:\n  ?\\<pi> =p ?\\<sigma> \\<Longrightarrow>\n  preprm_inv ?\\<pi> =p preprm_inv ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>list1 list2.\n       list1 =p list2 \\<Longrightarrow> preprm_inv list1 =p preprm_inv list2", "."], ["", "lemma prm_apply_composition:\n  fixes f g :: \"'a prm\" and x :: 'a\n  shows \"f \\<diamondop> g $ x = f $ (g $ x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<diamondop> g $ x = f $ (g $ x)", "by(transfer, metis preprm_apply_composition)"], ["", "lemma prm_apply_unequal:\n  fixes \\<pi> :: \"'a prm\" and x y :: 'a\n  assumes \"x \\<noteq> y\"\n  shows \"\\<pi> $ x \\<noteq> \\<pi> $ y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<noteq> \\<pi> $ y", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<noteq> \\<pi> $ y", "by (transfer, metis preprm_apply_unequal)"], ["", "lemma prm_unit_equal_id:\n  fixes a :: 'a\n  shows \"[a \\<leftrightarrow> a] = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> a] = \\<epsilon>", "by (transfer, metis preprm_unit_equal_id)"], ["", "lemma prm_unit_inaction:\n  fixes a b x :: 'a\n  assumes \"x \\<noteq> a\" and \"x \\<noteq> b\"\n  shows \"[a \\<leftrightarrow> b] $ x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] $ x = x", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] $ x = x", "by (transfer, metis preprm_unit_inaction)"], ["", "lemma prm_unit_action:\n  fixes a b :: 'a\n  shows \"[a \\<leftrightarrow> b] $ a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] $ a = b", "by (transfer, metis preprm_unit_action)"], ["", "lemma prm_unit_commutes:\n  fixes a b :: 'a\n  shows \"[a \\<leftrightarrow> b] = [b \\<leftrightarrow> a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] = [b \\<leftrightarrow> a]", "by (transfer, metis preprm_unit_commutes)"], ["", "lemma prm_unit_involution:\n  fixes a b :: 'a\n  shows \"[a \\<leftrightarrow> b] \\<diamondop> [a \\<leftrightarrow> b] = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] \\<diamondop> [a \\<leftrightarrow> b] =\n    \\<epsilon>", "by (transfer, metis preprm_unit_involution)"], ["", "lemma prm_apply_id:\n  fixes x :: 'a\n  shows \"\\<epsilon> $ x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> $ x = x", "by(transfer, metis preprm_apply_id)"], ["", "lemma prm_apply_injective:\n  shows \"inj (prm_apply \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (($) \\<pi>)", "by(transfer, metis preprm_apply_injective)"], ["", "lemma prm_inv_compose:\n  shows \"(prm_inv \\<pi>) \\<diamondop> \\<pi> = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prm_inv \\<pi> \\<diamondop> \\<pi> = \\<epsilon>", "by(transfer, metis preprm_inv_compose)"], ["", "interpretation \"'a prm\": semigroup prm_compose"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>)", "unfolding semigroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b c.\n       (a \\<diamondop> b) \\<diamondop> c = a \\<diamondop> b \\<diamondop> c", "by(transfer, simp add: preprm_compose_def preprm_ext_def)"], ["", "interpretation \"'a prm\": group prm_compose prm_id prm_inv"], ["proof (prove)\ngoal (1 subgoal):\n 1. group (\\<diamondop>) \\<epsilon> prm_inv", "unfolding group_def group_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "have \"semigroup (\\<diamondop>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>)", "using \"'a prm.semigroup_axioms\""], ["proof (prove)\nusing this:\n  semigroup (\\<diamondop>)\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>)", "."], ["proof (state)\nthis:\n  semigroup (\\<diamondop>)\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "moreover"], ["proof (state)\nthis:\n  semigroup (\\<diamondop>)\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "have \"\\<forall>a. \\<epsilon> \\<diamondop> a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. \\<epsilon> \\<diamondop> a = a", "by(transfer, simp add: preprm_id_def preprm_compose_def preprm_ext_def)"], ["proof (state)\nthis:\n  \\<forall>a. \\<epsilon> \\<diamondop> a = a\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "moreover"], ["proof (state)\nthis:\n  \\<forall>a. \\<epsilon> \\<diamondop> a = a\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "have \"\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>", "using prm_inv_compose"], ["proof (prove)\nusing this:\n  prm_inv ?\\<pi> \\<diamondop> ?\\<pi> = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  \\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "ultimately"], ["proof (chain)\npicking this:\n  semigroup (\\<diamondop>)\n  \\<forall>a. \\<epsilon> \\<diamondop> a = a\n  \\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>", "show \"semigroup (\\<diamondop>) \\<and> (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and> (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)\""], ["proof (prove)\nusing this:\n  semigroup (\\<diamondop>)\n  \\<forall>a. \\<epsilon> \\<diamondop> a = a\n  \\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>\n\ngoal (1 subgoal):\n 1. semigroup (\\<diamondop>) \\<and>\n    (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n    (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)", "by blast"], ["proof (state)\nthis:\n  semigroup (\\<diamondop>) \\<and>\n  (\\<forall>a. \\<epsilon> \\<diamondop> a = a) \\<and>\n  (\\<forall>a. prm_inv a \\<diamondop> a = \\<epsilon>)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition prm_set :: \"'a prm \\<Rightarrow> 'a set \\<Rightarrow> 'a set\" (infix \"{$}\" 140) where\n  \"prm_set \\<pi> S \\<equiv> image (prm_apply \\<pi>) S\""], ["", "lemma prm_set_apply_compose:\n  shows \"\\<pi> {$} (\\<sigma> {$} S) = (\\<pi> \\<diamondop> \\<sigma>) {$} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> {$} (\\<sigma> {$} S) = \\<pi> \\<diamondop> \\<sigma> {$} S", "unfolding prm_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "have \"($) \\<pi> ` ($) \\<sigma> ` S = (\\<lambda>x. \\<pi> $ x) ` (\\<lambda>x. \\<sigma> $ x) ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) \\<pi> ` ($) \\<sigma> ` S", "by simp"], ["proof (state)\nthis:\n  ($) \\<pi> ` ($) \\<sigma> ` S = ($) \\<pi> ` ($) \\<sigma> ` S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "moreover"], ["proof (state)\nthis:\n  ($) \\<pi> ` ($) \\<sigma> ` S = ($) \\<pi> ` ($) \\<sigma> ` S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "have \"... = (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S", "by auto"], ["proof (state)\nthis:\n  ($) \\<pi> ` ($) \\<sigma> ` S = (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "moreover"], ["proof (state)\nthis:\n  ($) \\<pi> ` ($) \\<sigma> ` S = (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "have \"... = (\\<lambda>x. (\\<pi> \\<diamondop> \\<sigma>) $ x) ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S =\n    ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "using prm_apply_composition"], ["proof (prove)\nusing this:\n  ?f \\<diamondop> ?g $ ?x = ?f $ (?g $ ?x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S =\n    ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "by metis"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S =\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S =\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "have \"... = (\\<pi> \\<diamondop> \\<sigma>) {$} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) (\\<pi> \\<diamondop> \\<sigma>) ` S =\n    \\<pi> \\<diamondop> \\<sigma> {$} S", "using prm_set_def"], ["proof (prove)\nusing this:\n  ?\\<pi> {$} ?S \\<equiv> ($) ?\\<pi> ` ?S\n\ngoal (1 subgoal):\n 1. ($) (\\<pi> \\<diamondop> \\<sigma>) ` S =\n    \\<pi> \\<diamondop> \\<sigma> {$} S", "by metis"], ["proof (state)\nthis:\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S = \\<pi> \\<diamondop> \\<sigma> {$} S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "ultimately"], ["proof (chain)\npicking this:\n  ($) \\<pi> ` ($) \\<sigma> ` S = ($) \\<pi> ` ($) \\<sigma> ` S\n  ($) \\<pi> ` ($) \\<sigma> ` S = (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S\n  (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S =\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S = \\<pi> \\<diamondop> \\<sigma> {$} S", "show \"($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S\""], ["proof (prove)\nusing this:\n  ($) \\<pi> ` ($) \\<sigma> ` S = ($) \\<pi> ` ($) \\<sigma> ` S\n  ($) \\<pi> ` ($) \\<sigma> ` S = (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S\n  (\\<lambda>x. \\<pi> $ (\\<sigma> $ x)) ` S =\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S\n  ($) (\\<pi> \\<diamondop> \\<sigma>) ` S = \\<pi> \\<diamondop> \\<sigma> {$} S\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S", "by metis"], ["proof (state)\nthis:\n  ($) \\<pi> ` ($) \\<sigma> ` S = ($) (\\<pi> \\<diamondop> \\<sigma>) ` S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prm_set_membership:\n  assumes \"x \\<in> S\"\n  shows \"\\<pi> $ x \\<in> \\<pi> {$} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<in> \\<pi> {$} S", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<in> \\<pi> {$} S", "unfolding prm_set_def"], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<in> ($) \\<pi> ` S", "by simp"], ["", "lemma prm_set_notmembership:\n  assumes \"x \\<notin> S\"\n  shows \"\\<pi> $ x \\<notin> \\<pi> {$} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<notin> \\<pi> {$} S", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<notin> \\<pi> {$} S", "unfolding prm_set_def"], ["proof (prove)\nusing this:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<pi> $ x \\<notin> ($) \\<pi> ` S", "by (simp add: inj_image_mem_iff prm_apply_injective)"], ["", "lemma prm_set_singleton:\n  shows \"\\<pi> {$} {x} = {\\<pi> $ x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> {$} {x} = {\\<pi> $ x}", "unfolding prm_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` {x} = {\\<pi> $ x}", "by auto"], ["", "lemma prm_set_id:\n  shows \"\\<epsilon> {$} S = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> {$} S = S", "unfolding prm_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "have \"($) \\<epsilon> ` S = (\\<lambda>x. \\<epsilon> $ x) ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = ($) \\<epsilon> ` S", "by simp"], ["proof (state)\nthis:\n  ($) \\<epsilon> ` S = ($) \\<epsilon> ` S\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "moreover"], ["proof (state)\nthis:\n  ($) \\<epsilon> ` S = ($) \\<epsilon> ` S\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "have \"... = (\\<lambda>x. x) ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = (\\<lambda>x. x) ` S", "using prm_apply_id"], ["proof (prove)\nusing this:\n  \\<epsilon> $ ?x = ?x\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = (\\<lambda>x. x) ` S", "by metis"], ["proof (state)\nthis:\n  ($) \\<epsilon> ` S = (\\<lambda>x. x) ` S\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "moreover"], ["proof (state)\nthis:\n  ($) \\<epsilon> ` S = (\\<lambda>x. x) ` S\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "have \"... = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) ` S = S", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. x) ` S = S\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "ultimately"], ["proof (chain)\npicking this:\n  ($) \\<epsilon> ` S = ($) \\<epsilon> ` S\n  ($) \\<epsilon> ` S = (\\<lambda>x. x) ` S\n  (\\<lambda>x. x) ` S = S", "show \"($) \\<epsilon> ` S = S\""], ["proof (prove)\nusing this:\n  ($) \\<epsilon> ` S = ($) \\<epsilon> ` S\n  ($) \\<epsilon> ` S = (\\<lambda>x. x) ` S\n  (\\<lambda>x. x) ` S = S\n\ngoal (1 subgoal):\n 1. ($) \\<epsilon> ` S = S", "by metis"], ["proof (state)\nthis:\n  ($) \\<epsilon> ` S = S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prm_set_unit_inaction:\n  assumes \"a \\<notin> S\" and \"b \\<notin> S\"\n  shows \"[a \\<leftrightarrow> b] {$} S = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] {$} S = S", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [a \\<leftrightarrow> b] {$} S \\<subseteq> S\n 2. S \\<subseteq> [a \\<leftrightarrow> b] {$} S", "show \"[a \\<leftrightarrow> b] {$} S \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] {$} S \\<subseteq> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "assume H: \"x \\<in> [a \\<leftrightarrow> b] {$} S\""], ["proof (state)\nthis:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "from this"], ["proof (chain)\npicking this:\n  x \\<in> [a \\<leftrightarrow> b] {$} S", "obtain y where \"x = [a \\<leftrightarrow> b] $ y\""], ["proof (prove)\nusing this:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = [a \\<leftrightarrow> b] $ y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding prm_set_def"], ["proof (prove)\nusing this:\n  x \\<in> ($) [a \\<leftrightarrow> b] ` S\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = [a \\<leftrightarrow> b] $ y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using imageE"], ["proof (prove)\nusing this:\n  x \\<in> ($) [a \\<leftrightarrow> b] ` S\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = [a \\<leftrightarrow> b] $ y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "hence \"y \\<in> S\""], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. y \\<in> S", "using H inj_image_mem_iff prm_apply_injective prm_set_def"], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ y\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n  inj ?f \\<Longrightarrow> (?f ?a \\<in> ?f ` ?A) = (?a \\<in> ?A)\n  inj (($) ?\\<pi>)\n  ?\\<pi> {$} ?S \\<equiv> ($) ?\\<pi> ` ?S\n\ngoal (1 subgoal):\n 1. y \\<in> S", "by metis"], ["proof (state)\nthis:\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "hence \"y \\<noteq> a\" and \"y \\<noteq> b\""], ["proof (prove)\nusing this:\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. y \\<noteq> a &&& y \\<noteq> b", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> S\n  a \\<notin> S\n  b \\<notin> S\n\ngoal (1 subgoal):\n 1. y \\<noteq> a &&& y \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> a\n  y \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "hence \"x = y\""], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  y \\<noteq> b\n\ngoal (1 subgoal):\n 1. x = y", "using prm_unit_inaction \\<open>x = [a \\<leftrightarrow> b] $ y\\<close>"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  y \\<noteq> b\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. x = y", "by metis"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow> x \\<in> S", "thus \"x \\<in> S\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x \\<in> S", "using \\<open>y \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  x = y\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<in> S", "by auto"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [a \\<leftrightarrow> b] {$} S \\<subseteq> S\n\ngoal (1 subgoal):\n 1. S \\<subseteq> [a \\<leftrightarrow> b] {$} S", "show \"S \\<subseteq> [a \\<leftrightarrow> b] {$} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> [a \\<leftrightarrow> b] {$} S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "assume H: \"x \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "hence \"x \\<noteq> a\" and \"x \\<noteq> b\""], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<noteq> a &&& x \\<noteq> b", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> S\n  a \\<notin> S\n  b \\<notin> S\n\ngoal (1 subgoal):\n 1. x \\<noteq> a &&& x \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "hence \"x = [a \\<leftrightarrow> b] $ x\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x = [a \\<leftrightarrow> b] $ x", "using prm_unit_inaction"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<noteq> b\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n\ngoal (1 subgoal):\n 1. x = [a \\<leftrightarrow> b] $ x", "by metis"], ["proof (state)\nthis:\n  x = [a \\<leftrightarrow> b] $ x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "thus \"x \\<in> [a \\<leftrightarrow> b] {$} S\""], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ x\n\ngoal (1 subgoal):\n 1. x \\<in> [a \\<leftrightarrow> b] {$} S", "unfolding prm_set_def"], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ x\n\ngoal (1 subgoal):\n 1. x \\<in> ($) [a \\<leftrightarrow> b] ` S", "using H"], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ x\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<in> ($) [a \\<leftrightarrow> b] ` S", "by simp"], ["proof (state)\nthis:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S \\<subseteq> [a \\<leftrightarrow> b] {$} S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prm_set_unit_action:\n  assumes \"a \\<in> S\" and \"b \\<notin> S\"\n  shows \"[a \\<leftrightarrow> b] {$} S = S - {a} \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] {$} S = S - {a} \\<union> {b}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. [a \\<leftrightarrow> b] {$} S \\<subseteq> S - {a} \\<union> {b}\n 2. S - {a} \\<union> {b} \\<subseteq> [a \\<leftrightarrow> b] {$} S", "show \"[a \\<leftrightarrow> b] {$} S \\<subseteq> S - {a} \\<union> {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [a \\<leftrightarrow> b] {$} S \\<subseteq> S - {a} \\<union> {b}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "assume H: \"x \\<in> [a \\<leftrightarrow> b] {$} S\""], ["proof (state)\nthis:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> [a \\<leftrightarrow> b] {$} S", "obtain y where \"x = [a \\<leftrightarrow> b] $ y\""], ["proof (prove)\nusing this:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = [a \\<leftrightarrow> b] $ y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding prm_set_def"], ["proof (prove)\nusing this:\n  x \\<in> ($) [a \\<leftrightarrow> b] ` S\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = [a \\<leftrightarrow> b] $ y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using imageE"], ["proof (prove)\nusing this:\n  x \\<in> ($) [a \\<leftrightarrow> b] ` S\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        x = [a \\<leftrightarrow> b] $ y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "hence \"y \\<in> S\""], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. y \\<in> S", "using H inj_image_mem_iff prm_apply_injective prm_set_def"], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ y\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n  inj ?f \\<Longrightarrow> (?f ?a \\<in> ?f ` ?A) = (?a \\<in> ?A)\n  inj (($) ?\\<pi>)\n  ?\\<pi> {$} ?S \\<equiv> ($) ?\\<pi> ` ?S\n\ngoal (1 subgoal):\n 1. y \\<in> S", "by metis"], ["proof (state)\nthis:\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "hence \"y \\<noteq> b\""], ["proof (prove)\nusing this:\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. y \\<noteq> b", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> S\n  a \\<in> S\n  b \\<notin> S\n\ngoal (1 subgoal):\n 1. y \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  y \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "consider \"y = a\" | \"y \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = a \\<Longrightarrow> thesis;\n     y \\<noteq> a \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>y = a \\<Longrightarrow> ?thesis;\n   y \\<noteq> a \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> [a \\<leftrightarrow> b] {$} S \\<Longrightarrow>\n       x \\<in> S - {a} \\<union> {b}", "thus \"x \\<in> S - {a} \\<union> {b}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>y = a \\<Longrightarrow> ?thesis;\n   y \\<noteq> a \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<in> S - {a} \\<union> {b}", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. y = a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}\n 2. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "case 1"], ["proof (state)\nthis:\n  y = a\n\ngoal (2 subgoals):\n 1. y = a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}\n 2. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "hence \"x = b\""], ["proof (prove)\nusing this:\n  y = a\n\ngoal (1 subgoal):\n 1. x = b", "using \\<open>x = [a \\<leftrightarrow> b] $ y\\<close>"], ["proof (prove)\nusing this:\n  y = a\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. x = b", "using prm_unit_action"], ["proof (prove)\nusing this:\n  y = a\n  x = [a \\<leftrightarrow> b] $ y\n  [?a \\<leftrightarrow> ?b] $ ?a = ?b\n\ngoal (1 subgoal):\n 1. x = b", "by metis"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. y = a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}\n 2. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = b\n\ngoal (1 subgoal):\n 1. x \\<in> S - {a} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> S - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "case 2"], ["proof (state)\nthis:\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "hence \"x = y\""], ["proof (prove)\nusing this:\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. x = y", "using \\<open>x = [a \\<leftrightarrow> b] $ y\\<close>"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  x = [a \\<leftrightarrow> b] $ y\n\ngoal (1 subgoal):\n 1. x = y", "using prm_unit_inaction \\<open>y \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  y \\<noteq> a\n  x = [a \\<leftrightarrow> b] $ y\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n  y \\<noteq> b\n\ngoal (1 subgoal):\n 1. x = y", "by metis"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "hence \"x \\<in> S\" and \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. x \\<in> S &&& x \\<noteq> a", "using \\<open>y \\<in> S\\<close> \\<open>y \\<noteq> a\\<close>"], ["proof (prove)\nusing this:\n  x = y\n  y \\<in> S\n  y \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<in> S &&& x \\<noteq> a", "by auto"], ["proof (state)\nthis:\n  x \\<in> S\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. y \\<noteq> a \\<Longrightarrow> x \\<in> S - {a} \\<union> {b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> S\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<in> S - {a} \\<union> {b}", "by auto"], ["proof (state)\nthis:\n  x \\<in> S - {a} \\<union> {b}\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> S - {a} \\<union> {b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [a \\<leftrightarrow> b] {$} S \\<subseteq> S - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. S - {a} \\<union> {b} \\<subseteq> [a \\<leftrightarrow> b] {$} S", "show \"S - {a} \\<union> {b} \\<subseteq> [a \\<leftrightarrow> b] {$} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S - {a} \\<union> {b} \\<subseteq> [a \\<leftrightarrow> b] {$} S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S - {a} \\<union> {b} \\<Longrightarrow>\n       x \\<in> [a \\<leftrightarrow> b] {$} S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S - {a} \\<union> {b} \\<Longrightarrow>\n       x \\<in> [a \\<leftrightarrow> b] {$} S", "assume H: \"x \\<in> S - {a} \\<union> {b}\""], ["proof (state)\nthis:\n  x \\<in> S - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S - {a} \\<union> {b} \\<Longrightarrow>\n       x \\<in> [a \\<leftrightarrow> b] {$} S", "hence \"x \\<noteq> a\""], ["proof (prove)\nusing this:\n  x \\<in> S - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> S - {a} \\<union> {b}\n  a \\<in> S\n  b \\<notin> S\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S - {a} \\<union> {b} \\<Longrightarrow>\n       x \\<in> [a \\<leftrightarrow> b] {$} S", "consider \"x = b\" | \"x \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = b \\<Longrightarrow> thesis;\n     x \\<noteq> b \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>x = b \\<Longrightarrow> ?thesis;\n   x \\<noteq> b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S - {a} \\<union> {b} \\<Longrightarrow>\n       x \\<in> [a \\<leftrightarrow> b] {$} S", "thus \"x \\<in> [a \\<leftrightarrow> b] {$} S\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x = b \\<Longrightarrow> ?thesis;\n   x \\<noteq> b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. x \\<in> [a \\<leftrightarrow> b] {$} S", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "case 1"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "hence \"x = [a \\<leftrightarrow> b] $ a\""], ["proof (prove)\nusing this:\n  x = b\n\ngoal (1 subgoal):\n 1. x = [a \\<leftrightarrow> b] $ a", "using prm_unit_action"], ["proof (prove)\nusing this:\n  x = b\n  [?a \\<leftrightarrow> ?b] $ ?a = ?b\n\ngoal (1 subgoal):\n 1. x = [a \\<leftrightarrow> b] $ a", "by metis"], ["proof (state)\nthis:\n  x = [a \\<leftrightarrow> b] $ a\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ a\n\ngoal (1 subgoal):\n 1. x \\<in> [a \\<leftrightarrow> b] {$} S", "using \\<open>a \\<in> S\\<close> prm_set_membership"], ["proof (prove)\nusing this:\n  x = [a \\<leftrightarrow> b] $ a\n  a \\<in> S\n  ?x \\<in> ?S \\<Longrightarrow> ?\\<pi> $ ?x \\<in> ?\\<pi> {$} ?S\n\ngoal (1 subgoal):\n 1. x \\<in> [a \\<leftrightarrow> b] {$} S", "by metis"], ["proof (state)\nthis:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "hence \"x \\<in> S\""], ["proof (prove)\nusing this:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<in> S", "using H"], ["proof (prove)\nusing this:\n  x \\<noteq> b\n  x \\<in> S - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. x \\<in> S", "by auto"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "moreover"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "have \"x = [a \\<leftrightarrow> b] $ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [a \\<leftrightarrow> b] $ x", "using prm_unit_inaction \\<open>x \\<noteq> a\\<close> \\<open>x \\<noteq> b\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<noteq> ?a; ?x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> [?a \\<leftrightarrow> ?b] $ ?x = ?x\n  x \\<noteq> a\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x = [a \\<leftrightarrow> b] $ x", "by metis"], ["proof (state)\nthis:\n  x = [a \\<leftrightarrow> b] $ x\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> [a \\<leftrightarrow> b] {$} S", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> S\n  x = [a \\<leftrightarrow> b] $ x", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> S\n  x = [a \\<leftrightarrow> b] $ x\n\ngoal (1 subgoal):\n 1. x \\<in> [a \\<leftrightarrow> b] {$} S", "using prm_set_membership"], ["proof (prove)\nusing this:\n  x \\<in> S\n  x = [a \\<leftrightarrow> b] $ x\n  ?x \\<in> ?S \\<Longrightarrow> ?\\<pi> $ ?x \\<in> ?\\<pi> {$} ?S\n\ngoal (1 subgoal):\n 1. x \\<in> [a \\<leftrightarrow> b] {$} S", "by metis"], ["proof (state)\nthis:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal:\nNo subgoals!", "next"], ["proof (state)\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> [a \\<leftrightarrow> b] {$} S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S - {a} \\<union> {b} \\<subseteq> [a \\<leftrightarrow> b] {$} S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prm_set_distributes_union:\n  shows \"\\<pi> {$} (S \\<union> T) = (\\<pi> {$} S) \\<union> (\\<pi> {$} T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> {$} (S \\<union> T) = \\<pi> {$} S \\<union> \\<pi> {$} T", "unfolding prm_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` (S \\<union> T) = ($) \\<pi> ` S \\<union> ($) \\<pi> ` T", "by auto"], ["", "lemma prm_set_distributes_difference:\n  shows \"\\<pi> {$} (S - T) = (\\<pi> {$} S) - (\\<pi> {$} T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> {$} (S - T) = \\<pi> {$} S - \\<pi> {$} T", "unfolding prm_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ($) \\<pi> ` (S - T) = ($) \\<pi> ` S - ($) \\<pi> ` T", "using prm_apply_injective image_set_diff"], ["proof (prove)\nusing this:\n  inj (($) ?\\<pi>)\n  inj ?f \\<Longrightarrow> ?f ` (?A - ?B) = ?f ` ?A - ?f ` ?B\n\ngoal (1 subgoal):\n 1. ($) \\<pi> ` (S - T) = ($) \\<pi> ` S - ($) \\<pi> ` T", "by metis"], ["", "definition prm_disagreement :: \"'a prm \\<Rightarrow> 'a prm \\<Rightarrow> 'a set\" (\"ds\") where\n  \"prm_disagreement \\<pi> \\<sigma> \\<equiv> {x. \\<pi> $ x \\<noteq> \\<sigma> $ x}\""], ["", "lemma prm_disagreement_ext:\n  shows \"x \\<in> ds \\<pi> \\<sigma> \\<equiv> \\<pi> $ x \\<noteq> \\<sigma> $ x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ds \\<pi> \\<sigma> \\<equiv> \\<pi> $ x \\<noteq> \\<sigma> $ x", "unfolding prm_disagreement_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<pi> $ x \\<noteq> \\<sigma> $ x} \\<equiv>\n    \\<pi> $ x \\<noteq> \\<sigma> $ x", "by simp"], ["", "lemma prm_disagreement_composition:\n  assumes \"a \\<noteq> b\" \"b \\<noteq> c\" \"a \\<noteq> c\"\n  shows \"ds ([a \\<leftrightarrow> b] \\<diamondop> [b \\<leftrightarrow> c]) [a \\<leftrightarrow> c] = {a, b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ds ([a \\<leftrightarrow> b] \\<diamondop> [b \\<leftrightarrow> c])\n     [a \\<leftrightarrow> c] =\n    {a, b}", "using assms"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n\ngoal (1 subgoal):\n 1. ds ([a \\<leftrightarrow> b] \\<diamondop> [b \\<leftrightarrow> c])\n     [a \\<leftrightarrow> c] =\n    {a, b}", "unfolding prm_disagreement_def"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  b \\<noteq> c\n  a \\<noteq> c\n\ngoal (1 subgoal):\n 1. {x. [a \\<leftrightarrow> b] \\<diamondop> [b \\<leftrightarrow> c] $\n        x \\<noteq>\n        [a \\<leftrightarrow> c] $ x} =\n    {a, b}", "by(transfer, metis preprm_disagreement_composition)"], ["", "lemma prm_compose_push:\n  shows \"\\<pi> \\<diamondop> [a \\<leftrightarrow> b] = [\\<pi> $ a \\<leftrightarrow> \\<pi> $ b] \\<diamondop> \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<diamondop> [a \\<leftrightarrow> b] =\n    [\\<pi> $ a \\<leftrightarrow> \\<pi> $ b] \\<diamondop> \\<pi>", "by(transfer, metis preprm_compose_push)"], ["", "end"]]}