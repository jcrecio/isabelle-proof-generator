{"file_name": "/home/qj213/afp-2021-10-22/thys/Planarity_Certificates/Planarity/Permutations_2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Planarity_Certificates", "problem_names": ["lemma perm_swap_id[simp]: \"perm_swap a b id = id\"", "lemma perm_rem_permutes:\n  assumes \"f permutes S \\<union> {x}\"\n  shows \"perm_rem x f permutes S\"", "lemma perm_rem_same:\n  assumes \"bij f\" \"f y = y\" shows \"perm_rem x f y = f y\"", "lemma perm_rem_simps:\n  assumes \"bij f\"\n  shows\n  \"x = y \\<Longrightarrow> perm_rem x f y = x\"\n  \"f y = x \\<Longrightarrow> perm_rem x f y = f x\"\n  \"y \\<noteq> x \\<Longrightarrow> f y \\<noteq> x \\<Longrightarrow> perm_rem x f y = f y\"", "lemma bij_swap_compose: \"bij (x \\<rightleftharpoons>\\<^sub>F y o f) \\<longleftrightarrow> bij f\"", "lemma bij_perm_rem[simp]: \"bij (perm_rem x f) \\<longleftrightarrow> bij f\"", "lemma perm_rem_conv: \"\\<And>f x y. bij f \\<Longrightarrow> perm_rem x f y = (\n    if x = y then x\n    else if f y = x then f (f y)\n    else f y)\"", "lemma perm_rem_commutes:\n  assumes \"bij f\" shows \"perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)\"", "lemma perm_rem_id[simp]: \"perm_rem a id = id\"", "lemma bij_eq_iff:\n  assumes \"bij f\" shows \"f x = f y \\<longleftrightarrow> x = y\"", "lemma swap_swap_id[simp]: \"(x \\<rightleftharpoons>\\<^sub>F y) ((x \\<rightleftharpoons>\\<^sub>F y) z) = z\"", "lemma in_funswapid_image_iff: \"\\<And>a b x S. x \\<in> (a \\<rightleftharpoons>\\<^sub>F b) ` S \\<longleftrightarrow> (a \\<rightleftharpoons>\\<^sub>F b) x \\<in> S\"", "lemma perm_swap_comp: \"perm_swap a b (f \\<circ> g) x = perm_swap a b f (perm_swap a b g x)\"", "lemma bij_perm_swap_iff[simp]: \"bij (perm_swap a b f) \\<longleftrightarrow> bij f\"", "lemma funpow_perm_swap: \"perm_swap a b f ^^ n = perm_swap a b (f ^^ n)\"", "lemma orbit_perm_swap: \"orbit (perm_swap a b f) x = (a \\<rightleftharpoons>\\<^sub>F b) ` orbit f ((a \\<rightleftharpoons>\\<^sub>F b) x)\"", "lemma has_dom_perm_swap: \"has_dom (perm_swap a b f) S = has_dom f ((a \\<rightleftharpoons>\\<^sub>F b) ` S)\"", "lemma perm_restrict_dom_subset:\n  assumes \"has_dom f A\" shows \"perm_restrict f A = f\"", "lemma has_domD: \"has_dom f S \\<Longrightarrow> x \\<notin> S \\<Longrightarrow> f x = x\"", "lemma has_domI: \"(\\<And>x. x \\<notin> S \\<Longrightarrow> f x = x) \\<Longrightarrow> has_dom f S\"", "lemma perm_swap_permutes2:\n  assumes \"f permutes ((x \\<rightleftharpoons>\\<^sub>F y) ` S)\"\n  shows \"perm_swap x y f permutes S\"", "lemma cyclic_on_perm_swap:\n  assumes \"cyclic_on f S\" shows \"cyclic_on (perm_swap x y f) ((x \\<rightleftharpoons>\\<^sub>F y) ` S)\"", "lemma orbit_perm_rem:\n  assumes \"bij f\" \"x \\<noteq> y\" shows \"orbit (perm_rem y f) x = orbit f x - {y}\" (is \"?L = ?R\")", "lemma orbit_perm_rem_eq:\n  assumes \"bij f\" shows \"orbit (perm_rem y f) x = (if x = y then {y} else orbit f x - {y})\"", "lemma cyclic_on_perm_rem:\n  assumes \"cyclic_on f S\" \"bij f\" \"S \\<noteq> {x}\" shows \"cyclic_on (perm_rem x f) (S - {x})\""], "translations": [["", "lemma perm_swap_id[simp]: \"perm_swap a b id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_swap a b id = id", "by (auto simp: perm_swap_def)"], ["", "lemma perm_rem_permutes:\n  assumes \"f permutes S \\<union> {x}\"\n  shows \"perm_rem x f permutes S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_rem x f permutes S", "using assms"], ["proof (prove)\nusing this:\n  f permutes S \\<union> {x}\n\ngoal (1 subgoal):\n 1. perm_rem x f permutes S", "by (auto simp: permutes_def perm_rem_def) (metis swap_id_eq)+"], ["", "lemma perm_rem_same:\n  assumes \"bij f\" \"f y = y\" shows \"perm_rem x f y = f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_rem x f y = f y", "using assms"], ["proof (prove)\nusing this:\n  bij f\n  f y = y\n\ngoal (1 subgoal):\n 1. perm_rem x f y = f y", "by (auto simp: perm_rem_def swap_id_eq bij_iff)"], ["", "lemma perm_rem_simps:\n  assumes \"bij f\"\n  shows\n  \"x = y \\<Longrightarrow> perm_rem x f y = x\"\n  \"f y = x \\<Longrightarrow> perm_rem x f y = f x\"\n  \"y \\<noteq> x \\<Longrightarrow> f y \\<noteq> x \\<Longrightarrow> perm_rem x f y = f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x = y \\<Longrightarrow> perm_rem x f y = x) &&&\n    (f y = x \\<Longrightarrow> perm_rem x f y = f x) &&&\n    (\\<lbrakk>y \\<noteq> x; f y \\<noteq> x\\<rbrakk>\n     \\<Longrightarrow> perm_rem x f y = f y)", "using assms"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. (x = y \\<Longrightarrow> perm_rem x f y = x) &&&\n    (f y = x \\<Longrightarrow> perm_rem x f y = f x) &&&\n    (\\<lbrakk>y \\<noteq> x; f y \\<noteq> x\\<rbrakk>\n     \\<Longrightarrow> perm_rem x f y = f y)", "apply (auto simp: perm_rem_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> x; f y \\<noteq> x; bij f; f x \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> (x \\<rightleftharpoons>\\<^sub>F f x) (f y) = f y", "by (metis bij_iff id_apply swap_apply(3))"], ["", "lemma bij_swap_compose: \"bij (x \\<rightleftharpoons>\\<^sub>F y o f) \\<longleftrightarrow> bij f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij (x \\<rightleftharpoons>\\<^sub>F y \\<circ> f) = bij f", "by (metis UNIV_I bij_betw_comp_iff2 bij_betw_id bij_swap_iff subsetI)"], ["", "lemma bij_perm_rem[simp]: \"bij (perm_rem x f) \\<longleftrightarrow> bij f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij (perm_rem x f) = bij f", "by (simp add: perm_rem_def bij_swap_compose)"], ["", "lemma perm_rem_conv: \"\\<And>f x y. bij f \\<Longrightarrow> perm_rem x f y = (\n    if x = y then x\n    else if f y = x then f (f y)\n    else f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y.\n       bij f \\<Longrightarrow>\n       perm_rem x f y =\n       (if x = y then x else if f y = x then f (f y) else f y)", "by (auto simp: perm_rem_simps)"], ["", "lemma perm_rem_commutes:\n  assumes \"bij f\" shows \"perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)", "have bij_simp: \"\\<And>x y. f x = f y \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (f x = f y) = (x = y)", "using assms"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. \\<And>x y. (f x = f y) = (x = y)", "by (auto simp: bij_iff)"], ["proof (state)\nthis:\n  (f ?x = f ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)", "using assms"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)", "by (auto simp: perm_rem_conv bij_simp fun_eq_iff)"], ["proof (state)\nthis:\n  perm_rem a (perm_rem b f) = perm_rem b (perm_rem a f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perm_rem_id[simp]: \"perm_rem a id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_rem a id = id", "by (simp add: perm_rem_def)"], ["", "lemma bij_eq_iff:\n  assumes \"bij f\" shows \"f x = f y \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x = f y) = (x = y)", "using assms"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. (f x = f y) = (x = y)", "by (metis bij_iff)"], ["", "lemma swap_swap_id[simp]: \"(x \\<rightleftharpoons>\\<^sub>F y) ((x \\<rightleftharpoons>\\<^sub>F y) z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<rightleftharpoons>\\<^sub>F y)\n     ((x \\<rightleftharpoons>\\<^sub>F y) z) =\n    z", "by (simp add: swap_id_eq)"], ["", "lemma in_funswapid_image_iff: \"\\<And>a b x S. x \\<in> (a \\<rightleftharpoons>\\<^sub>F b) ` S \\<longleftrightarrow> (a \\<rightleftharpoons>\\<^sub>F b) x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b x S.\n       (x \\<in> (a \\<rightleftharpoons>\\<^sub>F b) ` S) =\n       ((a \\<rightleftharpoons>\\<^sub>F b) x \\<in> S)", "by (metis bij_def bij_id bij_swap_iff inj_image_mem_iff swap_swap_id)"], ["", "lemma perm_swap_comp: \"perm_swap a b (f \\<circ> g) x = perm_swap a b f (perm_swap a b g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_swap a b (f \\<circ> g) x = perm_swap a b f (perm_swap a b g x)", "by (auto simp: perm_swap_def)"], ["", "lemma bij_perm_swap_iff[simp]: \"bij (perm_swap a b f) \\<longleftrightarrow> bij f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij (perm_swap a b f) = bij f", "by (auto simp: perm_swap_def bij_swap_compose bij_comp comp_swap)"], ["", "lemma funpow_perm_swap: \"perm_swap a b f ^^ n = perm_swap a b (f ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_swap a b f ^^ n = perm_swap a b (f ^^ n)", "by (induct n) (auto simp: perm_swap_def fun_eq_iff)"], ["", "lemma orbit_perm_swap: \"orbit (perm_swap a b f) x = (a \\<rightleftharpoons>\\<^sub>F b) ` orbit f ((a \\<rightleftharpoons>\\<^sub>F b) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit (perm_swap a b f) x =\n    (a \\<rightleftharpoons>\\<^sub>F b) `\n    orbit f ((a \\<rightleftharpoons>\\<^sub>F b) x)", "by (auto simp: orbit_altdef funpow_perm_swap) (auto simp: perm_swap_def)"], ["", "lemma has_dom_perm_swap: \"has_dom (perm_swap a b f) S = has_dom f ((a \\<rightleftharpoons>\\<^sub>F b) ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. has_dom (perm_swap a b f) S =\n    has_dom f ((a \\<rightleftharpoons>\\<^sub>F b) ` S)", "by (auto simp: has_dom_def perm_swap_def inj_image_mem_iff) (metis image_iff swap_swap_id)"], ["", "lemma perm_restrict_dom_subset:\n  assumes \"has_dom f A\" shows \"perm_restrict f A = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f A = f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_restrict f A = f", "from assms"], ["proof (chain)\npicking this:\n  has_dom f A", "have \"\\<And>x. x \\<notin> A \\<Longrightarrow> f x = x\""], ["proof (prove)\nusing this:\n  has_dom f A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> A \\<Longrightarrow> f x = x", "by (auto simp: has_dom_def)"], ["proof (state)\nthis:\n  ?x \\<notin> A \\<Longrightarrow> f ?x = ?x\n\ngoal (1 subgoal):\n 1. perm_restrict f A = f", "then"], ["proof (chain)\npicking this:\n  ?x \\<notin> A \\<Longrightarrow> f ?x = ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<notin> A \\<Longrightarrow> f ?x = ?x\n\ngoal (1 subgoal):\n 1. perm_restrict f A = f", "by (auto simp: perm_restrict_def fun_eq_iff)"], ["proof (state)\nthis:\n  perm_restrict f A = f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_domD: \"has_dom f S \\<Longrightarrow> x \\<notin> S \\<Longrightarrow> f x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>has_dom f S; x \\<notin> S\\<rbrakk> \\<Longrightarrow> f x = x", "by (auto simp: has_dom_def)"], ["", "lemma has_domI: \"(\\<And>x. x \\<notin> S \\<Longrightarrow> f x = x) \\<Longrightarrow> has_dom f S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<notin> S \\<Longrightarrow> f x = x) \\<Longrightarrow>\n    has_dom f S", "by (auto simp: has_dom_def)"], ["", "lemma perm_swap_permutes2:\n  assumes \"f permutes ((x \\<rightleftharpoons>\\<^sub>F y) ` S)\"\n  shows \"perm_swap x y f permutes S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_swap x y f permutes S", "using assms"], ["proof (prove)\nusing this:\n  f permutes (x \\<rightleftharpoons>\\<^sub>F y) ` S\n\ngoal (1 subgoal):\n 1. perm_swap x y f permutes S", "by (auto simp: perm_swap_def permutes_conv_has_dom has_dom_perm_swap[unfolded perm_swap_def])\n    (metis bij_swap_iff bij_swap_compose_bij comp_id comp_swap)"], ["", "section \\<open>Cyclic Permutations\\<close>"], ["", "lemma cyclic_on_perm_swap:\n  assumes \"cyclic_on f S\" shows \"cyclic_on (perm_swap x y f) ((x \\<rightleftharpoons>\\<^sub>F y) ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on (perm_swap x y f) ((x \\<rightleftharpoons>\\<^sub>F y) ` S)", "using assms"], ["proof (prove)\nusing this:\n  cyclic_on f S\n\ngoal (1 subgoal):\n 1. cyclic_on (perm_swap x y f) ((x \\<rightleftharpoons>\\<^sub>F y) ` S)", "by (rule cyclic_on_FOO) (auto simp: perm_swap_def swap_swap_id)"], ["", "lemma orbit_perm_rem:\n  assumes \"bij f\" \"x \\<noteq> y\" shows \"orbit (perm_rem y f) x = orbit f x - {y}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit (perm_rem y f) x = orbit f x - {y}", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> orbit (perm_rem y f) x \\<Longrightarrow>\n       xa \\<in> orbit f x - {y}\n 2. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "fix z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> orbit (perm_rem y f) x \\<Longrightarrow>\n       xa \\<in> orbit f x - {y}\n 2. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "assume \"z \\<in> ?L\""], ["proof (state)\nthis:\n  z \\<in> orbit (perm_rem y f) x\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> orbit (perm_rem y f) x \\<Longrightarrow>\n       xa \\<in> orbit f x - {y}\n 2. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "then"], ["proof (chain)\npicking this:\n  z \\<in> orbit (perm_rem y f) x", "show \"z \\<in> ?R\""], ["proof (prove)\nusing this:\n  z \\<in> orbit (perm_rem y f) x\n\ngoal (1 subgoal):\n 1. z \\<in> orbit f x - {y}", "using assms"], ["proof (prove)\nusing this:\n  z \\<in> orbit (perm_rem y f) x\n  bij f\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. z \\<in> orbit f x - {y}", "by induct (auto simp: perm_rem_conv bij_iff intro: orbit.intros)"], ["proof (state)\nthis:\n  z \\<in> orbit f x - {y}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "assume A: \"z \\<in> ?R\""], ["proof (state)\nthis:\n  z \\<in> orbit f x - {y}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "{"], ["proof (state)\nthis:\n  z \\<in> orbit f x - {y}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "assume \"z \\<in> orbit f x\""], ["proof (state)\nthis:\n  z \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "then"], ["proof (chain)\npicking this:\n  z \\<in> orbit f x", "have \"(z \\<noteq> y \\<longrightarrow> z \\<in> ?L) \\<and> (z = y \\<longrightarrow> f z \\<in> ?L)\""], ["proof (prove)\nusing this:\n  z \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n    (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. (f x \\<noteq> y \\<longrightarrow>\n     f x \\<in> orbit (perm_rem y f) x) \\<and>\n    (f x = y \\<longrightarrow> f (f x) \\<in> orbit (perm_rem y f) x)\n 2. \\<And>ya.\n       \\<lbrakk>ya \\<in> orbit f x;\n        (ya \\<noteq> y \\<longrightarrow>\n         ya \\<in> orbit (perm_rem y f) x) \\<and>\n        (ya = y \\<longrightarrow>\n         f ya \\<in> orbit (perm_rem y f) x)\\<rbrakk>\n       \\<Longrightarrow> (f ya \\<noteq> y \\<longrightarrow>\n                          f ya \\<in> orbit (perm_rem y f) x) \\<and>\n                         (f ya = y \\<longrightarrow>\n                          f (f ya) \\<in> orbit (perm_rem y f) x)", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (f x \\<noteq> y \\<longrightarrow>\n     f x \\<in> orbit (perm_rem y f) x) \\<and>\n    (f x = y \\<longrightarrow> f (f x) \\<in> orbit (perm_rem y f) x)\n 2. \\<And>ya.\n       \\<lbrakk>ya \\<in> orbit f x;\n        (ya \\<noteq> y \\<longrightarrow>\n         ya \\<in> orbit (perm_rem y f) x) \\<and>\n        (ya = y \\<longrightarrow>\n         f ya \\<in> orbit (perm_rem y f) x)\\<rbrakk>\n       \\<Longrightarrow> (f ya \\<noteq> y \\<longrightarrow>\n                          f ya \\<in> orbit (perm_rem y f) x) \\<and>\n                         (f ya = y \\<longrightarrow>\n                          f (f ya) \\<in> orbit (perm_rem y f) x)", "with assms"], ["proof (chain)\npicking this:\n  bij f\n  x \\<noteq> y", "show ?case"], ["proof (prove)\nusing this:\n  bij f\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (f x \\<noteq> y \\<longrightarrow>\n     f x \\<in> orbit (perm_rem y f) x) \\<and>\n    (f x = y \\<longrightarrow> f (f x) \\<in> orbit (perm_rem y f) x)", "by (auto intro: orbit_eqI(1) simp: perm_rem_conv)"], ["proof (state)\nthis:\n  (f x \\<noteq> y \\<longrightarrow> f x \\<in> orbit (perm_rem y f) x) \\<and>\n  (f x = y \\<longrightarrow> f (f x) \\<in> orbit (perm_rem y f) x)\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>ya \\<in> orbit f x;\n        (ya \\<noteq> y \\<longrightarrow>\n         ya \\<in> orbit (perm_rem y f) x) \\<and>\n        (ya = y \\<longrightarrow>\n         f ya \\<in> orbit (perm_rem y f) x)\\<rbrakk>\n       \\<Longrightarrow> (f ya \\<noteq> y \\<longrightarrow>\n                          f ya \\<in> orbit (perm_rem y f) x) \\<and>\n                         (f ya = y \\<longrightarrow>\n                          f (f ya) \\<in> orbit (perm_rem y f) x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>ya \\<in> orbit f x;\n        (ya \\<noteq> y \\<longrightarrow>\n         ya \\<in> orbit (perm_rem y f) x) \\<and>\n        (ya = y \\<longrightarrow>\n         f ya \\<in> orbit (perm_rem y f) x)\\<rbrakk>\n       \\<Longrightarrow> (f ya \\<noteq> y \\<longrightarrow>\n                          f ya \\<in> orbit (perm_rem y f) x) \\<and>\n                         (f ya = y \\<longrightarrow>\n                          f (f ya) \\<in> orbit (perm_rem y f) x)", "case (step z)"], ["proof (state)\nthis:\n  z \\<in> orbit f x\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       \\<lbrakk>ya \\<in> orbit f x;\n        (ya \\<noteq> y \\<longrightarrow>\n         ya \\<in> orbit (perm_rem y f) x) \\<and>\n        (ya = y \\<longrightarrow>\n         f ya \\<in> orbit (perm_rem y f) x)\\<rbrakk>\n       \\<Longrightarrow> (f ya \\<noteq> y \\<longrightarrow>\n                          f ya \\<in> orbit (perm_rem y f) x) \\<and>\n                         (f ya = y \\<longrightarrow>\n                          f (f ya) \\<in> orbit (perm_rem y f) x)", "then"], ["proof (chain)\npicking this:\n  z \\<in> orbit f x\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)", "show ?case"], ["proof (prove)\nusing this:\n  z \\<in> orbit f x\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)\n\ngoal (1 subgoal):\n 1. (f z \\<noteq> y \\<longrightarrow>\n     f z \\<in> orbit (perm_rem y f) x) \\<and>\n    (f z = y \\<longrightarrow> f (f z) \\<in> orbit (perm_rem y f) x)", "using assms"], ["proof (prove)\nusing this:\n  z \\<in> orbit f x\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)\n  bij f\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (f z \\<noteq> y \\<longrightarrow>\n     f z \\<in> orbit (perm_rem y f) x) \\<and>\n    (f z = y \\<longrightarrow> f (f z) \\<in> orbit (perm_rem y f) x)", "by (cases \"y = z\") (auto intro: orbit_eqI simp: perm_rem_conv)"], ["proof (state)\nthis:\n  (f z \\<noteq> y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x) \\<and>\n  (f z = y \\<longrightarrow> f (f z) \\<in> orbit (perm_rem y f) x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "}"], ["proof (state)\nthis:\n  z \\<in> orbit f x \\<Longrightarrow>\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {y} \\<Longrightarrow>\n       xa \\<in> orbit (perm_rem y f) x", "with A"], ["proof (chain)\npicking this:\n  z \\<in> orbit f x - {y}\n  z \\<in> orbit f x \\<Longrightarrow>\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)", "show \"z \\<in> ?L\""], ["proof (prove)\nusing this:\n  z \\<in> orbit f x - {y}\n  z \\<in> orbit f x \\<Longrightarrow>\n  (z \\<noteq> y \\<longrightarrow> z \\<in> orbit (perm_rem y f) x) \\<and>\n  (z = y \\<longrightarrow> f z \\<in> orbit (perm_rem y f) x)\n\ngoal (1 subgoal):\n 1. z \\<in> orbit (perm_rem y f) x", "by auto"], ["proof (state)\nthis:\n  z \\<in> orbit (perm_rem y f) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orbit_perm_rem_eq:\n  assumes \"bij f\" shows \"orbit (perm_rem y f) x = (if x = y then {y} else orbit f x - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit (perm_rem y f) x = (if x = y then {y} else orbit f x - {y})", "using assms"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. orbit (perm_rem y f) x = (if x = y then {y} else orbit f x - {y})", "by (simp add: orbit_eq_singleton_iff orbit_perm_rem perm_rem_simps)"], ["", "lemma cyclic_on_perm_rem:\n  assumes \"cyclic_on f S\" \"bij f\" \"S \\<noteq> {x}\" shows \"cyclic_on (perm_rem x f) (S - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on (perm_rem x f) (S - {x})", "using assms[unfolded cyclic_on_alldef]"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s)\n  bij f\n  S \\<noteq> {x}\n\ngoal (1 subgoal):\n 1. cyclic_on (perm_rem x f) (S - {x})", "by (simp add: cyclic_on_def orbit_perm_rem_eq) auto"], ["", "end"]]}