{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/TypeSafe.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemma assumes wf:\"wwf_prog P\" and casts:\"P \\<turnstile> T casts v to v'\"\n  and typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T'\" and leq:\"P \\<turnstile> T' \\<le> T\"\n  shows casts_conf:\"P,h \\<turnstile> v' :\\<le> T\"", "theorem assumes wf:\"wwf_prog P\"\nshows red_preserves_hconf:\n  \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>T. \\<lbrakk> P,E,h \\<turnstile> e : T; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\"\nand reds_preserves_hconf:\n  \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>Ts. \\<lbrakk> P,E,h \\<turnstile> es [:] Ts; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\"", "theorem assumes wf:\"wwf_prog P\"\nshows red_preserves_lconf:\n  \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>T. \\<lbrakk> P,E,h \\<turnstile> e:T; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P \\<turnstile> E \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E)\"\nand reds_preserves_lconf:\n  \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>Ts. \\<lbrakk> P,E,h \\<turnstile> es[:]Ts; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P \\<turnstile> E \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E)\"", "lemma [iff]: \"\\<And>A. \\<lbrakk> length Vs = length Ts; length vs = length Ts\\<rbrakk> \\<Longrightarrow>\n \\<D> (blocks (Vs,Ts,vs,e)) A = \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)\"", "lemma red_lA_incr: \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e'\"\n  and reds_lA_incr: \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es'\"", "lemma assumes wf: \"wf_C_prog P\"\nshows red_preserves_defass:\n  \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>\"\nand \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> \\<D>s es \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>\"", "lemma red_preserves_sconf:\n  \"\\<lbrakk> P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>; P,E,hp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd>; wwf_prog P\\<rbrakk> \n\\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma reds_preserves_sconf:\n  \"\\<lbrakk> P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle>; P,E,hp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd>; wwf_prog P\\<rbrakk> \n\\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma wt_blocks:\n \"\\<And>E. \\<lbrakk> length Vs = length Ts; length vs = length Ts;\n         \\<forall>T' \\<in> set Ts. is_type P T'\\<rbrakk> \\<Longrightarrow>\n       (P,E,h \\<turnstile> blocks(Vs,Ts,vs,e) : T) =\n  (P,E(Vs[\\<mapsto>]Ts),h \\<turnstile> e:T \\<and> \n  (\\<exists>Ts'. map (P \\<turnstile> typeof\\<^bsub>h\\<^esub>) vs = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts))\"", "theorem assumes wf: \"wf_C_prog P\"\nshows subject_reduction2: \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>T. \\<lbrakk> P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T \\<rbrakk> \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T)\"\nand subjects_reduction2: \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>Ts.\\<lbrakk> P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> es [:] Ts \\<rbrakk> \\<Longrightarrow> types_conf P E h' es' Ts)\"", "lemma step_preserves_sconf:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<And>T. \\<lbrakk> P,E,hp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma steps_preserves_sconf:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle>\"\nshows \"\\<And>Ts. \\<lbrakk> P,E,hp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma step_preserves_defass:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<D> e \\<lfloor>dom(lcl s)\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom(lcl s')\\<rfloor>\"", "lemma step_preserves_type:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<And>T. \\<lbrakk> P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> e:T \\<rbrakk>\n    \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"", "lemma types_conf_conf_types_conf:\n  \"\\<lbrakk>types_conf P E h es Ts; conformable Ts Ts'\\<rbrakk> \\<Longrightarrow> types_conf P E h es Ts'\"", "lemma types_conf_Wtrt_conf:\n  \"types_conf P E h es Ts \\<Longrightarrow> \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' Ts\"", "lemma steps_preserves_types:\nassumes wf: \"wf_C_prog P\" and steps: \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle>\"\nshows \"\\<And>Ts. \\<lbrakk> P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> es [:] Ts\\<rbrakk>\n  \\<Longrightarrow> types_conf P E (hp s') es' Ts\"", "lemma eval_preserves_sconf:\n  \"\\<lbrakk> wf_C_prog P; P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>; P,E \\<turnstile> e::T; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma evals_preserves_sconf:\n  \"\\<lbrakk> wf_C_prog P; P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es',s'\\<rangle>; P,E \\<turnstile> es [::] Ts; P,E \\<turnstile> s \\<surd> \\<rbrakk> \n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma eval_preserves_type: assumes wf: \"wf_C_prog P\"\nshows \"\\<lbrakk> P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>; P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> e::T \\<rbrakk>\n   \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"", "lemma evals_preserves_types: assumes wf: \"wf_C_prog P\"\nshows \"\\<lbrakk> P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es',s'\\<rangle>; P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> es [::] Ts \\<rbrakk>\n  \\<Longrightarrow> types_conf P E (hp s') es' Ts\"", "theorem Subject_reduction: assumes wf: \"wf_C_prog P\"\nshows \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow> P,E,s \\<turnstile> e : T \\<surd>\n       \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"", "theorem Subject_reductions:\nassumes wf: \"wf_C_prog P\" and reds: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<And>T. P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], "translations": [["", "lemma assumes wf:\"wwf_prog P\" and casts:\"P \\<turnstile> T casts v to v'\"\n  and typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T'\" and leq:\"P \\<turnstile> T' \\<le> T\"\n  shows casts_conf:\"P,h \\<turnstile> v' :\\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "fix a' C Cs S'"], ["proof (state)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "assume leq:\"P \\<turnstile> Class (last Cs) \\<le> T\" and subo:\"Subobjs P C Cs\"\n      and casts':\"P \\<turnstile> T casts Ref (a',Cs) to v'\" and h:\"h a' = Some(C,S')\""], ["proof (state)\nthis:\n  P \\<turnstile> Class (last Cs) \\<le> T\n  Subobjs P C Cs\n  P \\<turnstile> T casts Ref (a', Cs) to v' \n  h a' = \\<lfloor>(C, S')\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "from subo wf"], ["proof (chain)\npicking this:\n  Subobjs P C Cs\n  wwf_prog P", "have \"is_class P (last Cs)\""], ["proof (prove)\nusing this:\n  Subobjs P C Cs\n  wwf_prog P\n\ngoal (1 subgoal):\n 1. is_class P (last Cs)", "by(fastforce intro:Subobj_last_isClass)"], ["proof (state)\nthis:\n  is_class P (last Cs)\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "with leq wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> Class (last Cs) \\<le> T\n  wwf_prog P\n  is_class P (last Cs)", "obtain C' where T:\"T = Class C'\"\n      and path_unique:\"P \\<turnstile> Path (last Cs) to C' unique\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Class (last Cs) \\<le> T\n  wwf_prog P\n  is_class P (last Cs)\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        \\<lbrakk>T = Class C';\n         P \\<turnstile> Path last Cs to C' unique\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:Class_widen)"], ["proof (state)\nthis:\n  T = Class C'\n  P \\<turnstile> Path last Cs to C' unique\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "from path_unique"], ["proof (chain)\npicking this:\n  P \\<turnstile> Path last Cs to C' unique", "obtain Cs' where path_via:\"P \\<turnstile> Path (last Cs) to C' via Cs'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Path last Cs to C' unique\n\ngoal (1 subgoal):\n 1. (\\<And>Cs'.\n        P \\<turnstile> Path last Cs to C' via Cs'  \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:path_via_def path_unique_def)"], ["proof (state)\nthis:\n  P \\<turnstile> Path last Cs to C' via Cs' \n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "with T path_unique casts'"], ["proof (chain)\npicking this:\n  T = Class C'\n  P \\<turnstile> Path last Cs to C' unique\n  P \\<turnstile> T casts Ref (a', Cs) to v' \n  P \\<turnstile> Path last Cs to C' via Cs'", "have v':\"v' = Ref (a',Cs@\\<^sub>pCs')\""], ["proof (prove)\nusing this:\n  T = Class C'\n  P \\<turnstile> Path last Cs to C' unique\n  P \\<turnstile> T casts Ref (a', Cs) to v' \n  P \\<turnstile> Path last Cs to C' via Cs' \n\ngoal (1 subgoal):\n 1. v' = Ref (a', Cs @\\<^sub>p Cs')", "by -(erule casts_to.cases,auto simp:path_unique_def path_via_def)"], ["proof (state)\nthis:\n  v' = Ref (a', Cs @\\<^sub>p Cs')\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "from subo path_via wf"], ["proof (chain)\npicking this:\n  Subobjs P C Cs\n  P \\<turnstile> Path last Cs to C' via Cs' \n  wwf_prog P", "have \"Subobjs P C (Cs@\\<^sub>pCs')\"\n      and \"last (Cs@\\<^sub>pCs') = C'\""], ["proof (prove)\nusing this:\n  Subobjs P C Cs\n  P \\<turnstile> Path last Cs to C' via Cs' \n  wwf_prog P\n\ngoal (1 subgoal):\n 1. Subobjs P C (Cs @\\<^sub>p Cs') &&& last (Cs @\\<^sub>p Cs') = C'", "apply(auto intro:Subobjs_appendPath simp:path_via_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Subobjs P C Cs; wwf_prog P; Subobjs P (last Cs) Cs';\n     C' = last Cs'\\<rbrakk>\n    \\<Longrightarrow> last (Cs @\\<^sub>p Cs') = last Cs'", "apply(drule_tac Cs=\"Cs'\" in Subobjs_nonempty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Subobjs P C Cs; wwf_prog P; C' = last Cs';\n     Cs' \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> last (Cs @\\<^sub>p Cs') = last Cs'", "by(rule sym[OF appendPath_last])"], ["proof (state)\nthis:\n  Subobjs P C (Cs @\\<^sub>p Cs')\n  last (Cs @\\<^sub>p Cs') = C'\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "with T h v'"], ["proof (chain)\npicking this:\n  T = Class C'\n  h a' = \\<lfloor>(C, S')\\<rfloor>\n  v' = Ref (a', Cs @\\<^sub>p Cs')\n  Subobjs P C (Cs @\\<^sub>p Cs')\n  last (Cs @\\<^sub>p Cs') = C'", "have ?thesis"], ["proof (prove)\nusing this:\n  T = Class C'\n  h a' = \\<lfloor>(C, S')\\<rfloor>\n  v' = Ref (a', Cs @\\<^sub>p Cs')\n  Subobjs P C (Cs @\\<^sub>p Cs')\n  last (Cs @\\<^sub>p Cs') = C'\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "by auto"], ["proof (state)\nthis:\n  P,h \\<turnstile> v' :\\<le> T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> Class (last ?Cs2) \\<le> T; Subobjs P ?C2 ?Cs2;\n   P \\<turnstile> T casts Ref (?a'2, ?Cs2) to v' ;\n   h ?a'2 = \\<lfloor>(?C2, ?S'2)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P,h \\<turnstile> v' :\\<le> T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "with casts typeof wf typeof leq"], ["proof (chain)\npicking this:\n  P \\<turnstile> T casts v to v' \n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T'\\<rfloor>\n  wwf_prog P\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T'\\<rfloor>\n  P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P \\<turnstile> Class (last ?Cs2) \\<le> T; Subobjs P ?C2 ?Cs2;\n   P \\<turnstile> T casts Ref (?a'2, ?Cs2) to v' ;\n   h ?a'2 = \\<lfloor>(?C2, ?S'2)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P,h \\<turnstile> v' :\\<le> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> T casts v to v' \n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T'\\<rfloor>\n  wwf_prog P\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T'\\<rfloor>\n  P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P \\<turnstile> Class (last ?Cs2) \\<le> T; Subobjs P ?C2 ?Cs2;\n   P \\<turnstile> T casts Ref (?a'2, ?Cs2) to v' ;\n   h ?a'2 = \\<lfloor>(?C2, ?S'2)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P,h \\<turnstile> v' :\\<le> T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "by(cases v,auto elim:casts_to.cases split:if_split_asm)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v' :\\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem assumes wf:\"wwf_prog P\"\nshows red_preserves_hconf:\n  \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>T. \\<lbrakk> P,E,h \\<turnstile> e : T; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\"\nand reds_preserves_hconf:\n  \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>Ts. \\<lbrakk> P,E,h \\<turnstile> es [:] Ts; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>T.\n         \\<lbrakk>P,E,h \\<turnstile> e : T;\n          P \\<turnstile> h \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P \\<turnstile> h' \\<surd>)) &&&\n    (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts.\n         \\<lbrakk>P,E,h \\<turnstile> es [:] Ts;\n          P \\<turnstile> h \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P \\<turnstile> h' \\<surd>))", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 61 subgoals...", "case (RedNew h a h' C E l)"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\n  P,E,h \\<turnstile> new C : T\n  P \\<turnstile> h \\<surd>\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 61 subgoals...", "have new: \"new_Addr h = Some a\" and h':\"h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\"\n    and hconf:\"P \\<turnstile> h \\<surd>\" and wt_New:\"P,E,h \\<turnstile> new C : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (new_Addr h = \\<lfloor>a\\<rfloor> &&&\n     h' = h(a \\<mapsto> (C, Collect (init_obj P C)))) &&&\n    P \\<turnstile> h \\<surd> &&& P,E,h \\<turnstile> new C : T", "by fact+"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\n  P \\<turnstile> h \\<surd>\n  P,E,h \\<turnstile> new C : T\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 61 subgoals...", "from new"], ["proof (chain)\npicking this:\n  new_Addr h = \\<lfloor>a\\<rfloor>", "have None: \"h a = None\""], ["proof (prove)\nusing this:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. h a = None", "by(rule new_Addr_SomeD)"], ["proof (state)\nthis:\n  h a = None\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 61 subgoals...", "with wf"], ["proof (chain)\npicking this:\n  wwf_prog P\n  h a = None", "have oconf:\"P,h \\<turnstile> (C, Collect (init_obj P C)) \\<surd>\""], ["proof (prove)\nusing this:\n  wwf_prog P\n  h a = None\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> (C, Collect (init_obj P C)) \\<surd>", "apply (auto simp:oconf_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Cs.\n       \\<lbrakk>wwf_prog P; h a = None; Subobjs P C Cs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs'. init_obj P C (Cs, fs')\n 2. \\<And>Cs fs' y.\n       \\<lbrakk>wwf_prog P; h a = None; Subobjs P C Cs;\n        init_obj P C (Cs, fs'); init_obj P C (Cs, y)\\<rbrakk>\n       \\<Longrightarrow> fs' = y\n 3. \\<And>Cs fs'.\n       \\<lbrakk>wwf_prog P; h a = None; init_obj P C (Cs, fs')\\<rbrakk>\n       \\<Longrightarrow> Subobjs P C Cs\n 4. \\<And>Cs fs'.\n       \\<lbrakk>wwf_prog P; h a = None; init_obj P C (Cs, fs')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs.\n                            (\\<exists>Bs ms.\n                                class P (last Cs) =\n                                \\<lfloor>(Bs, fs, ms)\\<rfloor>) \\<and>\n                            P,h \\<turnstile> fs' (:\\<le>) map_of fs", "apply (rule_tac x=\"init_class_fieldmap P (last Cs)\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>Cs.\n       \\<lbrakk>wwf_prog P; h a = None; Subobjs P C Cs\\<rbrakk>\n       \\<Longrightarrow> init_obj P C (Cs, init_class_fieldmap P (last Cs))\n 2. \\<And>Cs fs' y.\n       \\<lbrakk>wwf_prog P; h a = None; Subobjs P C Cs;\n        init_obj P C (Cs, fs'); init_obj P C (Cs, y)\\<rbrakk>\n       \\<Longrightarrow> fs' = y\n 3. \\<And>Cs fs'.\n       \\<lbrakk>wwf_prog P; h a = None; init_obj P C (Cs, fs')\\<rbrakk>\n       \\<Longrightarrow> Subobjs P C Cs\n 4. \\<And>Cs fs'.\n       \\<lbrakk>wwf_prog P; h a = None; init_obj P C (Cs, fs')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fs.\n                            (\\<exists>Bs ms.\n                                class P (last Cs) =\n                                \\<lfloor>(Bs, fs, ms)\\<rfloor>) \\<and>\n                            P,h \\<turnstile> fs' (:\\<le>) map_of fs", "by (fastforce intro:init_obj.intros fconf_init_fields \n                 elim: init_obj.cases dest!:Subobj_last_isClass simp:is_class_def)+"], ["proof (state)\nthis:\n  P,h \\<turnstile> (C, Collect (init_obj P C)) \\<surd>\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 61 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile> (C, Collect (init_obj P C)) \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h' \\<surd>", "using h' None"], ["proof (prove)\nusing this:\n  P,h \\<turnstile> (C, Collect (init_obj P C)) \\<surd>\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\n  h a = None\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h' \\<surd>", "by(fast intro: hconf_new[OF hconf])"], ["proof (state)\nthis:\n  P \\<turnstile> h' \\<surd>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "next"], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "case (RedFAss h a D S Cs' F T Cs v v' Ds fs' E l T')"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P \\<turnstile> last Cs' has least F:T via Cs\n  P \\<turnstile> T casts v to v' \n  Ds = Cs' @\\<^sub>p Cs\n  (Ds, fs') \\<in> S\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  P \\<turnstile> h \\<surd>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "let ?fs' = \"fs'(F \\<mapsto> v')\""], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "let ?S' = \"insert (Ds, ?fs') (S - {(Ds, fs')})\""], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "have ha:\"h a = Some(D,S)\" and hconf:\"P \\<turnstile> h \\<surd>\"\n    and field:\"P \\<turnstile> last Cs' has least F:T via Cs\"\n    and casts:\"P \\<turnstile> T casts v to v'\"\n    and Ds:\"Ds = Cs' @\\<^sub>p Cs\" and S:\"(Ds,fs') \\<in> S\"\n    and wte:\"P,E,h \\<turnstile> ref(a,Cs')\\<bullet>F{Cs} := Val v : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h a = \\<lfloor>(D, S)\\<rfloor> &&&\n     P \\<turnstile> h \\<surd> &&&\n     P \\<turnstile> last Cs' has least F:T via Cs) &&&\n    (P \\<turnstile> T casts v to v'  &&& Ds = Cs' @\\<^sub>p Cs) &&&\n    (Ds, fs') \\<in> S &&&\n    P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'", "by fact+"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P \\<turnstile> h \\<surd>\n  P \\<turnstile> last Cs' has least F:T via Cs\n  P \\<turnstile> T casts v to v' \n  Ds = Cs' @\\<^sub>p Cs\n  (Ds, fs') \\<in> S\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "from wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'", "have \"P \\<turnstile> last Cs' has least F:T' via Cs\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n\ngoal (1 subgoal):\n 1. P \\<turnstile> last Cs' has least F:T' via Cs", "by (auto split:if_split_asm)"], ["proof (state)\nthis:\n  P \\<turnstile> last Cs' has least F:T' via Cs\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with field"], ["proof (chain)\npicking this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  P \\<turnstile> last Cs' has least F:T' via Cs", "have eq:\"T = T'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  P \\<turnstile> last Cs' has least F:T' via Cs\n\ngoal (1 subgoal):\n 1. T = T'", "by (rule sees_field_fun)"], ["proof (state)\nthis:\n  T = T'\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with casts wte wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  wwf_prog P\n  T = T'", "have conf:\"P,h \\<turnstile> v' :\\<le> T'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  wwf_prog P\n  T = T'\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T'", "by(auto intro:casts_conf)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v' :\\<le> T'\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "from hconf ha"], ["proof (chain)\npicking this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(D, S)\\<rfloor>", "have oconf:\"P,h \\<turnstile> (D,S) \\<surd>\""], ["proof (prove)\nusing this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(D, S)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> (D, S) \\<surd>", "by (fastforce simp:hconf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> (D, S) \\<surd>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with S"], ["proof (chain)\npicking this:\n  (Ds, fs') \\<in> S\n  P,h \\<turnstile> (D, S) \\<surd>", "have suboD:\"Subobjs P D Ds\""], ["proof (prove)\nusing this:\n  (Ds, fs') \\<in> S\n  P,h \\<turnstile> (D, S) \\<surd>\n\ngoal (1 subgoal):\n 1. Subobjs P D Ds", "by (fastforce simp:oconf_def)"], ["proof (state)\nthis:\n  Subobjs P D Ds\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "from field"], ["proof (chain)\npicking this:\n  P \\<turnstile> last Cs' has least F:T via Cs", "obtain Bs fs ms\n    where subo:\"Subobjs P (last Cs') Cs\"\n    and \"class\": \"class P (last Cs) = Some(Bs,fs,ms)\"\n    and map:\"map_of fs F = Some T\""], ["proof (prove)\nusing this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n\ngoal (1 subgoal):\n 1. (\\<And>Bs fs ms.\n        \\<lbrakk>Subobjs P (last Cs') Cs;\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n         map_of fs F = \\<lfloor>T\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp:LeastFieldDecl_def FieldDecls_def)"], ["proof (state)\nthis:\n  Subobjs P (last Cs') Cs\n  class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  map_of fs F = \\<lfloor>T\\<rfloor>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "from Ds subo"], ["proof (chain)\npicking this:\n  Ds = Cs' @\\<^sub>p Cs\n  Subobjs P (last Cs') Cs", "have last:\"last Cs = last Ds\""], ["proof (prove)\nusing this:\n  Ds = Cs' @\\<^sub>p Cs\n  Subobjs P (last Cs') Cs\n\ngoal (1 subgoal):\n 1. last Cs = last Ds", "by(fastforce dest:Subobjs_nonempty intro:appendPath_last simp:appendPath_last)"], ["proof (state)\nthis:\n  last Cs = last Ds\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with \"class\""], ["proof (chain)\npicking this:\n  class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  last Cs = last Ds", "have classDs:\"class P (last Ds) = Some(Bs,fs,ms)\""], ["proof (prove)\nusing this:\n  class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  last Cs = last Ds\n\ngoal (1 subgoal):\n 1. class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with S suboD oconf"], ["proof (chain)\npicking this:\n  (Ds, fs') \\<in> S\n  Subobjs P D Ds\n  P,h \\<turnstile> (D, S) \\<surd>\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>", "have \"P,h \\<turnstile> fs' (:\\<le>) map_of fs\""], ["proof (prove)\nusing this:\n  (Ds, fs') \\<in> S\n  Subobjs P D Ds\n  P,h \\<turnstile> (D, S) \\<surd>\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> fs' (:\\<le>) map_of fs", "apply (auto simp:oconf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Ds, fs') \\<in> S;\n     class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n     \\<forall>Cs.\n        Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs, fs') \\<in> S);\n     \\<forall>Cs fs'.\n        (Cs, fs') \\<in> S \\<longrightarrow>\n        Subobjs P D Cs \\<and>\n        (\\<exists>fs.\n            (\\<exists>Bs ms.\n                class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor>) \\<and>\n            P,h \\<turnstile> fs' (:\\<le>) map_of fs)\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> fs' (:\\<le>) map_of fs", "apply (erule allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Ds, fs') \\<in> S;\n     class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n     \\<forall>Cs fs'.\n        (Cs, fs') \\<in> S \\<longrightarrow>\n        Subobjs P D Cs \\<and>\n        (\\<exists>fs.\n            (\\<exists>Bs ms.\n                class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor>) \\<and>\n            P,h \\<turnstile> fs' (:\\<le>) map_of fs);\n     Subobjs P D ?Cs12 \\<longrightarrow>\n     (\\<exists>!fs'. (?Cs12, fs') \\<in> S)\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> fs' (:\\<le>) map_of fs", "apply (erule_tac x=\"Ds\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Ds, fs') \\<in> S;\n     class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n     Subobjs P D ?Cs12 \\<longrightarrow>\n     (\\<exists>!fs'. (?Cs12, fs') \\<in> S);\n     \\<forall>fs'.\n        (Ds, fs') \\<in> S \\<longrightarrow>\n        Subobjs P D Ds \\<and>\n        (\\<exists>fs.\n            (\\<exists>Bs ms.\n                class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>) \\<and>\n            P,h \\<turnstile> fs' (:\\<le>) map_of fs)\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> fs' (:\\<le>) map_of fs", "apply (erule_tac x=\"fs'\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(Ds, fs') \\<in> S;\n     class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n     Subobjs P D ?Cs12 \\<longrightarrow>\n     (\\<exists>!fs'. (?Cs12, fs') \\<in> S);\n     (Ds, fs') \\<in> S \\<longrightarrow>\n     Subobjs P D Ds \\<and>\n     (\\<exists>fs.\n         (\\<exists>Bs ms.\n             class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>) \\<and>\n         P,h \\<turnstile> fs' (:\\<le>) map_of fs)\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> fs' (:\\<le>) map_of fs", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P,h \\<turnstile> fs' (:\\<le>) map_of fs\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with map conf eq"], ["proof (chain)\npicking this:\n  map_of fs F = \\<lfloor>T\\<rfloor>\n  P,h \\<turnstile> v' :\\<le> T'\n  T = T'\n  P,h \\<turnstile> fs' (:\\<le>) map_of fs", "have fconf:\"P,h \\<turnstile> fs'(F \\<mapsto> v') (:\\<le>) map_of fs\""], ["proof (prove)\nusing this:\n  map_of fs F = \\<lfloor>T\\<rfloor>\n  P,h \\<turnstile> v' :\\<le> T'\n  T = T'\n  P,h \\<turnstile> fs' (:\\<le>) map_of fs\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> fs'(F \\<mapsto> v') (:\\<le>) map_of fs", "by (simp add:fconf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> fs'(F \\<mapsto> v') (:\\<le>) map_of fs\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "from oconf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> (D, S) \\<surd>", "have \"\\<forall>Cs fs'. (Cs,fs') \\<in> S \\<longrightarrow> Subobjs P D Cs \\<and> \n                    (\\<exists>fs Bs ms. class P (last Cs) = Some (Bs,fs,ms) \\<and> \n                                P,h \\<turnstile> fs' (:\\<le>) map_of fs)\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> (D, S) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<forall>Cs fs'.\n       (Cs, fs') \\<in> S \\<longrightarrow>\n       Subobjs P D Cs \\<and>\n       (\\<exists>fs Bs ms.\n           class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n           P,h \\<turnstile> fs' (:\\<le>) map_of fs)", "by(simp add:oconf_def)"], ["proof (state)\nthis:\n  \\<forall>Cs fs'.\n     (Cs, fs') \\<in> S \\<longrightarrow>\n     Subobjs P D Cs \\<and>\n     (\\<exists>fs Bs ms.\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n         P,h \\<turnstile> fs' (:\\<le>) map_of fs)\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with suboD classDs fconf"], ["proof (chain)\npicking this:\n  Subobjs P D Ds\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  P,h \\<turnstile> fs'(F \\<mapsto> v') (:\\<le>) map_of fs\n  \\<forall>Cs fs'.\n     (Cs, fs') \\<in> S \\<longrightarrow>\n     Subobjs P D Cs \\<and>\n     (\\<exists>fs Bs ms.\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n         P,h \\<turnstile> fs' (:\\<le>) map_of fs)", "have oconf':\"\\<forall>Cs fs'. (Cs,fs') \\<in> ?S' \\<longrightarrow> Subobjs P D Cs \\<and> \n                    (\\<exists>fs Bs ms. class P (last Cs) = Some (Bs,fs,ms) \\<and> \n                                P,h \\<turnstile> fs' (:\\<le>) map_of fs)\""], ["proof (prove)\nusing this:\n  Subobjs P D Ds\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  P,h \\<turnstile> fs'(F \\<mapsto> v') (:\\<le>) map_of fs\n  \\<forall>Cs fs'.\n     (Cs, fs') \\<in> S \\<longrightarrow>\n     Subobjs P D Cs \\<and>\n     (\\<exists>fs Bs ms.\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n         P,h \\<turnstile> fs' (:\\<le>) map_of fs)\n\ngoal (1 subgoal):\n 1. \\<forall>Cs fs'a.\n       (Cs, fs'a)\n       \\<in> insert (Ds, fs'(F \\<mapsto> v'))\n              (S - {(Ds, fs')}) \\<longrightarrow>\n       Subobjs P D Cs \\<and>\n       (\\<exists>fs Bs ms.\n           class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n           P,h \\<turnstile> fs'a (:\\<le>) map_of fs)", "by auto"], ["proof (state)\nthis:\n  \\<forall>Cs fs'a.\n     (Cs, fs'a)\n     \\<in> insert (Ds, fs'(F \\<mapsto> v'))\n            (S - {(Ds, fs')}) \\<longrightarrow>\n     Subobjs P D Cs \\<and>\n     (\\<exists>fs Bs ms.\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n         P,h \\<turnstile> fs'a (:\\<le>) map_of fs)\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "from oconf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> (D, S) \\<surd>", "have all:\"\\<forall>Cs. Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs,fs') \\<in> S)\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> (D, S) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<forall>Cs.\n       Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs, fs') \\<in> S)", "by(simp add:oconf_def)"], ["proof (state)\nthis:\n  \\<forall>Cs.\n     Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs, fs') \\<in> S)\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with S"], ["proof (chain)\npicking this:\n  (Ds, fs') \\<in> S\n  \\<forall>Cs.\n     Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs, fs') \\<in> S)", "have \"\\<forall>Cs. Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs,fs') \\<in> ?S')\""], ["proof (prove)\nusing this:\n  (Ds, fs') \\<in> S\n  \\<forall>Cs.\n     Subobjs P D Cs \\<longrightarrow> (\\<exists>!fs'. (Cs, fs') \\<in> S)\n\ngoal (1 subgoal):\n 1. \\<forall>Cs.\n       Subobjs P D Cs \\<longrightarrow>\n       (\\<exists>!fs'a.\n           (Cs, fs'a)\n           \\<in> insert (Ds, fs'(F \\<mapsto> v')) (S - {(Ds, fs')}))", "by blast"], ["proof (state)\nthis:\n  \\<forall>Cs.\n     Subobjs P D Cs \\<longrightarrow>\n     (\\<exists>!fs'a.\n         (Cs, fs'a)\n         \\<in> insert (Ds, fs'(F \\<mapsto> v')) (S - {(Ds, fs')}))\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with oconf'"], ["proof (chain)\npicking this:\n  \\<forall>Cs fs'a.\n     (Cs, fs'a)\n     \\<in> insert (Ds, fs'(F \\<mapsto> v'))\n            (S - {(Ds, fs')}) \\<longrightarrow>\n     Subobjs P D Cs \\<and>\n     (\\<exists>fs Bs ms.\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n         P,h \\<turnstile> fs'a (:\\<le>) map_of fs)\n  \\<forall>Cs.\n     Subobjs P D Cs \\<longrightarrow>\n     (\\<exists>!fs'a.\n         (Cs, fs'a)\n         \\<in> insert (Ds, fs'(F \\<mapsto> v')) (S - {(Ds, fs')}))", "have oconf':\"P,h \\<turnstile> (D,?S') \\<surd>\""], ["proof (prove)\nusing this:\n  \\<forall>Cs fs'a.\n     (Cs, fs'a)\n     \\<in> insert (Ds, fs'(F \\<mapsto> v'))\n            (S - {(Ds, fs')}) \\<longrightarrow>\n     Subobjs P D Cs \\<and>\n     (\\<exists>fs Bs ms.\n         class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n         P,h \\<turnstile> fs'a (:\\<le>) map_of fs)\n  \\<forall>Cs.\n     Subobjs P D Cs \\<longrightarrow>\n     (\\<exists>!fs'a.\n         (Cs, fs'a)\n         \\<in> insert (Ds, fs'(F \\<mapsto> v')) (S - {(Ds, fs')}))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> (D, insert (Ds, fs'(F \\<mapsto> v'))\n                          (S - {(Ds, fs')})) \\<surd>", "by (simp add:oconf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> (D, insert (Ds, fs'(F \\<mapsto> v'))\n                        (S - {(Ds, fs')})) \\<surd>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 60 subgoals...", "with hconf ha"], ["proof (chain)\npicking this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P,h \\<turnstile> (D, insert (Ds, fs'(F \\<mapsto> v'))\n                        (S - {(Ds, fs')})) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P,h \\<turnstile> (D, insert (Ds, fs'(F \\<mapsto> v'))\n                        (S - {(Ds, fs')})) \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h(a \\<mapsto>\n    (D, insert (Ds, fs'(F \\<mapsto> v')) (S - {(Ds, fs')}))) \\<surd>", "by (rule hconf_upd_obj)"], ["proof (state)\nthis:\n  P \\<turnstile> h(a \\<mapsto>\n  (D, insert (Ds, fs'(F \\<mapsto> v')) (S - {(Ds, fs')}))) \\<surd>\n\ngoal (59 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 59 subgoals...", "next"], ["proof (state)\ngoal (59 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 59 subgoals...", "case (CallObj E e h l e' h' l' Copt M es)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> e : ?T; P \\<turnstile> h \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n  P,E,h \\<turnstile> Call e Copt M es : T\n  P \\<turnstile> h \\<surd>\n\ngoal (59 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 59 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> e : ?T; P \\<turnstile> h \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n  P,E,h \\<turnstile> Call e Copt M es : T\n  P \\<turnstile> h \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h' \\<surd>", "by (cases Copt) auto"], ["proof (state)\nthis:\n  P \\<turnstile> h' \\<surd>\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 58 subgoals...", "next"], ["proof (state)\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 58 subgoals...", "case (CallParams E es h l es' h' l' v Copt M)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> es [:] ?Ts; P \\<turnstile> h \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  P \\<turnstile> h \\<surd>\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 58 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> es [:] ?Ts; P \\<turnstile> h \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  P \\<turnstile> h \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h' \\<surd>", "by (cases Copt) auto"], ["proof (state)\nthis:\n  P \\<turnstile> h' \\<surd>\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 57 subgoals...", "next"], ["proof (state)\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 57 subgoals...", "case (RedCallNull E Copt M vs h l)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Call null Copt M (map Val vs) : T\n  P \\<turnstile> h \\<surd>\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 57 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call null Copt M (map Val vs) : T\n  P \\<turnstile> h \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h \\<surd>", "by (cases Copt) auto"], ["proof (state)\nthis:\n  P \\<turnstile> h \\<surd>\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> aa \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> aa \\<surd>\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P \\<turnstile> aa \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> aa \\<surd>\nA total of 56 subgoals...", "qed auto"], ["", "theorem assumes wf:\"wwf_prog P\"\nshows red_preserves_lconf:\n  \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>T. \\<lbrakk> P,E,h \\<turnstile> e:T; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P \\<turnstile> E \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E)\"\nand reds_preserves_lconf:\n  \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>Ts. \\<lbrakk> P,E,h \\<turnstile> es[:]Ts; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P \\<turnstile> E \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>T.\n         \\<lbrakk>P,E,h \\<turnstile> e : T;\n          P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n          P \\<turnstile> E \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E)) &&&\n    (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts.\n         \\<lbrakk>P,E,h \\<turnstile> es [:] Ts;\n          P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n          P \\<turnstile> E \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E))", "proof(induct rule:red_reds_inducts)"], ["proof (state)\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 61 subgoals...", "case RedNew"], ["proof (state)\nthis:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  h'_ = h_(a_ \\<mapsto> (C_, Collect (init_obj P C_)))\n  P,E_,h_ \\<turnstile> new C_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>)\\<^sub>w E_\n  P \\<turnstile> E_ \\<surd>\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E,h \\<turnstile> new C : T; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 61 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  h'_ = h_(a_ \\<mapsto> (C_, Collect (init_obj P C_)))\n  P,E_,h_ \\<turnstile> new C_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>)\\<^sub>w E_\n  P \\<turnstile> E_ \\<surd>\n\ngoal (1 subgoal):\n 1. P,h'_ \\<turnstile> l_ (:\\<le>)\\<^sub>w E_", "by(fast intro:lconf_hext red_hext_incr[OF red_reds.RedNew])"], ["proof (state)\nthis:\n  P,h'_ \\<turnstile> l_ (:\\<le>)\\<^sub>w E_\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 60 subgoals...", "next"], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 60 subgoals...", "case (RedLAss E V T v v' h l T')"], ["proof (state)\nthis:\n  E V = \\<lfloor>T\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 60 subgoals...", "have casts:\"P \\<turnstile> T casts v to v'\" and env:\"E V = Some T\"\n    and wt:\"P,E,h \\<turnstile> V:=Val v : T'\" and lconf:\"P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> T casts v to v'  &&& E V = \\<lfloor>T\\<rfloor>) &&&\n    P,E,h \\<turnstile> V:=Val v : T' &&&\n    P,h \\<turnstile> l (:\\<le>)\\<^sub>w E", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> T casts v to v' \n  E V = \\<lfloor>T\\<rfloor>\n  P,E,h \\<turnstile> V:=Val v : T'\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 60 subgoals...", "from wt env"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> V:=Val v : T'\n  E V = \\<lfloor>T\\<rfloor>", "have eq:\"T = T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> V:=Val v : T'\n  E V = \\<lfloor>T\\<rfloor>\n\ngoal (1 subgoal):\n 1. T = T'", "by auto"], ["proof (state)\nthis:\n  T = T'\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 60 subgoals...", "with casts wt wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  wwf_prog P\n  T = T'", "have conf:\"P,h \\<turnstile> v' :\\<le> T'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  wwf_prog P\n  T = T'\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T'", "by(auto intro:casts_conf)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v' :\\<le> T'\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 60 subgoals...", "with lconf env eq"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  E V = \\<lfloor>T\\<rfloor>\n  T = T'\n  P,h \\<turnstile> v' :\\<le> T'", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  E V = \\<lfloor>T\\<rfloor>\n  T = T'\n  P,h \\<turnstile> v' :\\<le> T'\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E", "by (simp del:fun_upd_apply)(erule lconf_upd,simp_all)"], ["proof (state)\nthis:\n  P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E\n\ngoal (59 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 59 subgoals...", "next"], ["proof (state)\ngoal (59 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 59 subgoals...", "case RedFAss"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(D_, S_)\\<rfloor>\n  P \\<turnstile> last Cs'_ has least F_:T_ via Cs_\n  P \\<turnstile> T_ casts v_ to v'_ \n  Ds_ = Cs'_ @\\<^sub>p Cs_\n  (Ds_, fs_) \\<in> S_\n  P,E_,h_ \\<turnstile> ref (a_, Cs'_)\\<bullet>F_{Cs_} := Val v_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>)\\<^sub>w E_\n  P \\<turnstile> E_ \\<surd>\n\ngoal (59 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 59 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(D_, S_)\\<rfloor>\n  P \\<turnstile> last Cs'_ has least F_:T_ via Cs_\n  P \\<turnstile> T_ casts v_ to v'_ \n  Ds_ = Cs'_ @\\<^sub>p Cs_\n  (Ds_, fs_) \\<in> S_\n  P,E_,h_ \\<turnstile> ref (a_, Cs'_)\\<bullet>F_{Cs_} := Val v_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>)\\<^sub>w E_\n  P \\<turnstile> E_ \\<surd>\n\ngoal (1 subgoal):\n 1. P,h_(a_ \\<mapsto>\n    (D_,\n     insert (Ds_, fs_(F_ \\<mapsto> v'_))\n      (S_ - {(Ds_, fs_)}))) \\<turnstile> l_ (:\\<le>)\\<^sub>w E_", "by(auto intro:lconf_hext red_hext_incr[OF red_reds.RedFAss] \n         simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  P,h_(a_ \\<mapsto>\n  (D_,\n   insert (Ds_, fs_(F_ \\<mapsto> v'_))\n    (S_ - {(Ds_, fs_)}))) \\<turnstile> l_ (:\\<le>)\\<^sub>w E_\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "next"], ["proof (state)\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "case (BlockRedNone E V T e h l e' h' l' T')"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n   P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  l' V = None\n  \\<not> assigned V e\n  P,E,h \\<turnstile> {V:T; e} : T'\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "have red:\"P,E(V \\<mapsto> T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH: \"\\<And>T''. \\<lbrakk> P,E(V \\<mapsto> T),h \\<turnstile> e : T''; P,h \\<turnstile> l(V:=None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n                      envconf P (E(V \\<mapsto> T)) \\<rbrakk>\n                   \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\"\n    and lconf: \"P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\" and wte: \"P,E,h \\<turnstile> {V:T; e} : T'\"\n    and envconf:\"envconf P E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E(V \\<mapsto>\n     T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                     \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T''.\n         \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : T'';\n          P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n          P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \n                           \\<mapsto> T))) &&&\n    P,h \\<turnstile> l (:\\<le>)\\<^sub>w E &&&\n    P,E,h \\<turnstile> {V:T; e} : T' &&& P \\<turnstile> E \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : ?T'';\n   P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n   P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,E,h \\<turnstile> {V:T; e} : T'\n  P \\<turnstile> E \\<surd>\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "from lconf_hext[OF lconf red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E", "have lconf':\"P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "from wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> {V:T; e} : T'", "have wte':\"P,E(V\\<mapsto>T),h \\<turnstile> e : T'\" and type:\"is_type P T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h \\<turnstile> e : T' &&& is_type P T", "by (auto elim:WTrt.cases)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  is_type P T\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "from envconf type"], ["proof (chain)\npicking this:\n  P \\<turnstile> E \\<surd>\n  is_type P T", "have envconf':\"envconf P (E(V \\<mapsto> T))\""], ["proof (prove)\nusing this:\n  P \\<turnstile> E \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> E(V \\<mapsto> T) \\<surd>", "by(auto simp:envconf_def)"], ["proof (state)\nthis:\n  P \\<turnstile> E(V \\<mapsto> T) \\<surd>\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "from lconf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E", "have \"P,h \\<turnstile> (l(V := None)) (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "by (simp add:lconf_def fun_upd_apply)"], ["proof (state)\nthis:\n  P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "from IH[OF wte' this envconf']"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "have \"P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (58 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 58 subgoals...", "with lconf'"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "show ?case"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l'(V := l V) (:\\<le>)\\<^sub>w E", "by (fastforce simp:lconf_def fun_upd_apply split:if_split_asm)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l'(V := l V) (:\\<le>)\\<^sub>w E\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "next"], ["proof (state)\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "case (BlockRedSome E V T e h l e' h' l' v T')"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n   P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  P,E,h \\<turnstile> {V:T; e} : T'\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "have red:\"P,E(V \\<mapsto> T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH: \"\\<And>T''. \\<lbrakk> P,E(V \\<mapsto> T),h \\<turnstile> e : T''; P,h \\<turnstile> l(V:=None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n                      envconf P (E(V \\<mapsto> T)) \\<rbrakk>\n                   \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\"\n    and lconf: \"P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\" and wte: \"P,E,h \\<turnstile> {V:T; e} : T'\"\n    and envconf:\"envconf P E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E(V \\<mapsto>\n     T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                     \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T''.\n         \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : T'';\n          P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n          P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \n                           \\<mapsto> T))) &&&\n    P,h \\<turnstile> l (:\\<le>)\\<^sub>w E &&&\n    P,E,h \\<turnstile> {V:T; e} : T' &&& P \\<turnstile> E \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : ?T'';\n   P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n   P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,E,h \\<turnstile> {V:T; e} : T'\n  P \\<turnstile> E \\<surd>\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "from lconf_hext[OF lconf red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E", "have lconf':\"P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "from wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> {V:T; e} : T'", "have wte':\"P,E(V\\<mapsto>T),h \\<turnstile> e : T'\" and type:\"is_type P T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h \\<turnstile> e : T' &&& is_type P T", "by (auto elim:WTrt.cases)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  is_type P T\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "from envconf type"], ["proof (chain)\npicking this:\n  P \\<turnstile> E \\<surd>\n  is_type P T", "have envconf':\"envconf P (E(V \\<mapsto> T))\""], ["proof (prove)\nusing this:\n  P \\<turnstile> E \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> E(V \\<mapsto> T) \\<surd>", "by(auto simp:envconf_def)"], ["proof (state)\nthis:\n  P \\<turnstile> E(V \\<mapsto> T) \\<surd>\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "from lconf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E", "have \"P,h \\<turnstile> (l(V := None)) (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "by (simp add:lconf_def fun_upd_apply)"], ["proof (state)\nthis:\n  P,h \\<turnstile> l(V := None) (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "from IH[OF wte' this envconf']"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "have \"P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (57 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 57 subgoals...", "with lconf'"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "show ?case"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l'(V := l V) (:\\<le>)\\<^sub>w E", "by (fastforce simp:lconf_def fun_upd_apply split:if_split_asm)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l'(V := l V) (:\\<le>)\\<^sub>w E\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "next"], ["proof (state)\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "case (InitBlockRed E V T e h l v' e' h' l' v'' v T')"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n   P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  l' V = \\<lfloor>v''\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "have red: \"P,E(V \\<mapsto> T) \\<turnstile> \\<langle>e, (h, l(V\\<mapsto>v'))\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n     and IH: \"\\<And>T''. \\<lbrakk> P,E(V \\<mapsto> T),h \\<turnstile> e : T''; P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T); \n                       envconf P (E(V \\<mapsto> T)) \\<rbrakk>\n                   \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\"\n    and lconf:\"P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\" and l':\"l' V = Some v''\"\n    and wte:\"P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\"\n    and casts:\"P \\<turnstile> T casts v to v'\" and envconf:\"envconf P E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E(V \\<mapsto>\n     T) \\<turnstile> \\<langle>e,\n                      (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                     \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T''.\n         \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : T'';\n          P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto>\n          T);\n          P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \n                           \\<mapsto> T)) &&&\n     P,h \\<turnstile> l (:\\<le>)\\<^sub>w E) &&&\n    (l' V = \\<lfloor>v''\\<rfloor> &&&\n     P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T') &&&\n    P \\<turnstile> T casts v to v'  &&& P \\<turnstile> E \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : ?T'';\n   P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T);\n   P \\<turnstile> E(V \\<mapsto> T) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  l' V = \\<lfloor>v''\\<rfloor>\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\n  P \\<turnstile> T casts v to v' \n  P \\<turnstile> E \\<surd>\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "from lconf_hext[OF lconf red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E", "have lconf':\"P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "from wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'", "obtain T'' where wte':\"P,E(V\\<mapsto>T),h \\<turnstile> e : T'\"\n    and wt:\"P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T''\"\n    and type:\"is_type P T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        \\<lbrakk>P,E(V \\<mapsto> T),h \\<turnstile> e : T';\n         P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T'';\n         is_type P T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim:WTrt.cases)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T''\n  is_type P T\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "from envconf type"], ["proof (chain)\npicking this:\n  P \\<turnstile> E \\<surd>\n  is_type P T", "have envconf':\"envconf P (E(V \\<mapsto> T))\""], ["proof (prove)\nusing this:\n  P \\<turnstile> E \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> E(V \\<mapsto> T) \\<surd>", "by(auto simp:envconf_def)"], ["proof (state)\nthis:\n  P \\<turnstile> E(V \\<mapsto> T) \\<surd>\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T''", "have \"T'' = T\""], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T''\n\ngoal (1 subgoal):\n 1. T'' = T", "by auto"], ["proof (state)\nthis:\n  T'' = T\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "with wf casts wt"], ["proof (chain)\npicking this:\n  wwf_prog P\n  P \\<turnstile> T casts v to v' \n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T''\n  T'' = T", "have \"P,h \\<turnstile> v' :\\<le> T\""], ["proof (prove)\nusing this:\n  wwf_prog P\n  P \\<turnstile> T casts v to v' \n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T''\n  T'' = T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "by(auto intro:casts_conf)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v' :\\<le> T\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "with lconf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h \\<turnstile> v' :\\<le> T", "have \"P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h \\<turnstile> v' :\\<le> T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "by -(rule lconf_upd2)"], ["proof (state)\nthis:\n  P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "from IH[OF wte' this envconf']"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "have \"P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (56 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 56 subgoals...", "with lconf'"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "show ?case"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l'(V := l V) (:\\<le>)\\<^sub>w E", "by (fastforce simp:lconf_def fun_upd_apply split:if_split_asm)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l'(V := l V) (:\\<le>)\\<^sub>w E\n\ngoal (55 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 55 subgoals...", "next"], ["proof (state)\ngoal (55 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 55 subgoals...", "case (CallObj E e h l e' h' l' Copt M es)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> e : ?T; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n   P \\<turnstile> E \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E\n  P,E,h \\<turnstile> Call e Copt M es : T\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (55 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 55 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> e : ?T; P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n   P \\<turnstile> E \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E\n  P,E,h \\<turnstile> Call e Copt M es : T\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E", "by (cases Copt) auto"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E\n\ngoal (54 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 54 subgoals...", "next"], ["proof (state)\ngoal (54 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 54 subgoals...", "case (CallParams E es h l es' h' l' v Copt M)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> es [:] ?Ts;\n   P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P \\<turnstile> E \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (54 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 54 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E,h \\<turnstile> es [:] ?Ts;\n   P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P \\<turnstile> E \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E", "by (cases Copt) auto"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E\n\ngoal (53 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 53 subgoals...", "next"], ["proof (state)\ngoal (53 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 53 subgoals...", "case (RedCallNull E Copt M vs h l)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Call null Copt M (map Val vs) : T\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (53 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 53 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call null Copt M (map Val vs) : T\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n  P \\<turnstile> E \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l (:\\<le>)\\<^sub>w E", "by (cases Copt) auto"], ["proof (state)\nthis:\n  P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n\ngoal (52 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E,h \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n                (a, Cs @ [C] @ Cs') : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,a \\<turnstile> e : T;\n            P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n            P \\<turnstile> E \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E;\n        P,E,a \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> ba (:\\<le>)\\<^sub>w E\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E,a \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> b (:\\<le>)\\<^sub>w E\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T;\n        P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n        P \\<turnstile> E \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T;\n         P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E;\n         P \\<turnstile> E \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,aa \\<turnstile> b (:\\<le>)\\<^sub>w E\nA total of 52 subgoals...", "qed auto"], ["", "text\\<open>Preservation of definite assignment more complex and requires a\nfew lemmas first.\\<close>"], ["", "lemma [iff]: \"\\<And>A. \\<lbrakk> length Vs = length Ts; length vs = length Ts\\<rbrakk> \\<Longrightarrow>\n \\<D> (blocks (Vs,Ts,vs,e)) A = \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>length Vs = length Ts; length vs = length Ts\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (Vs, Ts, vs, e)) A =\n                         \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)", "apply(induct Vs Ts vs e rule:blocks_old_induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>aj ak al A.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length []\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks ([], [], aj # ak, al)) A =\n                         \\<D> al (A \\<squnion> \\<lfloor>set []\\<rfloor>)\n 2. \\<And>ad ae a b A.\n       \\<lbrakk>length [] = length (ad # ae);\n        length a = length (ad # ae)\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks ([], ad # ae, a, b)) A =\n                         \\<D> b (A \\<squnion> \\<lfloor>set []\\<rfloor>)\n 3. \\<And>V Vs a b A.\n       \\<lbrakk>length (V # Vs) = length []; length a = length []\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (V # Vs, [], a, b)) A =\n                         \\<D> b\n                          (A \\<squnion> \\<lfloor>set (V # Vs)\\<rfloor>)\n 4. \\<And>V Vs T Ts aw A.\n       \\<lbrakk>length (V # Vs) = length (T # Ts);\n        length [] = length (T # Ts)\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (V # Vs, T # Ts, [], aw)) A =\n                         \\<D> aw\n                          (A \\<squnion> \\<lfloor>set (V # Vs)\\<rfloor>)\n 5. \\<And>V Vs T Ts v vs e A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>length Vs = length Ts;\n                    length vs = length Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<D> (blocks (Vs, Ts, vs, e)) A =\n                                     \\<D> e\n(A \\<squnion> \\<lfloor>set Vs\\<rfloor>);\n        length (V # Vs) = length (T # Ts);\n        length (v # vs) = length (T # Ts)\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (V # Vs, T # Ts, v # vs, e)) A =\n                         \\<D> e\n                          (A \\<squnion> \\<lfloor>set (V # Vs)\\<rfloor>)\n 6. \\<And>e A.\n       \\<lbrakk>length [] = length []; length [] = length []\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks ([], [], [], e)) A =\n                         \\<D> e (A \\<squnion> \\<lfloor>set []\\<rfloor>)", "apply(simp_all add:hyperset_defs)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma red_lA_incr: \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e'\"\n  and reds_lA_incr: \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n     \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e') &&&\n    (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>\n     \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es')", "apply (induct rule:red_reds_inducts)"], ["proof (prove)\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (new C) \\<sqsubseteq>\n                         \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (ref (a, [C]))\n 2. \\<And>h E C l.\n       new_Addr h = None \\<Longrightarrow>\n       \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> (new C) \\<sqsubseteq>\n       \\<lfloor>dom l\\<rfloor> \\<squnion>\n       \\<A> (Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<lfloor>dom b\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n        \\<lfloor>dom ba\\<rfloor> \\<squnion> \\<A> e'\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom b\\<rfloor> \\<squnion>\n                         \\<A> (\\<lparr>C\\<rparr>e) \\<sqsubseteq>\n                         \\<lfloor>dom ba\\<rfloor> \\<squnion>\n                         \\<A> (\\<lparr>C\\<rparr>e')\n 4. \\<And>E C a b.\n       \\<lfloor>dom b\\<rfloor> \\<squnion>\n       \\<A> (\\<lparr>C\\<rparr>null) \\<sqsubseteq>\n       \\<lfloor>dom b\\<rfloor> \\<squnion> \\<A> null\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom b\\<rfloor> \\<squnion>\n                         \\<A> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<sqsubseteq>\n                         \\<lfloor>dom b\\<rfloor> \\<squnion>\n                         \\<A> (ref (a, Ds))\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<lfloor>dom b\\<rfloor> \\<squnion>\n       \\<A> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs')) \\<sqsubseteq>\n       \\<lfloor>dom b\\<rfloor> \\<squnion> \\<A> (ref (a, Cs @ [C]))\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom b\\<rfloor> \\<squnion>\n                         \\<A> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<sqsubseteq>\n                         \\<lfloor>dom b\\<rfloor> \\<squnion>\n                         \\<A>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<lfloor>dom b\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n        \\<lfloor>dom ba\\<rfloor> \\<squnion> \\<A> e'\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom b\\<rfloor> \\<squnion>\n                         \\<A> (Cast C e) \\<sqsubseteq>\n                         \\<lfloor>dom ba\\<rfloor> \\<squnion>\n                         \\<A> (Cast C e')\n 9. \\<And>E C a b.\n       \\<lfloor>dom b\\<rfloor> \\<squnion> \\<A> (Cast C null) \\<sqsubseteq>\n       \\<lfloor>dom b\\<rfloor> \\<squnion> \\<A> null\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ;\n         Ds = Cs @\\<^sub>p Cs'\\<rbrakk>\n        \\<Longrightarrow> \\<lfloor>dom b\\<rfloor> \\<squnion>\n                          \\<A> (Cast C (ref (a, Cs))) \\<sqsubseteq>\n                          \\<lfloor>dom b\\<rfloor> \\<squnion>\n                          \\<A> (ref (a, Ds))\nA total of 61 subgoals...", "apply (simp_all del: fun_upd_apply add: hyperset_defs)"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 2. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 3. \\<And>E e a b e' aa ba V x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> insert V x2 \\<and>\n                         x2c \\<subseteq> insert V x2\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 5. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 6. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 7. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 8. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 9. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 10. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n        \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n         P \\<turnstile> T casts v to v' ;\n         P,E(V \\<mapsto>\n         T) \\<turnstile> \\<langle>e,\n                          (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                         \\<langle>e',(h', l')\\<rangle>;\n         \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n         \\<A> e = \\<lfloor>x2c\\<rfloor>;\n         insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n        \\<Longrightarrow> (l V = None \\<longrightarrow>\n                           dom l\n                           \\<subseteq> dom l' - {V} \\<union>\n (x2a - {V}) \\<and>\n                           x2c - {V}\n                           \\<subseteq> dom l' - {V} \\<union>\n (x2a - {V})) \\<and>\n                          ((\\<exists>y.\n                               l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                           dom l\n                           \\<subseteq> insert V\n  (dom l' \\<union> (x2a - {V})) \\<and>\n                           x2c - {V}\n                           \\<subseteq> insert V\n  (dom l' \\<union> (x2a - {V})))\nA total of 16 subgoals...", "apply blast"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 2. \\<And>E e a b e' aa ba V x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> insert V x2 \\<and>\n                         x2c \\<subseteq> insert V x2\n 3. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 4. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 5. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 6. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 7. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 8. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 9. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 10. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n        \\<lbrakk>x2b \\<subseteq> x2;\n         P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',(aa, ba)\\<rangle>;\n         \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n         \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n        \\<Longrightarrow> \\<forall>x2.\n                             \\<A> e\\<^sub>2 =\n                             \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                             dom b\n                             \\<subseteq> dom ba \\<union>\n   (x2a \\<union> x2) \\<and>\n                             x2c\n                             \\<subseteq> dom ba \\<union>\n   (x2a \\<union> x2) \\<and>\n                             x2 \\<subseteq> dom ba \\<union>\n      (x2a \\<union> x2)\nA total of 15 subgoals...", "apply blast"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E e a b e' aa ba V x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> insert V x2 \\<and>\n                         x2c \\<subseteq> insert V x2\n 2. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 3. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 4. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 5. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 6. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 7. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 8. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 x2 x2a x2b x2c.\n        \\<lbrakk>x2b \\<subseteq> x2;\n         P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',(aa, ba)\\<rangle>;\n         \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n         \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n        \\<Longrightarrow> \\<forall>x2.\n                             (\\<A> e\\<^sub>2 = None \\<longrightarrow>\n                              x2c = x2 \\<longrightarrow>\n                              (\\<forall>x2b.\n                                  \\<A> e\\<^sub>1 =\n                                  \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                  dom b\n                                  \\<subseteq> dom ba \\<union>\n        (x2a \\<union> x2b) \\<and>\n                                  x2 \\<subseteq> dom ba \\<union>\n           (x2a \\<union> x2b) \\<and>\n                                  x2b\n                                  \\<subseteq> dom ba \\<union>\n        (x2a \\<union> x2b))) \\<and>\n                             (\\<forall>x2b.\n                                 \\<A> e\\<^sub>2 =\n                                 \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                 x2c = x2 \\<longrightarrow>\n                                 (\\<A> e\\<^sub>1 = None \\<longrightarrow>\n                                  dom b\n                                  \\<subseteq> dom ba \\<union>\n        (x2a \\<union> x2b) \\<and>\n                                  x2 \\<subseteq> dom ba \\<union>\n           (x2a \\<union> x2b) \\<and>\n                                  x2b\n                                  \\<subseteq> dom ba \\<union>\n        (x2a \\<union> x2b)) \\<and>\n                                 (\\<forall>x2c.\n                                     \\<A> e\\<^sub>1 =\n                                     \\<lfloor>x2c\\<rfloor> \\<longrightarrow>\n                                     dom b\n                                     \\<subseteq> dom ba \\<union>\n           (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                     x2 \\<subseteq> dom ba \\<union>\n              (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                     x2c \\<inter> x2b\n                                     \\<subseteq> dom ba \\<union>\n           (x2a \\<union> x2c \\<inter> x2b)))\nA total of 14 subgoals...", "apply blast"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 2. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 3. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 4. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 5. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 6. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 7. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            (\\<A> e\\<^sub>2 = None \\<longrightarrow>\n                             x2c = x2 \\<longrightarrow>\n                             (\\<forall>x2b.\n                                 \\<A> e\\<^sub>1 =\n                                 \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b))) \\<and>\n                            (\\<forall>x2b.\n                                \\<A> e\\<^sub>2 =\n                                \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                x2c = x2 \\<longrightarrow>\n                                (\\<A> e\\<^sub>1 = None \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b)) \\<and>\n                                (\\<forall>x2c.\n                                    \\<A> e\\<^sub>1 =\n                                    \\<lfloor>x2c\\<rfloor> \\<longrightarrow>\n                                    dom b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2 \\<subseteq> dom ba \\<union>\n             (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2c \\<inter> x2b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b)))\n 10. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n        \\<forall>x2 x2a.\n           \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n           \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n           x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2\nA total of 13 subgoals...", "apply blast"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>E e a b e' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 2. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 3. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 4. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 5. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 6. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            (\\<A> e\\<^sub>2 = None \\<longrightarrow>\n                             x2c = x2 \\<longrightarrow>\n                             (\\<forall>x2b.\n                                 \\<A> e\\<^sub>1 =\n                                 \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b))) \\<and>\n                            (\\<forall>x2b.\n                                \\<A> e\\<^sub>2 =\n                                \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                x2c = x2 \\<longrightarrow>\n                                (\\<A> e\\<^sub>1 = None \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b)) \\<and>\n                                (\\<forall>x2c.\n                                    \\<A> e\\<^sub>1 =\n                                    \\<lfloor>x2c\\<rfloor> \\<longrightarrow>\n                                    dom b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2 \\<subseteq> dom ba \\<union>\n             (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2c \\<inter> x2b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b)))\n 9. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2\n 10. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n        \\<forall>x2 x2a.\n           \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n           \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n           x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2a\nA total of 12 subgoals...", "apply blast"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 2. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 3. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 4. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 5. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            (\\<A> e\\<^sub>2 = None \\<longrightarrow>\n                             x2c = x2 \\<longrightarrow>\n                             (\\<forall>x2b.\n                                 \\<A> e\\<^sub>1 =\n                                 \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b))) \\<and>\n                            (\\<forall>x2b.\n                                \\<A> e\\<^sub>2 =\n                                \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                x2c = x2 \\<longrightarrow>\n                                (\\<A> e\\<^sub>1 = None \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b)) \\<and>\n                                (\\<forall>x2c.\n                                    \\<A> e\\<^sub>1 =\n                                    \\<lfloor>x2c\\<rfloor> \\<longrightarrow>\n                                    dom b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2 \\<subseteq> dom ba \\<union>\n             (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2c \\<inter> x2b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b)))\n 8. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2\n 9. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2a\n 10. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n        \\<lbrakk>x2b \\<subseteq> x2;\n         P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',(aa, ba)\\<rangle>;\n         \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n         \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n        \\<Longrightarrow> \\<forall>x2.\n                             \\<A>s es =\n                             \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                             dom b\n                             \\<subseteq> dom ba \\<union>\n   (x2a \\<union> x2) \\<and>\n                             x2c\n                             \\<subseteq> dom ba \\<union>\n   (x2a \\<union> x2) \\<and>\n                             x2 \\<subseteq> dom ba \\<union>\n      (x2a \\<union> x2)\nA total of 11 subgoals...", "apply blast"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 2. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 3. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 4. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            (\\<A> e\\<^sub>2 = None \\<longrightarrow>\n                             x2c = x2 \\<longrightarrow>\n                             (\\<forall>x2b.\n                                 \\<A> e\\<^sub>1 =\n                                 \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b))) \\<and>\n                            (\\<forall>x2b.\n                                \\<A> e\\<^sub>2 =\n                                \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                x2c = x2 \\<longrightarrow>\n                                (\\<A> e\\<^sub>1 = None \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b)) \\<and>\n                                (\\<forall>x2c.\n                                    \\<A> e\\<^sub>1 =\n                                    \\<lfloor>x2c\\<rfloor> \\<longrightarrow>\n                                    dom b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2 \\<subseteq> dom ba \\<union>\n             (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2c \\<inter> x2b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b)))\n 7. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2\n 8. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2a\n 9. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 10. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n        \\<lbrakk>x2b \\<subseteq> x2;\n         P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                          \\<langle>es',(aa, ba)\\<rangle>;\n         \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n         \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n        \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2", "apply blast"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>E V T e h l e' h' l' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 2. \\<And>E V T e h l e' h' l' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 3. \\<And>E V T e h l v' e' h' l' v'' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v''\\<rfloor>;\n        P \\<turnstile> T casts v to v' ;\n        P,E(V \\<mapsto>\n        T) \\<turnstile> \\<langle>e,\n                         (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l')\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 5. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            (\\<A> e\\<^sub>2 = None \\<longrightarrow>\n                             x2c = x2 \\<longrightarrow>\n                             (\\<forall>x2b.\n                                 \\<A> e\\<^sub>1 =\n                                 \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b))) \\<and>\n                            (\\<forall>x2b.\n                                \\<A> e\\<^sub>2 =\n                                \\<lfloor>x2b\\<rfloor> \\<longrightarrow>\n                                x2c = x2 \\<longrightarrow>\n                                (\\<A> e\\<^sub>1 = None \\<longrightarrow>\n                                 dom b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b) \\<and>\n                                 x2 \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2b) \\<and>\n                                 x2b\n                                 \\<subseteq> dom ba \\<union>\n       (x2a \\<union> x2b)) \\<and>\n                                (\\<forall>x2c.\n                                    \\<A> e\\<^sub>1 =\n                                    \\<lfloor>x2c\\<rfloor> \\<longrightarrow>\n                                    dom b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2 \\<subseteq> dom ba \\<union>\n             (x2a \\<union> x2c \\<inter> x2b) \\<and>\n                                    x2c \\<inter> x2b\n                                    \\<subseteq> dom ba \\<union>\n          (x2a \\<union> x2c \\<inter> x2b)))\n 6. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2\n 7. \\<And>e\\<^sub>1 e\\<^sub>2 b.\n       \\<forall>x2 x2a.\n          \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor> \\<longrightarrow>\n          \\<A> e\\<^sub>1 = \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n          x2 \\<inter> x2a \\<subseteq> dom b \\<union> x2a\n 8. \\<And>E e a b e' aa ba es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                         \\<langle>e',(aa, ba)\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom b\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ba \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ba \\<union> (x2a \\<union> x2)\n 9. \\<And>E es a b es' aa ba x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                         \\<langle>es',(aa, ba)\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ba \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom b \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom b \\<subseteq> x2 \\<and> x2c \\<subseteq> x2", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>Now preservation of definite assignment.\\<close>"], ["", "lemma assumes wf: \"wf_C_prog P\"\nshows red_preserves_defass:\n  \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>\"\nand \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> \\<D>s es \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l')\\<rangle>;\n      \\<D> e \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>) &&&\n    (\\<lbrakk>P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                               \\<langle>es',(h', l')\\<rangle>;\n      \\<D>s es \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>)", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 61 subgoals...", "case BinOpRed1"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (e_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n   \\<lfloor>dom b___\\<rfloor>\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 61 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (e_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n   \\<lfloor>dom b___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n     \\<lfloor>dom b_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n   \\<lfloor>dom b_\\<rfloor>\n\ngoal (60 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 60 subgoals...", "next"], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 60 subgoals...", "case FAssRed1"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (e_\\<bullet>F_{Cs_} := e\\<^sub>2_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (60 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 60 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (e_\\<bullet>F_{Cs_} := e\\<^sub>2_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_\\<bullet>F_{Cs_} := e\\<^sub>2_) \\<lfloor>dom b_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_\\<bullet>F_{Cs_} := e\\<^sub>2_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (59 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 59 subgoals...", "next"], ["proof (state)\ngoal (59 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 59 subgoals...", "case CallObj"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (Call e_ Copt_ M_ es_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (59 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 59 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (Call e_ Copt_ M_ es_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (Call e'_ Copt_ M_ es_) \\<lfloor>dom b_\\<rfloor>", "by (auto elim!: Ds_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (Call e'_ Copt_ M_ es_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (58 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 58 subgoals...", "next"], ["proof (state)\ngoal (58 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 58 subgoals...", "case (RedCall h l a C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs'\n                vs bs new_body E)"], ["proof (state)\nthis:\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  length vs = length pns\n  length Ts = length pns\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  \\<D> (Call (ref (a, Cs)) None M (map Val vs)) \\<lfloor>dom l\\<rfloor>\n\ngoal (58 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 58 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  length vs = length pns\n  length Ts = length pns\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  \\<D> (Call (ref (a, Cs)) None M (map Val vs)) \\<lfloor>dom l\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> new_body \\<lfloor>dom l\\<rfloor>", "apply (auto dest!:select_method_wf_mdecl[OF wf] simp:wf_mdecl_def elim!:D_mono')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body =\n     (case T' of\n      Class D \\<Rightarrow>\n        \\<lparr>D\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)}\n      | _ \\<Rightarrow> {this:Class (last Cs'); this:=ref (a, Cs');;\n          blocks (pns, Ts, vs, body)});\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> \\<D>\n                       (case T' of\n                        Class D \\<Rightarrow>\n                          \\<lparr>D\\<rparr>{this:Class\n            (last Cs'); this:=ref (a, Cs');;\n                          blocks (pns, Ts, vs, body)}\n                        | _ \\<Rightarrow>\n                            {this:Class (last Cs'); this:=ref (a, Cs');;\n                            blocks (pns, Ts, vs, body)})\n                       \\<lfloor>dom l\\<rfloor>", "apply(cases T')"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body =\n     (case T' of\n      Class D \\<Rightarrow>\n        \\<lparr>D\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)}\n      | _ \\<Rightarrow> {this:Class (last Cs'); this:=ref (a, Cs');;\n          blocks (pns, Ts, vs, body)});\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>; T' = Void\\<rbrakk>\n    \\<Longrightarrow> \\<D>\n                       (case T' of\n                        Class D \\<Rightarrow>\n                          \\<lparr>D\\<rparr>{this:Class\n            (last Cs'); this:=ref (a, Cs');;\n                          blocks (pns, Ts, vs, body)}\n                        | _ \\<Rightarrow>\n                            {this:Class (last Cs'); this:=ref (a, Cs');;\n                            blocks (pns, Ts, vs, body)})\n                       \\<lfloor>dom l\\<rfloor>\n 2. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body =\n     (case T' of\n      Class D \\<Rightarrow>\n        \\<lparr>D\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)}\n      | _ \\<Rightarrow> {this:Class (last Cs'); this:=ref (a, Cs');;\n          blocks (pns, Ts, vs, body)});\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>;\n     T' = Boolean\\<rbrakk>\n    \\<Longrightarrow> \\<D>\n                       (case T' of\n                        Class D \\<Rightarrow>\n                          \\<lparr>D\\<rparr>{this:Class\n            (last Cs'); this:=ref (a, Cs');;\n                          blocks (pns, Ts, vs, body)}\n                        | _ \\<Rightarrow>\n                            {this:Class (last Cs'); this:=ref (a, Cs');;\n                            blocks (pns, Ts, vs, body)})\n                       \\<lfloor>dom l\\<rfloor>\n 3. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body =\n     (case T' of\n      Class D \\<Rightarrow>\n        \\<lparr>D\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)}\n      | _ \\<Rightarrow> {this:Class (last Cs'); this:=ref (a, Cs');;\n          blocks (pns, Ts, vs, body)});\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>;\n     T' = Integer\\<rbrakk>\n    \\<Longrightarrow> \\<D>\n                       (case T' of\n                        Class D \\<Rightarrow>\n                          \\<lparr>D\\<rparr>{this:Class\n            (last Cs'); this:=ref (a, Cs');;\n                          blocks (pns, Ts, vs, body)}\n                        | _ \\<Rightarrow>\n                            {this:Class (last Cs'); this:=ref (a, Cs');;\n                            blocks (pns, Ts, vs, body)})\n                       \\<lfloor>dom l\\<rfloor>\n 4. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body =\n     (case T' of\n      Class D \\<Rightarrow>\n        \\<lparr>D\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)}\n      | _ \\<Rightarrow> {this:Class (last Cs'); this:=ref (a, Cs');;\n          blocks (pns, Ts, vs, body)});\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>; T' = NT\\<rbrakk>\n    \\<Longrightarrow> \\<D>\n                       (case T' of\n                        Class D \\<Rightarrow>\n                          \\<lparr>D\\<rparr>{this:Class\n            (last Cs'); this:=ref (a, Cs');;\n                          blocks (pns, Ts, vs, body)}\n                        | _ \\<Rightarrow>\n                            {this:Class (last Cs'); this:=ref (a, Cs');;\n                            blocks (pns, Ts, vs, body)})\n                       \\<lfloor>dom l\\<rfloor>\n 5. \\<And>x5.\n       \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        length vs = length pns; length Ts = length pns;\n        new_body =\n        (case T' of\n         Class D \\<Rightarrow>\n           \\<lparr>D\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n           blocks (pns, Ts, vs, body)}\n         | _ \\<Rightarrow> {this:Class (last Cs'); this:=ref (a, Cs');;\n             blocks (pns, Ts, vs, body)});\n        \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n        bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)};\n        \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n        distinct pns; this \\<notin> set pns;\n        P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n           Class (last Cs')] \\<turnstile> body :: T;\n        \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>;\n        T' = Class x5\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (case T' of\n                           Class D \\<Rightarrow>\n                             \\<lparr>D\\<rparr>{this:Class\n               (last Cs'); this:=ref (a, Cs');;\n                             blocks (pns, Ts, vs, body)}\n                           | _ \\<Rightarrow>\n                               {this:Class (last Cs'); this:=ref (a, Cs');;\n                               blocks (pns, Ts, vs, body)})\n                          \\<lfloor>dom l\\<rfloor>", "apply auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', Void, pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>; T' = Void\\<rbrakk>\n    \\<Longrightarrow> \\<D> body\n                       \\<lfloor>insert this\n                                 (dom l \\<union> set pns)\\<rfloor>\n 2. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last\n                     Cs has least M = (Ts', Boolean, pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>;\n     T' = Boolean\\<rbrakk>\n    \\<Longrightarrow> \\<D> body\n                       \\<lfloor>insert this\n                                 (dom l \\<union> set pns)\\<rfloor>\n 3. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last\n                     Cs has least M = (Ts', Integer, pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>;\n     T' = Integer\\<rbrakk>\n    \\<Longrightarrow> \\<D> body\n                       \\<lfloor>insert this\n                                 (dom l \\<union> set pns)\\<rfloor>\n 4. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n     P \\<turnstile> last Cs has least M = (Ts', NT, pns', body') via Ds;\n     length vs = length pns; length Ts = length pns;\n     new_body = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n     bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n     blocks (pns, Ts, vs, body)};\n     \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n     distinct pns; this \\<notin> set pns;\n     P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n        Class (last Cs')] \\<turnstile> body :: T;\n     \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>; T' = NT\\<rbrakk>\n    \\<Longrightarrow> \\<D> body\n                       \\<lfloor>insert this\n                                 (dom l \\<union> set pns)\\<rfloor>\n 5. \\<And>x5.\n       \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last\n                        Cs has least M = (Ts', Class x5, pns',\n    body') via Ds;\n        length vs = length pns; length Ts = length pns;\n        new_body =\n        \\<lparr>x5\\<rparr>{this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)};\n        \\<D>s (map Val vs) \\<lfloor>dom l\\<rfloor>;\n        bs = {this:Class (last Cs'); this:=ref (a, Cs');;\n        blocks (pns, Ts, vs, body)};\n        \\<forall>x\\<in>set Ts. is_type P x; is_type P T; T \\<noteq> NT;\n        distinct pns; this \\<notin> set pns;\n        P,[pns [\\<mapsto>] Ts, this \\<mapsto>\n           Class (last Cs')] \\<turnstile> body :: T;\n        \\<D> body \\<lfloor>insert this (set pns)\\<rfloor>;\n        T' = Class x5\\<rbrakk>\n       \\<Longrightarrow> \\<D> body\n                          \\<lfloor>insert this\n                                    (dom l \\<union> set pns)\\<rfloor>", "by(rule_tac A=\"\\<lfloor>insert this (set pns)\\<rfloor>\" in D_mono,clarsimp simp:hyperset_defs,\n          assumption)+"], ["proof (state)\nthis:\n  \\<D> new_body \\<lfloor>dom l\\<rfloor>\n\ngoal (57 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 57 subgoals...", "next"], ["proof (state)\ngoal (57 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 57 subgoals...", "case RedStaticCall"], ["proof (state)\nthis:\n  P \\<turnstile> Path last Cs_ to C_ unique\n  P \\<turnstile> Path last Cs_ to C_ via Cs''_ \n  P \\<turnstile> C_ has least M_ = (Ts_, T_, pns_, body_) via Cs'_\n  Ds_ = (Cs_ @\\<^sub>p Cs''_) @\\<^sub>p Cs'_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  \\<D> (Call (ref (a___, Cs_)) \\<lfloor>C_\\<rfloor> M_ (map Val vs_))\n   \\<lfloor>dom b_\\<rfloor>\n\ngoal (57 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 57 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> Path last Cs_ to C_ unique\n  P \\<turnstile> Path last Cs_ to C_ via Cs''_ \n  P \\<turnstile> C_ has least M_ = (Ts_, T_, pns_, body_) via Cs'_\n  Ds_ = (Cs_ @\\<^sub>p Cs''_) @\\<^sub>p Cs'_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  \\<D> (Call (ref (a___, Cs_)) \\<lfloor>C_\\<rfloor> M_ (map Val vs_))\n   \\<lfloor>dom b_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D>\n     (blocks\n       (this # pns_, Class (last Ds_) # Ts_, Ref (a___, Ds_) # vs_, body_))\n     \\<lfloor>dom b_\\<rfloor>", "apply (auto dest!:has_least_wf_mdecl[OF wf] simp:wf_mdecl_def elim!:D_mono')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> Path last Cs_ to C_ unique;\n     P \\<turnstile> Path last Cs_ to C_ via Cs''_ ;\n     Ds_ = (Cs_ @\\<^sub>p Cs''_) @\\<^sub>p Cs'_; length vs_ = length pns_;\n     length Ts_ = length pns_; \\<D>s (map Val vs_) \\<lfloor>dom b_\\<rfloor>;\n     \\<forall>x\\<in>set Ts_. is_type P x; is_type P T_; T_ \\<noteq> NT;\n     distinct pns_; this \\<notin> set pns_;\n     P,[pns_ [\\<mapsto>] Ts_, this \\<mapsto>\n        Class (last Cs'_)] \\<turnstile> body_ :: T_\\<rbrakk>\n    \\<Longrightarrow> \\<lfloor>insert this (set pns_)\\<rfloor> \\<sqsubseteq>\n                      \\<lfloor>insert this\n                                (dom b_ \\<union> set pns_)\\<rfloor>", "by(auto simp:hyperset_defs)"], ["proof (state)\nthis:\n  \\<D>\n   (blocks\n     (this # pns_, Class (last Ds_) # Ts_, Ref (a___, Ds_) # vs_, body_))\n   \\<lfloor>dom b_\\<rfloor>\n\ngoal (56 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 56 subgoals...", "next"], ["proof (state)\ngoal (56 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 56 subgoals...", "case InitBlockRed"], ["proof (state)\nthis:\n  P,E_(V_ \\<mapsto>\n  T_) \\<turnstile> \\<langle>e_,\n                    (h_, l_(V_ \\<mapsto> v'_))\\<rangle> \\<rightarrow>\n                   \\<langle>e'_,(h'_, l'_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ \\<mapsto> v'_))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v''_\\<rfloor>\n  P \\<turnstile> T_ casts v_ to v'_ \n  \\<D> {V_:T_; V_:=Val v_;; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (56 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 56 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_(V_ \\<mapsto>\n  T_) \\<turnstile> \\<langle>e_,\n                    (h_, l_(V_ \\<mapsto> v'_))\\<rangle> \\<rightarrow>\n                   \\<langle>e'_,(h'_, l'_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ \\<mapsto> v'_))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v''_\\<rfloor>\n  P \\<turnstile> T_ casts v_ to v'_ \n  \\<D> {V_:T_; V_:=Val v_;; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> {V_:T_; V_:=Val v''_;; e'_}\n     \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono' simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<D> {V_:T_; V_:=Val v''_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>\n\ngoal (55 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 55 subgoals...", "next"], ["proof (state)\ngoal (55 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 55 subgoals...", "case BlockRedNone"], ["proof (state)\nthis:\n  P,E_(V_ \\<mapsto>\n  T_) \\<turnstile> \\<langle>e_,(h_, l_(V_ := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e'_,(h'_, l'_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = None\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (55 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 55 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_(V_ \\<mapsto>\n  T_) \\<turnstile> \\<langle>e_,(h_, l_(V_ := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e'_,(h'_, l'_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = None\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> {V_:T_; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono' simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<D> {V_:T_; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>\n\ngoal (54 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 54 subgoals...", "next"], ["proof (state)\ngoal (54 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 54 subgoals...", "case BlockRedSome"], ["proof (state)\nthis:\n  P,E_(V_ \\<mapsto>\n  T_) \\<turnstile> \\<langle>e_,(h_, l_(V_ := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e'_,(h'_, l'_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v_\\<rfloor>\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (54 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 54 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_(V_ \\<mapsto>\n  T_) \\<turnstile> \\<langle>e_,(h_, l_(V_ := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e'_,(h'_, l'_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v_\\<rfloor>\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> {V_:T_; V_:=Val v_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono' simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<D> {V_:T_; V_:=Val v_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>\n\ngoal (53 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 53 subgoals...", "next"], ["proof (state)\ngoal (53 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 53 subgoals...", "case SeqRed"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (e_;; e\\<^sub>2_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (53 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 53 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (e_;; e\\<^sub>2_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_;; e\\<^sub>2_) \\<lfloor>dom b_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_;; e\\<^sub>2_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (52 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 52 subgoals...", "next"], ["proof (state)\ngoal (52 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 52 subgoals...", "case CondRed"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (if (e_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (52 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 52 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D> (if (e_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (if (e'_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom b_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (if (e'_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (51 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 51 subgoals...", "next"], ["proof (state)\ngoal (51 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 51 subgoals...", "case RedWhile"], ["proof (state)\nthis:\n  \\<D> (while (b___) c_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (51 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 51 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<D> (while (b___) c_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (if (b___) (c_;; while (b___) c_) else unit)\n     \\<lfloor>dom b_\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono')"], ["proof (state)\nthis:\n  \\<D> (if (b___) (c_;; while (b___) c_) else unit) \\<lfloor>dom b_\\<rfloor>\n\ngoal (50 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 50 subgoals...", "next"], ["proof (state)\ngoal (50 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 50 subgoals...", "case ListRed1"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D>s (e_ # es_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (50 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 50 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> \\<langle>e_,(a___, b___)\\<rangle> \\<rightarrow>\n                    \\<langle>e'_,(a_, b_)\\<rangle>\n  \\<D> e_ \\<lfloor>dom b___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom b_\\<rfloor>\n  \\<D>s (e_ # es_) \\<lfloor>dom b___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D>s (e'_ # es_) \\<lfloor>dom b_\\<rfloor>", "by (auto elim!: Ds_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D>s (e'_ # es_) \\<lfloor>dom b_\\<rfloor>\n\ngoal (49 subgoals):\n 1. \\<And>h a h' C E l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, [C])) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h E C l.\n       \\<lbrakk>new_Addr h = None;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw\n                            (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]))\n                          \\<lfloor>dom l\\<rfloor>\n 3. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (\\<lparr>C\\<rparr>e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (\\<lparr>C\\<rparr>e') \\<lfloor>dom ba\\<rfloor>\n 4. \\<And>E C a b.\n       \\<D> (\\<lparr>C\\<rparr>null)\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 5. \\<And>Cs C Cs' Ds E a aa b.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs';\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\n 6. \\<And>E C a Cs Cs' aa b.\n       \\<D> (\\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs'))\n        \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> (ref (a, Cs @ [C])) \\<lfloor>dom b\\<rfloor>\n 7. \\<And>C Cs E a aa b.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (\\<lparr>C\\<rparr>ref (a, Cs)) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Throw (addr_of_sys_xcpt ClassCast, [ClassCast]))\n                          \\<lfloor>dom b\\<rfloor>\n 8. \\<And>E e a b e' aa ba C.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<D> e \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ba\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ba\\<rfloor>\n 9. \\<And>E C a b.\n       \\<D> (Cast C null) \\<lfloor>dom b\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom b\\<rfloor>\n 10. \\<And>Cs C Cs' Ds E a aa b.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         \\<D> (Cast C (ref (a, Cs))) \\<lfloor>dom b\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (ref (a, Ds)) \\<lfloor>dom b\\<rfloor>\nA total of 49 subgoals...", "qed (auto simp:hyperset_defs)"], ["", "text\\<open>Combining conformance of heap and local variables:\\<close>"], ["", "definition sconf :: \"prog \\<Rightarrow> env \\<Rightarrow> state \\<Rightarrow> bool\"  (\"_,_ \\<turnstile> _ \\<surd>\"   [51,51,51]50) where\n  \"P,E \\<turnstile> s \\<surd>  \\<equiv>  let (h,l) = s in P \\<turnstile> h \\<surd> \\<and> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E \\<and> P \\<turnstile> E \\<surd>\""], ["", "lemma red_preserves_sconf:\n  \"\\<lbrakk> P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>; P,E,hp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd>; wwf_prog P\\<rbrakk> \n\\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e',s'\\<rangle>;\n     P,E,hp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd>;\n     wwf_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "by(fastforce intro:red_preserves_hconf red_preserves_lconf\n            simp add:sconf_def)"], ["", "lemma reds_preserves_sconf:\n  \"\\<lbrakk> P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle>; P,E,hp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd>; wwf_prog P\\<rbrakk> \n\\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                              \\<langle>es',s'\\<rangle>;\n     P,E,hp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd>;\n     wwf_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "by(fastforce intro:reds_preserves_hconf reds_preserves_lconf\n            simp add:sconf_def)"], ["", "subsection \"Subject reduction\""], ["", "lemma wt_blocks:\n \"\\<And>E. \\<lbrakk> length Vs = length Ts; length vs = length Ts;\n         \\<forall>T' \\<in> set Ts. is_type P T'\\<rbrakk> \\<Longrightarrow>\n       (P,E,h \\<turnstile> blocks(Vs,Ts,vs,e) : T) =\n  (P,E(Vs[\\<mapsto>]Ts),h \\<turnstile> e:T \\<and> \n  (\\<exists>Ts'. map (P \\<turnstile> typeof\\<^bsub>h\\<^esub>) vs = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E.\n       \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n        \\<forall>T'\\<in>set Ts. is_type P T'\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n                         (P,E(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               vs =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] Ts))", "proof(induct Vs Ts vs e rule:blocks_old_induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                    Ball (set Ts) (is_type P)\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n                    (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 6. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "case (5 V Vs T' Ts v vs e)"], ["proof (state)\nthis:\n  \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n   \\<forall>a\\<in>set Ts. is_type P a\\<rbrakk>\n  \\<Longrightarrow> (P,?E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n                    (P,?E(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n                     (\\<exists>Ts'.\n                         map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs =\n                         map Some Ts' \\<and>\n                         P \\<turnstile> Ts' [\\<le>] Ts))\n  length (V # Vs) = length (T' # Ts)\n  length (v # vs) = length (T' # Ts)\n  \\<forall>a\\<in>set (T' # Ts). is_type P a\n\ngoal (6 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                    Ball (set Ts) (is_type P)\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n                    (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 6. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "have length:\"length (V#Vs) = length (T'#Ts)\" \"length (v#vs) = length (T'#Ts)\"\n    and type:\"\\<forall>S \\<in> set (T'#Ts). is_type P S\"\n    and IH:\"\\<And>E. \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                  \\<forall>S \\<in> set Ts. is_type P S\\<rbrakk>\n     \\<Longrightarrow> (P,E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n         (P,E(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n            (\\<exists>Ts'. map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (length (V # Vs) = length (T' # Ts) &&&\n     length (v # vs) = length (T' # Ts)) &&&\n    \\<forall>S\\<in>set (T' # Ts). is_type P S &&&\n    (\\<And>E.\n        \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n         \\<forall>S\\<in>set Ts. is_type P S\\<rbrakk>\n        \\<Longrightarrow> (P,E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n                          (P,E(Vs [\\<mapsto>]\n                           Ts),h \\<turnstile> e : T \\<and>\n                           (\\<exists>Ts'.\n                               map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                                vs =\n                               map Some Ts' \\<and>\n                               P \\<turnstile> Ts' [\\<le>] Ts)))", "by fact+"], ["proof (state)\nthis:\n  length (V # Vs) = length (T' # Ts)\n  length (v # vs) = length (T' # Ts)\n  \\<forall>S\\<in>set (T' # Ts). is_type P S\n  \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n   \\<forall>S\\<in>set Ts. is_type P S\\<rbrakk>\n  \\<Longrightarrow> (P,?E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n                    (P,?E(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n                     (\\<exists>Ts'.\n                         map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs =\n                         map Some Ts' \\<and>\n                         P \\<turnstile> Ts' [\\<le>] Ts))\n\ngoal (6 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                    Ball (set Ts) (is_type P)\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n                    (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 6. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "from type"], ["proof (chain)\npicking this:\n  \\<forall>S\\<in>set (T' # Ts). is_type P S", "have typeT':\"is_type P T'\" and type':\"\\<forall>S \\<in> set Ts. is_type P S\""], ["proof (prove)\nusing this:\n  \\<forall>S\\<in>set (T' # Ts). is_type P S\n\ngoal (1 subgoal):\n 1. is_type P T' &&& \\<forall>S\\<in>set Ts. is_type P S", "by simp_all"], ["proof (state)\nthis:\n  is_type P T'\n  \\<forall>S\\<in>set Ts. is_type P S\n\ngoal (6 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                    Ball (set Ts) (is_type P)\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n                    (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 6. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "from length"], ["proof (chain)\npicking this:\n  length (V # Vs) = length (T' # Ts)\n  length (v # vs) = length (T' # Ts)", "have \"length Vs = length Ts\" \"length vs = length Ts\""], ["proof (prove)\nusing this:\n  length (V # Vs) = length (T' # Ts)\n  length (v # vs) = length (T' # Ts)\n\ngoal (1 subgoal):\n 1. length Vs = length Ts &&& length vs = length Ts", "by simp_all"], ["proof (state)\nthis:\n  length Vs = length Ts\n  length vs = length Ts\n\ngoal (6 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                    Ball (set Ts) (is_type P)\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n                    (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 6. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "from IH[OF this type']"], ["proof (chain)\npicking this:\n  (P,?E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,?E(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))", "have eq:\"(P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs,Ts,vs,e) : T) =\n  (P,E(V \\<mapsto> T')(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'. map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts))\""], ["proof (prove)\nusing this:\n  (P,?E,h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,?E(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))\n\ngoal (1 subgoal):\n 1. (P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n    (P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n     (\\<exists>Ts'.\n         map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n         P \\<turnstile> Ts' [\\<le>] Ts))", "."], ["proof (state)\nthis:\n  (P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))\n\ngoal (6 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts; length vs = length Ts;\n                    Ball (set Ts) (is_type P)\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n                    (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 6. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T) =\n    (P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n     (\\<exists>Ts'.\n         map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n         map Some Ts' \\<and>\n         P \\<turnstile> Ts' [\\<le>] (T' # Ts)))", "proof(rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h \\<turnstile> blocks\n                        (V # Vs, T' # Ts, v # vs, e) : T \\<Longrightarrow>\n    P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n 2. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "assume \"P,E,h \\<turnstile> blocks (V#Vs,T'#Ts,v#vs,e) : T\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T\n\ngoal (2 subgoals):\n 1. P,E,h \\<turnstile> blocks\n                        (V # Vs, T' # Ts, v # vs, e) : T \\<Longrightarrow>\n    P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n 2. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "then"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "have wt:\"P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'\"\n      and blocks:\"P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs,Ts,vs,e) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T' &&&\n    P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'\n  P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T\n\ngoal (2 subgoals):\n 1. P,E,h \\<turnstile> blocks\n                        (V # Vs, T' # Ts, v # vs, e) : T \\<Longrightarrow>\n    P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n 2. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "from blocks eq"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T\n  (P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))", "obtain Ts' where wte:\"P,E(V \\<mapsto> T')(Vs [\\<mapsto>] Ts),h \\<turnstile> e : T\"\n      and typeof:\"map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts'\" and subs:\"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T\n  (P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E(V \\<mapsto> T', Vs [\\<mapsto>]\n                 Ts),h \\<turnstile> e : T;\n         map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. P,E,h \\<turnstile> blocks\n                        (V # Vs, T' # Ts, v # vs, e) : T \\<Longrightarrow>\n    P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n 2. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "from wt"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'", "obtain T'' where \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T''\" and \"P \\<turnstile> T'' \\<le> T'\""], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n                 \\<lfloor>T''\\<rfloor>;\n         P \\<turnstile> T'' \\<le> T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T''\\<rfloor>\n  P \\<turnstile> T'' \\<le> T'\n\ngoal (2 subgoals):\n 1. P,E,h \\<turnstile> blocks\n                        (V # Vs, T' # Ts, v # vs, e) : T \\<Longrightarrow>\n    P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n 2. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "with wte typeof subs"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T''\\<rfloor>\n  P \\<turnstile> T'' \\<le> T'", "show \"P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n          (\\<exists>Ts'. map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] (T' # Ts))\""], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T''\\<rfloor>\n  P \\<turnstile> T'' \\<le> T'\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts))", "by auto"], ["proof (state)\nthis:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n  (\\<exists>Ts'.\n      map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n      map Some Ts' \\<and>\n      P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "assume \"P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n      (\\<exists>Ts'. map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] (T' # Ts))\""], ["proof (state)\nthis:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n  (\\<exists>Ts'.\n      map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n      map Some Ts' \\<and>\n      P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "then"], ["proof (chain)\npicking this:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n  (\\<exists>Ts'.\n      map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n      map Some Ts' \\<and>\n      P \\<turnstile> Ts' [\\<le>] (T' # Ts))", "obtain Ts' where wte:\"P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T\"\n      and typeof:\"map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts'\"\n      and subs:\"P \\<turnstile> Ts' [\\<le>] (T'#Ts)\""], ["proof (prove)\nusing this:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n  (\\<exists>Ts'.\n      map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n      map Some Ts' \\<and>\n      P \\<turnstile> Ts' [\\<le>] (T' # Ts))\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T;\n         map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts';\n         P \\<turnstile> Ts' [\\<le>] (T' # Ts)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "from subs"], ["proof (chain)\npicking this:\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)", "obtain U Us where Ts':\"Ts' = U#Us\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)\n\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts' = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases Ts') auto"], ["proof (state)\nthis:\n  Ts' = U # Us\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "with wte typeof subs eq"], ["proof (chain)\npicking this:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)\n  (P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))\n  Ts' = U # Us", "have blocks:\"P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs,Ts,vs,e) : T\""], ["proof (prove)\nusing this:\n  P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)\n  (P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T) =\n  (P,E(V \\<mapsto> T', Vs [\\<mapsto>] Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts))\n  Ts' = U # Us\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "from Ts' typeof subs"], ["proof (chain)\npicking this:\n  Ts' = U # Us\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)", "have \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some U\"\n      and \"P \\<turnstile> U \\<le> T'\""], ["proof (prove)\nusing this:\n  Ts' = U # Us\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) = map Some Ts'\n  P \\<turnstile> Ts' [\\<le>] (T' # Ts)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>U\\<rfloor> &&&\n    P \\<turnstile> U \\<le> T'", "by (auto simp:fun_of_def)"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>U\\<rfloor>\n  P \\<turnstile> U \\<le> T'\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "hence wtval:\"P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>U\\<rfloor>\n  P \\<turnstile> U \\<le> T'\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'\n\ngoal (1 subgoal):\n 1. P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n    (\\<exists>Ts'.\n        map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n        map Some Ts' \\<and>\n        P \\<turnstile> Ts' [\\<le>] (T' # Ts)) \\<Longrightarrow>\n    P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "with blocks typeT'"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T\n  is_type P T'\n  P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'", "show \"P,E,h \\<turnstile> blocks (V#Vs,T'#Ts,v#vs,e) : T\""], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T'),h \\<turnstile> blocks (Vs, Ts, vs, e) : T\n  is_type P T'\n  P,E(V \\<mapsto> T'),h \\<turnstile> V:=Val v : T'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P,E,h \\<turnstile> blocks (V # Vs, T' # Ts, v # vs, e) : T) =\n  (P,E(V # Vs [\\<mapsto>] T' # Ts),h \\<turnstile> e : T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (v # vs) =\n       map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] (T' # Ts)))\n\ngoal (5 subgoals):\n 1. \\<And>aj ak al E.\n       \\<lbrakk>length [] = length []; length (aj # ak) = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], [], aj # ak, al) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h \\<turnstile> al : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               (aj # ak) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>ad ae a b E.\n       \\<lbrakk>length [] = length (ad # ae); length a = length (ad # ae);\n        Ball (set (ad # ae)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        ([], ad # ae, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          ad # ae),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (ad # ae)))\n 3. \\<And>V Vs a b E.\n       \\<lbrakk>length (V # Vs) = length []; length a = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, [], a, b) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          []),h \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 4. \\<And>V Vs Ta Ts aw E.\n       \\<lbrakk>length (V # Vs) = length (Ta # Ts);\n        length [] = length (Ta # Ts);\n        Ball (set (Ta # Ts)) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks\n        (V # Vs, Ta # Ts, [], aw) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h \\<turnstile> aw : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 5. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length [];\n        Ball (set []) (is_type P)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h \\<turnstile> blocks ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>] []),h \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n                               [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))", "qed auto"], ["", "theorem assumes wf: \"wf_C_prog P\"\nshows subject_reduction2: \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>T. \\<lbrakk> P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T \\<rbrakk> \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T)\"\nand subjects_reduction2: \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow>\n  (\\<And>Ts.\\<lbrakk> P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> es [:] Ts \\<rbrakk> \\<Longrightarrow> types_conf P E h' es' Ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>T.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T)) &&&\n    (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts))", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "case (RedNew h a h' C E l)"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> new C : T\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "have new:\"new_Addr h = Some a\" and h':\"h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\" \n    and wt:\"P,E,h \\<turnstile> new C : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. new_Addr h = \\<lfloor>a\\<rfloor> &&&\n    h' = h(a \\<mapsto> (C, Collect (init_obj P C))) &&&\n    P,E,h \\<turnstile> new C : T", "by fact+"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\n  P,E,h \\<turnstile> new C : T\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> new C : T", "have eq:\"T = Class C\" and \"class\": \"is_class P C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> new C : T\n\ngoal (1 subgoal):\n 1. T = Class C &&& is_class P C", "by auto"], ["proof (state)\nthis:\n  T = Class C\n  is_class P C\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "from \"class\""], ["proof (chain)\npicking this:\n  is_class P C", "have subo:\"Subobjs P C [C]\""], ["proof (prove)\nusing this:\n  is_class P C\n\ngoal (1 subgoal):\n 1. Subobjs P C [C]", "by(rule Subobjs_Base)"], ["proof (state)\nthis:\n  Subobjs P C [C]\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "from h'"], ["proof (chain)\npicking this:\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))", "have \"h' a = Some(C, Collect (init_obj P C))\""], ["proof (prove)\nusing this:\n  h' = h(a \\<mapsto> (C, Collect (init_obj P C)))\n\ngoal (1 subgoal):\n 1. h' a = \\<lfloor>(C, Collect (init_obj P C))\\<rfloor>", "by(simp add:map_upd_Some_unfold)"], ["proof (state)\nthis:\n  h' a = \\<lfloor>(C, Collect (init_obj P C))\\<rfloor>\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "with subo"], ["proof (chain)\npicking this:\n  Subobjs P C [C]\n  h' a = \\<lfloor>(C, Collect (init_obj P C))\\<rfloor>", "have \"P,E,h' \\<turnstile> ref(a,[C]) : Class C\""], ["proof (prove)\nusing this:\n  Subobjs P C [C]\n  h' a = \\<lfloor>(C, Collect (init_obj P C))\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> ref (a, [C]) : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> ref (a, [C]) : Class C\n\ngoal (61 subgoals):\n 1. \\<And>h a h' C E l T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        h' = h(a \\<mapsto> (C, Collect (init_obj P C)));\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> ref\n        (a, [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>Cs C Cs' Ds E a aa b T.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n         P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Ds) :\\<^bsub>NT\\<^esub> T\nA total of 61 subgoals...", "with eq"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h' \\<turnstile> ref (a, [C]) : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h' \\<turnstile> ref (a, [C]) : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> ref (a, [C]) :\\<^bsub>NT\\<^esub> T", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> ref (a, [C]) :\\<^bsub>NT\\<^esub> T\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "next"], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "case (RedNewFail h E C l)"], ["proof (state)\nthis:\n  new_Addr h = None\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> new C : T\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "have sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> (h, l) \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "from wf"], ["proof (chain)\npicking this:\n  wf_C_prog P", "have \"is_class P OutOfMemory\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P OutOfMemory", "by (fastforce intro:is_class_xcpt wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  is_class P OutOfMemory\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "hence \"preallocated h \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (addr_of_sys_xcpt OutOfMemory,[OutOfMemory])) = Some(Class OutOfMemory)\""], ["proof (prove)\nusing this:\n  is_class P OutOfMemory\n\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n     (Ref (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) =\n    \\<lfloor>Class OutOfMemory\\<rfloor>", "by (auto elim: preallocatedE dest!:preallocatedD Subobjs_Base)"], ["proof (state)\nthis:\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) =\n  \\<lfloor>Class OutOfMemory\\<rfloor>\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) =\n  \\<lfloor>Class OutOfMemory\\<rfloor>", "have \"P,E,h \\<turnstile> THROW OutOfMemory : T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) =\n  \\<lfloor>Class OutOfMemory\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) : T", "by(auto simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) : T\n\ngoal (60 subgoals):\n 1. \\<And>h E C l T.\n       \\<lbrakk>new_Addr h = None; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Throw\n       (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a Cs Cs' aa b T.\n        \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> ref\n         (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\nA total of 60 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt OutOfMemory,\n                         [OutOfMemory]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw\n                      (addr_of_sys_xcpt OutOfMemory,\n                       [OutOfMemory]) :\\<^bsub>NT\\<^esub> T\n\ngoal (59 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs' E Cs T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> Path D to C via Cs' ;\n         P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> ref\n        (aa, Cs') :\\<^bsub>NT\\<^esub> T\nA total of 59 subgoals...", "next"], ["proof (state)\ngoal (59 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs' E Cs T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> Path D to C via Cs' ;\n         P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> ref\n        (aa, Cs') :\\<^bsub>NT\\<^esub> T\nA total of 59 subgoals...", "case (StaticCastRed E e h l e' h' l' C)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>e : T\n\ngoal (59 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs' E Cs T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> Path D to C via Cs' ;\n         P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> ref\n        (aa, Cs') :\\<^bsub>NT\\<^esub> T\nA total of 59 subgoals...", "have wt:\"P,E,h \\<turnstile> \\<lparr>C\\<rparr>e : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> \\<lparr>C\\<rparr>e : T &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>e : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (59 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs' E Cs T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> Path D to C via Cs' ;\n         P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> ref\n        (aa, Cs') :\\<^bsub>NT\\<^esub> T\nA total of 59 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>e : T", "obtain T' where wte:\"P,E,h \\<turnstile> e : T'\" and isref:\"is_refT T'\" \n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>e : T\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h \\<turnstile> e : T'; is_refT T'; is_class P C;\n         T = Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : T'\n  is_refT T'\n  is_class P C\n  T = Class C\n\ngoal (59 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs' E Cs T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> Path D to C via Cs' ;\n         P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> ref\n        (aa, Cs') :\\<^bsub>NT\\<^esub> T\nA total of 59 subgoals...", "from isref"], ["proof (chain)\npicking this:\n  is_refT T'", "have \"P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\""], ["proof (prove)\nusing this:\n  is_refT T'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "proof(rule refTE)"], ["proof (state)\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\n 2. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "assume \"T' = NT\""], ["proof (state)\nthis:\n  T' = NT\n\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\n 2. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "with IH[OF sconf wte] isref \"class\""], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = NT", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "assume \"T' = Class D\""], ["proof (state)\nthis:\n  T' = Class D\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "with IH[OF sconf wte] isref \"class\""], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = Class D", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = Class D\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\n\ngoal (59 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs' E Cs T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> Path D to C via Cs' ;\n         P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> ref\n        (aa, Cs') :\\<^bsub>NT\\<^esub> T\nA total of 59 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> \\<lparr>C\\<rparr>e' :\\<^bsub>NT\\<^esub> T\n\ngoal (58 subgoals):\n 1. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         \\<not> P \\<turnstile> Path D to C unique;\n         \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\nA total of 58 subgoals...", "next"], ["proof (state)\ngoal (58 subgoals):\n 1. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         \\<not> P \\<turnstile> Path D to C unique;\n         \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\nA total of 58 subgoals...", "case RedStaticCastNull"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> \\<lparr>C_\\<rparr>null : T\n\ngoal (58 subgoals):\n 1. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> \\<lparr>C\\<rparr>null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S C Cs E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         \\<not> P \\<turnstile> Path D to C unique;\n         \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\nA total of 58 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> \\<lparr>C_\\<rparr>null : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> null :\\<^bsub>NT\\<^esub> T", "by (auto elim:WTrt.cases)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "next"], ["proof (state)\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "case (RedStaticUpCast Cs C Cs' Ds E a h l)"], ["proof (state)\nthis:\n  P \\<turnstile> Path last Cs to C via Cs' \n  Ds = Cs @\\<^sub>p Cs'\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "have wt:\"P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a,Cs) : T\"\n    and path_via:\"P \\<turnstile> Path last Cs to C via Cs'\"\n    and Ds:\"Ds = Cs @\\<^sub>p Cs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T &&&\n    P \\<turnstile> Path last Cs to C via Cs'  &&& Ds = Cs @\\<^sub>p Cs'", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\n  P \\<turnstile> Path last Cs to C via Cs' \n  Ds = Cs @\\<^sub>p Cs'\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T", "have typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref(a,Cs)) = Some(Class(last Cs))\"\n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n    \\<lfloor>Class (last Cs)\\<rfloor> &&&\n    is_class P C &&& T = Class C", "by auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n  is_class P C\n  T = Class C\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "from typeof"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>", "obtain D S where h:\"h a = Some(D,S)\" and subo:\"Subobjs P D Cs\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>D S.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>; Subobjs P D Cs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:typeof_Class_Subo split:if_split_asm)"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Cs\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "from path_via subo wf Ds"], ["proof (chain)\npicking this:\n  P \\<turnstile> Path last Cs to C via Cs' \n  Subobjs P D Cs\n  wf_C_prog P\n  Ds = Cs @\\<^sub>p Cs'", "have \"Subobjs P D Ds\" and last:\"last Ds = C\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Path last Cs to C via Cs' \n  Subobjs P D Cs\n  wf_C_prog P\n  Ds = Cs @\\<^sub>p Cs'\n\ngoal (1 subgoal):\n 1. Subobjs P D Ds &&& last Ds = C", "by(auto intro!:Subobjs_appendPath appendPath_last[THEN sym] Subobjs_nonempty\n            simp:path_via_def)"], ["proof (state)\nthis:\n  Subobjs P D Ds\n  last Ds = C\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Ds\n  last Ds = C", "have \"P,E,h \\<turnstile> ref (a,Ds) : Class C\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Ds\n  last Ds = C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Ds) : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Ds) : Class C\n\ngoal (57 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Ds = Cs @\\<^sub>p Cs'; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 57 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Ds) : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Ds) : Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Ds) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Ds) :\\<^bsub>NT\\<^esub> T\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "next"], ["proof (state)\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "case (RedStaticDownCast E C a Cs Cs' h l)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs') : T\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "have \"P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a,Cs@[C]@Cs') : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs') : T", "by fact"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs') : T\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "hence typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref(a,Cs@[C]@Cs')) = Some(Class(last(Cs@[C]@Cs')))\"\n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs @ [C] @ Cs') : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n    \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor> &&&\n    is_class P C &&& T = Class C", "by auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n  \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor>\n  is_class P C\n  T = Class C\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "from typeof"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n  \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor>", "obtain D S where h:\"h a = Some(D,S)\" \n    and subo:\"Subobjs P D (Cs@[C]@Cs')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n  \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>D S.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n         Subobjs P D (Cs @ [C] @ Cs')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:typeof_Class_Subo split:if_split_asm)"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D (Cs @ [C] @ Cs')\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "from subo"], ["proof (chain)\npicking this:\n  Subobjs P D (Cs @ [C] @ Cs')", "have \"Subobjs P D (Cs@[C])\""], ["proof (prove)\nusing this:\n  Subobjs P D (Cs @ [C] @ Cs')\n\ngoal (1 subgoal):\n 1. Subobjs P D (Cs @ [C])", "by(fastforce intro:appendSubobj)"], ["proof (state)\nthis:\n  Subobjs P D (Cs @ [C])\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D (Cs @ [C])", "have \"P,E,h \\<turnstile> ref (a,Cs@[C]) : Class C\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D (Cs @ [C])\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C\n\ngoal (56 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref\n        (a, Cs @ [C] @ Cs') : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\nA total of 56 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "next"], ["proof (state)\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "case (RedStaticCastFail C Cs E a h l)"], ["proof (state)\nthis:\n  C \\<notin> set Cs\n  (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\n\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "have sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> (h, l) \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "from wf"], ["proof (chain)\npicking this:\n  wf_C_prog P", "have \"is_class P ClassCast\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P ClassCast", "by (fastforce intro:is_class_xcpt wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  is_class P ClassCast\n\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "hence \"preallocated h \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (addr_of_sys_xcpt ClassCast,[ClassCast])) = Some(Class ClassCast)\""], ["proof (prove)\nusing this:\n  is_class P ClassCast\n\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n     (Ref (addr_of_sys_xcpt ClassCast, [ClassCast])) =\n    \\<lfloor>Class ClassCast\\<rfloor>", "by (auto elim: preallocatedE dest!:preallocatedD Subobjs_Base)"], ["proof (state)\nthis:\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt ClassCast, [ClassCast])) =\n  \\<lfloor>Class ClassCast\\<rfloor>\n\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt ClassCast, [ClassCast])) =\n  \\<lfloor>Class ClassCast\\<rfloor>", "have \"P,E,h \\<turnstile> THROW ClassCast : T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt ClassCast, [ClassCast])) =\n  \\<lfloor>Class ClassCast\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw (addr_of_sys_xcpt ClassCast, [ClassCast]) : T", "by(auto simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt ClassCast, [ClassCast]) : T\n\ngoal (55 subgoals):\n 1. \\<And>C Cs E a aa b T.\n       \\<lbrakk>C \\<notin> set Cs;\n        (last Cs, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>ref (a, Cs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (addr_of_sys_xcpt ClassCast, [ClassCast]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n    v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 55 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt ClassCast, [ClassCast]) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt ClassCast,\n                         [ClassCast]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw\n                      (addr_of_sys_xcpt ClassCast,\n                       [ClassCast]) :\\<^bsub>NT\\<^esub> T\n\ngoal (54 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b V v E T.\n        \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 54 subgoals...", "next"], ["proof (state)\ngoal (54 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b V v E T.\n        \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 54 subgoals...", "case (DynCastRed E e h l e' h' l' C)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Cast C e : T\n\ngoal (54 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b V v E T.\n        \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 54 subgoals...", "have wt:\"P,E,h \\<turnstile> Cast C e : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Cast C e : T &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Cast C e : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (54 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b V v E T.\n        \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 54 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Cast C e : T", "obtain T' where wte:\"P,E,h \\<turnstile> e : T'\" and isref:\"is_refT T'\" \n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Cast C e : T\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h \\<turnstile> e : T'; is_refT T'; is_class P C;\n         T = Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : T'\n  is_refT T'\n  is_class P C\n  T = Class C\n\ngoal (54 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b V v E T.\n        \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 54 subgoals...", "from isref"], ["proof (chain)\npicking this:\n  is_refT T'", "have \"P,E,h' \\<turnstile> Cast C e' : Class C\""], ["proof (prove)\nusing this:\n  is_refT T'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Cast C e' : Class C", "proof(rule refTE)"], ["proof (state)\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow> P,E,h' \\<turnstile> Cast C e' : Class C\n 2. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> Cast C e' : Class C", "assume \"T' = NT\""], ["proof (state)\nthis:\n  T' = NT\n\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow> P,E,h' \\<turnstile> Cast C e' : Class C\n 2. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> Cast C e' : Class C", "with IH[OF sconf wte] isref \"class\""], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = NT", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Cast C e' : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Cast C e' : Class C\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> Cast C e' : Class C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> Cast C e' : Class C", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> Cast C e' : Class C", "assume \"T' = Class D\""], ["proof (state)\nthis:\n  T' = Class D\n\ngoal (1 subgoal):\n 1. \\<And>Ca.\n       T' = Class Ca \\<Longrightarrow>\n       P,E,h' \\<turnstile> Cast C e' : Class C", "with IH[OF sconf wte] isref \"class\""], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = Class D", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_refT T'\n  is_class P C\n  T' = Class D\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Cast C e' : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Cast C e' : Class C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Cast C e' : Class C\n\ngoal (54 subgoals):\n 1. \\<And>E e a b e' aa ba C T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b V v E T.\n        \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 54 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h' \\<turnstile> Cast C e' : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h' \\<turnstile> Cast C e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Cast C e' :\\<^bsub>NT\\<^esub> T\n\ngoal (53 subgoals):\n 1. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba V T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\nA total of 53 subgoals...", "next"], ["proof (state)\ngoal (53 subgoals):\n 1. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba V T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\nA total of 53 subgoals...", "case RedDynCastNull"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> Cast C_ null : T\n\ngoal (53 subgoals):\n 1. \\<And>E C a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba V T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\nA total of 53 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> Cast C_ null : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> null :\\<^bsub>NT\\<^esub> T", "by (auto elim:WTrt.cases)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "next"], ["proof (state)\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "case (RedDynCast h l a D S C Cs' E Cs)"], ["proof (state)\nthis:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  P \\<turnstile> Path D to C via Cs' \n  P \\<turnstile> Path D to C unique\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "have wt:\"P,E,h \\<turnstile> Cast C (ref (a,Cs)) : T\"\n    and path_via:\"P \\<turnstile> Path D to C via Cs'\"\n    and hp:\"hp (h,l) a = Some(D,S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T &&&\n    P \\<turnstile> Path D to C via Cs'  &&&\n    hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T\n  P \\<turnstile> Path D to C via Cs' \n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T", "have typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref(a,Cs)) = Some(Class(last Cs))\"\n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n    \\<lfloor>Class (last Cs)\\<rfloor> &&&\n    is_class P C &&& T = Class C", "by auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n  is_class P C\n  T = Class C\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "from typeof hp"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>", "have subo:\"Subobjs P D Cs\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n\ngoal (1 subgoal):\n 1. Subobjs P D Cs", "by (auto dest:typeof_Class_Subo split:if_split_asm)"], ["proof (state)\nthis:\n  Subobjs P D Cs\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "from path_via subo"], ["proof (chain)\npicking this:\n  P \\<turnstile> Path D to C via Cs' \n  Subobjs P D Cs", "have \"Subobjs P D Cs'\" \n    and last:\"last Cs' = C\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Path D to C via Cs' \n  Subobjs P D Cs\n\ngoal (1 subgoal):\n 1. Subobjs P D Cs' &&& last Cs' = C", "by (auto simp:path_via_def)"], ["proof (state)\nthis:\n  Subobjs P D Cs'\n  last Cs' = C\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "with hp"], ["proof (chain)\npicking this:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Cs'\n  last Cs' = C", "have \"P,E,h \\<turnstile> ref (a,Cs') : Class C\""], ["proof (prove)\nusing this:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Cs'\n  last Cs' = C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Cs') : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs') : Class C\n\ngoal (52 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs' E Cs T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> Path D to C via Cs' ;\n        P \\<turnstile> Path D to C unique; P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> ref\n       (aa, Cs') :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T v v' h l Ta.\n        \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\nA total of 52 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Cs') : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Cs') : Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Cs') :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs') :\\<^bsub>NT\\<^esub> T\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "next"], ["proof (state)\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "case (RedStaticUpDynCast Cs C Cs' Ds E a h l)"], ["proof (state)\nthis:\n  P \\<turnstile> Path last Cs to C unique\n  P \\<turnstile> Path last Cs to C via Cs' \n  Ds = Cs @\\<^sub>p Cs'\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "have wt:\"P,E,h \\<turnstile> Cast C (ref (a,Cs)) : T\"\n    and path_via:\"P \\<turnstile> Path last Cs to C via Cs'\"\n    and Ds:\"Ds = Cs @\\<^sub>p Cs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T &&&\n    P \\<turnstile> Path last Cs to C via Cs'  &&& Ds = Cs @\\<^sub>p Cs'", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T\n  P \\<turnstile> Path last Cs to C via Cs' \n  Ds = Cs @\\<^sub>p Cs'\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T", "have typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref(a,Cs)) = Some(Class(last Cs))\"\n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs)) : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n    \\<lfloor>Class (last Cs)\\<rfloor> &&&\n    is_class P C &&& T = Class C", "by auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n  is_class P C\n  T = Class C\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "from typeof"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>", "obtain D S where h:\"h a = Some(D,S)\" and subo:\"Subobjs P D Cs\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs)) =\n  \\<lfloor>Class (last Cs)\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>D S.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>; Subobjs P D Cs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:typeof_Class_Subo split:if_split_asm)"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Cs\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "from path_via subo wf Ds"], ["proof (chain)\npicking this:\n  P \\<turnstile> Path last Cs to C via Cs' \n  Subobjs P D Cs\n  wf_C_prog P\n  Ds = Cs @\\<^sub>p Cs'", "have \"Subobjs P D Ds\" and last:\"last Ds = C\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Path last Cs to C via Cs' \n  Subobjs P D Cs\n  wf_C_prog P\n  Ds = Cs @\\<^sub>p Cs'\n\ngoal (1 subgoal):\n 1. Subobjs P D Ds &&& last Ds = C", "by(auto intro!:Subobjs_appendPath appendPath_last[THEN sym] Subobjs_nonempty\n            simp:path_via_def)"], ["proof (state)\nthis:\n  Subobjs P D Ds\n  last Ds = C\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Ds\n  last Ds = C", "have \"P,E,h \\<turnstile> ref (a,Ds) : Class C\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Ds\n  last Ds = C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Ds) : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Ds) : Class C\n\ngoal (51 subgoals):\n 1. \\<And>Cs C Cs' Ds E a aa b T.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs' ; Ds = Cs @\\<^sub>p Cs';\n        P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Ds) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\nA total of 51 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Ds) : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Ds) : Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Ds) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Ds) :\\<^bsub>NT\\<^esub> T\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "next"], ["proof (state)\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "case (RedStaticDownDynCast E C a Cs Cs' h l)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "have \"P,E,h \\<turnstile> Cast C (ref (a,Cs@[C]@Cs')) : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T", "by fact"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "hence typeof:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref(a,Cs@[C]@Cs')) = Some(Class(last(Cs@[C]@Cs')))\"\n    and \"class\": \"is_class P C\" and T:\"T = Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n    \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor> &&&\n    is_class P C &&& T = Class C", "by auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n  \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor>\n  is_class P C\n  T = Class C\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "from typeof"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n  \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor>", "obtain D S where h:\"h a = Some(D,S)\" \n    and subo:\"Subobjs P D (Cs@[C]@Cs')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs @ [C] @ Cs')) =\n  \\<lfloor>Class (last (Cs @ [C] @ Cs'))\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>D S.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n         Subobjs P D (Cs @ [C] @ Cs')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:typeof_Class_Subo split:if_split_asm)"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D (Cs @ [C] @ Cs')\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "from subo"], ["proof (chain)\npicking this:\n  Subobjs P D (Cs @ [C] @ Cs')", "have \"Subobjs P D (Cs@[C])\""], ["proof (prove)\nusing this:\n  Subobjs P D (Cs @ [C] @ Cs')\n\ngoal (1 subgoal):\n 1. Subobjs P D (Cs @ [C])", "by(fastforce intro:appendSubobj)"], ["proof (state)\nthis:\n  Subobjs P D (Cs @ [C])\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D (Cs @ [C])", "have \"P,E,h \\<turnstile> ref (a,Cs@[C]) : Class C\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D (Cs @ [C])\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C\n\ngoal (50 subgoals):\n 1. \\<And>E C a Cs Cs' aa b T.\n       \\<lbrakk>P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (ref (a, Cs @ [C] @ Cs')) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> ref\n        (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n         Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S;\n         fs F = \\<lfloor>v\\<rfloor>; P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\nA total of 50 subgoals...", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C", "show ?case"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) : Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs @ [C]) :\\<^bsub>NT\\<^esub> T\n\ngoal (49 subgoals):\n 1. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E F Cs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 49 subgoals...", "next"], ["proof (state)\ngoal (49 subgoals):\n 1. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E F Cs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 49 subgoals...", "case RedDynCastFail"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(D_, S_)\\<rfloor>\n  \\<not> P \\<turnstile> Path D_ to C_ unique\n  \\<not> P \\<turnstile> Path last Cs_ to C_ unique\n  C_ \\<notin> set Cs_\n  P,E_ \\<turnstile> (a___, b_) \\<surd>\n  P,E_,a___ \\<turnstile> Cast C_ (ref (a_, Cs_)) : T\n\ngoal (49 subgoals):\n 1. \\<And>a b aa D S C Cs E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        \\<not> P \\<turnstile> Path D to C unique;\n        \\<not> P \\<turnstile> Path last Cs to C unique; C \\<notin> set Cs;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Cast C (ref (aa, Cs)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E F Cs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 49 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(D_, S_)\\<rfloor>\n  \\<not> P \\<turnstile> Path D_ to C_ unique\n  \\<not> P \\<turnstile> Path last Cs_ to C_ unique\n  C_ \\<notin> set Cs_\n  P,E_ \\<turnstile> (a___, b_) \\<surd>\n  P,E_,a___ \\<turnstile> Cast C_ (ref (a_, Cs_)) : T\n\ngoal (1 subgoal):\n 1. P,E_,a___ \\<turnstile> null :\\<^bsub>NT\\<^esub> T", "by fastforce"], ["proof (state)\nthis:\n  P,E_,a___ \\<turnstile> null :\\<^bsub>NT\\<^esub> T\n\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "next"], ["proof (state)\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "case (BinOpRed1 E e h l e' h' l' bop e\\<^sub>2)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and wt:\"P,E,h \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     P,E,h \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T) &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  P,E,h \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "obtain T\\<^sub>1 T\\<^sub>2 where wte:\"P,E,h \\<turnstile> e : T\\<^sub>1\" and wte2:\"P,E,h \\<turnstile> e\\<^sub>2 : T\\<^sub>2\"\n    and binop:\"case bop of Eq \\<Rightarrow> T = Boolean\n                        | Add \\<Rightarrow> T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>1 T\\<^sub>2.\n        \\<lbrakk>P,E,h \\<turnstile> e : T\\<^sub>1;\n         P,E,h \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n         case bop of Eq \\<Rightarrow> T = Boolean\n         | Add \\<Rightarrow>\n             T\\<^sub>1 = Integer \\<and>\n             T\\<^sub>2 = Integer \\<and> T = Integer\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : T\\<^sub>1\n  P,E,h \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "from WTrt_hext_mono[OF wte2 red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2", "have wte2':\"P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2", "."], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "have \"P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "proof (cases bop)"], ["proof (state)\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "assume Eq:\"bop = Eq\""], ["proof (state)\nthis:\n  bop = Eq\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>1", "obtain T' where \"P,E,h' \\<turnstile> e' : T'\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>1\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        P,E,h' \\<turnstile> e' : T' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"T\\<^sub>1\") auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : T'\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "with wte2' binop Eq"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Eq\n  P,E,h' \\<turnstile> e' : T'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Eq\n  P,E,h' \\<turnstile> e' : T'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "by(cases bop) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "assume Add:\"bop = Add\""], ["proof (state)\nthis:\n  bop = Add\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "with binop"], ["proof (chain)\npicking this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add", "have Intg:\"T\\<^sub>1 = Integer\""], ["proof (prove)\nusing this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add\n\ngoal (1 subgoal):\n 1. T\\<^sub>1 = Integer", "by simp"], ["proof (state)\nthis:\n  T\\<^sub>1 = Integer\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "with IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>1\n  T\\<^sub>1 = Integer", "have \"P,E,h' \\<turnstile> e' : Integer\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>1\n  T\\<^sub>1 = Integer\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Integer", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Integer\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "with wte2' binop Add"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add\n  P,E,h' \\<turnstile> e' : Integer", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add\n  P,E,h' \\<turnstile> e' : Integer\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "by(cases bop) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (48 subgoals):\n 1. \\<And>E e a b e' aa ba bop e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 48 subgoals...", "with binop"], ["proof (chain)\npicking this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "show ?case"], ["proof (prove)\nusing this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T", "by(cases bop) simp_all"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "next"], ["proof (state)\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "case (BinOpRed2 E e h l e' h' l' v\\<^sub>1 bop)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\n\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>\"\n    and wt:\"P,E,h \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     P,E,h \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T) &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  P,E,h \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T", "obtain T\\<^sub>1 T\\<^sub>2 where wtval:\"P,E,h \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\" and wte:\"P,E,h \\<turnstile> e : T\\<^sub>2\"\n    and binop:\"case bop of Eq \\<Rightarrow> T = Boolean\n                        | Add \\<Rightarrow> T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>1 T\\<^sub>2.\n        \\<lbrakk>P,E,h \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1;\n         P,E,h \\<turnstile> e : T\\<^sub>2;\n         case bop of Eq \\<Rightarrow> T = Boolean\n         | Add \\<Rightarrow>\n             T\\<^sub>1 = Integer \\<and>\n             T\\<^sub>2 = Integer \\<and> T = Integer\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n  P,E,h \\<turnstile> e : T\\<^sub>2\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "from WTrt_hext_mono[OF wtval red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1", "have wtval':\"P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1", "."], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "have \"P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "proof (cases bop)"], ["proof (state)\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "assume Eq:\"bop = Eq\""], ["proof (state)\nthis:\n  bop = Eq\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>2", "obtain T' where \"P,E,h' \\<turnstile> e' : T'\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        P,E,h' \\<turnstile> e' : T' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"T\\<^sub>2\") auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : T'\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "with wtval' binop Eq"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Eq\n  P,E,h' \\<turnstile> e' : T'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Eq\n  P,E,h' \\<turnstile> e' : T'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "by(cases bop) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "assume Add:\"bop = Add\""], ["proof (state)\nthis:\n  bop = Add\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "with binop"], ["proof (chain)\npicking this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add", "have Intg:\"T\\<^sub>2 = Integer\""], ["proof (prove)\nusing this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add\n\ngoal (1 subgoal):\n 1. T\\<^sub>2 = Integer", "by simp"], ["proof (state)\nthis:\n  T\\<^sub>2 = Integer\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "with IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>2\n  T\\<^sub>2 = Integer", "have \"P,E,h' \\<turnstile> e' : Integer\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\\<^sub>2\n  T\\<^sub>2 = Integer\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Integer", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Integer\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "with wtval' binop Add"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add\n  P,E,h' \\<turnstile> e' : Integer", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  bop = Add\n  P,E,h' \\<turnstile> e' : Integer\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "by(cases bop) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n\ngoal (47 subgoals):\n 1. \\<And>E e a b e' aa ba v\\<^sub>1 bop T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba v F Cs T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val\n         v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\nA total of 47 subgoals...", "with binop"], ["proof (chain)\npicking this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T", "show ?case"], ["proof (prove)\nusing this:\n  case bop of Eq \\<Rightarrow> T = Boolean\n  | Add \\<Rightarrow>\n      T\\<^sub>1 = Integer \\<and> T\\<^sub>2 = Integer \\<and> T = Integer\n  P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T", "by(cases bop) simp_all"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (46 subgoals):\n 1. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> last Cs' has least F:T via Cs;\n         P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n         (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val\n                     v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h(a \\<mapsto>\n                          (D, insert (Ds, fs(F \\<mapsto> v'))\n                               (S -\n                                {(Ds,\n                                  fs)}))) \\<turnstile> Val\n                  v' :\\<^bsub>NT\\<^esub> Ta\nA total of 46 subgoals...", "next"], ["proof (state)\ngoal (46 subgoals):\n 1. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> last Cs' has least F:T via Cs;\n         P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n         (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val\n                     v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h(a \\<mapsto>\n                          (D, insert (Ds, fs(F \\<mapsto> v'))\n                               (S -\n                                {(Ds,\n                                  fs)}))) \\<turnstile> Val\n                  v' :\\<^bsub>NT\\<^esub> Ta\nA total of 46 subgoals...", "case (RedBinOp bop v\\<^sub>1 v\\<^sub>2 v E a b)"], ["proof (state)\nthis:\n  binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (a, b) \\<surd>\n  P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                                   v\\<^sub>2 : T\n\ngoal (46 subgoals):\n 1. \\<And>bop v\\<^sub>1 v\\<^sub>2 v E a b T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n   v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n         P \\<turnstile> last Cs' has least F:T via Cs;\n         P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n         (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val\n                     v : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h(a \\<mapsto>\n                          (D, insert (Ds, fs(F \\<mapsto> v'))\n                               (S -\n                                {(Ds,\n                                  fs)}))) \\<turnstile> Val\n                  v' :\\<^bsub>NT\\<^esub> Ta\nA total of 46 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (a, b) \\<surd>\n  P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                                   v\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "proof (cases bop)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Eq\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "case Eq"], ["proof (state)\nthis:\n  bop = Eq\n\ngoal (2 subgoals):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Eq\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  bop = Eq\n\ngoal (1 subgoal):\n 1. P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "using RedBinOp"], ["proof (prove)\nusing this:\n  bop = Eq\n  binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (a, b) \\<surd>\n  P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                                   v\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "by auto"], ["proof (state)\nthis:\n  P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "case Add"], ["proof (state)\nthis:\n  bop = Add\n\ngoal (1 subgoal):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n     P,E \\<turnstile> (a, b) \\<surd>;\n     P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\nv\\<^sub>2 : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  bop = Add\n\ngoal (1 subgoal):\n 1. P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "using RedBinOp"], ["proof (prove)\nusing this:\n  bop = Add\n  binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (a, b) \\<surd>\n  P,E,a \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                                   v\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "by auto"], ["proof (state)\nthis:\n  P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal (45 subgoals):\n 1. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E F Cs v a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 45 subgoals...", "next"], ["proof (state)\ngoal (45 subgoals):\n 1. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E F Cs v a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 45 subgoals...", "case (RedVar h l V v E)"], ["proof (state)\nthis:\n  lcl (h, l) V = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Var V : T\n\ngoal (45 subgoals):\n 1. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E F Cs v a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 45 subgoals...", "have l:\"lcl (h, l) V = Some v\" and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\"\n    and wt:\"P,E,h \\<turnstile> Var V : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lcl (h, l) V = \\<lfloor>v\\<rfloor> &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> Var V : T", "by fact+"], ["proof (state)\nthis:\n  lcl (h, l) V = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Var V : T\n\ngoal (45 subgoals):\n 1. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E F Cs v a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 45 subgoals...", "hence conf:\"P,h \\<turnstile> v :\\<le> T\""], ["proof (prove)\nusing this:\n  lcl (h, l) V = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Var V : T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> T", "by(force simp:sconf_def lconf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v :\\<le> T\n\ngoal (45 subgoals):\n 1. \\<And>a b V v E T.\n       \\<lbrakk>lcl (a, b) V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E F Cs v a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 45 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "proof(cases \"\\<forall>C. T \\<noteq> Class C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "case True"], ["proof (state)\nthis:\n  \\<forall>C. T \\<noteq> Class C\n\ngoal (2 subgoals):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "with conf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> v :\\<le> T\n  \\<forall>C. T \\<noteq> Class C", "have \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> v :\\<le> T\n  \\<forall>C. T \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>", "by(cases T) auto"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "hence \"P,E,h \\<turnstile> Val v : T\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v : T", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : T\n\ngoal (2 subgoals):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Val v : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>C. T \\<noteq> Class C)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>C. T \\<noteq> Class C)", "obtain C where T:\"T = Class C\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>C. T \\<noteq> Class C)\n\ngoal (1 subgoal):\n 1. (\\<And>C. T = Class C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  T = Class C\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "with conf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> v :\\<le> T\n  T = Class C", "have \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C) \\<or> P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some NT\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> v :\\<le> T\n  T = Class C\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n    \\<lfloor>Class C\\<rfloor> \\<or>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C\\<rfloor> \\<or>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "with T"], ["proof (chain)\npicking this:\n  T = Class C\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C\\<rfloor> \\<or>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Class C\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C\\<rfloor> \\<or>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal (44 subgoals):\n 1. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba Copt M es T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n         es :\\<^bsub>NT\\<^esub> T\nA total of 44 subgoals...", "next"], ["proof (state)\ngoal (44 subgoals):\n 1. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba Copt M es T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n         es :\\<^bsub>NT\\<^esub> T\nA total of 44 subgoals...", "case (LAssRed E e h l e' h' l' V)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> V:=e : T\n\ngoal (44 subgoals):\n 1. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba Copt M es T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n         es :\\<^bsub>NT\\<^esub> T\nA total of 44 subgoals...", "have wt:\"P,E,h \\<turnstile> V:=e : T\" and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> V:=e : T &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T')", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> V:=e : T\n  P,E \\<turnstile> (h, l) \\<surd>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n\ngoal (44 subgoals):\n 1. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba Copt M es T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n         es :\\<^bsub>NT\\<^esub> T\nA total of 44 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> V:=e : T", "obtain T' where wte:\"P,E,h \\<turnstile> e : T'\" and env:\"E V = Some T\" \n    and sub:\"P \\<turnstile> T' \\<le> T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> V:=e : T\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h \\<turnstile> e : T'; E V = \\<lfloor>T\\<rfloor>;\n         P \\<turnstile> T' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : T'\n  E V = \\<lfloor>T\\<rfloor>\n  P \\<turnstile> T' \\<le> T\n\ngoal (44 subgoals):\n 1. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba Copt M es T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n         es :\\<^bsub>NT\\<^esub> T\nA total of 44 subgoals...", "from sconf env"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  E V = \\<lfloor>T\\<rfloor>", "have \"is_type P T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  E V = \\<lfloor>T\\<rfloor>\n\ngoal (1 subgoal):\n 1. is_type P T", "by(auto simp:sconf_def envconf_def)"], ["proof (state)\nthis:\n  is_type P T\n\ngoal (44 subgoals):\n 1. \\<And>E e a b e' aa ba V T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba Copt M es T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n         es :\\<^bsub>NT\\<^esub> T\nA total of 44 subgoals...", "from sub this wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> T' \\<le> T\n  is_type P T\n  wf_C_prog P", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> T' \\<le> T\n  is_type P T\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "proof(rule subE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "assume eq:\"T' = T\" and notclass:\"\\<forall>C. T' \\<noteq> Class C\""], ["proof (state)\nthis:\n  T' = T\n  \\<forall>C. T' \\<noteq> Class C\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = T\n  \\<forall>C. T' \\<noteq> Class C", "have \"P,E,h' \\<turnstile> e' : T\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = T\n  \\<forall>C. T' \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : T", "by(cases T) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : T\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with eq env"], ["proof (chain)\npicking this:\n  T' = T\n  E V = \\<lfloor>T\\<rfloor>\n  P,E,h' \\<turnstile> e' : T", "have \"P,E,h' \\<turnstile> V:=e' : T\""], ["proof (prove)\nusing this:\n  T' = T\n  E V = \\<lfloor>T\\<rfloor>\n  P,E,h' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' : T", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' : T\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with eq"], ["proof (chain)\npicking this:\n  T' = T\n  P,E,h' \\<turnstile> V:=e' : T", "show ?thesis"], ["proof (prove)\nusing this:\n  T' = T\n  P,E,h' \\<turnstile> V:=e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "by(cases T) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "fix C D"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "assume T':\"T' = Class C\" and T:\"T = Class D\" \n      and path_unique:\"P \\<turnstile> Path C to D unique\""], ["proof (state)\nthis:\n  T' = Class C\n  T = Class D\n  P \\<turnstile> Path C to D unique\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = Class C\n  T = Class D\n  P \\<turnstile> Path C to D unique", "have \"P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = Class C\n  T = Class D\n  P \\<turnstile> Path C to D unique\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "hence \"P,E,h' \\<turnstile> V:=e' : T\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T", "assume \"P,E,h' \\<turnstile> e' : Class C\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T", "with env T' sub"], ["proof (chain)\npicking this:\n  E V = \\<lfloor>T\\<rfloor>\n  T' = Class C\n  P \\<turnstile> T' \\<le> T\n  P,E,h' \\<turnstile> e' : Class C", "show ?thesis"], ["proof (prove)\nusing this:\n  E V = \\<lfloor>T\\<rfloor>\n  T' = Class C\n  P \\<turnstile> T' \\<le> T\n  P,E,h' \\<turnstile> e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' : T", "by (fastforce intro:WTrtLAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T", "assume \"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> V:=e' : T", "with env T"], ["proof (chain)\npicking this:\n  E V = \\<lfloor>T\\<rfloor>\n  T = Class D\n  P,E,h' \\<turnstile> e' : NT", "show ?thesis"], ["proof (prove)\nusing this:\n  E V = \\<lfloor>T\\<rfloor>\n  T = Class D\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' : T", "by (fastforce intro:WTrtLAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' : T\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with T"], ["proof (chain)\npicking this:\n  T = Class D\n  P,E,h' \\<turnstile> V:=e' : T", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Class D\n  P,E,h' \\<turnstile> V:=e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "by(cases T) auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "assume T':\"T' = NT\" and T:\"T = Class C\""], ["proof (state)\nthis:\n  T' = NT\n  T = Class C\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = NT\n  T = Class C", "have \"P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = NT\n  T = Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "with env T"], ["proof (chain)\npicking this:\n  E V = \\<lfloor>T\\<rfloor>\n  T = Class C\n  P,E,h' \\<turnstile> e' : NT", "show ?thesis"], ["proof (prove)\nusing this:\n  E V = \\<lfloor>T\\<rfloor>\n  T = Class C\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:WTrtLAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> V:=e' :\\<^bsub>NT\\<^esub> T\n\ngoal (43 subgoals):\n 1. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E es a b es' aa ba v Copt M T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n         es' :\\<^bsub>NT\\<^esub> T\nA total of 43 subgoals...", "next"], ["proof (state)\ngoal (43 subgoals):\n 1. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E es a b es' aa ba v Copt M T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n         es' :\\<^bsub>NT\\<^esub> T\nA total of 43 subgoals...", "case (RedLAss E V T v v' h l T')"], ["proof (state)\nthis:\n  E V = \\<lfloor>T\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> V:=Val v : T'\n\ngoal (43 subgoals):\n 1. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E es a b es' aa ba v Copt M T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n         es' :\\<^bsub>NT\\<^esub> T\nA total of 43 subgoals...", "have env:\"E V = Some T\" and casts:\"P \\<turnstile> T casts v to v'\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> V:=Val v : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E V = \\<lfloor>T\\<rfloor> &&& P \\<turnstile> T casts v to v' ) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> V:=Val v : T'", "by fact+"], ["proof (state)\nthis:\n  E V = \\<lfloor>T\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> V:=Val v : T'\n\ngoal (43 subgoals):\n 1. \\<And>E V T v v' h l Ta.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> V:=Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E es a b es' aa ba v Copt M T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n         es' :\\<^bsub>NT\\<^esub> T\nA total of 43 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "proof(cases \"\\<forall>C. T \\<noteq> Class C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'\n 2. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "case True"], ["proof (state)\nthis:\n  \\<forall>C. T \\<noteq> Class C\n\ngoal (2 subgoals):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'\n 2. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "with casts wt env"], ["proof (chain)\npicking this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  E V = \\<lfloor>T\\<rfloor>\n  \\<forall>C. T \\<noteq> Class C", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  E V = \\<lfloor>T\\<rfloor>\n  \\<forall>C. T \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "by(cases T',auto elim!:casts_to.cases)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>C. T \\<noteq> Class C)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>C. T \\<noteq> Class C)", "obtain C where \"T = Class C\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>C. T \\<noteq> Class C)\n\ngoal (1 subgoal):\n 1. (\\<And>C. T = Class C \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  T = Class C\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "with casts wt env wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  E V = \\<lfloor>T\\<rfloor>\n  wf_C_prog P\n  T = Class C", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> T casts v to v' \n  P,E,h \\<turnstile> V:=Val v : T'\n  E V = \\<lfloor>T\\<rfloor>\n  wf_C_prog P\n  T = Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "by(auto elim!:casts_to.cases,\n         auto intro!:sym[OF appendPath_last] Subobjs_nonempty split:if_split_asm \n              simp:path_via_def,drule_tac Cs=\"Cs\" in Subobjs_appendPath,auto)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'\n\ngoal (42 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n        new_body E Ta.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n         P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n         P \\<turnstile> (C,Cs @\\<^sub>p\n                           Ds) selects M = (Ts, T, pns, body) via Cs';\n         length vs = length pns; length Ts = length pns;\n         bs =\n         blocks\n          (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n         new_body =\n         (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n          | _ \\<Rightarrow> bs);\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                             (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\nA total of 42 subgoals...", "next"], ["proof (state)\ngoal (42 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n        new_body E Ta.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n         P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n         P \\<turnstile> (C,Cs @\\<^sub>p\n                           Ds) selects M = (Ts, T, pns, body) via Cs';\n         length vs = length pns; length Ts = length pns;\n         bs =\n         blocks\n          (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n         new_body =\n         (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n          | _ \\<Rightarrow> bs);\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                             (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\nA total of 42 subgoals...", "case (FAccRed E e h l e' h' l' F Cs)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} : T\n\ngoal (42 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n        new_body E Ta.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n         P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n         P \\<turnstile> (C,Cs @\\<^sub>p\n                           Ds) selects M = (Ts, T, pns, body) via Cs';\n         length vs = length pns; length Ts = length pns;\n         bs =\n         blocks\n          (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n         new_body =\n         (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n          | _ \\<Rightarrow> bs);\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                             (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\nA total of 42 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>\"\n    and wt:\"P,E,h \\<turnstile> e\\<bullet>F{Cs} : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     P,E,h \\<turnstile> e\\<bullet>F{Cs} : T) &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (42 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n        new_body E Ta.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n         P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n         P \\<turnstile> (C,Cs @\\<^sub>p\n                           Ds) selects M = (Ts, T, pns, body) via Cs';\n         length vs = length pns; length Ts = length pns;\n         bs =\n         blocks\n          (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n         new_body =\n         (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n          | _ \\<Rightarrow> bs);\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                             (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\nA total of 42 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} : T", "have \"P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "proof(rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "fix C"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "assume wte: \"P,E,h \\<turnstile> e : Class C\"\n      and field:\"P \\<turnstile> C has least F:T via Cs\"\n      and notemptyCs:\"Cs \\<noteq> []\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : Class C\n  P \\<turnstile> C has least F:T via Cs\n  Cs \\<noteq> []\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "from field"], ["proof (chain)\npicking this:\n  P \\<turnstile> C has least F:T via Cs", "have \"class\": \"is_class P C\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has least F:T via Cs\n\ngoal (1 subgoal):\n 1. is_class P C", "by (fastforce intro:Subobjs_isClass simp add:LeastFieldDecl_def FieldDecls_def)"], ["proof (state)\nthis:\n  is_class P C\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C", "have \"P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "assume \"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n 2. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "by (fastforce intro!:WTrtFAccNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "assume wte':\"P,E,h' \\<turnstile> e' : Class C\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "from wte' notemptyCs field"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "by(rule WTrtFAcc)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "assume wte: \"P,E,h \\<turnstile> e : NT\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : NT\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT", "have \"P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T", "by (rule WTrtFAccNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n\ngoal (42 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n        new_body E Ta.\n        \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n         P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n         P \\<turnstile> (C,Cs @\\<^sub>p\n                           Ds) selects M = (Ts, T, pns, body) via Cs';\n         length vs = length pns; length Ts = length pns;\n         bs =\n         blocks\n          (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n         new_body =\n         (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n          | _ \\<Rightarrow> bs);\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                             (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\nA total of 42 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} :\\<^bsub>NT\\<^esub> T\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "next"], ["proof (state)\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "case (RedFAcc h l a D S Ds Cs' Cs fs' F v E)"], ["proof (state)\nthis:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  Ds = Cs' @\\<^sub>p Cs\n  (Ds, fs') \\<in> S\n  fs' F = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} : T\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "have h:\"hp (h,l) a = Some(D,S)\" \n    and Ds:\"Ds = Cs'@\\<^sub>pCs\" and S:\"(Ds,fs') \\<in> S\"\n    and fs':\"fs' F = Some v\" and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\"\n    and wte:\"P,E,h \\<turnstile> ref (a,Cs')\\<bullet>F{Cs} : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (hp (h, l) a = \\<lfloor>(D, S)\\<rfloor> &&&\n     Ds = Cs' @\\<^sub>p Cs &&& (Ds, fs') \\<in> S) &&&\n    fs' F = \\<lfloor>v\\<rfloor> &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&&\n    P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} : T", "by fact+"], ["proof (state)\nthis:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  Ds = Cs' @\\<^sub>p Cs\n  (Ds, fs') \\<in> S\n  fs' F = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} : T\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "from wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} : T", "have field:\"P \\<turnstile> last Cs' has least F:T via Cs\"\n    and notemptyCs:\"Cs \\<noteq> []\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> last Cs' has least F:T via Cs &&& Cs \\<noteq> []", "by (auto split:if_split_asm)"], ["proof (state)\nthis:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  Cs \\<noteq> []\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "from h S sconf"], ["proof (chain)\npicking this:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  (Ds, fs') \\<in> S\n  P,E \\<turnstile> (h, l) \\<surd>", "obtain Bs fs ms where classDs:\"class P (last Ds) = Some (Bs,fs,ms)\"\n    and fconf:\"P,h \\<turnstile> fs' (:\\<le>) map_of fs\""], ["proof (prove)\nusing this:\n  hp (h, l) a = \\<lfloor>(D, S)\\<rfloor>\n  (Ds, fs') \\<in> S\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (1 subgoal):\n 1. (\\<And>Bs fs ms.\n        \\<lbrakk>class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n         P,h \\<turnstile> fs' (:\\<le>) map_of fs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add:sconf_def hconf_def oconf_def) blast"], ["proof (state)\nthis:\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  P,h \\<turnstile> fs' (:\\<le>) map_of fs\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "from field Ds"], ["proof (chain)\npicking this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  Ds = Cs' @\\<^sub>p Cs", "have \"last Cs = last Ds\""], ["proof (prove)\nusing this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  Ds = Cs' @\\<^sub>p Cs\n\ngoal (1 subgoal):\n 1. last Cs = last Ds", "by (fastforce intro!:appendPath_last Subobjs_nonempty \n                   simp:LeastFieldDecl_def FieldDecls_def)"], ["proof (state)\nthis:\n  last Cs = last Ds\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "with field classDs"], ["proof (chain)\npicking this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  last Cs = last Ds", "have map:\"map_of fs F =  Some T\""], ["proof (prove)\nusing this:\n  P \\<turnstile> last Cs' has least F:T via Cs\n  class P (last Ds) = \\<lfloor>(Bs, fs, ms)\\<rfloor>\n  last Cs = last Ds\n\ngoal (1 subgoal):\n 1. map_of fs F = \\<lfloor>T\\<rfloor>", "by (simp add:LeastFieldDecl_def FieldDecls_def)"], ["proof (state)\nthis:\n  map_of fs F = \\<lfloor>T\\<rfloor>\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "with fconf fs'"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> fs' (:\\<le>) map_of fs\n  fs' F = \\<lfloor>v\\<rfloor>\n  map_of fs F = \\<lfloor>T\\<rfloor>", "have conf:\"P,h \\<turnstile> v :\\<le> T\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> fs' (:\\<le>) map_of fs\n  fs' F = \\<lfloor>v\\<rfloor>\n  map_of fs F = \\<lfloor>T\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> T", "by (simp add:fconf_def,erule_tac x=\"F\" in allE,fastforce)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v :\\<le> T\n\ngoal (41 subgoals):\n 1. \\<And>a b aa D S Ds Cs' Cs fs F v E T.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, S)\\<rfloor>;\n        Ds = Cs' @\\<^sub>p Cs; (Ds, fs) \\<in> S; fs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> ref (aa, Cs')\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n        \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n         P \\<turnstile> Path last Cs to C via Cs'' ;\n         P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n         Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n         length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n         P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                              (map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n         (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n          body) :\\<^bsub>NT\\<^esub> Ta\nA total of 41 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile> v :\\<le> T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T", "by (cases T) auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v :\\<^bsub>NT\\<^esub> T\n\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "next"], ["proof (state)\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "case (RedFAccNull E F Cs h l)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> null\\<bullet>F{Cs} : T\n\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "have sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> (h, l) \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "from wf"], ["proof (chain)\npicking this:\n  wf_C_prog P", "have \"is_class P NullPointer\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P NullPointer", "by (fastforce intro:is_class_xcpt wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  is_class P NullPointer\n\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "hence \"preallocated h \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (addr_of_sys_xcpt NullPointer,[NullPointer])) = Some(Class NullPointer)\""], ["proof (prove)\nusing this:\n  is_class P NullPointer\n\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n     (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "by (auto elim: preallocatedE dest!:preallocatedD Subobjs_Base)"], ["proof (state)\nthis:\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>", "have \"P,E,h \\<turnstile> THROW NullPointer : T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer, [NullPointer]) : T", "by(auto simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (40 subgoals):\n 1. \\<And>E F Cs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E Copt M vs a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 40 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer,\n                         [NullPointer]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw\n                      (addr_of_sys_xcpt NullPointer,\n                       [NullPointer]) :\\<^bsub>NT\\<^esub> T\n\ngoal (39 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T e h l e' h' l' Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 39 subgoals...", "next"], ["proof (state)\ngoal (39 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T e h l e' h' l' Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 39 subgoals...", "case (FAssRed1 E e h l e' h' l' F Cs e\\<^sub>2)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal (39 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T e h l e' h' l' Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 39 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>\"\n    and wt:\"P,E,h \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     P,E,h \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T) &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (39 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T e h l e' h' l' Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 39 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T", "have \"P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "fix C T'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "assume wte: \"P,E,h \\<turnstile> e : Class C\"\n      and field:\"P \\<turnstile> C has least F:T via Cs\"\n      and notemptyCs:\"Cs \\<noteq> []\"\n      and wte2:\"P,E,h \\<turnstile> e\\<^sub>2 : T'\" and sub:\"P \\<turnstile> T' \\<le> T\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : Class C\n  P \\<turnstile> C has least F:T via Cs\n  Cs \\<noteq> []\n  P,E,h \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "have wte2': \"P,E,h' \\<turnstile> e\\<^sub>2 : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e\\<^sub>2 : T'", "by(rule WTrt_hext_mono[OF wte2 red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C", "have \"P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "assume wte':\"P,E,h' \\<turnstile> e' : Class C\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "from wte' notemptyCs field wte2' sub"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "by (rule WTrtFAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "assume wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "from wte' wte2' sub"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "by (rule WTrtFAssNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "fix T'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "assume wte:\"P,E,h \\<turnstile> e : NT\"\n      and wte2:\"P,E,h \\<turnstile> e\\<^sub>2 : T'\" and sub:\"P \\<turnstile> T' \\<le> T\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : NT\n  P,E,h \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "have wte2': \"P,E,h' \\<turnstile> e\\<^sub>2 : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e\\<^sub>2 : T'", "by(rule WTrt_hext_mono[OF wte2 red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT", "have wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> e\\<^sub>2 : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "from wte' wte2' sub"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> e\\<^sub>2 : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T", "by (rule WTrtFAssNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal (39 subgoals):\n 1. \\<And>E e a b e' aa ba F Cs e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T e h l e' h' l' Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 39 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e'\\<bullet>F{Cs} := e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n\ngoal (38 subgoals):\n 1. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l e' h' l' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 38 subgoals...", "next"], ["proof (state)\ngoal (38 subgoals):\n 1. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l e' h' l' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 38 subgoals...", "case (FAssRed2 E e h l e' h' l' v F Cs)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Val v\\<bullet>F{Cs} := e : T\n\ngoal (38 subgoals):\n 1. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l e' h' l' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 38 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>\"\n    and wt:\"P,E,h \\<turnstile> Val v\\<bullet>F{Cs} := e : T\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \n            \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     P,E,h \\<turnstile> Val v\\<bullet>F{Cs} := e : T) &&&\n    (\\<And>T'.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  P,E,h \\<turnstile> Val v\\<bullet>F{Cs} := e : T\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (38 subgoals):\n 1. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l e' h' l' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 38 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Val v\\<bullet>F{Cs} := e : T", "have \"P,E,h' \\<turnstile> Val v\\<bullet>F{Cs}:=e' : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Val v\\<bullet>F{Cs} := e : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "fix C T'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume wtval:\"P,E,h \\<turnstile> Val v : Class C\"\n      and field:\"P \\<turnstile> C has least F:T via Cs\"\n      and notemptyCs:\"Cs \\<noteq> []\"\n      and wte:\"P,E,h \\<turnstile> e : T'\"\n      and sub:\"P \\<turnstile> T' \\<le> T\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : Class C\n  P \\<turnstile> C has least F:T via Cs\n  Cs \\<noteq> []\n  P,E,h \\<turnstile> e : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "have wtval':\"P,E,h' \\<turnstile> Val v : Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : Class C", "by(rule WTrt_hext_mono[OF wtval red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from field wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> C has least F:T via Cs\n  wf_C_prog P", "have type:\"is_type P T\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has least F:T via Cs\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_type P T", "by(rule least_field_is_type)"], ["proof (state)\nthis:\n  is_type P T\n\ngoal (2 subgoals):\n 1. \\<And>C T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C; Cs \\<noteq> [];\n        P \\<turnstile> C has least F:T via Cs; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from sub type wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> T' \\<le> T\n  is_type P T\n  wf_C_prog P", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> T' \\<le> T\n  is_type P T\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "proof(rule subE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume \"T' = T\" and notclass:\"\\<forall>C. T' \\<noteq> Class C\""], ["proof (state)\nthis:\n  T' = T\n  \\<forall>C. T' \\<noteq> Class C\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from IH[OF sconf wte] notclass"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  \\<forall>C. T' \\<noteq> Class C", "have wte':\"P,E,h' \\<turnstile> e' : T'\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  \\<forall>C. T' \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : T'", "by(cases T') auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : T'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>T' = T; \\<forall>C. T' \\<noteq> Class C\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 3. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from wtval' notemptyCs field wte' sub"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : T'\n  P \\<turnstile> T' \\<le> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "by(rule WTrtFAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "fix C' D"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume T':\"T' = Class C'\" and T:\"T = Class D\" \n        and path_unique:\"P \\<turnstile> Path C' to D unique\""], ["proof (state)\nthis:\n  T' = Class C'\n  T = Class D\n  P \\<turnstile> Path C' to D unique\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from IH[OF sconf wte] T'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = Class C'", "have \"P,E,h' \\<turnstile> e' : Class C' \\<or> P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = Class C'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<or> P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C' \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (2 subgoals):\n 1. \\<And>C D.\n       \\<lbrakk>T' = Class C; T = Class D;\n        P \\<turnstile> Path C to D unique\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C' \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume wte':\"P,E,h' \\<turnstile> e' : Class C'\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C'\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from wtval' notemptyCs field wte' sub T'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : Class C'\n  P \\<turnstile> T' \\<le> T\n  T' = Class C'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : Class C'\n  P \\<turnstile> T' \\<le> T\n  T' = Class C'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "by (fastforce intro: WTrtFAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from wtval' notemptyCs field wte' sub T"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : NT\n  P \\<turnstile> T' \\<le> T\n  T = Class D", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : NT\n  P \\<turnstile> T' \\<le> T\n  T = Class D\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "by (fastforce intro: WTrtFAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "fix C'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume T':\"T' = NT\" and T:\"T = Class C'\""], ["proof (state)\nthis:\n  T' = NT\n  T = Class C'\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from IH[OF sconf wte] T'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = NT", "have wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  T' = NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>T' = NT; T = Class C\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from wtval' notemptyCs field wte' sub T"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : NT\n  P \\<turnstile> T' \\<le> T\n  T = Class C'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : Class C\n  Cs \\<noteq> []\n  P \\<turnstile> C has least F:T via Cs\n  P,E,h' \\<turnstile> e' : NT\n  P \\<turnstile> T' \\<le> T\n  T = Class C'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "by (fastforce intro: WTrtFAss)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "fix T'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "assume wtval:\"P,E,h \\<turnstile> Val v : NT\"\n      and wte:\"P,E,h \\<turnstile> e : T'\"\n      and sub:\"P \\<turnstile> T' \\<le> T\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : NT\n  P,E,h \\<turnstile> e : T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "have wtval':\"P,E,h' \\<turnstile> Val v : NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : NT", "by(rule WTrt_hext_mono[OF wtval red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from IH[OF sconf wte] sub"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  P \\<turnstile> T' \\<le> T", "obtain T'' where wte':\"P,E,h' \\<turnstile> e' : T''\"\n      and sub':\"P \\<turnstile> T'' \\<le> T\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        \\<lbrakk>P,E,h' \\<turnstile> e' : T'';\n         P \\<turnstile> T'' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases T',auto,cases T,auto)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : T''\n  P \\<turnstile> T'' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT; P,E,h \\<turnstile> e : T';\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "from wtval' wte' sub'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : NT\n  P,E,h' \\<turnstile> e' : T''\n  P \\<turnstile> T'' \\<le> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : NT\n  P,E,h' \\<turnstile> e' : T''\n  P \\<turnstile> T'' \\<le> T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T", "by(rule WTrtFAssNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal (38 subgoals):\n 1. \\<And>E e a b e' aa ba v F Cs T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v\\<bullet>F{Cs} := e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val\n        v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l e' h' l' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V := None))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V := None)) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 38 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v\\<bullet>F{Cs} := e' :\\<^bsub>NT\\<^esub> T\n\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "next"], ["proof (state)\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "case (RedFAss h a D S Cs' F T Cs v v' Ds fs E l T')"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P \\<turnstile> last Cs' has least F:T via Cs\n  P \\<turnstile> T casts v to v' \n  Ds = Cs' @\\<^sub>p Cs\n  (Ds, fs) \\<in> S\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "let ?fs' = \"fs(F \\<mapsto> v')\""], ["proof (state)\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "let ?S' = \"insert (Ds, ?fs') (S - {(Ds, fs)})\""], ["proof (state)\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "let ?h' = \"h(a \\<mapsto> (D,?S'))\""], ["proof (state)\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "have h:\"h a = Some(D,S)\" and casts:\"P \\<turnstile> T casts v to v'\"\n    and field:\"P \\<turnstile> last Cs' has least F:T via Cs\"\n    and wt:\"P,E,h \\<turnstile> ref (a,Cs')\\<bullet>F{Cs} := Val v : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h a = \\<lfloor>(D, S)\\<rfloor> &&& P \\<turnstile> T casts v to v' ) &&&\n    P \\<turnstile> last Cs' has least F:T via Cs &&&\n    P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'", "by fact+"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P \\<turnstile> last Cs' has least F:T via Cs\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "from wt wf"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  wf_C_prog P", "have type:\"is_type P T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_type P T'", "by (auto dest:least_field_is_type split:if_split_asm)"], ["proof (state)\nthis:\n  is_type P T'\n\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "from wt field"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  P \\<turnstile> last Cs' has least F:T via Cs", "obtain T'' where wtval:\"P,E,h \\<turnstile> Val v : T''\" and eq:\"T = T'\" \n    and leq:\"P \\<turnstile> T'' \\<le> T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : T'\n  P \\<turnstile> last Cs' has least F:T via Cs\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        \\<lbrakk>P,E,h \\<turnstile> Val v : T''; T = T';\n         P \\<turnstile> T'' \\<le> T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:sees_field_fun split:if_split_asm)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : T''\n  T = T'\n  P \\<turnstile> T'' \\<le> T'\n\ngoal (37 subgoals):\n 1. \\<And>h a D S Cs' F T Cs v v' Ds fs E l Ta.\n       \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>;\n        P \\<turnstile> last Cs' has least F:T via Cs;\n        P \\<turnstile> T casts v to v' ; Ds = Cs' @\\<^sub>p Cs;\n        (Ds, fs) \\<in> S; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> ref (a, Cs')\\<bullet>F{Cs} := Val v : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v'))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v' :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n        \\<lbrakk>P,E(V \\<mapsto>\n                 T) \\<turnstile> \\<langle>e,\n                                  (h, l(V \\<mapsto>\n                                   v'))\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(h', l')\\<rangle>;\n         \\<And>Ta.\n            \\<lbrakk>P,E(V \\<mapsto>\n                     T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n             P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n            \\<Longrightarrow> P,E(V \\<mapsto>\n                              T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n         l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                          e'} :\\<^bsub>NT\\<^esub> Ta\nA total of 37 subgoals...", "from casts eq wtval"], ["proof (chain)\npicking this:\n  P \\<turnstile> T casts v to v' \n  T = T'\n  P,E,h \\<turnstile> Val v : T''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> T casts v to v' \n  T = T'\n  P,E,h \\<turnstile> Val v : T''\n\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> v'))\n         (S - {(Ds, fs)}))) \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'", "proof(induct rule:casts_to.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>T v.\n       \\<lbrakk>\\<forall>C. T \\<noteq> Class C; T = T';\n        P,E,h \\<turnstile> Val v : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 3. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "case (casts_prim T\\<^sub>0 w)"], ["proof (state)\nthis:\n  \\<forall>C. T\\<^sub>0 \\<noteq> Class C\n  T\\<^sub>0 = T'\n  P,E,h \\<turnstile> Val w : T''\n\ngoal (3 subgoals):\n 1. \\<And>T v.\n       \\<lbrakk>\\<forall>C. T \\<noteq> Class C; T = T';\n        P,E,h \\<turnstile> Val v : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 3. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "have \"T\\<^sub>0 = T'\" and \"\\<forall>C. T\\<^sub>0 \\<noteq> Class C\" and wtval':\"P,E,h \\<turnstile> Val w : T''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<^sub>0 = T' &&&\n    \\<forall>C. T\\<^sub>0 \\<noteq> Class C &&&\n    P,E,h \\<turnstile> Val w : T''", "by fact+"], ["proof (state)\nthis:\n  T\\<^sub>0 = T'\n  \\<forall>C. T\\<^sub>0 \\<noteq> Class C\n  P,E,h \\<turnstile> Val w : T''\n\ngoal (3 subgoals):\n 1. \\<And>T v.\n       \\<lbrakk>\\<forall>C. T \\<noteq> Class C; T = T';\n        P,E,h \\<turnstile> Val v : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 3. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "with leq"], ["proof (chain)\npicking this:\n  P \\<turnstile> T'' \\<le> T'\n  T\\<^sub>0 = T'\n  \\<forall>C. T\\<^sub>0 \\<noteq> Class C\n  P,E,h \\<turnstile> Val w : T''", "have \"T' = T''\""], ["proof (prove)\nusing this:\n  P \\<turnstile> T'' \\<le> T'\n  T\\<^sub>0 = T'\n  \\<forall>C. T\\<^sub>0 \\<noteq> Class C\n  P,E,h \\<turnstile> Val w : T''\n\ngoal (1 subgoal):\n 1. T' = T''", "by(cases T',auto)"], ["proof (state)\nthis:\n  T' = T''\n\ngoal (3 subgoals):\n 1. \\<And>T v.\n       \\<lbrakk>\\<forall>C. T \\<noteq> Class C; T = T';\n        P,E,h \\<turnstile> Val v : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 3. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "with wtval'"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Val w : T''\n  T' = T''", "have \"P,E,h \\<turnstile> Val w : T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Val w : T''\n  T' = T''\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val w : T'", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val w : T'\n\ngoal (3 subgoals):\n 1. \\<And>T v.\n       \\<lbrakk>\\<forall>C. T \\<noteq> Class C; T = T';\n        P,E,h \\<turnstile> Val v : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 3. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P,E,h \\<turnstile> Val w : T'", "have \"P,E,(h(a\\<mapsto>(D,insert(Ds,fs(F \\<mapsto> w))(S-{(Ds,fs)})))) \\<turnstile> Val w : T'\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P,E,h \\<turnstile> Val w : T'\n\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> w))\n         (S - {(Ds, fs)}))) \\<turnstile> Val w : T'", "by(cases w,auto split:if_split_asm)"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> w))\n       (S - {(Ds, fs)}))) \\<turnstile> Val w : T'\n\ngoal (3 subgoals):\n 1. \\<And>T v.\n       \\<lbrakk>\\<forall>C. T \\<noteq> Class C; T = T';\n        P,E,h \\<turnstile> Val v : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> v))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> Val\n                 v :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 3. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "thus \"P,E,(h(a\\<mapsto>(D,insert(Ds,fs(F \\<mapsto> w))(S-{(Ds,fs)})))) \\<turnstile> (Val w) :\\<^bsub>NT\\<^esub> T'\""], ["proof (prove)\nusing this:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> w))\n       (S - {(Ds, fs)}))) \\<turnstile> Val w : T'\n\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> w))\n         (S - {(Ds, fs)}))) \\<turnstile> Val w :\\<^bsub>NT\\<^esub> T'", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> w))\n       (S - {(Ds, fs)}))) \\<turnstile> Val w :\\<^bsub>NT\\<^esub> T'\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "case (casts_null C'')"], ["proof (state)\nthis:\n  Class C'' = T'\n  P,E,h \\<turnstile> null : T''\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "have T':\"Class C'' = T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Class C'' = T'", "by fact"], ["proof (state)\nthis:\n  Class C'' = T'\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "have \"P,E,(h(a\\<mapsto>(D,insert(Ds,fs(F \\<mapsto> Null))(S-{(Ds,fs)})))) \\<turnstile> null : NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> Null))\n         (S - {(Ds, fs)}))) \\<turnstile> null : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Null))\n       (S - {(Ds, fs)}))) \\<turnstile> null : NT\n\ngoal (2 subgoals):\n 1. \\<And>C.\n       \\<lbrakk>Class C = T'; P,E,h \\<turnstile> null : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Null))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n 2. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "with sym[OF T']"], ["proof (chain)\npicking this:\n  T' = Class C''\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Null))\n       (S - {(Ds, fs)}))) \\<turnstile> null : NT", "show \"P,E,(h(a\\<mapsto>(D,insert(Ds,fs(F \\<mapsto> Null))(S-{(Ds,fs)})))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\""], ["proof (prove)\nusing this:\n  T' = Class C''\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Null))\n       (S - {(Ds, fs)}))) \\<turnstile> null : NT\n\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> Null))\n         (S - {(Ds, fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'", "by simp"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Null))\n       (S - {(Ds, fs)}))) \\<turnstile> null :\\<^bsub>NT\\<^esub> T'\n\ngoal (1 subgoal):\n 1. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "case (casts_ref Xs C'' Xs' Ds'' a')"], ["proof (state)\nthis:\n  P \\<turnstile> Path last Xs to C'' via Xs' \n  Ds'' = Xs @\\<^sub>p Xs'\n  Class C'' = T'\n  P,E,h \\<turnstile> ref (a', Xs) : T''\n\ngoal (1 subgoal):\n 1. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "have \"Class C'' = T'\" and \"Ds'' = Xs @\\<^sub>p Xs'\"\n      and \"P \\<turnstile> Path last Xs to C'' via Xs'\"\n      and \"P,E,h \\<turnstile> ref (a', Xs) : T''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Class C'' = T' &&& Ds'' = Xs @\\<^sub>p Xs') &&&\n    P \\<turnstile> Path last Xs to C'' via Xs'  &&&\n    P,E,h \\<turnstile> ref (a', Xs) : T''", "by fact+"], ["proof (state)\nthis:\n  Class C'' = T'\n  Ds'' = Xs @\\<^sub>p Xs'\n  P \\<turnstile> Path last Xs to C'' via Xs' \n  P,E,h \\<turnstile> ref (a', Xs) : T''\n\ngoal (1 subgoal):\n 1. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "with wf"], ["proof (chain)\npicking this:\n  wf_C_prog P\n  Class C'' = T'\n  Ds'' = Xs @\\<^sub>p Xs'\n  P \\<turnstile> Path last Xs to C'' via Xs' \n  P,E,h \\<turnstile> ref (a', Xs) : T''", "have \"P,E,h \\<turnstile> ref (a',Ds'') : T'\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n  Class C'' = T'\n  Ds'' = Xs @\\<^sub>p Xs'\n  P \\<turnstile> Path last Xs to C'' via Xs' \n  P,E,h \\<turnstile> ref (a', Xs) : T''\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> ref (a', Ds'') : T'", "by (auto intro!:appendPath_last[THEN sym] Subobjs_nonempty\n        split:if_split_asm simp:path_via_def,\n        drule_tac Cs=\"Xs\" in Subobjs_appendPath,auto)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a', Ds'') : T'\n\ngoal (1 subgoal):\n 1. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P,E,h \\<turnstile> ref (a', Ds'') : T'", "have \"P,E,(h(a\\<mapsto>(D,insert(Ds,fs(F \\<mapsto> Ref(a',Ds'')))(S-{(Ds,fs)})))) \\<turnstile> \n      ref (a',Ds'') : T'\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  P,E,h \\<turnstile> ref (a', Ds'') : T'\n\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> Ref (a', Ds'')))\n         (S - {(Ds, fs)}))) \\<turnstile> ref (a', Ds'') : T'", "by auto"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Ref (a', Ds'')))\n       (S - {(Ds, fs)}))) \\<turnstile> ref (a', Ds'') : T'\n\ngoal (1 subgoal):\n 1. \\<And>Cs C Cs' Dsa aa.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C via Cs' ;\n        Dsa = Cs @\\<^sub>p Cs'; Class C = T';\n        P,E,h \\<turnstile> ref (aa, Cs) : T''\\<rbrakk>\n       \\<Longrightarrow> P,E,h(a \\<mapsto>\n                         (D, insert (Ds, fs(F \\<mapsto> Ref (aa, Dsa)))\n                              (S -\n                               {(Ds,\n                                 fs)}))) \\<turnstile> ref\n                 (aa, Dsa) :\\<^bsub>NT\\<^esub> T'", "thus \"P,E,(h(a\\<mapsto>(D,insert(Ds,fs(F \\<mapsto> Ref(a',Ds'')))(S-{(Ds,fs)})))) \\<turnstile> \n      ref (a',Ds'') :\\<^bsub>NT\\<^esub> T'\""], ["proof (prove)\nusing this:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Ref (a', Ds'')))\n       (S - {(Ds, fs)}))) \\<turnstile> ref (a', Ds'') : T'\n\ngoal (1 subgoal):\n 1. P,E,h(a \\<mapsto>\n    (D, insert (Ds, fs(F \\<mapsto> Ref (a', Ds'')))\n         (S -\n          {(Ds, fs)}))) \\<turnstile> ref (a', Ds'') :\\<^bsub>NT\\<^esub> T'", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> Ref (a', Ds'')))\n       (S - {(Ds, fs)}))) \\<turnstile> ref (a', Ds'') :\\<^bsub>NT\\<^esub> T'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h(a \\<mapsto>\n  (D, insert (Ds, fs(F \\<mapsto> v'))\n       (S - {(Ds, fs)}))) \\<turnstile> Val v' :\\<^bsub>NT\\<^esub> T'\n\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "next"], ["proof (state)\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "case (RedFAssNull E F Cs v h l)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> null\\<bullet>F{Cs} := Val v : T\n\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "have sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> (h, l) \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "from wf"], ["proof (chain)\npicking this:\n  wf_C_prog P", "have \"is_class P NullPointer\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P NullPointer", "by (fastforce intro:is_class_xcpt wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  is_class P NullPointer\n\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "hence \"preallocated h \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (addr_of_sys_xcpt NullPointer,[NullPointer])) = Some(Class NullPointer)\""], ["proof (prove)\nusing this:\n  is_class P NullPointer\n\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n     (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "by (auto elim: preallocatedE dest!:preallocatedD Subobjs_Base)"], ["proof (state)\nthis:\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>", "have \"P,E,h \\<turnstile> THROW NullPointer : T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer, [NullPointer]) : T", "by(auto simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (36 subgoals):\n 1. \\<And>E F Cs v a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> null\\<bullet>F{Cs} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E V T u a b Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 36 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer,\n                         [NullPointer]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw\n                      (addr_of_sys_xcpt NullPointer,\n                       [NullPointer]) :\\<^bsub>NT\\<^esub> T\n\ngoal (35 subgoals):\n 1. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>T v v' E V u a b Ta.\n        \\<lbrakk>P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 35 subgoals...", "next"], ["proof (state)\ngoal (35 subgoals):\n 1. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>T v v' E V u a b Ta.\n        \\<lbrakk>P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 35 subgoals...", "case (CallObj E e h l e' h' l' Copt M es)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call e Copt M es : T\n\ngoal (35 subgoals):\n 1. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>T v v' E V u a b Ta.\n        \\<lbrakk>P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 35 subgoals...", "have red: \"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>\"\n   and IH: \"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk>\n                 \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n   and sconf: \"P,E \\<turnstile> (h,l) \\<surd>\" and wt: \"P,E,h \\<turnstile> Call e Copt M es : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T'.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> e : T'\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T')) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&&\n    P,E,h \\<turnstile> Call e Copt M es : T", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call e Copt M es : T\n\ngoal (35 subgoals):\n 1. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>T v v' E V u a b Ta.\n        \\<lbrakk>P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 35 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call e Copt M es : T", "have \"P,E,h' \\<turnstile> Call e' Copt M es : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call e Copt M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' Copt M es : T", "proof(cases Copt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T; Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "case None"], ["proof (state)\nthis:\n  Copt = None\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T; Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "with wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call e Copt M es : T\n  Copt = None", "have \"P,E,h \\<turnstile> e\\<bullet>M(es) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call e Copt M es : T\n  Copt = None\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Call e None M es : T", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Call e None M es : T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T; Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "hence \"P,E,h' \\<turnstile> e'\\<bullet>M(es) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call e None M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' None M es : T", "proof(rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "fix C Cs Ts Ts' m"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "assume wte:\"P,E,h \\<turnstile> e : Class C\"\n        and \"method\":\"P \\<turnstile> C has least M = (Ts, T, m) via Cs\"\n        and wtes:\"P,E,h \\<turnstile> es [:] Ts'\" and subs: \"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : Class C\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C", "have \"P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' None M es : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T\n 2. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "assume wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T\n 2. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "have \"P,E,h' \\<turnstile> es [:] Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Ts'", "by(rule WTrts_hext_mono[OF wtes red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Ts'\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T\n 2. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "with wte'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' None M es : T", "by(rule WTrtCallNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' None M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "assume wte':\"P,E,h' \\<turnstile> e' : Class C\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "have wtes':\"P,E,h' \\<turnstile> es [:] Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Ts'", "by(rule WTrts_hext_mono[OF wtes red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' None M es : T", "from wte' \"method\" wtes' subs"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : Class C\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' None M es : T", "by(rule WTrtCall)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' None M es : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' None M es : T\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "fix Ts"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "assume wte:\"P,E,h \\<turnstile> e : NT\" and wtes:\"P,E,h \\<turnstile> es [:] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : NT\n  P,E,h \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT", "have wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "have \"P,E,h' \\<turnstile> es [:] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Ts", "by(rule WTrts_hext_mono[OF wtes red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' None M es : T", "with wte'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' None M es : T", "by(rule WTrtCallNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' None M es : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' None M es : T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T; Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "with None"], ["proof (chain)\npicking this:\n  Copt = None\n  P,E,h' \\<turnstile> Call e' None M es : T", "show ?thesis"], ["proof (prove)\nusing this:\n  Copt = None\n  P,E,h' \\<turnstile> Call e' None M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' Copt M es : T", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' Copt M es : T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "case (Some C)"], ["proof (state)\nthis:\n  Copt = \\<lfloor>C\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "with wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call e Copt M es : T\n  Copt = \\<lfloor>C\\<rfloor>", "have \"P,E,h \\<turnstile> e\\<bullet>(C::)M(es) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call e Copt M es : T\n  Copt = \\<lfloor>C\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Call e \\<lfloor>C\\<rfloor> M es : T", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Call e \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "hence \"P,E,h' \\<turnstile> e'\\<bullet>(C::)M(es) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call e \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "proof(rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "fix C' Cs Ts Ts' m"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "assume wte:\"P,E,h \\<turnstile> e : Class C'\" and path_unique:\"P \\<turnstile> Path C' to C unique\"\n        and \"method\":\"P \\<turnstile> C has least M = (Ts, T, m) via Cs\"\n        and wtes:\"P,E,h \\<turnstile> es [:] Ts'\" and subs: \"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : Class C'\n  P \\<turnstile> Path C' to C unique\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C'", "have \"P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C'\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C'", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C'\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> e : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT \\<or> P,E,h' \\<turnstile> e' : Class C'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n 2. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "assume wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n 2. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "have \"P,E,h' \\<turnstile> es [:] Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Ts'", "by(rule WTrts_hext_mono[OF wtes red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Ts'\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n 2. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "with wte'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "by(rule WTrtCallNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "assume wte':\"P,E,h' \\<turnstile> e' : Class C'\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "have wtes':\"P,E,h' \\<turnstile> es [:] Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Ts'", "by(rule WTrts_hext_mono[OF wtes red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C' \\<Longrightarrow>\n    P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "from wte' path_unique \"method\" wtes' subs"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : Class C'\n  P \\<turnstile> Path C' to C unique\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C'\n  P \\<turnstile> Path C' to C unique\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "by(rule WTrtStaticCall)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "fix Ts"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "assume wte:\"P,E,h \\<turnstile> e : NT\" and wtes:\"P,E,h \\<turnstile> es [:] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : NT\n  P,E,h \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT", "have wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "have \"P,E,h' \\<turnstile> es [:] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Ts", "by(rule WTrts_hext_mono[OF wtes red_hext_incr[OF red]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> e : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M\n        es : T", "with wte'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  P,E,h' \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "by(rule WTrtCallNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call e Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call e' Copt M es : T", "with Some"], ["proof (chain)\npicking this:\n  Copt = \\<lfloor>C\\<rfloor>\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T", "show ?thesis"], ["proof (prove)\nusing this:\n  Copt = \\<lfloor>C\\<rfloor>\n  P,E,h' \\<turnstile> Call e' \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' Copt M es : T", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' Copt M es : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' Copt M es : T\n\ngoal (35 subgoals):\n 1. \\<And>E e a b e' aa ba Copt M es T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call e Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call e' Copt M\n        es :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>T v v' E V u a b Ta.\n        \\<lbrakk>P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\nA total of 35 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Call e' Copt M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call e' Copt M es :\\<^bsub>NT\\<^esub> T", "by (rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call e' Copt M es :\\<^bsub>NT\\<^esub> T\n\ngoal (34 subgoals):\n 1. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                          e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 34 subgoals...", "next"], ["proof (state)\ngoal (34 subgoals):\n 1. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                          e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 34 subgoals...", "case (CallParams E es h l es' h' l' v Copt M)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> ?Ts\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n\ngoal (34 subgoals):\n 1. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                          e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 34 subgoals...", "have reds: \"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle>\"\n   and IH: \"\\<And>Ts. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n                 \\<Longrightarrow> types_conf P E h' es' Ts\"\n   and sconf: \"P,E \\<turnstile> (h,l) \\<surd>\" and wt: \"P,E,h \\<turnstile> Call (Val v) Copt M es : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> &&&\n     (\\<And>Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts)) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&&\n    P,E,h \\<turnstile> Call (Val v) Copt M es : T", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> ?Ts\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n\ngoal (34 subgoals):\n 1. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                          e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 34 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T", "have \"P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "proof(cases Copt)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n     Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "case None"], ["proof (state)\nthis:\n  Copt = None\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n     Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "with wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  Copt = None", "have \"P,E,h \\<turnstile> (Val v)\\<bullet>M(es) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  Copt = None\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Call (Val v) None M es : T", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Call (Val v) None M es : T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n     Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "hence \"P,E,h' \\<turnstile> Val v\\<bullet>M(es') : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (Val v) None M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) None M es' : T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "fix C Cs Ts Ts' m"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "assume wte: \"P,E,h \\<turnstile> Val v : Class C\"\n        and \"method\":\"P \\<turnstile> C has least M = (Ts,T,m) via Cs\"\n        and wtes: \"P,E,h \\<turnstile> es [:] Ts'\" and subs:\"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : Class C\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "from wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:] Ts'", "have \"length es = length Ts'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] Ts'\n\ngoal (1 subgoal):\n 1. length es = length Ts'", "by(rule WTrts_same_length)"], ["proof (state)\nthis:\n  length es = length Ts'\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "with reds"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts'", "have \"length es' = length Ts'\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts'\n\ngoal (1 subgoal):\n 1. length es' = length Ts'", "by -(drule reds_length,simp)"], ["proof (state)\nthis:\n  length es' = length Ts'\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "with IH[OF sconf wtes] subs"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  length es' = length Ts'", "obtain Ts'' where wtes':\"P,E,h' \\<turnstile> es' [:] Ts''\"\n        and subs':\"P \\<turnstile> Ts'' [\\<le>] Ts\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  length es' = length Ts'\n\ngoal (1 subgoal):\n 1. (\\<And>Ts''.\n        \\<lbrakk>P,E,h' \\<turnstile> es' [:] Ts'';\n         P \\<turnstile> Ts'' [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:types_conf_smaller_types)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es' [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "have wte':\"P,E,h' \\<turnstile> Val v : Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : Class C", "by(rule WTrt_hext_mono[OF wte reds_hext_incr[OF reds]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "from wte' \"method\" wtes' subs'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : Class C\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es' [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : Class C\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es' [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) None M es' : T", "by(rule WTrtCall)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) None M es' : T\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "fix Ts"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "assume wte:\"P,E,h \\<turnstile> Val v : NT\" \n        and wtes:\"P,E,h \\<turnstile> es [:] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : NT\n  P,E,h \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "from wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:] Ts", "have \"length es = length Ts\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. length es = length Ts", "by(rule WTrts_same_length)"], ["proof (state)\nthis:\n  length es = length Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "with reds"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts", "have \"length es' = length Ts\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts\n\ngoal (1 subgoal):\n 1. length es' = length Ts", "by -(drule reds_length,simp)"], ["proof (state)\nthis:\n  length es' = length Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "with IH[OF sconf wtes]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n  length es' = length Ts", "obtain Ts' where wtes':\"P,E,h' \\<turnstile> es' [:] Ts'\"\n        and \"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n  length es' = length Ts\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h' \\<turnstile> es' [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:types_conf_smaller_types)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es' [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "have wte':\"P,E,h' \\<turnstile> Val v : NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : NT", "by(rule WTrt_hext_mono[OF wte reds_hext_incr[OF reds]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) None M es' : T", "from wte' wtes'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : NT\n  P,E,h' \\<turnstile> es' [:] Ts'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : NT\n  P,E,h' \\<turnstile> es' [:] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) None M es' : T", "by(rule WTrtCallNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) None M es' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) None M es' : T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n     Copt = None\\<rbrakk>\n    \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n 2. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "with None"], ["proof (chain)\npicking this:\n  Copt = None\n  P,E,h' \\<turnstile> Call (Val v) None M es' : T", "show ?thesis"], ["proof (prove)\nusing this:\n  Copt = None\n  P,E,h' \\<turnstile> Call (Val v) None M es' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "case (Some C)"], ["proof (state)\nthis:\n  Copt = \\<lfloor>C\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "with wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  Copt = \\<lfloor>C\\<rfloor>", "have \"P,E,h \\<turnstile> (Val v)\\<bullet>(C::)M(es) : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (Val v) Copt M es : T\n  Copt = \\<lfloor>C\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es : T", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "hence \"P,E,h' \\<turnstile> (Val v)\\<bullet>(C::)M(es') : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T", "proof(rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "fix C' Cs Ts Ts' m"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "assume wte:\"P,E,h \\<turnstile> Val v : Class C'\" and path_unique:\"P \\<turnstile> Path C' to C unique\"\n        and \"method\":\"P \\<turnstile> C has least M = (Ts,T,m) via Cs\"\n        and wtes:\"P,E,h \\<turnstile> es [:] Ts'\" and subs: \"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : Class C'\n  P \\<turnstile> Path C' to C unique\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h \\<turnstile> es [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "from wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:] Ts'", "have \"length es = length Ts'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] Ts'\n\ngoal (1 subgoal):\n 1. length es = length Ts'", "by(rule WTrts_same_length)"], ["proof (state)\nthis:\n  length es = length Ts'\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "with reds"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts'", "have \"length es' = length Ts'\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts'\n\ngoal (1 subgoal):\n 1. length es' = length Ts'", "by -(drule reds_length,simp)"], ["proof (state)\nthis:\n  length es' = length Ts'\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "with IH[OF sconf wtes] subs"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  length es' = length Ts'", "obtain Ts'' where wtes':\"P,E,h' \\<turnstile> es' [:] Ts''\"\n        and subs':\"P \\<turnstile> Ts'' [\\<le>] Ts\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  length es' = length Ts'\n\ngoal (1 subgoal):\n 1. (\\<And>Ts''.\n        \\<lbrakk>P,E,h' \\<turnstile> es' [:] Ts'';\n         P \\<turnstile> Ts'' [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:types_conf_smaller_types)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es' [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "have wte':\"P,E,h' \\<turnstile> Val v : Class C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : Class C'", "by(rule WTrt_hext_mono[OF wte reds_hext_incr[OF reds]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : Class C'\n\ngoal (2 subgoals):\n 1. \\<And>C' Ts m Cs Ts'.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n        P,E,h \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "from wte' path_unique \"method\" wtes' subs'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : Class C'\n  P \\<turnstile> Path C' to C unique\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es' [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : Class C'\n  P \\<turnstile> Path C' to C unique\n  P \\<turnstile> C has least M = (Ts, T, m) via Cs\n  P,E,h' \\<turnstile> es' [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T", "by(rule WTrtStaticCall)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "fix Ts"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "assume wte:\"P,E,h \\<turnstile> Val v : NT\" \n        and wtes:\"P,E,h \\<turnstile> es [:] Ts\""], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : NT\n  P,E,h \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "from wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:] Ts", "have \"length es = length Ts\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. length es = length Ts", "by(rule WTrts_same_length)"], ["proof (state)\nthis:\n  length es = length Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "with reds"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts", "have \"length es' = length Ts\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  length es = length Ts\n\ngoal (1 subgoal):\n 1. length es' = length Ts", "by -(drule reds_length,simp)"], ["proof (state)\nthis:\n  length es' = length Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "with IH[OF sconf wtes]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n  length es' = length Ts", "obtain Ts' where wtes':\"P,E,h' \\<turnstile> es' [:] Ts'\"\n        and \"P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n  length es' = length Ts\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h' \\<turnstile> es' [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:types_conf_smaller_types)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es' [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "have wte':\"P,E,h' \\<turnstile> Val v : NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : NT", "by(rule WTrt_hext_mono[OF wte reds_hext_incr[OF reds]])"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h \\<turnstile> Val v : NT;\n        P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v)\n        \\<lfloor>C\\<rfloor> M es' : T", "from wte' wtes'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : NT\n  P,E,h' \\<turnstile> es' [:] Ts'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : NT\n  P,E,h' \\<turnstile> es' [:] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T", "by(rule WTrtCallNT)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P,E,h \\<turnstile> Call (Val v) Copt M es : T;\n        Copt = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "with Some"], ["proof (chain)\npicking this:\n  Copt = \\<lfloor>C\\<rfloor>\n  P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T", "show ?thesis"], ["proof (prove)\nusing this:\n  Copt = \\<lfloor>C\\<rfloor>\n  P,E,h' \\<turnstile> Call (Val v) \\<lfloor>C\\<rfloor> M es' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) Copt M es' : T", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n\ngoal (34 subgoals):\n 1. \\<And>E es a b es' aa ba v Copt M T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Call (Val v) Copt M\n        es' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                          e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 34 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Call (Val v) Copt M es' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Call (Val v) Copt M es' :\\<^bsub>NT\\<^esub> T", "by (rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Call (Val v) Copt M es' :\\<^bsub>NT\\<^esub> T\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "next"], ["proof (state)\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "case (RedCall h l a C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs'\n                vs bs new_body E T'')"], ["proof (state)\nthis:\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  length vs = length pns\n  length Ts = length pns\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call (ref (a, Cs)) None M (map Val vs) : T''\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "have hp:\"hp (h,l) a = Some(C,S)\"\n    and \"method\":\"P \\<turnstile> last Cs has least M = (Ts',T',pns',body') via Ds\"\n    and select:\"P \\<turnstile> (C,Cs@\\<^sub>pDs) selects M = (Ts,T,pns,body) via Cs'\"\n    and length1:\"length vs = length pns\" and length2:\"length Ts = length pns\"\n    and bs:\"bs = blocks(this#pns,Class(last Cs')#Ts,Ref(a,Cs')#vs,body)\"\n    and body_case:\"new_body = (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs | _ \\<Rightarrow> bs)\"\n    and wt:\"P,E,h \\<turnstile> ref (a,Cs)\\<bullet>M(map Val vs) : T''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((hp (h, l) a = \\<lfloor>(C, S)\\<rfloor> &&&\n      P \\<turnstile> last\n                      Cs has least M = (Ts', T', pns', body') via Ds) &&&\n     P \\<turnstile> (C,Cs @\\<^sub>p\n                       Ds) selects M = (Ts, T, pns, body) via Cs' &&&\n     length vs = length pns) &&&\n    (length Ts = length pns &&&\n     bs =\n     blocks\n      (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)) &&&\n    new_body =\n    (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n     | _ \\<Rightarrow> bs) &&&\n    P,E,h \\<turnstile> Call (ref (a, Cs)) None M (map Val vs) : T''", "by fact+"], ["proof (state)\nthis:\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  length vs = length pns\n  length Ts = length pns\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  P,E,h \\<turnstile> Call (ref (a, Cs)) None M (map Val vs) : T''\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from wt hp \"method\" wf"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call (ref (a, Cs)) None M (map Val vs) : T''\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  wf_C_prog P", "obtain Ts''\n    where wtref:\"P,E,h \\<turnstile> ref (a,Cs) : Class (last Cs)\" and eq:\"T'' = T'\"\n    and wtes:\"P,E,h \\<turnstile> map Val vs [:] Ts''\" and subs: \"P \\<turnstile> Ts'' [\\<le>] Ts'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (ref (a, Cs)) None M (map Val vs) : T''\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. (\\<And>Ts''.\n        \\<lbrakk>P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs); T'' = T';\n         P,E,h \\<turnstile> map Val vs [:] Ts'';\n         P \\<turnstile> Ts'' [\\<le>] Ts'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:wf_sees_method_fun split:if_split_asm)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs)\n  T'' = T'\n  P,E,h \\<turnstile> map Val vs [:] Ts''\n  P \\<turnstile> Ts'' [\\<le>] Ts'\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from select wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  wf_C_prog P", "have \"is_class P (last Cs')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P (last Cs')", "by(induct rule:SelectMethodDef.induct,\n       auto intro:Subobj_last_isClass simp:FinalOverriderMethodDef_def \n      OverriderMethodDefs_def MinimalMethodDefs_def LeastMethodDef_def MethodDefs_def)"], ["proof (state)\nthis:\n  is_class P (last Cs')\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "with select_method_wf_mdecl[OF wf select]"], ["proof (chain)\npicking this:\n  wf_mdecl wf_C_mdecl P (last Cs') (M, Ts, T, pns, body)\n  is_class P (last Cs')", "have length_pns:\"length (this#pns) = length (Class(last Cs')#Ts)\" \n    and notNT:\"T \\<noteq> NT\" and type:\"\\<forall>T\\<in>set (Class(last Cs')#Ts). is_type P T\"\n    and wtabody:\"P,[this\\<mapsto>Class(last Cs'),pns[\\<mapsto>]Ts] \\<turnstile> body :: T\""], ["proof (prove)\nusing this:\n  wf_mdecl wf_C_mdecl P (last Cs') (M, Ts, T, pns, body)\n  is_class P (last Cs')\n\ngoal (1 subgoal):\n 1. (length (this # pns) = length (Class (last Cs') # Ts) &&&\n     T \\<noteq> NT) &&&\n    \\<forall>T\\<in>set (Class (last Cs') # Ts). is_type P T &&&\n    P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n       Ts] \\<turnstile> body :: T", "by(auto simp:wf_mdecl_def)"], ["proof (state)\nthis:\n  length (this # pns) = length (Class (last Cs') # Ts)\n  T \\<noteq> NT\n  \\<forall>T\\<in>set (Class (last Cs') # Ts). is_type P T\n  P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n     Ts] \\<turnstile> body :: T\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from wtes hp select"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> map Val vs [:] Ts''\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'", "have map:\"map (P \\<turnstile> typeof\\<^bsub>h\\<^esub>) (Ref(a,Cs')#vs) = map Some (Class(last Cs')#Ts'')\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> map Val vs [:] Ts''\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n\ngoal (1 subgoal):\n 1. map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs') # vs) =\n    map Some (Class (last Cs') # Ts'')", "by(auto elim:SelectMethodDef.cases split:if_split_asm \n            simp:FinalOverriderMethodDef_def OverriderMethodDefs_def \n                 MinimalMethodDefs_def LeastMethodDef_def MethodDefs_def)"], ["proof (state)\nthis:\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs') # vs) =\n  map Some (Class (last Cs') # Ts'')\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from wtref hp"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs)\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>", "have \"P \\<turnstile> Path C to (last Cs) via Cs\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs)\n  hp (h, l) a = \\<lfloor>(C, S)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> Path C to last Cs via Cs", "by (auto simp:path_via_def split:if_split_asm)"], ["proof (state)\nthis:\n  P \\<turnstile> Path C to last Cs via Cs \n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "with select \"method\" wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  wf_C_prog P\n  P \\<turnstile> Path C to last Cs via Cs", "have \"Ts' = Ts \\<and> P \\<turnstile> T \\<le> T'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> (C,Cs @\\<^sub>p Ds) selects M = (Ts, T, pns, body) via Cs'\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  wf_C_prog P\n  P \\<turnstile> Path C to last Cs via Cs \n\ngoal (1 subgoal):\n 1. Ts' = Ts \\<and> P \\<turnstile> T \\<le> T'", "by -(rule select_least_methods_subtypes,simp_all)"], ["proof (state)\nthis:\n  Ts' = Ts \\<and> P \\<turnstile> T \\<le> T'\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "hence eqs:\"Ts' = Ts\" and sub:\"P \\<turnstile> T \\<le> T'\""], ["proof (prove)\nusing this:\n  Ts' = Ts \\<and> P \\<turnstile> T \\<le> T'\n\ngoal (1 subgoal):\n 1. Ts' = Ts &&& P \\<turnstile> T \\<le> T'", "by auto"], ["proof (state)\nthis:\n  Ts' = Ts\n  P \\<turnstile> T \\<le> T'\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from wf wtabody"], ["proof (chain)\npicking this:\n  wf_C_prog P\n  P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n     Ts] \\<turnstile> body :: T", "have \"P,Map.empty(this\\<mapsto>Class(last Cs'),pns[\\<mapsto>]Ts),h \\<turnstile> body : T\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n  P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n     Ts] \\<turnstile> body :: T\n\ngoal (1 subgoal):\n 1. P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n       Ts],h \\<turnstile> body : T", "by -(rule WT_implies_WTrt,simp_all)"], ["proof (state)\nthis:\n  P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n     Ts],h \\<turnstile> body : T\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "hence wtbody:\"P,E(this#pns [\\<mapsto>] Class (last Cs')#Ts),h \\<turnstile> body : T\""], ["proof (prove)\nusing this:\n  P,[this \\<mapsto> Class (last Cs'), pns [\\<mapsto>]\n     Ts],h \\<turnstile> body : T\n\ngoal (1 subgoal):\n 1. P,E(this # pns [\\<mapsto>]\n    Class (last Cs') # Ts),h \\<turnstile> body : T", "by(rule WTrt_env_mono) simp"], ["proof (state)\nthis:\n  P,E(this # pns [\\<mapsto>] Class (last Cs') # Ts),h \\<turnstile> body : T\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> map Val vs [:] Ts''", "have \"length vs = length Ts''\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> map Val vs [:] Ts''\n\ngoal (1 subgoal):\n 1. length vs = length Ts''", "by (fastforce dest:WTrts_same_length)"], ["proof (state)\nthis:\n  length vs = length Ts''\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "with eqs subs"], ["proof (chain)\npicking this:\n  Ts' = Ts\n  P \\<turnstile> Ts'' [\\<le>] Ts'\n  length vs = length Ts''", "have length_vs:\"length (Ref(a,Cs')#vs) = length (Class(last Cs')#Ts)\""], ["proof (prove)\nusing this:\n  Ts' = Ts\n  P \\<turnstile> Ts'' [\\<le>] Ts'\n  length vs = length Ts''\n\ngoal (1 subgoal):\n 1. length (Ref (a, Cs') # vs) = length (Class (last Cs') # Ts)", "by (simp add:list_all2_iff)"], ["proof (state)\nthis:\n  length (Ref (a, Cs') # vs) = length (Class (last Cs') # Ts)\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "from subs eqs"], ["proof (chain)\npicking this:\n  P \\<turnstile> Ts'' [\\<le>] Ts'\n  Ts' = Ts", "have \"P \\<turnstile> (Class(last Cs')#Ts'') [\\<le>] (Class(last Cs')#Ts)\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Ts'' [\\<le>] Ts'\n  Ts' = Ts\n\ngoal (1 subgoal):\n 1. P \\<turnstile> (Class (last Cs') # Ts'') [\\<le>] (Class (last Cs') # Ts)", "by (simp add:fun_of_def)"], ["proof (state)\nthis:\n  P \\<turnstile> (Class (last Cs') # Ts'') [\\<le>] (Class (last Cs') # Ts)\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "with wt_blocks[OF length_pns length_vs type] wtbody map eq"], ["proof (chain)\npicking this:\n  (P,?E,?h \\<turnstile> blocks\n                         (this # pns, Class (last Cs') # Ts,\n                          Ref (a, Cs') # vs, ?e) : ?T) =\n  (P,?E(this # pns [\\<mapsto>]\n   Class (last Cs') # Ts),?h \\<turnstile> ?e : ?T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>?h\\<^esub> (Ref (a, Cs') # vs) =\n       map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] (Class (last Cs') # Ts)))\n  P,E(this # pns [\\<mapsto>] Class (last Cs') # Ts),h \\<turnstile> body : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs') # vs) =\n  map Some (Class (last Cs') # Ts'')\n  T'' = T'\n  P \\<turnstile> (Class (last Cs') # Ts'') [\\<le>] (Class (last Cs') # Ts)", "have blocks:\"P,E,h \\<turnstile> blocks(this#pns,Class(last Cs')#Ts,Ref(a,Cs')#vs,body) : T\""], ["proof (prove)\nusing this:\n  (P,?E,?h \\<turnstile> blocks\n                         (this # pns, Class (last Cs') # Ts,\n                          Ref (a, Cs') # vs, ?e) : ?T) =\n  (P,?E(this # pns [\\<mapsto>]\n   Class (last Cs') # Ts),?h \\<turnstile> ?e : ?T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>?h\\<^esub> (Ref (a, Cs') # vs) =\n       map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] (Class (last Cs') # Ts)))\n  P,E(this # pns [\\<mapsto>] Class (last Cs') # Ts),h \\<turnstile> body : T\n  map P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (a, Cs') # vs) =\n  map Some (Class (last Cs') # Ts'')\n  T'' = T'\n  P \\<turnstile> (Class (last Cs') # Ts'') [\\<le>] (Class (last Cs') # Ts)\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> blocks\n                        (this # pns, Class (last Cs') # Ts,\n                         Ref (a, Cs') # vs, body) : T", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs,\n                       body) : T\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "have \"P,E,h \\<turnstile> new_body : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> new_body : T'", "proof(cases \"\\<forall>C. T' \\<noteq> Class C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>C. T' \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'\n 2. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "case True"], ["proof (state)\nthis:\n  \\<forall>C. T' \\<noteq> Class C\n\ngoal (2 subgoals):\n 1. \\<forall>C. T' \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'\n 2. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "with sub notNT"], ["proof (chain)\npicking this:\n  P \\<turnstile> T \\<le> T'\n  T \\<noteq> NT\n  \\<forall>C. T' \\<noteq> Class C", "have \"T = T'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> T \\<le> T'\n  T \\<noteq> NT\n  \\<forall>C. T' \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. T = T'", "by (cases T') auto"], ["proof (state)\nthis:\n  T = T'\n\ngoal (2 subgoals):\n 1. \\<forall>C. T' \\<noteq> Class C \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'\n 2. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "with blocks True body_case bs"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs,\n                       body) : T\n  \\<forall>C. T' \\<noteq> Class C\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  T = T'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs,\n                       body) : T\n  \\<forall>C. T' \\<noteq> Class C\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  T = T'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> new_body : T'", "by(cases T') auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> new_body : T'\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>C. T' \\<noteq> Class C)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>C. T' \\<noteq> Class C)", "obtain D where T':\"T' = Class D\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>C. T' \\<noteq> Class C)\n\ngoal (1 subgoal):\n 1. (\\<And>D. T' = Class D \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T' = Class D\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "with \"method\" sub wf"], ["proof (chain)\npicking this:\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  P \\<turnstile> T \\<le> T'\n  wf_C_prog P\n  T' = Class D", "have \"class\": \"is_class P D\""], ["proof (prove)\nusing this:\n  P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds\n  P \\<turnstile> T \\<le> T'\n  wf_C_prog P\n  T' = Class D\n\ngoal (1 subgoal):\n 1. is_class P D", "by (auto elim!:widen.cases dest:least_method_is_type \n               intro:Subobj_last_isClass simp:path_unique_def)"], ["proof (state)\nthis:\n  is_class P D\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>C. T' \\<noteq> Class C) \\<Longrightarrow>\n    P,E,h \\<turnstile> new_body : T'", "with blocks T' body_case bs \"class\" sub"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs,\n                       body) : T\n  T' = Class D\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  is_class P D\n  P \\<turnstile> T \\<le> T'\n  is_class P D", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs,\n                       body) : T\n  T' = Class D\n  new_body =\n  (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n   | _ \\<Rightarrow> bs)\n  bs = blocks (this # pns, Class (last Cs') # Ts, Ref (a, Cs') # vs, body)\n  is_class P D\n  P \\<turnstile> T \\<le> T'\n  is_class P D\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> new_body : T'", "by(cases T',auto,cases T,auto)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> new_body : T'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> new_body : T'\n\ngoal (33 subgoals):\n 1. \\<And>a b aa C S Cs M Ts' T' pns' body' Ds Ts T pns body Cs' vs bs\n       new_body E Ta.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(C, S)\\<rfloor>;\n        P \\<turnstile> last Cs has least M = (Ts', T', pns', body') via Ds;\n        P \\<turnstile> (C,Cs @\\<^sub>p\n                          Ds) selects M = (Ts, T, pns, body) via Cs';\n        length vs = length pns; length Ts = length pns;\n        bs =\n        blocks\n         (this # pns, Class (last Cs') # Ts, Ref (aa, Cs') # vs, body);\n        new_body =\n        (case T' of Class D \\<Rightarrow> \\<lparr>D\\<rparr>bs\n         | _ \\<Rightarrow> bs);\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call (ref (aa, Cs)) None M\n                            (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> new_body :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 9. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 33 subgoals...", "with eq"], ["proof (chain)\npicking this:\n  T'' = T'\n  P,E,h \\<turnstile> new_body : T'", "show ?case"], ["proof (prove)\nusing this:\n  T'' = T'\n  P,E,h \\<turnstile> new_body : T'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> new_body :\\<^bsub>NT\\<^esub> T''", "by(fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> new_body :\\<^bsub>NT\\<^esub> T''\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "next"], ["proof (state)\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "case (RedStaticCall Cs C Cs'' M Ts T pns body Cs' Ds vs E a h l T')"], ["proof (state)\nthis:\n  P \\<turnstile> Path last Cs to C unique\n  P \\<turnstile> Path last Cs to C via Cs'' \n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n  Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\n  length vs = length pns\n  length Ts = length pns\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                      (map Val vs) : T'\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "have \"method\":\"P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\"\n    and length1:\"length vs = length pns\"\n    and length2:\"length Ts = length pns\"\n    and path_unique:\"P \\<turnstile> Path last Cs to C unique\"\n    and path_via:\"P \\<turnstile> Path last Cs to C via Cs''\"\n    and Ds:\"Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\"\n    and wt:\"P,E,h \\<turnstile> ref (a,Cs)\\<bullet>(C::)M(map Val vs) : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs' &&&\n     length vs = length pns &&& length Ts = length pns) &&&\n    (P \\<turnstile> Path last Cs to C unique &&&\n     P \\<turnstile> Path last Cs to C via Cs'' ) &&&\n    Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs' &&&\n    P,E,h \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                        (map Val vs) : T'", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n  length vs = length pns\n  length Ts = length pns\n  P \\<turnstile> Path last Cs to C unique\n  P \\<turnstile> Path last Cs to C via Cs'' \n  Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\n  P,E,h \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                      (map Val vs) : T'\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from wt \"method\" wf"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                      (map Val vs) : T'\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n  wf_C_prog P", "obtain Ts'\n    where wtref:\"P,E,h \\<turnstile> ref (a,Cs) : Class (last Cs)\"\n    and wtes:\"P,E,h \\<turnstile> map Val vs [:] Ts'\" and subs:\"P \\<turnstile> Ts' [\\<le>] Ts\"\n    and TeqT':\"T = T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                      (map Val vs) : T'\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs);\n         P,E,h \\<turnstile> map Val vs [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; T = T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:wf_sees_method_fun split:if_split_asm)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs)\n  P,E,h \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  T = T'\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from wtref"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs)", "obtain D S where hp:\"h a = Some(D,S)\" and subo:\"Subobjs P D Cs\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> ref (a, Cs) : Class (last Cs)\n\ngoal (1 subgoal):\n 1. (\\<And>D S.\n        \\<lbrakk>h a = \\<lfloor>(D, S)\\<rfloor>; Subobjs P D Cs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split:if_split_asm)"], ["proof (state)\nthis:\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Cs\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from length1 length2"], ["proof (chain)\npicking this:\n  length vs = length pns\n  length Ts = length pns", "have length_vs: \"length (Ref(a,Ds)#vs) = length (Class (last Ds)#Ts)\""], ["proof (prove)\nusing this:\n  length vs = length pns\n  length Ts = length pns\n\ngoal (1 subgoal):\n 1. length (Ref (a, Ds) # vs) = length (Class (last Ds) # Ts)", "by simp"], ["proof (state)\nthis:\n  length (Ref (a, Ds) # vs) = length (Class (last Ds) # Ts)\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from length2"], ["proof (chain)\npicking this:\n  length Ts = length pns", "have length_pns:\"length (this#pns) = length (Class (last Ds)#Ts)\""], ["proof (prove)\nusing this:\n  length Ts = length pns\n\ngoal (1 subgoal):\n 1. length (this # pns) = length (Class (last Ds) # Ts)", "by simp"], ["proof (state)\nthis:\n  length (this # pns) = length (Class (last Ds) # Ts)\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from \"method\""], ["proof (chain)\npicking this:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'", "have \"Cs' \\<noteq> []\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n\ngoal (1 subgoal):\n 1. Cs' \\<noteq> []", "by (fastforce intro!:Subobjs_nonempty simp add:LeastMethodDef_def MethodDefs_def)"], ["proof (state)\nthis:\n  Cs' \\<noteq> []\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with Ds"], ["proof (chain)\npicking this:\n  Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\n  Cs' \\<noteq> []", "have last:\"last Cs' = last Ds\""], ["proof (prove)\nusing this:\n  Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\n  Cs' \\<noteq> []\n\ngoal (1 subgoal):\n 1. last Cs' = last Ds", "by (fastforce dest:appendPath_last)"], ["proof (state)\nthis:\n  last Cs' = last Ds\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with \"method\""], ["proof (chain)\npicking this:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n  last Cs' = last Ds", "have \"is_class P (last Ds)\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n  last Cs' = last Ds\n\ngoal (1 subgoal):\n 1. is_class P (last Ds)", "by(auto simp:LeastMethodDef_def MethodDefs_def is_class_def)"], ["proof (state)\nthis:\n  is_class P (last Ds)\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with last has_least_wf_mdecl[OF wf \"method\"]"], ["proof (chain)\npicking this:\n  last Cs' = last Ds\n  wf_mdecl wf_C_mdecl P (last Cs') (M, Ts, T, pns, body)\n  is_class P (last Ds)", "have wtabody: \"P,[this#pns [\\<mapsto>] Class (last Ds)#Ts] \\<turnstile> body :: T\"\n    and type:\"\\<forall>T\\<in>set (Class(last Ds)#Ts). is_type P T\""], ["proof (prove)\nusing this:\n  last Cs' = last Ds\n  wf_mdecl wf_C_mdecl P (last Cs') (M, Ts, T, pns, body)\n  is_class P (last Ds)\n\ngoal (1 subgoal):\n 1. P,[this # pns [\\<mapsto>]\n       Class (last Ds) # Ts] \\<turnstile> body :: T &&&\n    \\<forall>T\\<in>set (Class (last Ds) # Ts). is_type P T", "by(auto simp:wf_mdecl_def)"], ["proof (state)\nthis:\n  P,[this # pns [\\<mapsto>] Class (last Ds) # Ts] \\<turnstile> body :: T\n  \\<forall>T\\<in>set (Class (last Ds) # Ts). is_type P T\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from path_via"], ["proof (chain)\npicking this:\n  P \\<turnstile> Path last Cs to C via Cs''", "have suboCs'':\"Subobjs P (last Cs) Cs''\" \n    and lastCs'':\"last Cs'' = C\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Path last Cs to C via Cs'' \n\ngoal (1 subgoal):\n 1. Subobjs P (last Cs) Cs'' &&& last Cs'' = C", "by (auto simp add:path_via_def)"], ["proof (state)\nthis:\n  Subobjs P (last Cs) Cs''\n  last Cs'' = C\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with subo wf"], ["proof (chain)\npicking this:\n  Subobjs P D Cs\n  wf_C_prog P\n  Subobjs P (last Cs) Cs''\n  last Cs'' = C", "have subo':\"Subobjs P D (Cs@\\<^sub>pCs'')\""], ["proof (prove)\nusing this:\n  Subobjs P D Cs\n  wf_C_prog P\n  Subobjs P (last Cs) Cs''\n  last Cs'' = C\n\ngoal (1 subgoal):\n 1. Subobjs P D (Cs @\\<^sub>p Cs'')", "by(fastforce intro: Subobjs_appendPath)"], ["proof (state)\nthis:\n  Subobjs P D (Cs @\\<^sub>p Cs'')\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from lastCs'' suboCs''"], ["proof (chain)\npicking this:\n  last Cs'' = C\n  Subobjs P (last Cs) Cs''", "have lastC:\"C = last(Cs@\\<^sub>pCs'')\""], ["proof (prove)\nusing this:\n  last Cs'' = C\n  Subobjs P (last Cs) Cs''\n\ngoal (1 subgoal):\n 1. C = last (Cs @\\<^sub>p Cs'')", "by (fastforce dest:Subobjs_nonempty intro:appendPath_last)"], ["proof (state)\nthis:\n  C = last (Cs @\\<^sub>p Cs'')\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from \"method\""], ["proof (chain)\npicking this:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'", "have \"Subobjs P C Cs'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs'\n\ngoal (1 subgoal):\n 1. Subobjs P C Cs'", "by (auto simp:LeastMethodDef_def MethodDefs_def)"], ["proof (state)\nthis:\n  Subobjs P C Cs'\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with subo' wf lastC"], ["proof (chain)\npicking this:\n  Subobjs P D (Cs @\\<^sub>p Cs'')\n  wf_C_prog P\n  C = last (Cs @\\<^sub>p Cs'')\n  Subobjs P C Cs'", "have \"Subobjs P D ((Cs @\\<^sub>p Cs'') @\\<^sub>p Cs')\""], ["proof (prove)\nusing this:\n  Subobjs P D (Cs @\\<^sub>p Cs'')\n  wf_C_prog P\n  C = last (Cs @\\<^sub>p Cs'')\n  Subobjs P C Cs'\n\ngoal (1 subgoal):\n 1. Subobjs P D ((Cs @\\<^sub>p Cs'') @\\<^sub>p Cs')", "by (fastforce intro:Subobjs_appendPath)"], ["proof (state)\nthis:\n  Subobjs P D ((Cs @\\<^sub>p Cs'') @\\<^sub>p Cs')\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with Ds"], ["proof (chain)\npicking this:\n  Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\n  Subobjs P D ((Cs @\\<^sub>p Cs'') @\\<^sub>p Cs')", "have suboDs:\"Subobjs P D Ds\""], ["proof (prove)\nusing this:\n  Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'\n  Subobjs P D ((Cs @\\<^sub>p Cs'') @\\<^sub>p Cs')\n\ngoal (1 subgoal):\n 1. Subobjs P D Ds", "by simp"], ["proof (state)\nthis:\n  Subobjs P D Ds\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "from wtabody"], ["proof (chain)\npicking this:\n  P,[this # pns [\\<mapsto>] Class (last Ds) # Ts] \\<turnstile> body :: T", "have \"P,Map.empty(this#pns [\\<mapsto>] Class (last Ds)#Ts),h \\<turnstile> body : T\""], ["proof (prove)\nusing this:\n  P,[this # pns [\\<mapsto>] Class (last Ds) # Ts] \\<turnstile> body :: T\n\ngoal (1 subgoal):\n 1. P,[this # pns [\\<mapsto>] Class (last Ds) # Ts],h \\<turnstile> body : T", "by(rule WT_implies_WTrt)"], ["proof (state)\nthis:\n  P,[this # pns [\\<mapsto>] Class (last Ds) # Ts],h \\<turnstile> body : T\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "hence \"P,E(this#pns [\\<mapsto>] Class (last Ds)#Ts),h \\<turnstile> body : T\""], ["proof (prove)\nusing this:\n  P,[this # pns [\\<mapsto>] Class (last Ds) # Ts],h \\<turnstile> body : T\n\ngoal (1 subgoal):\n 1. P,E(this # pns [\\<mapsto>] Class (last Ds) # Ts),h \\<turnstile> body : T", "by(rule WTrt_env_mono) simp"], ["proof (state)\nthis:\n  P,E(this # pns [\\<mapsto>] Class (last Ds) # Ts),h \\<turnstile> body : T\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "hence \"P,E,h \\<turnstile> blocks(this#pns, Class (last Ds)#Ts, Ref(a,Ds)#vs, body) : T\""], ["proof (prove)\nusing this:\n  P,E(this # pns [\\<mapsto>] Class (last Ds) # Ts),h \\<turnstile> body : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> blocks\n                        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                         body) : T", "using wtes subs wt_blocks[OF length_pns length_vs type] hp suboDs"], ["proof (prove)\nusing this:\n  P,E(this # pns [\\<mapsto>] Class (last Ds) # Ts),h \\<turnstile> body : T\n  P,E,h \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  (P,?E,?h \\<turnstile> blocks\n                         (this # pns, Class (last Ds) # Ts,\n                          Ref (a, Ds) # vs, ?e) : ?T) =\n  (P,?E(this # pns [\\<mapsto>]\n   Class (last Ds) # Ts),?h \\<turnstile> ?e : ?T \\<and>\n   (\\<exists>Ts'.\n       map P \\<turnstile> typeof\\<^bsub>?h\\<^esub> (Ref (a, Ds) # vs) =\n       map Some Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] (Class (last Ds) # Ts)))\n  h a = \\<lfloor>(D, S)\\<rfloor>\n  Subobjs P D Ds\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> blocks\n                        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                         body) : T", "by(auto simp add:rel_list_all2_Cons2)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                       body) : T\n\ngoal (32 subgoals):\n 1. \\<And>Cs C Cs'' M Ts T pns body Cs' Ds vs E a aa b Ta.\n       \\<lbrakk>P \\<turnstile> Path last Cs to C unique;\n        P \\<turnstile> Path last Cs to C via Cs'' ;\n        P \\<turnstile> C has least M = (Ts, T, pns, body) via Cs';\n        Ds = (Cs @\\<^sub>p Cs'') @\\<^sub>p Cs'; length vs = length pns;\n        length Ts = length pns; P,E \\<turnstile> (aa, b) \\<surd>;\n        P,E,aa \\<turnstile> Call (ref (a, Cs)) \\<lfloor>C\\<rfloor> M\n                             (map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> blocks\n        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n         body) :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 8. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                          else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 32 subgoals...", "with TeqT'"], ["proof (chain)\npicking this:\n  T = T'\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                       body) : T", "show ?case"], ["proof (prove)\nusing this:\n  T = T'\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                       body) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> blocks\n                        (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                         body) :\\<^bsub>NT\\<^esub> T'", "by(fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> blocks\n                      (this # pns, Class (last Ds) # Ts, Ref (a, Ds) # vs,\n                       body) :\\<^bsub>NT\\<^esub> T'\n\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "next"], ["proof (state)\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "case (RedCallNull E Copt M vs h l)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Call null Copt M (map Val vs) : T\n\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "have sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> (h, l) \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "from wf"], ["proof (chain)\npicking this:\n  wf_C_prog P", "have \"is_class P NullPointer\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P NullPointer", "by (fastforce intro:is_class_xcpt wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  is_class P NullPointer\n\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "hence \"preallocated h \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (addr_of_sys_xcpt NullPointer,[NullPointer])) = Some(Class NullPointer)\""], ["proof (prove)\nusing this:\n  is_class P NullPointer\n\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n     (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "by (auto elim: preallocatedE dest!:preallocatedD Subobjs_Base)"], ["proof (state)\nthis:\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>", "have \"P,E,h \\<turnstile> THROW NullPointer : T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer, [NullPointer]) : T", "by(auto simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (31 subgoals):\n 1. \\<And>E Copt M vs a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Call null Copt M (map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 7. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\nA total of 31 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer,\n                         [NullPointer]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw\n                      (addr_of_sys_xcpt NullPointer,\n                       [NullPointer]) :\\<^bsub>NT\\<^esub> T\n\ngoal (30 subgoals):\n 1. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 30 subgoals...", "next"], ["proof (state)\ngoal (30 subgoals):\n 1. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 30 subgoals...", "case (BlockRedNone E V T e h l e' h' l' T')"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>;\n   P,E(V \\<mapsto> T),h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E(V \\<mapsto>\n                    T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  l' V = None\n  \\<not> assigned V e\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (30 subgoals):\n 1. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 30 subgoals...", "have IH:\"\\<And>T'. \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>; P,E(V \\<mapsto> T),h \\<turnstile> e : T'\\<rbrakk>\n                 \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> {V:T; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>;\n         P,E(V \\<mapsto> T),h \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> P,E(V \\<mapsto>\n                          T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> {V:T; e} : T'", "by fact+"], ["proof (state)\nthis:\n  \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>;\n   P,E(V \\<mapsto> T),h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E(V \\<mapsto>\n                    T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (30 subgoals):\n 1. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 30 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> {V:T; e} : T'", "have type:\"is_type P T\" and wte:\"P,E(V\\<mapsto>T),h \\<turnstile> e : T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (1 subgoal):\n 1. is_type P T &&& P,E(V \\<mapsto> T),h \\<turnstile> e : T'", "by auto"], ["proof (state)\nthis:\n  is_type P T\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n\ngoal (30 subgoals):\n 1. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 30 subgoals...", "from sconf type"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T", "have \"P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>", "by (auto simp:sconf_def lconf_def envconf_def)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>\n\ngoal (30 subgoals):\n 1. \\<And>E V T e h l e' h' l' Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = None; \\<not> assigned V e; P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 6. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\nA total of 30 subgoals...", "from IH[OF this wte] type"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_type P T", "show ?case"], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> T'", "by (cases T') auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> {V:T; e'} :\\<^bsub>NT\\<^esub> T'\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "next"], ["proof (state)\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "case (BlockRedSome E V T e h l e' h' l' v T')"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>;\n   P,E(V \\<mapsto> T),h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E(V \\<mapsto>\n                    T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "have red:\"P,E(V \\<mapsto> T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>; P,E(V \\<mapsto> T),h \\<turnstile> e : T'\\<rbrakk>\n                  \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and Some:\"l' V = Some v\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> {V:T; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E(V \\<mapsto>\n     T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                     \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T'.\n         \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>;\n          P,E(V \\<mapsto> T),h \\<turnstile> e : T'\\<rbrakk>\n         \\<Longrightarrow> P,E(V \\<mapsto>\n                           T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T')) &&&\n    l' V = \\<lfloor>v\\<rfloor> &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> {V:T; e} : T'", "by fact+"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>;\n   P,E(V \\<mapsto> T),h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E(V \\<mapsto>\n                    T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  l' V = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> {V:T; e} : T'", "have wte:\"P,E(V\\<mapsto>T),h \\<turnstile> e : T'\"  and type:\"is_type P T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> {V:T; e} : T'\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h \\<turnstile> e : T' &&& is_type P T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  is_type P T\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "with sconf wf red type"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  wf_C_prog P\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  is_type P T\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  is_type P T", "have \"P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  wf_C_prog P\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  is_type P T\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "by -(auto simp:sconf_def,rule red_preserves_lconf,\n         auto intro:wf_prog_wwf_prog simp:envconf_def lconf_def)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "hence conf:\"P,h' \\<turnstile> v :\\<le> T\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> v :\\<le> T", "using Some"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  l' V = \\<lfloor>v\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> v :\\<le> T", "by(auto simp:lconf_def,erule_tac x=\"V\" in allE,clarsimp)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> v :\\<le> T\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "have wtval:\"P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "proof(cases T)"], ["proof (state)\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = Boolean \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 4. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "case Void"], ["proof (state)\nthis:\n  T = Void\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = Boolean \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 4. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "with conf"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Void", "show ?thesis"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Void\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "case Boolean"], ["proof (state)\nthis:\n  T = Boolean\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "with conf"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Boolean", "show ?thesis"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Boolean\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "case Integer"], ["proof (state)\nthis:\n  T = Integer\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "with conf"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Integer", "show ?thesis"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Integer\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "case NT"], ["proof (state)\nthis:\n  T = NT\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "with conf"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = NT", "show ?thesis"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = NT\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "case (Class C)"], ["proof (state)\nthis:\n  T = Class C\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "with conf"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Class C", "have \"P,E(V \\<mapsto> T),h' \\<turnstile> Val v : T \\<or> P,E(V \\<mapsto> T),h' \\<turnstile> Val v : NT\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> v :\\<le> T\n  T = Class C\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> Val v : T \\<or> P,E(V \\<mapsto>\n    T),h' \\<turnstile> Val v : NT", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> Val v : T \\<or> P,E(V \\<mapsto>\n  T),h' \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "with Class"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E(V \\<mapsto> T),h' \\<turnstile> Val v : T \\<or> P,E(V \\<mapsto>\n  T),h' \\<turnstile> Val v : NT", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E(V \\<mapsto> T),h' \\<turnstile> Val v : T \\<or> P,E(V \\<mapsto>\n  T),h' \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "from sconf type"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T", "have \"P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>", "by (auto simp:sconf_def lconf_def envconf_def)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T) \\<turnstile> (h, l(V := None)) \\<surd>\n\ngoal (29 subgoals):\n 1. \\<And>E V T e h l e' h' l' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V := None))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V := None)) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v;;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 5. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E b c a ba T.\n        \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n         P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                          else unit :\\<^bsub>NT\\<^esub> T\nA total of 29 subgoals...", "from IH[OF this wte] wtval type"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n  is_type P T", "show ?case"], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v : T\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> {V:T; V:=Val v;; e'} :\\<^bsub>NT\\<^esub> T'", "by(cases T') auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> {V:T; V:=Val v;; e'} :\\<^bsub>NT\\<^esub> T'\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "next"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "case (InitBlockRed E V T e h l v' e' h' l' v'' v T')"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n   P,E(V \\<mapsto> T),h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E(V \\<mapsto>\n                    T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  l' V = \\<lfloor>v''\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "have red:\"P,E(V \\<mapsto> T) \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>; P,E(V \\<mapsto> T),h \\<turnstile> e : T'\\<rbrakk>\n              \\<Longrightarrow> P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and Some:\"l' V = Some v''\" and casts:\"P \\<turnstile> T casts v to v'\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> {V:T := Val v; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E(V \\<mapsto>\n     T) \\<turnstile> \\<langle>e,\n                      (h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                     \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T'.\n         \\<lbrakk>P,E(V \\<mapsto>\n                  T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n          P,E(V \\<mapsto> T),h \\<turnstile> e : T'\\<rbrakk>\n         \\<Longrightarrow> P,E(V \\<mapsto>\n                           T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T') &&&\n     l' V = \\<lfloor>v''\\<rfloor>) &&&\n    P \\<turnstile> T casts v to v'  &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&&\n    P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'", "by fact+"], ["proof (state)\nthis:\n  P,E(V \\<mapsto>\n  T) \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v'))\\<rangle> \\<rightarrow>\n                  \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E(V \\<mapsto> T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n   P,E(V \\<mapsto> T),h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E(V \\<mapsto>\n                    T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  l' V = \\<lfloor>v''\\<rfloor>\n  P \\<turnstile> T casts v to v' \n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'", "have wte:\"P,E(V \\<mapsto> T),h \\<turnstile> e : T'\" and wtval:\"P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T\"\n    and type:\"is_type P T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h \\<turnstile> e : T' &&&\n    P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T &&& is_type P T", "by auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h \\<turnstile> e : T'\n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T\n  is_type P T\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "from wf casts wtval"], ["proof (chain)\npicking this:\n  wf_C_prog P\n  P \\<turnstile> T casts v to v' \n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T", "have \"P,h \\<turnstile> v' :\\<le> T\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n  P \\<turnstile> T casts v to v' \n  P,E(V \\<mapsto> T),h \\<turnstile> V:=Val v : T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v' :\\<le> T", "by(fastforce intro!:casts_conf wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v' :\\<le> T\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,h \\<turnstile> v' :\\<le> T", "have lconf:\"P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,h \\<turnstile> v' :\\<le> T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "by (fastforce intro!:lconf_upd2 simp:sconf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "from sconf type"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T", "have \"envconf P (E(V \\<mapsto> T))\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> E(V \\<mapsto> T) \\<surd>", "by(simp add:sconf_def envconf_def)"], ["proof (state)\nthis:\n  P \\<turnstile> E(V \\<mapsto> T) \\<surd>\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "from red_preserves_lconf[OF wf_prog_wwf_prog[OF wf] red wte lconf this]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "have \"P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "with Some"], ["proof (chain)\npicking this:\n  l' V = \\<lfloor>v''\\<rfloor>\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)", "have \"P,h' \\<turnstile> v'' :\\<le> T\""], ["proof (prove)\nusing this:\n  l' V = \\<lfloor>v''\\<rfloor>\n  P,h' \\<turnstile> l' (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> v'' :\\<le> T", "by(simp add:lconf_def,erule_tac x=\"V\" in allE,auto)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> v'' :\\<le> T\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "hence wtval':\"P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v'' : T\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> v'' :\\<le> T\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v'' : T", "by(cases T) auto"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v'' : T\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "from lconf sconf type"], ["proof (chain)\npicking this:\n  P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T", "have \"P,E(V \\<mapsto> T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile> l(V \\<mapsto> v') (:\\<le>)\\<^sub>w E(V \\<mapsto> T)\n  P,E \\<turnstile> (h, l) \\<surd>\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,E(V \\<mapsto> T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>", "by(auto simp:sconf_def envconf_def)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>\n\ngoal (28 subgoals):\n 1. \\<And>E V T e h l v' e' h' l' v'' v Ta.\n       \\<lbrakk>P,E(V \\<mapsto>\n                T) \\<turnstile> \\<langle>e,\n                                 (h, l(V \\<mapsto>\n                                  v'))\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l')\\<rangle>;\n        \\<And>Ta.\n           \\<lbrakk>P,E(V \\<mapsto>\n                    T) \\<turnstile> (h, l(V \\<mapsto> v')) \\<surd>;\n            P,E(V \\<mapsto> T),h \\<turnstile> e : Ta\\<rbrakk>\n           \\<Longrightarrow> P,E(V \\<mapsto>\n                             T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Ta;\n        l' V = \\<lfloor>v''\\<rfloor>; P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (h, l) \\<surd>;\n        P,E,h \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,h' \\<turnstile> {V:T; V:=Val v'';;\n                         e'} :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 4. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba T.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\nA total of 28 subgoals...", "from IH[OF this wte] wtval' type"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v'' : T\n  is_type P T", "show ?case"], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T),h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n  P,E(V \\<mapsto> T),h' \\<turnstile> V:=Val v'' : T\n  is_type P T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> {V:T; V:=Val v'';; e'} :\\<^bsub>NT\\<^esub> T'", "by(cases T') auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> {V:T; V:=Val v'';; e'} :\\<^bsub>NT\\<^esub> T'\n\ngoal (27 subgoals):\n 1. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw null : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 27 subgoals...", "next"], ["proof (state)\ngoal (27 subgoals):\n 1. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw null : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 27 subgoals...", "case RedBlock"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> {V_:T_; Val u_} : T\n\ngoal (27 subgoals):\n 1. \\<And>E V T u a b Ta.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 3. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b T.\n        \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> throw null : T\\<rbrakk>\n        \\<Longrightarrow> P,E,a \\<turnstile> Throw\n        (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\nA total of 27 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> {V_:T_; Val u_} : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> Val u_ :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> Val u_ :\\<^bsub>NT\\<^esub> T\n\ngoal (26 subgoals):\n 1. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba es Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n        es [:]\\<^bsub>NT\\<^esub> Ts\nA total of 26 subgoals...", "next"], ["proof (state)\ngoal (26 subgoals):\n 1. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba es Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n        es [:]\\<^bsub>NT\\<^esub> Ts\nA total of 26 subgoals...", "case RedInitBlock"], ["proof (state)\nthis:\n  P \\<turnstile> T_ casts v_ to v'_ \n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> {V_:T_; V_:=Val v_;; Val u_} : T\n\ngoal (26 subgoals):\n 1. \\<And>T v v' E V u a b Ta.\n       \\<lbrakk>P \\<turnstile> T casts v to v' ;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> {V:T; V:=Val v;; Val u} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Val u :\\<^bsub>NT\\<^esub> Ta\n 2. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E e a b e' aa ba es Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                  \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>T.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n        es [:]\\<^bsub>NT\\<^esub> Ts\nA total of 26 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> T_ casts v_ to v'_ \n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> {V_:T_; V_:=Val v_;; Val u_} : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> Val u_ :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> Val u_ :\\<^bsub>NT\\<^esub> T\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "next"], ["proof (state)\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "case (SeqRed E e h l e' h' l' e\\<^sub>2 T)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e;; e\\<^sub>2 : T\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH:\"\\<And>T'. \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>; P,E,h \\<turnstile> e : T'\\<rbrakk> \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> e;; e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T'.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> e : T'\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T')) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> e;; e\\<^sub>2 : T", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T'\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T'\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e;; e\\<^sub>2 : T\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e;; e\\<^sub>2 : T", "obtain T' where wte:\"P,E,h \\<turnstile> e : T'\" and wte2:\"P,E,h \\<turnstile> e\\<^sub>2 : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e;; e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h \\<turnstile> e : T';\n         P,E,h \\<turnstile> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : T'\n  P,E,h \\<turnstile> e\\<^sub>2 : T\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "from WTrt_hext_mono[OF wte2 red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T", "have wte2':\"P,E,h' \\<turnstile> e\\<^sub>2 : T\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e\\<^sub>2 : T", "."], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'", "obtain T'' where \"P,E,h' \\<turnstile> e' : T''\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        P,E,h' \\<turnstile> e' : T'' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(cases T') auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : T''\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "with wte2'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\n  P,E,h' \\<turnstile> e' : T''", "have \"P,E,h' \\<turnstile> e';; e\\<^sub>2 : T\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\n  P,E,h' \\<turnstile> e' : T''\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e';; e\\<^sub>2 : T", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e';; e\\<^sub>2 : T\n\ngoal (25 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e';;\n                         e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E es a b es' aa ba v Ts.\n        \\<lbrakk>P,E \\<turnstile> \\<langle>es,\n                                   (a, b)\\<rangle> [\\<rightarrow>]\n                                  \\<langle>es',(aa, ba)\\<rangle>;\n         \\<And>Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n             P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n         P,E \\<turnstile> (a, b) \\<surd>;\n         P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n        es' [:]\\<^bsub>NT\\<^esub> Ts\nA total of 25 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e';; e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e';; e\\<^sub>2 :\\<^bsub>NT\\<^esub> T", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e';; e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n\ngoal (24 subgoals):\n 1. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 24 subgoals...", "next"], ["proof (state)\ngoal (24 subgoals):\n 1. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 24 subgoals...", "case RedSeq"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> Val v_;; e\\<^sub>2_ : T\n\ngoal (24 subgoals):\n 1. \\<And>E v e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v;; e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 24 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> Val v_;; e\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> e\\<^sub>2_ :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> e\\<^sub>2_ :\\<^bsub>NT\\<^esub> T\n\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "next"], ["proof (state)\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "case (CondRed E e h l e' h' l' e\\<^sub>1 e\\<^sub>2)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\n\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH: \"\\<And>T. \\<lbrakk>P,E \\<turnstile> (h,l) \\<surd>; P,E,h \\<turnstile> e : T\\<rbrakk>\n                     \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"\n    and wt:\"P,E,h \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\"\n    and sconf:\"P,E \\<turnstile> (h,l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T)) &&&\n    P,E,h \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T &&&\n    P,E \\<turnstile> (h, l) \\<surd>", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E,h \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T", "have wte:\"P,E,h \\<turnstile> e : Boolean\"\n      and wte1:\"P,E,h \\<turnstile> e\\<^sub>1 : T\" and wte2:\"P,E,h \\<turnstile> e\\<^sub>2 : T\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : Boolean &&&\n    P,E,h \\<turnstile> e\\<^sub>1 : T &&& P,E,h \\<turnstile> e\\<^sub>2 : T", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : Boolean\n  P,E,h \\<turnstile> e\\<^sub>1 : T\n  P,E,h \\<turnstile> e\\<^sub>2 : T\n\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "from IH[OF sconf wte]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Boolean", "have wte':\"P,E,h' \\<turnstile> e' : Boolean\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Boolean\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Boolean", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Boolean\n\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "from wte' WTrt_hext_mono[OF wte1 red_hext_incr[OF red]]\n    WTrt_hext_mono[OF wte2 red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : Boolean\n  P,E,h' \\<turnstile> e\\<^sub>1 : T\n  P,E,h' \\<turnstile> e\\<^sub>2 : T", "have \"P,E,h' \\<turnstile> if (e') e\\<^sub>1 else e\\<^sub>2 : T\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Boolean\n  P,E,h' \\<turnstile> e\\<^sub>1 : T\n  P,E,h' \\<turnstile> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> if (e') e\\<^sub>1 else e\\<^sub>2 : T", "by (rule WTrtCond)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> if (e') e\\<^sub>1 else e\\<^sub>2 : T\n\ngoal (23 subgoals):\n 1. \\<And>E e a b e' aa ba e\\<^sub>1 e\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> if (e') e\\<^sub>1\n                         else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E C a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 23 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> if (e') e\\<^sub>1 else e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> if (e') e\\<^sub>1\n    else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> if (e') e\\<^sub>1 else e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n\ngoal (22 subgoals):\n 1. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 7. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b bop e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 22 subgoals...", "next"], ["proof (state)\ngoal (22 subgoals):\n 1. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 7. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b bop e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 22 subgoals...", "case RedCondT"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> if (true) e\\<^sub>1_ else e\\<^sub>2_ : T\n\ngoal (22 subgoals):\n 1. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (true) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>1 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 7. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 8. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b bop e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 22 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> if (true) e\\<^sub>1_ else e\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> e\\<^sub>1_ :\\<^bsub>NT\\<^esub> T", "by (fastforce intro: wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> e\\<^sub>1_ :\\<^bsub>NT\\<^esub> T\n\ngoal (21 subgoals):\n 1. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 6. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 7. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v\\<^sub>1 bop a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n     (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 21 subgoals...", "next"], ["proof (state)\ngoal (21 subgoals):\n 1. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 6. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 7. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v\\<^sub>1 bop a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n     (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 21 subgoals...", "case RedCondF"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> if (false) e\\<^sub>1_ else e\\<^sub>2_ : T\n\ngoal (21 subgoals):\n 1. \\<And>E e\\<^sub>1 e\\<^sub>2 a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> if (false) e\\<^sub>1 else e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> e\\<^sub>2 :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 6. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 7. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v\\<^sub>1 bop a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n     (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 21 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> if (false) e\\<^sub>1_ else e\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> e\\<^sub>2_ :\\<^bsub>NT\\<^esub> T", "by (fastforce intro: wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> e\\<^sub>2_ :\\<^bsub>NT\\<^esub> T\n\ngoal (20 subgoals):\n 1. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 20 subgoals...", "next"], ["proof (state)\ngoal (20 subgoals):\n 1. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 20 subgoals...", "case RedWhile"], ["proof (state)\nthis:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> while (b___) c_ : T\n\ngoal (20 subgoals):\n 1. \\<And>E b c a ba T.\n       \\<lbrakk>P,E \\<turnstile> (a, ba) \\<surd>;\n        P,E,a \\<turnstile> while (b) c : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> if (b) (c;; while (b) c)\n                         else unit :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 20 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E_ \\<turnstile> (a_, b_) \\<surd>\n  P,E_,a_ \\<turnstile> while (b___) c_ : T\n\ngoal (1 subgoal):\n 1. P,E_,a_ \\<turnstile> if (b___) (c_;; while (b___) c_)\n    else unit :\\<^bsub>NT\\<^esub> T", "by (fastforce intro: wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E_,a_ \\<turnstile> if (b___) (c_;; while (b___) c_)\n  else unit :\\<^bsub>NT\\<^esub> T\n\ngoal (19 subgoals):\n 1. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 19 subgoals...", "next"], ["proof (state)\ngoal (19 subgoals):\n 1. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 19 subgoals...", "case (ThrowRed E e h l e' h' l' T)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> throw e : T\n\ngoal (19 subgoals):\n 1. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 19 subgoals...", "have IH:\"\\<And>T. \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>; P,E,h \\<turnstile> e : T\\<rbrakk> \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> throw e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n         P,E,h \\<turnstile> e : T\\<rbrakk>\n        \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> throw e : T", "by fact+"], ["proof (state)\nthis:\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> throw e : T\n\ngoal (19 subgoals):\n 1. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 19 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> throw e : T", "obtain T' where wte:\"P,E,h \\<turnstile> e : T'\" and ref:\"is_refT T'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> throw e : T\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h \\<turnstile> e : T'; is_refT T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : T'\n  is_refT T'\n\ngoal (19 subgoals):\n 1. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 19 subgoals...", "from ref"], ["proof (chain)\npicking this:\n  is_refT T'", "have \"P,E,h' \\<turnstile> throw e' : T\""], ["proof (prove)\nusing this:\n  is_refT T'\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> throw e' : T", "proof(rule refTE)"], ["proof (state)\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T\n 2. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "assume T':\"T' = NT\""], ["proof (state)\nthis:\n  T' = NT\n\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T\n 2. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "with wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e : T'\n  T' = NT", "have \"P,E,h \\<turnstile> e : NT\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e : T'\n  T' = NT\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : NT\n\ngoal (2 subgoals):\n 1. T' = NT \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T\n 2. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "from IH[OF sconf this] ref T'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n  is_refT T'\n  T' = NT", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n  is_refT T'\n  T' = NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> throw e' : T", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> throw e' : T\n\ngoal (1 subgoal):\n 1. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "assume T':\"T' = Class C\""], ["proof (state)\nthis:\n  T' = Class C\n\ngoal (1 subgoal):\n 1. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "with wte"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e : T'\n  T' = Class C", "have \"P,E,h \\<turnstile> e : Class C\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e : T'\n  T' = Class C\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : Class C", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : Class C\n\ngoal (1 subgoal):\n 1. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "from IH[OF sconf this]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C", "have \"P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> Class C\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>C. T' = Class C \\<Longrightarrow> P,E,h' \\<turnstile> throw e' : T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C \\<or> P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> throw e' : T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "assume wte':\"P,E,h' \\<turnstile> e' : Class C\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : Class C\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "have \"is_refT (Class C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT (Class C)", "by simp"], ["proof (state)\nthis:\n  is_refT (Class C)\n\ngoal (2 subgoals):\n 1. P,E,h' \\<turnstile> e' : Class C \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T\n 2. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "with wte'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : Class C\n  is_refT (Class C)", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : Class C\n  is_refT (Class C)\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> throw e' : T", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> throw e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "assume wte':\"P,E,h' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "have \"is_refT NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT NT", "by simp"], ["proof (state)\nthis:\n  is_refT NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' : NT \\<Longrightarrow>\n    P,E,h' \\<turnstile> throw e' : T", "with wte'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' : NT\n  is_refT NT", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' : NT\n  is_refT NT\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> throw e' : T", "by auto"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> throw e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> throw e' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> throw e' : T\n\ngoal (19 subgoals):\n 1. \\<And>E e a b e' aa ba T.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 19 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> throw e' : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T", "by (rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> throw e' :\\<^bsub>NT\\<^esub> T\n\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "next"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "case (RedThrowNull E h l)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> throw null : T\n\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "have sconf:\"P,E \\<turnstile> (h, l) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> (h, l) \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l) \\<surd>\n\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "from wf"], ["proof (chain)\npicking this:\n  wf_C_prog P", "have \"is_class P NullPointer\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. is_class P NullPointer", "by (fastforce intro:is_class_xcpt wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  is_class P NullPointer\n\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "hence \"preallocated h \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> (Ref (addr_of_sys_xcpt NullPointer,[NullPointer])) = Some(Class NullPointer)\""], ["proof (prove)\nusing this:\n  is_class P NullPointer\n\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n     (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "by (auto elim: preallocatedE dest!:preallocatedD Subobjs_Base)"], ["proof (state)\nthis:\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>", "have \"P,E,h \\<turnstile> THROW NullPointer : T\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l) \\<surd>\n  preallocated h \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub>\n   (Ref (addr_of_sys_xcpt NullPointer, [NullPointer])) =\n  \\<lfloor>Class NullPointer\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer, [NullPointer]) : T", "by(auto simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (18 subgoals):\n 1. \\<And>E a b T.\n       \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> throw null : T\\<rbrakk>\n       \\<Longrightarrow> P,E,a \\<turnstile> Throw\n       (addr_of_sys_xcpt NullPointer, [NullPointer]) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Throw\n                              (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Throw (addr_of_sys_xcpt NullPointer, [NullPointer]) : T\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Throw\n                        (addr_of_sys_xcpt NullPointer,\n                         [NullPointer]) :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Throw\n                      (addr_of_sys_xcpt NullPointer,\n                       [NullPointer]) :\\<^bsub>NT\\<^esub> T\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "case (ListRed1 E e h l e' h' l' es Ts)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e # es [:] Ts\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "have red:\"P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow> \\<langle>e',(h', l')\\<rangle>\"\n    and IH:\"\\<And>T. \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>; P,E,h \\<turnstile> e : T\\<rbrakk> \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> e # es [:] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> &&&\n     (\\<And>T.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T)) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> e # es [:] Ts", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> e # es [:] Ts\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e # es [:] Ts", "obtain U Us where Ts:\"Ts = U#Us\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e # es [:] Ts\n\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases Ts) auto"], ["proof (state)\nthis:\n  Ts = U # Us\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "with wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e # es [:] Ts\n  Ts = U # Us", "have wte:\"P,E,h \\<turnstile> e : U\" and wtes:\"P,E,h \\<turnstile> es [:] Us\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e # es [:] Ts\n  Ts = U # Us\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : U &&& P,E,h \\<turnstile> es [:] Us", "by simp_all"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e : U\n  P,E,h \\<turnstile> es [:] Us\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "from WTrts_hext_mono[OF wtes red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es [:] Us", "have wtes':\"P,E,h' \\<turnstile> es [:] Us\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es [:] Us\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:] Us", "."], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:] Us\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "hence \"length es = length Us\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es [:] Us\n\ngoal (1 subgoal):\n 1. length es = length Us", "by (rule WTrts_same_length)"], ["proof (state)\nthis:\n  length es = length Us\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "with wtes'"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es [:] Us\n  length es = length Us", "have \"types_conf P E h' es Us\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es [:] Us\n  length es = length Us\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Us", "by (fastforce intro:wts_same_types_typesconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Us\n\ngoal (17 subgoals):\n 1. \\<And>E e a b e' aa ba es Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                 \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> e # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> e' #\n       es [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E v F Cs a b aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw\n               (a, b) : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 17 subgoals...", "with IH[OF sconf wte] Ts"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> U\n  Ts = U # Us\n  P,E,h' \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Us", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> e' :\\<^bsub>NT\\<^esub> U\n  Ts = U # Us\n  P,E,h' \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Us\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> e' # es [:]\\<^bsub>NT\\<^esub> Ts", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> e' # es [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "case (ListRed2 E es h l es' h' l' v Ts)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> ?Ts\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Val v # es [:] Ts\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "have reds:\"P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h', l')\\<rangle>\"\n    and IH:\"\\<And>Ts. \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>; P,E,h \\<turnstile> es [:] Ts\\<rbrakk> \\<Longrightarrow> types_conf P E h' es' Ts\"\n    and sconf:\"P,E \\<turnstile> (h, l) \\<surd>\" and wt:\"P,E,h \\<turnstile> Val v#es [:] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> &&&\n     (\\<And>Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n          P,E,h \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts)) &&&\n    P,E \\<turnstile> (h, l) \\<surd> &&& P,E,h \\<turnstile> Val v # es [:] Ts", "by fact+"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                   \\<langle>es',(h', l')\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> (h, l) \\<surd>;\n   P,E,h \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> ?Ts\n  P,E \\<turnstile> (h, l) \\<surd>\n  P,E,h \\<turnstile> Val v # es [:] Ts\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Val v # es [:] Ts", "obtain U Us where Ts:\"Ts = U#Us\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Val v # es [:] Ts\n\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases Ts) auto"], ["proof (state)\nthis:\n  Ts = U # Us\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "with wt"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> Val v # es [:] Ts\n  Ts = U # Us", "have wtval:\"P,E,h \\<turnstile> Val v : U\" and wtes:\"P,E,h \\<turnstile> es [:] Us\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> Val v # es [:] Ts\n  Ts = U # Us\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> Val v : U &&& P,E,h \\<turnstile> es [:] Us", "by simp_all"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> Val v : U\n  P,E,h \\<turnstile> es [:] Us\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "from WTrt_hext_mono[OF wtval reds_hext_incr[OF reds]]"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> Val v : U", "have \"P,E,h' \\<turnstile> Val v : U\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : U\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v : U", "."], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v : U\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "hence \"P,E,h' \\<turnstile> (Val v) :\\<^bsub>NT\\<^esub> U\""], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> Val v : U\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v :\\<^bsub>NT\\<^esub> U", "by(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v :\\<^bsub>NT\\<^esub> U\n\ngoal (16 subgoals):\n 1. \\<And>E es a b es' aa ba v Ts.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>es,(a, b)\\<rangle> [\\<rightarrow>]\n                                 \\<langle>es',(aa, ba)\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, b) \\<surd>;\n            P,E,a \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,aa \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> (a, b) \\<surd>;\n        P,E,a \\<turnstile> Val v # es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Val v #\n       es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E a b Copt M es aa ba T.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 16 subgoals...", "with IH[OF sconf wtes] Ts"], ["proof (chain)\npicking this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Us\n  Ts = U # Us\n  P,E,h' \\<turnstile> Val v :\\<^bsub>NT\\<^esub> U", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Us\n  Ts = U # Us\n  P,E,h' \\<turnstile> Val v :\\<^bsub>NT\\<^esub> U\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Val v # es' [:]\\<^bsub>NT\\<^esub> Ts", "by simp"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Val v # es' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (15 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b Copt M es aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>es vs a b es' E v Copt M aa ba T.\n        \\<lbrakk>es = map Val vs @ Throw (a, b) # es';\n         P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b Copt M es aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>es vs a b es' E v Copt M aa ba T.\n        \\<lbrakk>es = map Val vs @ Throw (a, b) # es';\n         P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 15 subgoals...", "case (CallThrowObj E h l Copt M es h' l')"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h', l') \\<surd>\n  P,E,h' \\<turnstile> Call (Throw (h, l)) Copt M es : T\n\ngoal (15 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E a b Copt M es aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Call (Throw (a, b)) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>es vs a b es' E v Copt M aa ba T.\n        \\<lbrakk>es = map Val vs @ Throw (a, b) # es';\n         P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> T\nA total of 15 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h', l') \\<surd>\n  P,E,h' \\<turnstile> Call (Throw (h, l)) Copt M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Throw (h, l) :\\<^bsub>NT\\<^esub> T", "by(cases Copt)(auto intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Throw (h, l) :\\<^bsub>NT\\<^esub> T\n\ngoal (14 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>es vs a b es' E v Copt M aa ba T.\n       \\<lbrakk>es = map Val vs @ Throw (a, b) # es';\n        P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T a b aa ba Ta.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> {V:T; Throw (a, b)} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> Ta\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>es vs a b es' E v Copt M aa ba T.\n       \\<lbrakk>es = map Val vs @ Throw (a, b) # es';\n        P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T a b aa ba Ta.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> {V:T; Throw (a, b)} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> Ta\nA total of 14 subgoals...", "case (CallThrowParams es vs h l es' E v Copt M h' l')"], ["proof (state)\nthis:\n  es = map Val vs @ Throw (h, l) # es'\n  P,E \\<turnstile> (h', l') \\<surd>\n  P,E,h' \\<turnstile> Call (Val v) Copt M es : T\n\ngoal (14 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>es vs a b es' E v Copt M aa ba T.\n       \\<lbrakk>es = map Val vs @ Throw (a, b) # es';\n        P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Call (Val v) Copt M es : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 10. \\<And>E V T a b aa ba Ta.\n        \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> {V:T; Throw (a, b)} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> Ta\nA total of 14 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  es = map Val vs @ Throw (h, l) # es'\n  P,E \\<turnstile> (h', l') \\<surd>\n  P,E,h' \\<turnstile> Call (Val v) Copt M es : T\n\ngoal (1 subgoal):\n 1. P,E,h' \\<turnstile> Throw (h, l) :\\<^bsub>NT\\<^esub> T", "by(cases Copt)(auto intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h' \\<turnstile> Throw (h, l) :\\<^bsub>NT\\<^esub> T\n\ngoal (13 subgoals):\n 1. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Cast C (Throw (a, b)) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 2. \\<And>E C a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> \\<lparr>C\\<rparr>Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 3. \\<And>E a b bop e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 4. \\<And>E v\\<^sub>1 bop a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Throw\n    (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 5. \\<And>E V a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> V:=Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 6. \\<And>E a b F Cs aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw (a, b)\\<bullet>F{Cs} : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 7. \\<And>E a b F Cs e\\<^sub>2 aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Throw\n                             (a, b)\\<bullet>F{Cs} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 8. \\<And>E v F Cs a b aa ba T.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> Val v\\<bullet>F{Cs} := Throw (a, b) : T\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> T\n 9. \\<And>E V T a b aa ba Ta.\n       \\<lbrakk>P,E \\<turnstile> (aa, ba) \\<surd>;\n        P,E,aa \\<turnstile> {V:T; Throw (a, b)} : Ta\\<rbrakk>\n       \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n        (a, b) :\\<^bsub>NT\\<^esub> Ta\n 10. \\<And>T v v' E V a b aa ba Ta.\n        \\<lbrakk>P \\<turnstile> T casts v to v' ;\n         P,E \\<turnstile> (aa, ba) \\<surd>;\n         P,E,aa \\<turnstile> {V:T; V:=Val v;; Throw (a, b)} : Ta\\<rbrakk>\n        \\<Longrightarrow> P,E,aa \\<turnstile> Throw\n         (a, b) :\\<^bsub>NT\\<^esub> Ta\nA total of 13 subgoals...", "qed (fastforce intro:wt_same_type_typeconf)+"], ["", "corollary subject_reduction:\n  \"\\<lbrakk> wf_C_prog P; P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>; P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> e:T \\<rbrakk>\n  \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_C_prog P;\n     P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                      \\<langle>e',s'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> e : T\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by(cases s, cases s', fastforce dest:subject_reduction2)"], ["", "corollary subjects_reduction:\n  \"\\<lbrakk> wf_C_prog P; P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle>; P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> es[:]Ts \\<rbrakk>\n  \\<Longrightarrow> types_conf P E (hp s') es' Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_C_prog P;\n     P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                      \\<langle>es',s'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> es [:] Ts\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "by(cases s, cases s', fastforce dest:subjects_reduction2)"], ["", "subsection \\<open>Lifting to \\<open>\\<rightarrow>*\\<close>\\<close>"], ["", "text\\<open>Now all these preservation lemmas are first lifted to the transitive\nclosure \\dots\\<close>"], ["", "lemma step_preserves_sconf:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<And>T. \\<lbrakk> P,E,hp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s \\<turnstile> e : T;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "using step"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s \\<turnstile> e : T;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s' \\<turnstile> e' : T;\n        P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa : T;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a : T; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "case refl"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s' \\<turnstile> e' : T;\n        P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa : T;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a : T; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa : T;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a : T; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa : T;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a : T; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "case step"], ["proof (state)\nthis:\n  ((a___, b___), a_, b_) \\<in> Red P E\n  P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<lbrakk>P,E,hp b_ \\<turnstile> a_ : ?T;\n   P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n  P,E,hp b___ \\<turnstile> a___ : T\n  P,E \\<turnstile> b___ \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa : T;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a : T; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "thus ?case"], ["proof (prove)\nusing this:\n  ((a___, b___), a_, b_) \\<in> Red P E\n  P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<lbrakk>P,E,hp b_ \\<turnstile> a_ : ?T;\n   P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n  P,E,hp b___ \\<turnstile> a___ : T\n  P,E \\<turnstile> b___ \\<surd>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "using wf"], ["proof (prove)\nusing this:\n  ((a___, b___), a_, b_) \\<in> Red P E\n  P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<lbrakk>P,E,hp b_ \\<turnstile> a_ : ?T;\n   P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n  P,E,hp b___ \\<turnstile> a___ : T\n  P,E \\<turnstile> b___ \\<surd>\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "apply (frule subject_reduction[OF wf])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> b___ \\<surd>\n 2. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E,hp b___ \\<turnstile> a___ : ?T7\n 3. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> ?T7\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "apply (rule step.prems)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E,hp b___ \\<turnstile> a___ : ?T7\n 2. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> ?T7\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "apply (rule step.prems)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> T\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "apply (cases T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> T;\n     T = Void\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> T;\n     T = Boolean\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 3. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> T;\n     T = Integer\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 4. \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                              \\<langle>a_,b_\\<rangle>;\n     P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n         P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n     P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n     wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> T;\n     T = NT\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 5. \\<And>x5.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>a___,b___\\<rangle> \\<rightarrow>\n                                 \\<langle>a_,b_\\<rangle>;\n        P,E \\<turnstile> \\<langle>a_,b_\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,fst b_ \\<turnstile> a_ : T;\n            P,E \\<turnstile> b_ \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,fst b___ \\<turnstile> a___ : T; P,E \\<turnstile> b___ \\<surd>;\n        wf_C_prog P; P,E,hp b_ \\<turnstile> a_ :\\<^bsub>NT\\<^esub> T;\n        T = Class x5\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "apply (auto dest:red_preserves_sconf intro:wf_prog_wwf_prog)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma steps_preserves_sconf:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle>\"\nshows \"\\<And>Ts. \\<lbrakk> P,E,hp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,hp s \\<turnstile> es [:] Ts;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "using step"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]*\n                   \\<langle>es',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,hp s \\<turnstile> es [:] Ts;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,hp s' \\<turnstile> es' [:] Ts;\n        P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "case refl"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> es' [:] Ts\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (2 subgoals):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,hp s' \\<turnstile> es' [:] Ts;\n        P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "case (step es s es'' s'' Ts)"], ["proof (state)\nthis:\n  ((es, s), es'', s'') \\<in> Reds P E\n  P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]*\n                   \\<langle>es',s'\\<rangle>\n  \\<lbrakk>P,E,hp s'' \\<turnstile> es'' [:] ?Ts;\n   P,E \\<turnstile> s'' \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n  P,E,hp s \\<turnstile> es [:] Ts\n  P,E \\<turnstile> s \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "have Reds:\"((es, s), es'', s'') \\<in> Reds P E\"\n    and reds:\"P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle>\"\n    and wtes:\"P,E,hp s \\<turnstile> es [:] Ts\"\n    and sconf:\"P,E \\<turnstile> s \\<surd>\"\n    and IH:\"\\<And>Ts. \\<lbrakk>P,E,hp s'' \\<turnstile> es'' [:] Ts; P,E \\<turnstile> s'' \\<surd>\\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((es, s), es'', s'') \\<in> Reds P E &&&\n     P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]*\n                      \\<langle>es',s'\\<rangle>) &&&\n    P,E,hp s \\<turnstile> es [:] Ts &&&\n    P,E \\<turnstile> s \\<surd> &&&\n    (\\<And>Ts.\n        \\<lbrakk>P,E,hp s'' \\<turnstile> es'' [:] Ts;\n         P,E \\<turnstile> s'' \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>)", "by fact+"], ["proof (state)\nthis:\n  ((es, s), es'', s'') \\<in> Reds P E\n  P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]*\n                   \\<langle>es',s'\\<rangle>\n  P,E,hp s \\<turnstile> es [:] Ts\n  P,E \\<turnstile> s \\<surd>\n  \\<lbrakk>P,E,hp s'' \\<turnstile> es'' [:] ?Ts;\n   P,E \\<turnstile> s'' \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "from Reds"], ["proof (chain)\npicking this:\n  ((es, s), es'', s'') \\<in> Reds P E", "have reds1:\"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es'',s''\\<rangle>\""], ["proof (prove)\nusing this:\n  ((es, s), es'', s'') \\<in> Reds P E\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                     \\<langle>es'',s''\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "from subjects_reduction[OF wf this sconf wtes]"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts", "have type:\"types_conf P E (hp s'') es'' Ts\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts", "."], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "from reds1 wtes sconf wf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n  P,E,hp s \\<turnstile> es [:] Ts\n  P,E \\<turnstile> s \\<surd>\n  wf_C_prog P", "have sconf':\"P,E \\<turnstile> s'' \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n  P,E,hp s \\<turnstile> es [:] Ts\n  P,E \\<turnstile> s \\<surd>\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s'' \\<surd>", "by(fastforce intro:wf_prog_wwf_prog reds_preserves_sconf)"], ["proof (state)\nthis:\n  P,E \\<turnstile> s'' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "from type"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts", "have \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> es'' [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> es'' [:] Ts'", "proof (induct Ts arbitrary: es'')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>es''.\n       P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n       Ex (WTrts P E (hp s'') es'')\n 2. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "fix esi"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>es''.\n       P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n       Ex (WTrts P E (hp s'') es'')\n 2. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "assume \"types_conf P E (hp s'') esi []\""], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> []\n\ngoal (2 subgoals):\n 1. \\<And>es''.\n       P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n       Ex (WTrts P E (hp s'') es'')\n 2. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "thus \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> esi [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> []\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> esi [:] Ts'", "proof(induct esi)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n    Ex (WTrts P E (hp s'') [])\n 2. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a # esi [:]\\<^bsub>NT\\<^esub> []\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "case Nil"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> []\n\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n    Ex (WTrts P E (hp s'') [])\n 2. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a # esi [:]\\<^bsub>NT\\<^esub> []\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "thus \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> [] [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> []\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> [] [:] Ts'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> [] [:] Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a # esi [:]\\<^bsub>NT\\<^esub> []\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a # esi [:]\\<^bsub>NT\\<^esub> []\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "fix ex esx"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a # esi [:]\\<^bsub>NT\\<^esub> []\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "assume \"types_conf P E (hp s'') (ex#esx) []\""], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> ex # esx [:]\\<^bsub>NT\\<^esub> []\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a # esi [:]\\<^bsub>NT\\<^esub> []\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "thus \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> ex#esx [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> ex # esx [:]\\<^bsub>NT\\<^esub> []\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> ex # esx [:] Ts'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> ex # esx [:] Ts'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> esi [:] Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "fix T' Ts' esi"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "assume type':\"types_conf P E (hp s'') esi (T'#Ts')\"\n      and IH:\"\\<And>es''. types_conf P E (hp s'') es'' Ts' \\<Longrightarrow>\n                      \\<exists>Ts''. P,E,hp s'' \\<turnstile> es'' [:] Ts''\""], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\n  P,E,hp s'' \\<turnstile> ?es'' [:]\\<^bsub>NT\\<^esub> Ts' \\<Longrightarrow>\n  \\<exists>Ts''. P,E,hp s'' \\<turnstile> ?es'' [:] Ts''\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es''.\n       \\<lbrakk>\\<And>es''.\n                   P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   Ex (WTrts P E (hp s'') es'');\n        P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') es'')", "from type'"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' # Ts'", "show \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> esi [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> esi [:] Ts'", "proof(induct esi)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> T' #\n               Ts' \\<Longrightarrow>\n    Ex (WTrts P E (hp s'') [])\n 2. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "case Nil"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> T' # Ts'\n\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> T' #\n               Ts' \\<Longrightarrow>\n    Ex (WTrts P E (hp s'') [])\n 2. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "thus \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> [] [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> T' # Ts'\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> [] [:] Ts'", "by simp"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> [] [:] Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "fix ex esx"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "assume \"types_conf P E (hp s'') (ex#esx) (T'#Ts')\""], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> ex # esx [:]\\<^bsub>NT\\<^esub> T' # Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "hence type':\"P,E,hp s'' \\<turnstile> ex :\\<^bsub>NT\\<^esub> T'\" \n        and types':\"types_conf P E (hp s'') esx Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> ex # esx [:]\\<^bsub>NT\\<^esub> T' # Ts'\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> ex :\\<^bsub>NT\\<^esub> T' &&&\n    P,E,hp s'' \\<turnstile> esx [:]\\<^bsub>NT\\<^esub> Ts'", "by simp_all"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> ex :\\<^bsub>NT\\<^esub> T'\n  P,E,hp s'' \\<turnstile> esx [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "from type'"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> ex :\\<^bsub>NT\\<^esub> T'", "obtain Tx where type'':\"P,E,hp s'' \\<turnstile> ex : Tx\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> ex :\\<^bsub>NT\\<^esub> T'\n\ngoal (1 subgoal):\n 1. (\\<And>Tx.\n        P,E,hp s'' \\<turnstile> ex : Tx \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(cases T') auto"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> ex : Tx\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "from IH[OF types']"], ["proof (chain)\npicking this:\n  \\<exists>Ts''. P,E,hp s'' \\<turnstile> esx [:] Ts''", "obtain Tsx where \"P,E,hp s'' \\<turnstile> esx [:] Tsx\""], ["proof (prove)\nusing this:\n  \\<exists>Ts''. P,E,hp s'' \\<turnstile> esx [:] Ts''\n\ngoal (1 subgoal):\n 1. (\\<And>Tsx.\n        P,E,hp s'' \\<turnstile> esx [:] Tsx \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> esx [:] Tsx\n\ngoal (1 subgoal):\n 1. \\<And>a esi.\n       \\<lbrakk>P,E,hp s'' \\<turnstile> esi [:]\\<^bsub>NT\\<^esub> T' #\n                            Ts' \\<Longrightarrow>\n                Ex (WTrts P E (hp s'') esi);\n        P,E,hp s'' \\<turnstile> a #\n                                esi [:]\\<^bsub>NT\\<^esub> T' # Ts'\\<rbrakk>\n       \\<Longrightarrow> Ex (WTrts P E (hp s'') (a # esi))", "with type''"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> ex : Tx\n  P,E,hp s'' \\<turnstile> esx [:] Tsx", "show \"\\<exists>Ts'. P,E,hp s'' \\<turnstile> ex#esx [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> ex : Tx\n  P,E,hp s'' \\<turnstile> esx [:] Tsx\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,hp s'' \\<turnstile> ex # esx [:] Ts'", "by auto"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> ex # esx [:] Ts'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> esi [:] Ts'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> es'' [:] Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> es'' [:] Ts'", "obtain Ts' where \"P,E,hp s'' \\<turnstile> es'' [:] Ts'\""], ["proof (prove)\nusing this:\n  \\<exists>Ts'. P,E,hp s'' \\<turnstile> es'' [:] Ts'\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        P,E,hp s'' \\<turnstile> es'' [:] Ts' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> es'' [:] Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E,hp ba \\<turnstile> aa [:] Ts;\n            P,E \\<turnstile> ba \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp b \\<turnstile> a [:] Ts; P,E \\<turnstile> b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "from IH[OF this sconf']"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "."], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma step_preserves_defass:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<D> e \\<lfloor>dom(lcl s)\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom(lcl s')\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D> e \\<lfloor>dom (lcl s)\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "using step"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<D> e \\<lfloor>dom (lcl s)\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n 2. \\<And>a b aa ba.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<D> aa \\<lfloor>dom (lcl ba)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl b)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "case refl"], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n 2. \\<And>a b aa ba.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<D> aa \\<lfloor>dom (lcl ba)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl b)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "."], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<D> aa \\<lfloor>dom (lcl ba)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl b)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<D> aa \\<lfloor>dom (lcl ba)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl b)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "case (step e s e' s')"], ["proof (state)\nthis:\n  ((e, s), e', s') \\<in> Red P E\n  P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n  \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<D> aa \\<lfloor>dom (lcl ba)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl b)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "thus ?case"], ["proof (prove)\nusing this:\n  ((e, s), e', s') \\<in> Red P E\n  P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n  \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "by(cases s,cases s')(auto dest:red_preserves_defass[OF wf])"], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma step_preserves_type:\nassumes wf: \"wf_C_prog P\" and step: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<And>T. \\<lbrakk> P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> e:T \\<rbrakk>\n    \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>;\n        P,E,hp s \\<turnstile> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "using step"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>;\n        P,E,hp s \\<turnstile> e : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s' \\<surd>;\n        P,E,hp s' \\<turnstile> e' : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa : T\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case refl"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s' \\<surd>;\n        P,E,hp s' \\<turnstile> e' : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa : T\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by -(rule wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa : T\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa : T\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case (step e s e'' s'' T)"], ["proof (state)\nthis:\n  ((e, s), e'', s'') \\<in> Red P E\n  P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n   P,E,hp s'' \\<turnstile> e'' : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> e : T\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa : T\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "thus ?case"], ["proof (prove)\nusing this:\n  ((e, s), e'', s'') \\<in> Red P E\n  P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n   P,E,hp s'' \\<turnstile> e'' : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> e : T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "using wf"], ["proof (prove)\nusing this:\n  ((e, s), e'', s'') \\<in> Red P E\n  P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n   P,E,hp s'' \\<turnstile> e'' : ?T\\<rbrakk>\n  \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> e : T\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e'',s''\\<rangle>;\n     P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n         P,E,fst s'' \\<turnstile> e'' : T\\<rbrakk>\n        \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "apply (frule subject_reduction[OF wf])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e'',s''\\<rangle>;\n     P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n         P,E,fst s'' \\<turnstile> e'' : T\\<rbrakk>\n        \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s \\<surd>\n 2. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e'',s''\\<rangle>;\n     P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n         P,E,fst s'' \\<turnstile> e'' : T\\<rbrakk>\n        \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T;\n     wf_C_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s \\<turnstile> e : ?T7\n 3. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e'',s''\\<rangle>;\n     P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                      \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n         P,E,fst s'' \\<turnstile> e'' : T\\<rbrakk>\n        \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T; wf_C_prog P;\n     P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> ?T7\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "apply (auto dest!:red_preserves_sconf intro:wf_prog_wwf_prog)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                              \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        P,E,fst s'' \\<turnstile> e'' : T \\<Longrightarrow>\n        P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T; wf_C_prog P;\n     P,E,fst s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s'' \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "apply(cases T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                              \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        P,E,fst s'' \\<turnstile> e'' : T \\<Longrightarrow>\n        P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T; wf_C_prog P;\n     P,E,fst s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s'' \\<surd>; T = Void\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<lbrakk>P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                              \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        P,E,fst s'' \\<turnstile> e'' : T \\<Longrightarrow>\n        P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T; wf_C_prog P;\n     P,E,fst s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s'' \\<surd>; T = Boolean\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<lbrakk>P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                              \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        P,E,fst s'' \\<turnstile> e'' : T \\<Longrightarrow>\n        P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T; wf_C_prog P;\n     P,E,fst s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s'' \\<surd>; T = Integer\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<lbrakk>P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                              \\<langle>e',s'\\<rangle>;\n     \\<And>T.\n        P,E,fst s'' \\<turnstile> e'' : T \\<Longrightarrow>\n        P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T; wf_C_prog P;\n     P,E,fst s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T;\n     P,E \\<turnstile> s'' \\<surd>; T = NT\\<rbrakk>\n    \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>x5.\n       \\<lbrakk>P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                                 \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,fst s'' \\<turnstile> e'' : T \\<Longrightarrow>\n           P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> s \\<surd>; P,E,fst s \\<turnstile> e : T;\n        wf_C_prog P; P,E,fst s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T;\n        P,E \\<turnstile> s'' \\<surd>; T = Class x5\\<rbrakk>\n       \\<Longrightarrow> P,E,fst s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "apply fastforce+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>predicate to show the same lemma for lists\\<close>"], ["", "fun\n  conformable :: \"ty list \\<Rightarrow> ty list \\<Rightarrow> bool\"\nwhere\n  \"conformable [] [] \\<longleftrightarrow> True\"\n  | \"conformable (T''#Ts'') (T'#Ts') \\<longleftrightarrow> (T'' = T'\n     \\<or> (\\<exists>C. T'' = NT \\<and> T' = Class C)) \\<and> conformable Ts'' Ts'\"\n  | \"conformable _ _ \\<longleftrightarrow> False\""], ["", "lemma types_conf_conf_types_conf:\n  \"\\<lbrakk>types_conf P E h es Ts; conformable Ts Ts'\\<rbrakk> \\<Longrightarrow> types_conf P E h es Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n     conformable Ts Ts'\\<rbrakk>\n    \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "proof (induct Ts arbitrary: Ts' es)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Ts' es.\n       \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> [];\n        conformable [] Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'\n 2. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "case Nil"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n  conformable [] Ts'\n\ngoal (2 subgoals):\n 1. \\<And>Ts' es.\n       \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> [];\n        conformable [] Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'\n 2. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n  conformable [] Ts'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "by (cases Ts') (auto split: if_split_asm)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "case (Cons T'' Ts'')"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ts'';\n   conformable Ts'' ?Ts'\\<rbrakk>\n  \\<Longrightarrow> P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> ?Ts'\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  conformable (T'' # Ts'') Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "have type:\"types_conf P E h es (T''#Ts'')\"\n    and conf:\"conformable (T''#Ts'') Ts'\"\n    and IH:\"\\<And>Ts' es. \\<lbrakk>types_conf P E h es Ts''; conformable Ts'' Ts'\\<rbrakk>\n                   \\<Longrightarrow> types_conf P E h es Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts'' &&&\n    conformable (T'' # Ts'') Ts' &&&\n    (\\<And>Ts' es.\n        \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'';\n         conformable Ts'' Ts'\\<rbrakk>\n        \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts')", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  conformable (T'' # Ts'') Ts'\n  \\<lbrakk>P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ts'';\n   conformable Ts'' ?Ts'\\<rbrakk>\n  \\<Longrightarrow> P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> ?Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "from type"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''", "obtain e' es' where es:\"es = e'#es'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n\ngoal (1 subgoal):\n 1. (\\<And>e' es'. es = e' # es' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases es) auto"], ["proof (state)\nthis:\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "with type"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  es = e' # es'", "have type':\"P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\"\n    and types': \"types_conf P E h es' Ts''\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'' &&&\n    P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts''", "by simp_all"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts''\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "from conf"], ["proof (chain)\npicking this:\n  conformable (T'' # Ts'') Ts'", "obtain U Us where Ts': \"Ts' = U#Us\""], ["proof (prove)\nusing this:\n  conformable (T'' # Ts'') Ts'\n\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts' = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases Ts') auto"], ["proof (state)\nthis:\n  Ts' = U # Us\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "with conf"], ["proof (chain)\npicking this:\n  conformable (T'' # Ts'') Ts'\n  Ts' = U # Us", "have disj:\"T'' = U \\<or> (\\<exists>C. T'' = NT \\<and> U = Class C)\"\n    and conf':\"conformable Ts'' Us\""], ["proof (prove)\nusing this:\n  conformable (T'' # Ts'') Ts'\n  Ts' = U # Us\n\ngoal (1 subgoal):\n 1. T'' = U \\<or> (\\<exists>C. T'' = NT \\<and> U = Class C) &&&\n    conformable Ts'' Us", "by simp_all"], ["proof (state)\nthis:\n  T'' = U \\<or> (\\<exists>C. T'' = NT \\<and> U = Class C)\n  conformable Ts'' Us\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "from type' disj"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\n  T'' = U \\<or> (\\<exists>C. T'' = NT \\<and> U = Class C)", "have \"P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> U\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\n  T'' = U \\<or> (\\<exists>C. T'' = NT \\<and> U = Class C)\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> U", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> U\n\ngoal (1 subgoal):\n 1. \\<And>a Ts Ts' es.\n       \\<lbrakk>\\<And>Ts' es.\n                   \\<lbrakk>P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n                    conformable Ts Ts'\\<rbrakk>\n                   \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts;\n        conformable (a # Ts) Ts'\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "with IH[OF types' conf'] Ts' es"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Us\n  Ts' = U # Us\n  es = e' # es'\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> U", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Us\n  Ts' = U # Us\n  es = e' # es'\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> U\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'", "by simp"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma types_conf_Wtrt_conf:\n  \"types_conf P E h es Ts \\<Longrightarrow> \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n    \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' Ts", "proof (induct Ts arbitrary: es)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>es.\n       P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n       \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' []\n 2. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "case Nil"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n\ngoal (2 subgoals):\n 1. \\<And>es.\n       P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> [] \\<Longrightarrow>\n       \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' []\n 2. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' []", "by (cases es) (auto split:if_split_asm)"], ["proof (state)\nthis:\n  \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' []\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "case (Cons T'' Ts'')"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ts'' \\<Longrightarrow>\n  \\<exists>Ts'. P,E,h \\<turnstile> ?es [:] Ts' \\<and> conformable Ts' Ts''\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "have type:\"types_conf P E h es (T''#Ts'')\"\n    and IH:\"\\<And>es. types_conf P E h es Ts'' \\<Longrightarrow>\n                  \\<exists>Ts'. P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' Ts''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts'' &&&\n    (\\<And>es.\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts'' \\<Longrightarrow>\n        \\<exists>Ts'.\n           P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' Ts'')", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ts'' \\<Longrightarrow>\n  \\<exists>Ts'. P,E,h \\<turnstile> ?es [:] Ts' \\<and> conformable Ts' Ts''\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "from type"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''", "obtain e' es' where es:\"es = e'#es'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n\ngoal (1 subgoal):\n 1. (\\<And>e' es'. es = e' # es' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases es) auto"], ["proof (state)\nthis:\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "with type"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  es = e' # es'", "have type':\"P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\"\n    and types': \"types_conf P E h es' Ts''\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T'' # Ts''\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T'' &&&\n    P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts''", "by simp_all"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts''\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "from type'"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''", "obtain T' where \"P,E,h \\<turnstile> e' : T'\" and \n    \"T' = T'' \\<or> (\\<exists>C. T' = NT \\<and> T'' = Class C)\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> T''\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h \\<turnstile> e' : T';\n         T' = T'' \\<or> (\\<exists>C. T' = NT \\<and> T'' = Class C)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases T'') auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' : T'\n  T' = T'' \\<or> (\\<exists>C. T' = NT \\<and> T'' = Class C)\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<Longrightarrow>\n                   \\<exists>Ts'.\n                      P,E,h \\<turnstile> es [:] Ts' \\<and>\n                      conformable Ts' Ts;\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts'.\n                            P,E,h \\<turnstile> es [:] Ts' \\<and>\n                            conformable Ts' (a # Ts)", "with IH[OF types'] es"], ["proof (chain)\npicking this:\n  \\<exists>Ts'. P,E,h \\<turnstile> es' [:] Ts' \\<and> conformable Ts' Ts''\n  es = e' # es'\n  P,E,h \\<turnstile> e' : T'\n  T' = T'' \\<or> (\\<exists>C. T' = NT \\<and> T'' = Class C)", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>Ts'. P,E,h \\<turnstile> es' [:] Ts' \\<and> conformable Ts' Ts''\n  es = e' # es'\n  P,E,h \\<turnstile> e' : T'\n  T' = T'' \\<or> (\\<exists>C. T' = NT \\<and> T'' = Class C)\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'.\n       P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' (T'' # Ts'')", "by(auto,rule_tac x=\"T''#Ts'\" in exI,simp,rule_tac x=\"NT#Ts'\" in exI,simp)"], ["proof (state)\nthis:\n  \\<exists>Ts'.\n     P,E,h \\<turnstile> es [:] Ts' \\<and> conformable Ts' (T'' # Ts'')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma steps_preserves_types:\nassumes wf: \"wf_C_prog P\" and steps: \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle>\"\nshows \"\\<And>Ts. \\<lbrakk> P,E \\<turnstile> s \\<surd>; P,E,hp s \\<turnstile> es [:] Ts\\<rbrakk>\n  \\<Longrightarrow> types_conf P E (hp s') es' Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>;\n        P,E,hp s \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "using steps"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]*\n                   \\<langle>es',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>;\n        P,E,hp s \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E \\<turnstile> s' \\<surd>;\n        P,E,hp s' \\<turnstile> es' [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "case refl"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> es' [:] Ts\n\ngoal (2 subgoals):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E \\<turnstile> s' \\<surd>;\n        P,E,hp s' \\<turnstile> es' [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n 2. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> es' [:] Ts\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "by -(rule wts_same_types_typesconf)"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "case (step es s es'' s'' Ts)"], ["proof (state)\nthis:\n  ((es, s), es'', s'') \\<in> Reds P E\n  P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]*\n                   \\<langle>es',s'\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n   P,E,hp s'' \\<turnstile> es'' [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> ?Ts\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "have Reds:\"((es, s), es'', s'') \\<in> Reds P E\"\n    and steps:\"P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle>\"\n    and sconf:\"P,E \\<turnstile> s \\<surd>\" and wtes:\"P,E,hp s \\<turnstile> es [:] Ts\"\n    and IH:\"\\<And>Ts. \\<lbrakk>P,E \\<turnstile> s'' \\<surd>; P,E,hp s'' \\<turnstile> es'' [:] Ts \\<rbrakk> \n               \\<Longrightarrow> types_conf P E (hp s') es' Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((es, s), es'', s'') \\<in> Reds P E &&&\n     P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]*\n                      \\<langle>es',s'\\<rangle>) &&&\n    P,E \\<turnstile> s \\<surd> &&&\n    P,E,hp s \\<turnstile> es [:] Ts &&&\n    (\\<And>Ts.\n        \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n         P,E,hp s'' \\<turnstile> es'' [:] Ts\\<rbrakk>\n        \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts)", "by fact+"], ["proof (state)\nthis:\n  ((es, s), es'', s'') \\<in> Reds P E\n  P,E \\<turnstile> \\<langle>es'',s''\\<rangle> [\\<rightarrow>]*\n                   \\<langle>es',s'\\<rangle>\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> es [:] Ts\n  \\<lbrakk>P,E \\<turnstile> s'' \\<surd>;\n   P,E,hp s'' \\<turnstile> es'' [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> ?Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "from Reds"], ["proof (chain)\npicking this:\n  ((es, s), es'', s'') \\<in> Reds P E", "have step:\"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es'',s''\\<rangle>\""], ["proof (prove)\nusing this:\n  ((es, s), es'', s'') \\<in> Reds P E\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                     \\<langle>es'',s''\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "with wtes sconf wf"], ["proof (chain)\npicking this:\n  P,E,hp s \\<turnstile> es [:] Ts\n  P,E \\<turnstile> s \\<surd>\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>", "have sconf':\"P,E \\<turnstile> s'' \\<surd>\""], ["proof (prove)\nusing this:\n  P,E,hp s \\<turnstile> es [:] Ts\n  P,E \\<turnstile> s \\<surd>\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s'' \\<surd>", "by(auto intro:reds_preserves_sconf wf_prog_wwf_prog)"], ["proof (state)\nthis:\n  P,E \\<turnstile> s'' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "from wtes"], ["proof (chain)\npicking this:\n  P,E,hp s \\<turnstile> es [:] Ts", "have \"length es = length Ts\""], ["proof (prove)\nusing this:\n  P,E,hp s \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. length es = length Ts", "by(fastforce dest:WTrts_same_length)"], ["proof (state)\nthis:\n  length es = length Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "from step sconf wtes"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> es [:] Ts", "have type': \"types_conf P E (hp s'') es'' Ts\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]\n                   \\<langle>es'',s''\\<rangle>\n  P,E \\<turnstile> s \\<surd>\n  P,E,hp s \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts", "by (rule subjects_reduction[OF wf])"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "then"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts", "obtain Ts' where wtes'':\"P,E,hp s'' \\<turnstile> es'' [:] Ts'\" \n    and conf:\"conformable Ts' Ts\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> es'' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,hp s'' \\<turnstile> es'' [:] Ts';\n         conformable Ts' Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:types_conf_Wtrt_conf)"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> es'' [:] Ts'\n  conformable Ts' Ts\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "from IH[OF sconf' wtes'']"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'", "have \"types_conf P E (hp s') es' Ts'\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'", "."], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba Ts.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Reds P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> [\\<rightarrow>]*\n                         \\<langle>es',s'\\<rangle>;\n        \\<And>Ts.\n           \\<lbrakk>P,E \\<turnstile> ba \\<surd>;\n            P,E,hp ba \\<turnstile> aa [:] Ts\\<rbrakk>\n           \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E \\<turnstile> b \\<surd>; P,E,hp b \\<turnstile> a [:] Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "with conf"], ["proof (chain)\npicking this:\n  conformable Ts' Ts\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'", "show ?case"], ["proof (prove)\nusing this:\n  conformable Ts' Ts\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "by(fastforce intro:types_conf_conf_types_conf)"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Lifting to \\<open>\\<Rightarrow>\\<close>\\<close>"], ["", "text\\<open>\\dots and now to the big step semantics, just for fun.\\<close>"], ["", "lemma eval_preserves_sconf:\n  \"\\<lbrakk> wf_C_prog P; P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>; P,E \\<turnstile> e::T; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_C_prog P;\n     P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow>\n                      \\<langle>e',s'\\<rangle>;\n     P,E \\<turnstile> e :: T; P,E \\<turnstile> s \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "by(blast intro:step_preserves_sconf big_by_small WT_implies_WTrt wf_prog_wwf_prog)"], ["", "lemma evals_preserves_sconf:\n  \"\\<lbrakk> wf_C_prog P; P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es',s'\\<rangle>; P,E \\<turnstile> es [::] Ts; P,E \\<turnstile> s \\<surd> \\<rbrakk> \n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_C_prog P;\n     P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                      \\<langle>es',s'\\<rangle>;\n     P,E \\<turnstile> es [::] Ts; P,E \\<turnstile> s \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "by(blast intro:steps_preserves_sconf bigs_by_smalls WTs_implies_WTrts \n                 wf_prog_wwf_prog)"], ["", "lemma eval_preserves_type: assumes wf: \"wf_C_prog P\"\nshows \"\\<lbrakk> P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>; P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> e::T \\<rbrakk>\n   \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow>\n                              \\<langle>e',s'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> e :: T\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "using wf"], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow>\n                              \\<langle>e',s'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> e :: T\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by (auto dest!:big_by_small[OF wf_prog_wwf_prog[OF wf]] WT_implies_WTrt \n           intro:wf_prog_wwf_prog\n           dest!:step_preserves_type[OF wf])"], ["", "lemma evals_preserves_types: assumes wf: \"wf_C_prog P\"\nshows \"\\<lbrakk> P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es',s'\\<rangle>; P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> es [::] Ts \\<rbrakk>\n  \\<Longrightarrow> types_conf P E (hp s') es' Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                              \\<langle>es',s'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> es [::] Ts\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "using wf"], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                              \\<langle>es',s'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> es [::] Ts\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts", "by (auto dest!:bigs_by_smalls[OF wf_prog_wwf_prog[OF wf]] WTs_implies_WTrts\n           intro:wf_prog_wwf_prog\n           dest!:steps_preserves_types[OF wf])"], ["", "subsection \\<open>The final polish\\<close>"], ["", "text\\<open>The above preservation lemmas are now combined and packed nicely.\\<close>"], ["", "definition wf_config :: \"prog \\<Rightarrow> env \\<Rightarrow> state \\<Rightarrow> expr \\<Rightarrow> ty \\<Rightarrow> bool\" (\"_,_,_ \\<turnstile> _ : _ \\<surd>\"   [51,0,0,0,0]50) where\n  \"P,E,s \\<turnstile> e:T \\<surd>  \\<equiv>  P,E \\<turnstile> s \\<surd> \\<and> P,E,hp s \\<turnstile> e : T\""], ["", "theorem Subject_reduction: assumes wf: \"wf_C_prog P\"\nshows \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow> P,E,s \\<turnstile> e : T \\<surd>\n       \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e',s'\\<rangle>;\n     P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "using wf"], ["proof (prove)\nusing this:\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                              \\<langle>e',s'\\<rangle>;\n     P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by (force elim!:red_preserves_sconf intro:wf_prog_wwf_prog \n            dest:subject_reduction[OF wf] simp:wf_config_def)"], ["", "theorem Subject_reductions:\nassumes wf: \"wf_C_prog P\" and reds: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\nshows \"\\<And>T. P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "using reds"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T.\n       P,E,s' \\<turnstile> e' : T \\<surd> \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case refl"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (2 subgoals):\n 1. \\<And>T.\n       P,E,s' \\<turnstile> e' : T \\<surd> \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by (fastforce intro:wt_same_type_typeconf simp:wf_config_def)"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case (step e s e'' s'' T)"], ["proof (state)\nthis:\n  ((e, s), e'', s'') \\<in> Red P E\n  P,E \\<turnstile> \\<langle>e'',s''\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  P,E,s'' \\<turnstile> e'' : ?T \\<surd> \\<Longrightarrow>\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E,s \\<turnstile> e : T \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "have Red:\"((e, s), e'', s'') \\<in> Red P E\"\n    and IH:\"\\<And>T. P,E,s'' \\<turnstile> e'' : T \\<surd> \\<Longrightarrow> P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\"\n    and wte:\"P,E,s \\<turnstile> e : T \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((e, s), e'', s'') \\<in> Red P E &&&\n    (\\<And>T.\n        P,E,s'' \\<turnstile> e'' : T \\<surd> \\<Longrightarrow>\n        P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T) &&&\n    P,E,s \\<turnstile> e : T \\<surd>", "by fact+"], ["proof (state)\nthis:\n  ((e, s), e'', s'') \\<in> Red P E\n  P,E,s'' \\<turnstile> e'' : ?T \\<surd> \\<Longrightarrow>\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> ?T\n  P,E,s \\<turnstile> e : T \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from Red"], ["proof (chain)\npicking this:\n  ((e, s), e'', s'') \\<in> Red P E", "have red:\"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e'',s''\\<rangle>\""], ["proof (prove)\nusing this:\n  ((e, s), e'', s'') \\<in> Red P E\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                     \\<langle>e'',s''\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                   \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from red_preserves_sconf[OF red] wte wf"], ["proof (chain)\npicking this:\n  \\<lbrakk>P,E,hp s \\<turnstile> e : ?T; P,E \\<turnstile> s \\<surd>;\n   wwf_prog P\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s'' \\<surd>\n  P,E,s \\<turnstile> e : T \\<surd>\n  wf_C_prog P", "have sconf:\"P,E \\<turnstile> s'' \\<surd>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P,E,hp s \\<turnstile> e : ?T; P,E \\<turnstile> s \\<surd>;\n   wwf_prog P\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s'' \\<surd>\n  P,E,s \\<turnstile> e : T \\<surd>\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s'' \\<surd>", "by(fastforce dest:wf_prog_wwf_prog simp:wf_config_def)"], ["proof (state)\nthis:\n  P,E \\<turnstile> s'' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from wf red wte"], ["proof (chain)\npicking this:\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                   \\<langle>e'',s''\\<rangle>\n  P,E,s \\<turnstile> e : T \\<surd>", "have type_conf:\"P,E,(hp s'') \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>\n                   \\<langle>e'',s''\\<rangle>\n  P,E,s \\<turnstile> e : T \\<surd>\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T", "by(rule Subject_reduction)"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba T.\n       \\<lbrakk>((a, b), aa, ba) \\<in> Red P E;\n        P,E \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                         \\<langle>e',s'\\<rangle>;\n        \\<And>T.\n           P,E,ba \\<turnstile> aa : T \\<surd> \\<Longrightarrow>\n           P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T;\n        P,E,b \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "proof(cases T)"], ["proof (state)\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case Void"], ["proof (state)\nthis:\n  T = Void\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Void", "have \"P,E,hp s'' \\<turnstile> e'' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Void\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T", "have \"P,E,s'' \\<turnstile> e'' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (1 subgoal):\n 1. P,E,s'' \\<turnstile> e'' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s'' \\<turnstile> e'' : T \\<surd>\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from IH[OF this]"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "."], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case Boolean"], ["proof (state)\nthis:\n  T = Boolean\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Boolean", "have \"P,E,hp s'' \\<turnstile> e'' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Boolean\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T", "have \"P,E,s'' \\<turnstile> e'' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (1 subgoal):\n 1. P,E,s'' \\<turnstile> e'' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s'' \\<turnstile> e'' : T \\<surd>\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from IH[OF this]"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "."], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case Integer"], ["proof (state)\nthis:\n  T = Integer\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Integer", "have \"P,E,hp s'' \\<turnstile> e'' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Integer\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T", "have \"P,E,s'' \\<turnstile> e'' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (1 subgoal):\n 1. P,E,s'' \\<turnstile> e'' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s'' \\<turnstile> e'' : T \\<surd>\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from IH[OF this]"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "."], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case NT"], ["proof (state)\nthis:\n  T = NT\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = NT", "have \"P,E,hp s'' \\<turnstile> e'' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = NT\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T", "have \"P,E,s'' \\<turnstile> e'' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (1 subgoal):\n 1. P,E,s'' \\<turnstile> e'' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s'' \\<turnstile> e'' : T \\<surd>\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow> P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from IH[OF this]"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "."], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "case (Class C)"], ["proof (state)\nthis:\n  T = Class C\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Class C", "have \"P,E,hp s'' \\<turnstile> e'' : T \\<or> P,E,hp s'' \\<turnstile> e'' : NT\""], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> e'' :\\<^bsub>NT\\<^esub> T\n  T = Class C\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : T \\<or> P,E,hp s'' \\<turnstile> e'' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : T \\<or> P,E,hp s'' \\<turnstile> e'' : NT\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s'' \\<turnstile> e'' : T \\<or> P,E,hp s'' \\<turnstile> e'' : NT\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> e'' : T \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "assume \"P,E,hp s'' \\<turnstile> e'' : T\""], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> e'' : T \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T", "have \"P,E,s'' \\<turnstile> e'' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : T\n\ngoal (1 subgoal):\n 1. P,E,s'' \\<turnstile> e'' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s'' \\<turnstile> e'' : T \\<surd>\n\ngoal (2 subgoals):\n 1. P,E,hp s'' \\<turnstile> e'' : T \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n 2. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from IH[OF this]"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "."], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "assume \"P,E,hp s'' \\<turnstile> e'' : NT\""], ["proof (state)\nthis:\n  P,E,hp s'' \\<turnstile> e'' : NT\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with sconf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : NT", "have \"P,E,s'' \\<turnstile> e'' : NT \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s'' \\<surd>\n  P,E,hp s'' \\<turnstile> e'' : NT\n\ngoal (1 subgoal):\n 1. P,E,s'' \\<turnstile> e'' : NT \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s'' \\<turnstile> e'' : NT \\<surd>\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "from IH[OF this]"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT", "have \"P,E,hp s' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> NT\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,hp s'' \\<turnstile> e'' : NT \\<Longrightarrow>\n    P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "with Class"], ["proof (chain)\npicking this:\n  T = Class C\n  P,E,hp s' \\<turnstile> e' : NT", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Class C\n  P,E,hp s' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Progress: assumes wf: \"wf_C_prog P\"\nshows \"\\<lbrakk> P,E,s  \\<turnstile> e : T \\<surd>; \\<D> e \\<lfloor>dom(lcl s)\\<rfloor>; \\<not> final e \\<rbrakk> \\<Longrightarrow> \\<exists>e' s'. P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E,s \\<turnstile> e : T \\<surd>;\n     \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>; \\<not> final e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e' s'.\n                         P,E \\<turnstile> \\<langle>e,\n     s\\<rangle> \\<rightarrow>\n    \\<langle>e',s'\\<rangle>", "using progress[OF wf_prog_wwf_prog[OF wf]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,?E,?h \\<turnstile> ?e : ?T; P \\<turnstile> ?h \\<surd>;\n   P \\<turnstile> ?E \\<surd>; \\<D> ?e \\<lfloor>dom ?l\\<rfloor>;\n   \\<not> final ?e\\<rbrakk>\n  \\<Longrightarrow> \\<exists>e' s'.\n                       P,?E \\<turnstile> \\<langle>?e,\n    (?h, ?l)\\<rangle> \\<rightarrow>\n   \\<langle>e',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E,s \\<turnstile> e : T \\<surd>;\n     \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>; \\<not> final e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e' s'.\n                         P,E \\<turnstile> \\<langle>e,\n     s\\<rangle> \\<rightarrow>\n    \\<langle>e',s'\\<rangle>", "by(auto simp:wf_config_def sconf_def)"], ["", "corollary TypeSafety:\nfixes s s' :: state\nassumes wf:\"wf_C_prog P\" and sconf:\"P,E \\<turnstile> s \\<surd>\" and wte:\"P,E \\<turnstile> e :: T\"\n  and D:\"\\<D> e \\<lfloor>dom(lcl s)\\<rfloor>\" and step:\"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\n  and nored:\"\\<not>(\\<exists>e'' s''. P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow> \\<langle>e'',s''\\<rangle>)\"\nshows \"(\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n      (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom(hp s'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from sconf wte wf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s \\<surd>\n  P,E \\<turnstile> e :: T\n  wf_C_prog P", "have wf_config:\"P,E,s \\<turnstile> e : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s \\<surd>\n  P,E \\<turnstile> e :: T\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E,s \\<turnstile> e : T \\<surd>", "by(fastforce intro:WT_implies_WTrt simp:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s \\<turnstile> e : T \\<surd>\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wf step"], ["proof (chain)\npicking this:\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  P,E,s \\<turnstile> e : T \\<surd>", "have type_conf:\"P,E,(hp s') \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  P,E,s \\<turnstile> e : T \\<surd>\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T", "by(rule Subject_reductions)"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from step_preserves_sconf[OF wf step wte[THEN WT_implies_WTrt] sconf] wf"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  wf_C_prog P", "have sconf':\"P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  wf_C_prog P\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from wf step D"], ["proof (chain)\npicking this:\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>", "have D':\"\\<D> e' \\<lfloor>dom(lcl s')\\<rfloor>\""], ["proof (prove)\nusing this:\n  wf_C_prog P\n  P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                   \\<langle>e',s'\\<rangle>\n  \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "by(rule step_preserves_defass)"], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "proof(cases T)"], ["proof (state)\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "case Void"], ["proof (state)\nthis:\n  T = Void\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Void", "have wte':\"P,E,hp s' \\<turnstile> e' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Void\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with sconf'"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T", "have wf_config':\"P,E,s' \\<turnstile> e' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,s' \\<turnstile> e' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "{"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume \"\\<not> final e'\""], ["proof (state)\nthis:\n  \\<not> final e'\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from Progress[OF wf wf_config' D' this] nored"], ["proof (chain)\npicking this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "}"], ["proof (state)\nthis:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "hence \"final e'\""], ["proof (prove)\nusing this:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. final e'", "by fast"], ["proof (state)\nthis:\n  final e'\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wte'"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "by(auto simp:final_def)"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "case Boolean"], ["proof (state)\nthis:\n  T = Boolean\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Boolean", "have wte':\"P,E,hp s' \\<turnstile> e' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Boolean\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with sconf'"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T", "have wf_config':\"P,E,s' \\<turnstile> e' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,s' \\<turnstile> e' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "{"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume \"\\<not> final e'\""], ["proof (state)\nthis:\n  \\<not> final e'\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from Progress[OF wf wf_config' D' this] nored"], ["proof (chain)\npicking this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "}"], ["proof (state)\nthis:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "hence \"final e'\""], ["proof (prove)\nusing this:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. final e'", "by fast"], ["proof (state)\nthis:\n  final e'\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wte'"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "by(auto simp:final_def)"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "case Integer"], ["proof (state)\nthis:\n  T = Integer\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Integer", "have wte':\"P,E,hp s' \\<turnstile> e' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Integer\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with sconf'"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T", "have wf_config':\"P,E,s' \\<turnstile> e' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,s' \\<turnstile> e' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "{"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume \"\\<not> final e'\""], ["proof (state)\nthis:\n  \\<not> final e'\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from Progress[OF wf wf_config' D' this] nored"], ["proof (chain)\npicking this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "}"], ["proof (state)\nthis:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "hence \"final e'\""], ["proof (prove)\nusing this:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. final e'", "by fast"], ["proof (state)\nthis:\n  final e'\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wte'"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "by(auto simp:final_def)"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "case NT"], ["proof (state)\nthis:\n  T = NT\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = NT", "have wte':\"P,E,hp s' \\<turnstile> e' : T\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = NT\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : T", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with sconf'"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T", "have wf_config':\"P,E,s' \\<turnstile> e' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,s' \\<turnstile> e' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "{"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume \"\\<not> final e'\""], ["proof (state)\nthis:\n  \\<not> final e'\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from Progress[OF wf wf_config' D' this] nored"], ["proof (chain)\npicking this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "}"], ["proof (state)\nthis:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "hence \"final e'\""], ["proof (prove)\nusing this:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. final e'", "by fast"], ["proof (state)\nthis:\n  final e'\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wte'"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "by(auto simp:final_def)"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "case (Class C)"], ["proof (state)\nthis:\n  T = Class C\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with type_conf"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Class C", "have wte':\"P,E,hp s' \\<turnstile> e' : T \\<or> P,E,hp s' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' :\\<^bsub>NT\\<^esub> T\n  T = Class C\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : T \\<or> P,E,hp s' \\<turnstile> e' : NT", "by simp"], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T \\<or> P,E,hp s' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n       (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "thus ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : T \\<or> P,E,hp s' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "proof(rule disjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume wte':\"P,E,hp s' \\<turnstile> e' : T\""], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with sconf'"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T", "have wf_config':\"P,E,s' \\<turnstile> e' : T \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. P,E,s' \\<turnstile> e' : T \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "{"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume \"\\<not> final e'\""], ["proof (state)\nthis:\n  \\<not> final e'\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from Progress[OF wf wf_config' D' this] nored"], ["proof (chain)\npicking this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "}"], ["proof (state)\nthis:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "hence \"final e'\""], ["proof (prove)\nusing this:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. final e'", "by fast"], ["proof (state)\nthis:\n  final e'\n\ngoal (2 subgoals):\n 1. P,E,hp s' \\<turnstile> e' : T \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n 2. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wte'"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : T\n  final e'\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "by(auto simp:final_def)"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume wte':\"P,E,hp s' \\<turnstile> e' : NT\""], ["proof (state)\nthis:\n  P,E,hp s' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with sconf'"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : NT", "have wf_config':\"P,E,s' \\<turnstile> e' : NT \\<surd>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  P,E,hp s' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. P,E,s' \\<turnstile> e' : NT \\<surd>", "by(simp add:wf_config_def)"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : NT \\<surd>\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "{"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : NT \\<surd>\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "assume \"\\<not> final e'\""], ["proof (state)\nthis:\n  \\<not> final e'\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "from Progress[OF wf wf_config' D' this] nored"], ["proof (chain)\npicking this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>", "have False"], ["proof (prove)\nusing this:\n  \\<exists>e'a s'a.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'a,s'a\\<rangle>\n  \\<nexists>e'' s''.\n     P,E \\<turnstile> \\<langle>e',s'\\<rangle> \\<rightarrow>\n                      \\<langle>e'',s''\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "}"], ["proof (state)\nthis:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "hence \"final e'\""], ["proof (prove)\nusing this:\n  \\<not> final e' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. final e'", "by fast"], ["proof (state)\nthis:\n  final e'\n\ngoal (1 subgoal):\n 1. P,E,hp s' \\<turnstile> e' : NT \\<Longrightarrow>\n    (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "with wte' Class"], ["proof (chain)\npicking this:\n  P,E,hp s' \\<turnstile> e' : NT\n  T = Class C\n  final e'", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,hp s' \\<turnstile> e' : NT\n  T = Class C\n  final e'\n\ngoal (1 subgoal):\n 1. (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n    (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))", "by(auto simp:final_def)"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n  (\\<exists>r. e' = Throw r \\<and> the_addr (Ref r) \\<in> dom (hp s'))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}