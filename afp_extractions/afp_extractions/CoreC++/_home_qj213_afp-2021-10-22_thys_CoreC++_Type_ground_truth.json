{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/Type.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemma [iff]: \"is_refT NT\"", "lemma [iff]: \"is_refT(Class C)\"", "lemma refTE:\n  \"\\<lbrakk>is_refT T; T = NT \\<Longrightarrow> Q; \\<And>C. T = Class C \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "lemma not_refTE:\n  \"\\<lbrakk> \\<not>is_refT T; T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], "translations": [["", "lemma [iff]: \"is_refT NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT NT", "by(simp add:is_refT_def)"], ["", "lemma [iff]: \"is_refT(Class C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT (Class C)", "by(simp add:is_refT_def)"], ["", "lemma refTE:\n  \"\\<lbrakk>is_refT T; T = NT \\<Longrightarrow> Q; \\<And>C. T = Class C \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_refT T; T = NT \\<Longrightarrow> Q;\n     \\<And>C. T = Class C \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (auto simp add: is_refT_def)"], ["", "lemma not_refTE:\n  \"\\<lbrakk> \\<not>is_refT T; T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> is_refT T;\n     T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow>\n     Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (cases T, auto simp add: is_refT_def)"], ["", "type_synonym \n  env  = \"vname \\<rightharpoonup> ty\""], ["", "end"]]}