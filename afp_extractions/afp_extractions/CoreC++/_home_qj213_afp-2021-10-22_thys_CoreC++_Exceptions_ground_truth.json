{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/Exceptions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemma [simp]: \n\"NullPointer \\<in> sys_xcpts \\<and> OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts\"", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast\\<rbrakk> \\<Longrightarrow> P C\"", "lemma preallocated_dom [simp]: \n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h\"", "lemma preallocatedD:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> \\<exists>S. h (addr_of_sys_xcpt C) = Some (C,S)\"", "lemma preallocatedE [elim?]:\n  \"\\<lbrakk> preallocated h;  C \\<in> sys_xcpts; \\<And>S. h (addr_of_sys_xcpt C) = Some(C,S) \\<Longrightarrow> P h C\\<rbrakk>\n  \\<Longrightarrow> P h C\"", "lemma cname_of_xcp [simp]:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C\"", "lemma preallocated_start:\n  \"preallocated (start_heap P)\"", "lemma start_Subobj:\n\"\\<lbrakk>start_heap P a = Some(C, S); (Cs,fs) \\<in> S\\<rbrakk> \\<Longrightarrow> Subobjs P C Cs\"", "lemma start_SuboSet:\n\"\\<lbrakk>start_heap P a = Some(C, S); Subobjs P C Cs\\<rbrakk> \\<Longrightarrow> \\<exists>fs. (Cs,fs) \\<in> S\"", "lemma start_init_obj: \"start_heap P a = Some(C,S) \\<Longrightarrow> S = Collect (init_obj P C)\"", "lemma start_subobj:\n  \"\\<lbrakk>start_heap P a = Some(C, S); \\<exists>fs. (Cs, fs) \\<in> S\\<rbrakk> \\<Longrightarrow> Subobjs P C Cs\""], "translations": [["", "lemma [simp]: \n\"NullPointer \\<in> sys_xcpts \\<and> OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<in> sys_xcpts \\<and>\n    OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts", "by(simp add: sys_xcpts_def)"], ["", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast\\<rbrakk> \\<Longrightarrow> P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; P NullPointer; P OutOfMemory;\n     P ClassCast\\<rbrakk>\n    \\<Longrightarrow> P C", "by (auto simp add: sys_xcpts_def)"], ["", "subsection \"@{term preallocated}\""], ["", "lemma preallocated_dom [simp]: \n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h", "by (fastforce simp:preallocated_def dom_def)"], ["", "lemma preallocatedD:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> \\<exists>S. h (addr_of_sys_xcpt C) = Some (C,S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>S.\n                         h (addr_of_sys_xcpt C) = \\<lfloor>(C, S)\\<rfloor>", "by(auto simp add: preallocated_def sys_xcpts_def)"], ["", "lemma preallocatedE [elim?]:\n  \"\\<lbrakk> preallocated h;  C \\<in> sys_xcpts; \\<And>S. h (addr_of_sys_xcpt C) = Some(C,S) \\<Longrightarrow> P h C\\<rbrakk>\n  \\<Longrightarrow> P h C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts;\n     \\<And>S.\n        h (addr_of_sys_xcpt C) = \\<lfloor>(C, S)\\<rfloor> \\<Longrightarrow>\n        P h C\\<rbrakk>\n    \\<Longrightarrow> P h C", "by (fast dest: preallocatedD)"], ["", "lemma cname_of_xcp [simp]:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C", "by (auto elim: preallocatedE)"], ["", "lemma preallocated_start:\n  \"preallocated (start_heap P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated (start_heap P)", "by (auto simp add: start_heap_def blank_def sys_xcpts_def fun_upd_apply\n                     addr_of_sys_xcpt_def preallocated_def)"], ["", "subsection \"@{term start_heap}\""], ["", "lemma start_Subobj:\n\"\\<lbrakk>start_heap P a = Some(C, S); (Cs,fs) \\<in> S\\<rbrakk> \\<Longrightarrow> Subobjs P C Cs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>start_heap P a = \\<lfloor>(C, S)\\<rfloor>;\n     (Cs, fs) \\<in> S\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "by (fastforce elim:init_obj.cases simp:start_heap_def blank_def \n                                    fun_upd_apply split:if_split_asm)"], ["", "lemma start_SuboSet:\n\"\\<lbrakk>start_heap P a = Some(C, S); Subobjs P C Cs\\<rbrakk> \\<Longrightarrow> \\<exists>fs. (Cs,fs) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>start_heap P a = \\<lfloor>(C, S)\\<rfloor>;\n     Subobjs P C Cs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs. (Cs, fs) \\<in> S", "by (fastforce intro:init_obj.intros simp:start_heap_def blank_def\n                split:if_split_asm)"], ["", "lemma start_init_obj: \"start_heap P a = Some(C,S) \\<Longrightarrow> S = Collect (init_obj P C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_heap P a = \\<lfloor>(C, S)\\<rfloor> \\<Longrightarrow>\n    S = Collect (init_obj P C)", "by (auto simp:start_heap_def blank_def split:if_split_asm)"], ["", "lemma start_subobj:\n  \"\\<lbrakk>start_heap P a = Some(C, S); \\<exists>fs. (Cs, fs) \\<in> S\\<rbrakk> \\<Longrightarrow> Subobjs P C Cs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>start_heap P a = \\<lfloor>(C, S)\\<rfloor>;\n     \\<exists>fs. (Cs, fs) \\<in> S\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "by (fastforce elim:init_obj.cases simp:start_heap_def blank_def\n                  split:if_split_asm)"], ["", "end"]]}