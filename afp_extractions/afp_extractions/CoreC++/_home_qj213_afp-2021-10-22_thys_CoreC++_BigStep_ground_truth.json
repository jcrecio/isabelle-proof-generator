{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/BigStep.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemmas eval_evals_induct = eval_evals.induct [split_format (complete)]\n  and eval_evals_inducts = eval_evals.inducts [split_format (complete)]", "lemma [simp]: \"final(Val v)\"", "lemma [simp]: \"final(throw e) = (\\<exists>r. e = ref r)\"", "lemma finalE: \"\\<lbrakk> final e;  \\<And>v. e = Val v \\<Longrightarrow> Q;  \\<And>r. e = Throw r \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "lemma [iff]: \"finals []\"", "lemma [iff]: \"finals (Val v # es) = finals es\"", "lemma finals_app_map[iff]: \"finals (map Val vs @ es) = finals es\"", "lemma [iff]: \"finals (map Val vs)\"", "lemma [iff]: \"finals (throw e # es) = (\\<exists>r. e = ref r)\"", "lemma not_finals_ConsI: \"\\<not> final e \\<Longrightarrow> \\<not> finals(e#es)\"", "lemma eval_final: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow> final e'\"\n and evals_final: \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es',s'\\<rangle> \\<Longrightarrow> finals es'\"", "lemma eval_lcl_incr: \"P,E \\<turnstile> \\<langle>e,(h\\<^sub>0,l\\<^sub>0)\\<rangle> \\<Rightarrow> \\<langle>e',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\"\n and evals_lcl_incr: \"P,E \\<turnstile> \\<langle>es,(h\\<^sub>0,l\\<^sub>0)\\<rangle> [\\<Rightarrow>] \\<langle>es',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\"", "lemma eval_finalId:  \"final e \\<Longrightarrow> P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e,s\\<rangle>\"", "lemma eval_finalsId:\nassumes finals: \"finals es\" shows \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es,s\\<rangle>\"", "lemma\neval_preserves_obj:\"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<Rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>S. h a = Some(D,S) \n  \\<Longrightarrow> \\<exists>S'. h' a = Some(D,S'))\"\nand evals_preserves_obj:\"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<Rightarrow>] \\<langle>es',(h',l')\\<rangle> \n\\<Longrightarrow> (\\<And>S. h a = Some(D,S) \\<Longrightarrow> \\<exists>S'. h' a = Some(D,S'))\""], "translations": [["", "lemmas eval_evals_induct = eval_evals.induct [split_format (complete)]\n  and eval_evals_inducts = eval_evals.inducts [split_format (complete)]"], ["", "inductive_cases eval_cases [cases set]:\n \"P,E \\<turnstile> \\<langle>new C,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>Cast C e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>\\<lparr>C\\<rparr>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>Var V,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>V:=e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e\\<bullet>F{Cs},s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e\\<^sub>1\\<bullet>F{Cs}:=e\\<^sub>2,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e\\<bullet>M(es),s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e\\<bullet>(C::)M(es),s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>{V:T;e\\<^sub>1},s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e\\<^sub>1;;e\\<^sub>2,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>if (e) e\\<^sub>1 else e\\<^sub>2,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>while (b) c,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>throw e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle>\""], ["", "inductive_cases evals_cases [cases set]:\n \"P,E \\<turnstile> \\<langle>[],s\\<rangle> [\\<Rightarrow>] \\<langle>e',s'\\<rangle>\"\n \"P,E \\<turnstile> \\<langle>e#es,s\\<rangle> [\\<Rightarrow>] \\<langle>e',s'\\<rangle>\""], ["", "subsection \\<open>Final expressions\\<close>"], ["", "definition final :: \"expr \\<Rightarrow> bool\" where\n  \"final e  \\<equiv>  (\\<exists>v. e = Val v) \\<or> (\\<exists>r. e = Throw r)\""], ["", "definition finals:: \"expr list \\<Rightarrow> bool\" where\n  \"finals es  \\<equiv>  (\\<exists>vs. es = map Val vs) \\<or> (\\<exists>vs r es'. es = map Val vs @ Throw r # es')\""], ["", "lemma [simp]: \"final(Val v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. final (Val v)", "by(simp add:final_def)"], ["", "lemma [simp]: \"final(throw e) = (\\<exists>r. e = ref r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. final (throw e) = (\\<exists>r. e = ref r)", "by(simp add:final_def)"], ["", "lemma finalE: \"\\<lbrakk> final e;  \\<And>v. e = Val v \\<Longrightarrow> Q;  \\<And>r. e = Throw r \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>final e; \\<And>v. e = Val v \\<Longrightarrow> Q;\n     \\<And>r. e = Throw r \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by(auto simp:final_def)"], ["", "lemma [iff]: \"finals []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finals []", "by(simp add:finals_def)"], ["", "lemma [iff]: \"finals (Val v # es) = finals es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finals (Val v # es) = finals es", "apply(clarsimp simp add:finals_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<exists>zs. es = map Val zs) \\<or>\n     (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')) =\n    ((\\<exists>vs. es = map Val vs) \\<or>\n     (\\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es'))", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'.\n        Val v # es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es')\n 2. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply(erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<exists>zs. es = map Val zs \\<Longrightarrow>\n    (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es')\n 2. \\<exists>vs a b es'.\n       Val v # es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es')\n 3. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>vs a b es'.\n       Val v # es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es')\n 2. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply(rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>vs a b es'.\n       Val v # es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    \\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es'\n 2. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>vs a b es'.\n       Val v # es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n       \\<exists>vs a b es'. es = map Val vs @ Throw (a, b) # es'\n 2. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply(case_tac vs)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>vs a b es'.\n       \\<lbrakk>Val v # es = map Val vs @ Throw (a, b) # es';\n        vs = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>vs a b es'.\n                            es = map Val vs @ Throw (a, b) # es'\n 2. \\<And>vs a b es' aa list.\n       \\<lbrakk>Val v # es = map Val vs @ Throw (a, b) # es';\n        vs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>vs a b es'.\n                            es = map Val vs @ Throw (a, b) # es'\n 3. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>vs a b es' aa list.\n       \\<lbrakk>Val v # es = map Val vs @ Throw (a, b) # es';\n        vs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>vs a b es'.\n                            es = map Val vs @ Throw (a, b) # es'\n 2. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>vs. es = map Val vs) \\<or>\n    (\\<exists>vs a b es'.\n        es = map Val vs @ Throw (a, b) # es') \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply(erule disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>vs. es = map Val vs \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')\n 2. \\<exists>vs a b es'.\n       es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply (rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>vs. es = map Val vs \\<Longrightarrow>\n    \\<exists>zs. es = map Val zs\n 2. \\<exists>vs a b es'.\n       es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>vs a b es'.\n       es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    (\\<exists>zs. es = map Val zs) \\<or>\n    (\\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es')", "apply(rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>vs a b es'.\n       es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    \\<exists>vs a b es'. Val v # es = map Val vs @ Throw (a, b) # es'", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>vs a b es'.\n       es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n       \\<exists>vsa aa ba es'a.\n          Val v # map Val vs @ Throw (a, b) # es' =\n          map Val vsa @ Throw (aa, ba) # es'a", "apply(rule_tac x = \"v#vs\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>vs a b es'.\n       es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n       \\<exists>aa ba es'a.\n          Val v # map Val vs @ Throw (a, b) # es' =\n          map Val (v # vs) @ Throw (aa, ba) # es'a", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma finals_app_map[iff]: \"finals (map Val vs @ es) = finals es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finals (map Val vs @ es) = finals es", "by(induct_tac vs, auto)"], ["", "lemma [iff]: \"finals (map Val vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finals (map Val vs)", "using finals_app_map[of vs \"[]\"]"], ["proof (prove)\nusing this:\n  finals (map Val vs @ []) = finals []\n\ngoal (1 subgoal):\n 1. finals (map Val vs)", "by(simp)"], ["", "lemma [iff]: \"finals (throw e # es) = (\\<exists>r. e = ref r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finals (throw e # es) = (\\<exists>r. e = ref r)", "apply(simp add:finals_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>vs a b es'. throw e # es = map Val vs @ Throw (a, b) # es') =\n    (\\<exists>a b. e = ref (a, b))", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>vs a b es'.\n       throw e # es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n    \\<exists>a b. e = ref (a, b)\n 2. \\<exists>a b. e = ref (a, b) \\<Longrightarrow>\n    \\<exists>vs a b es'. throw e # es = map Val vs @ Throw (a, b) # es'", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>vs a b es'.\n       throw e # es = map Val vs @ Throw (a, b) # es' \\<Longrightarrow>\n       \\<exists>a b. e = ref (a, b)\n 2. \\<exists>a b. e = ref (a, b) \\<Longrightarrow>\n    \\<exists>vs a b es'. throw e # es = map Val vs @ Throw (a, b) # es'", "apply(case_tac vs)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>vs a b es'.\n       \\<lbrakk>throw e # es = map Val vs @ Throw (a, b) # es';\n        vs = []\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b. e = ref (a, b)\n 2. \\<And>vs a b es' aa list.\n       \\<lbrakk>throw e # es = map Val vs @ Throw (a, b) # es';\n        vs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b. e = ref (a, b)\n 3. \\<exists>a b. e = ref (a, b) \\<Longrightarrow>\n    \\<exists>vs a b es'. throw e # es = map Val vs @ Throw (a, b) # es'", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>vs a b es' aa list.\n       \\<lbrakk>throw e # es = map Val vs @ Throw (a, b) # es';\n        vs = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b. e = ref (a, b)\n 2. \\<exists>a b. e = ref (a, b) \\<Longrightarrow>\n    \\<exists>vs a b es'. throw e # es = map Val vs @ Throw (a, b) # es'", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b. e = ref (a, b) \\<Longrightarrow>\n    \\<exists>vs a b es'. throw e # es = map Val vs @ Throw (a, b) # es'", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma not_finals_ConsI: \"\\<not> final e \\<Longrightarrow> \\<not> finals(e#es)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> final e \\<Longrightarrow> \\<not> finals (e # es)", "apply(auto simp add:finals_def final_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>vs a b es'.\n       \\<lbrakk>\\<forall>v. e \\<noteq> Val v;\n        \\<forall>a b. e \\<noteq> Throw (a, b);\n        e # es = map Val vs @ Throw (a, b) # es'\\<rbrakk>\n       \\<Longrightarrow> False", "apply(case_tac vs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>vs a b es'.\n       \\<lbrakk>\\<forall>v. e \\<noteq> Val v;\n        \\<forall>a b. e \\<noteq> Throw (a, b);\n        e # es = map Val vs @ Throw (a, b) # es'; vs = []\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>vs a b es' aa list.\n       \\<lbrakk>\\<forall>v. e \\<noteq> Val v;\n        \\<forall>a b. e \\<noteq> Throw (a, b);\n        e # es = map Val vs @ Throw (a, b) # es'; vs = aa # list\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma eval_final: \"P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow> final e'\"\n and evals_final: \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es',s'\\<rangle> \\<Longrightarrow> finals es'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow>\n                      \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n     final e') &&&\n    (P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                      \\<langle>es',s'\\<rangle> \\<Longrightarrow>\n     finals es')", "by(induct rule:eval_evals.inducts, simp_all)"], ["", "lemma eval_lcl_incr: \"P,E \\<turnstile> \\<langle>e,(h\\<^sub>0,l\\<^sub>0)\\<rangle> \\<Rightarrow> \\<langle>e',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\"\n and evals_lcl_incr: \"P,E \\<turnstile> \\<langle>es,(h\\<^sub>0,l\\<^sub>0)\\<rangle> [\\<Rightarrow>] \\<langle>es',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,\n                       (h\\<^sub>0, l\\<^sub>0)\\<rangle> \\<Rightarrow>\n                      \\<langle>e',\n                       (h\\<^sub>1, l\\<^sub>1)\\<rangle> \\<Longrightarrow>\n     dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1) &&&\n    (P,E \\<turnstile> \\<langle>es,\n                       (h\\<^sub>0, l\\<^sub>0)\\<rangle> [\\<Rightarrow>]\n                      \\<langle>es',\n                       (h\\<^sub>1, l\\<^sub>1)\\<rangle> \\<Longrightarrow>\n     dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1)", "by (induct rule:eval_evals_inducts) (auto simp del:fun_upd_apply)"], ["", "text\\<open>Only used later, in the small to big translation, but is already a\ngood sanity check:\\<close>"], ["", "lemma eval_finalId:  \"final e \\<Longrightarrow> P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow> \\<langle>e,s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. final e \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e,s\\<rangle> \\<Rightarrow>\n                     \\<langle>e,s\\<rangle>", "by (erule finalE) (fastforce intro: eval_evals.intros)+"], ["", "lemma eval_finalsId:\nassumes finals: \"finals es\" shows \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es,s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>es,s\\<rangle>", "using finals"], ["proof (prove)\nusing this:\n  finals es\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>es,s\\<rangle>", "proof (induct es type: list)"], ["proof (state)\ngoal (2 subgoals):\n 1. finals [] \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>[],s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>[],s\\<rangle>\n 2. \\<And>a list.\n       \\<lbrakk>finals list \\<Longrightarrow>\n                P,E \\<turnstile> \\<langle>list,s\\<rangle> [\\<Rightarrow>]\n                                 \\<langle>list,s\\<rangle>;\n        finals (a # list)\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>a # list,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>a # list,s\\<rangle>", "case Nil"], ["proof (state)\nthis:\n  finals []\n\ngoal (2 subgoals):\n 1. finals [] \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>[],s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>[],s\\<rangle>\n 2. \\<And>a list.\n       \\<lbrakk>finals list \\<Longrightarrow>\n                P,E \\<turnstile> \\<langle>list,s\\<rangle> [\\<Rightarrow>]\n                                 \\<langle>list,s\\<rangle>;\n        finals (a # list)\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>a # list,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>a # list,s\\<rangle>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>[],s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>[],s\\<rangle>", "by (rule eval_evals.intros)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>[],s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>[],s\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>finals list \\<Longrightarrow>\n                P,E \\<turnstile> \\<langle>list,s\\<rangle> [\\<Rightarrow>]\n                                 \\<langle>list,s\\<rangle>;\n        finals (a # list)\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>a # list,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>a # list,s\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>finals list \\<Longrightarrow>\n                P,E \\<turnstile> \\<langle>list,s\\<rangle> [\\<Rightarrow>]\n                                 \\<langle>list,s\\<rangle>;\n        finals (a # list)\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>a # list,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>a # list,s\\<rangle>", "case (Cons e es)"], ["proof (state)\nthis:\n  finals es \\<Longrightarrow>\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>es,s\\<rangle>\n  finals (e # es)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>finals list \\<Longrightarrow>\n                P,E \\<turnstile> \\<langle>list,s\\<rangle> [\\<Rightarrow>]\n                                 \\<langle>list,s\\<rangle>;\n        finals (a # list)\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>a # list,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>a # list,s\\<rangle>", "have hyp: \"finals es \\<Longrightarrow> P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es,s\\<rangle>\"\n   and finals: \"finals (e # es)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (finals es \\<Longrightarrow>\n     P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                      \\<langle>es,s\\<rangle>) &&&\n    finals (e # es)", "by fact+"], ["proof (state)\nthis:\n  finals es \\<Longrightarrow>\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>es,s\\<rangle>\n  finals (e # es)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>finals list \\<Longrightarrow>\n                P,E \\<turnstile> \\<langle>list,s\\<rangle> [\\<Rightarrow>]\n                                 \\<langle>list,s\\<rangle>;\n        finals (a # list)\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>a # list,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>a # list,s\\<rangle>", "show \"P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>] \\<langle>e # es,s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "assume \"final e\""], ["proof (state)\nthis:\n  final e\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>\n 2. \\<not> ?P \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  final e\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "proof (cases rule: finalE)"], ["proof (state)\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "fix v"], ["proof (state)\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "assume e: \"e = Val v\""], ["proof (state)\nthis:\n  e = Val v\n\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "have \"P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow> \\<langle>Val v,s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow>\n                     \\<langle>Val v,s\\<rangle>", "by (simp add: eval_finalId)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow>\n                   \\<langle>Val v,s\\<rangle>\n\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "moreover"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow>\n                   \\<langle>Val v,s\\<rangle>\n\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "from finals e"], ["proof (chain)\npicking this:\n  finals (e # es)\n  e = Val v", "have \"P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>] \\<langle>es,s\\<rangle>\""], ["proof (prove)\nusing this:\n  finals (e # es)\n  e = Val v\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>es,s\\<rangle>", "by(fast intro:hyp)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>es,s\\<rangle>\n\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow>\n                   \\<langle>Val v,s\\<rangle>\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>es,s\\<rangle>", "have \"P,E \\<turnstile> \\<langle>Val v#es,s\\<rangle> [\\<Rightarrow>] \\<langle>Val v#es,s\\<rangle>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>Val v,s\\<rangle> \\<Rightarrow>\n                   \\<langle>Val v,s\\<rangle>\n  P,E \\<turnstile> \\<langle>es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>es,s\\<rangle>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>Val v # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>Val v # es,s\\<rangle>", "by (rule eval_evals.intros)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>Val v # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>Val v # es,s\\<rangle>\n\ngoal (3 subgoals):\n 1. final e \\<Longrightarrow> final ?e1\n 2. \\<And>v.\n       \\<lbrakk>final e; ?e1 = Val v\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>\n 3. \\<And>r.\n       \\<lbrakk>final e; ?e1 = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "with e"], ["proof (chain)\npicking this:\n  e = Val v\n  P,E \\<turnstile> \\<langle>Val v # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>Val v # es,s\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  e = Val v\n  P,E \\<turnstile> \\<langle>Val v # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>Val v # es,s\\<rangle>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>e # es,s\\<rangle>\n\ngoal (2 subgoals):\n 1. final e \\<Longrightarrow> final e\n 2. \\<And>r.\n       \\<lbrakk>final e; e = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. final e \\<Longrightarrow> final e\n 2. \\<And>r.\n       \\<lbrakk>final e; e = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. final e \\<Longrightarrow> final e\n 2. \\<And>r.\n       \\<lbrakk>final e; e = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "assume e: \"e = Throw a\""], ["proof (state)\nthis:\n  e = Throw a\n\ngoal (2 subgoals):\n 1. final e \\<Longrightarrow> final e\n 2. \\<And>r.\n       \\<lbrakk>final e; e = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "have \"P,E \\<turnstile> \\<langle>Throw a,s\\<rangle> \\<Rightarrow> \\<langle>Throw a,s\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>Throw a,s\\<rangle> \\<Rightarrow>\n                     \\<langle>Throw a,s\\<rangle>", "by (simp add: eval_finalId)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>Throw a,s\\<rangle> \\<Rightarrow>\n                   \\<langle>Throw a,s\\<rangle>\n\ngoal (2 subgoals):\n 1. final e \\<Longrightarrow> final e\n 2. \\<And>r.\n       \\<lbrakk>final e; e = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "hence \"P,E \\<turnstile> \\<langle>Throw a#es,s\\<rangle> [\\<Rightarrow>] \\<langle>Throw a#es,s\\<rangle>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> \\<langle>Throw a,s\\<rangle> \\<Rightarrow>\n                   \\<langle>Throw a,s\\<rangle>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>Throw a # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>Throw a # es,s\\<rangle>", "by (rule eval_evals.intros)"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>Throw a # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>Throw a # es,s\\<rangle>\n\ngoal (2 subgoals):\n 1. final e \\<Longrightarrow> final e\n 2. \\<And>r.\n       \\<lbrakk>final e; e = Throw r\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> \\<langle>e # es,\n     s\\<rangle> [\\<Rightarrow>]\n    \\<langle>e # es,s\\<rangle>", "with e"], ["proof (chain)\npicking this:\n  e = Throw a\n  P,E \\<turnstile> \\<langle>Throw a # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>Throw a # es,s\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  e = Throw a\n  P,E \\<turnstile> \\<langle>Throw a # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>Throw a # es,s\\<rangle>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>e # es,s\\<rangle>\n\ngoal (1 subgoal):\n 1. final e \\<Longrightarrow> final e", "qed"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>e # es,s\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<not> final e \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> final e \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "assume \"\\<not> final e\""], ["proof (state)\nthis:\n  \\<not> final e\n\ngoal (1 subgoal):\n 1. \\<not> final e \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "with not_finals_ConsI finals"], ["proof (chain)\npicking this:\n  \\<not> final ?e \\<Longrightarrow> \\<not> finals (?e # ?es)\n  finals (e # es)\n  \\<not> final e", "have False"], ["proof (prove)\nusing this:\n  \\<not> final ?e \\<Longrightarrow> \\<not> finals (?e # ?es)\n  finals (e # es)\n  \\<not> final e\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> final e \\<Longrightarrow>\n    P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                     \\<langle>e # es,s\\<rangle>", ".."], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>e # es,s\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E \\<turnstile> \\<langle>e # es,s\\<rangle> [\\<Rightarrow>]\n                   \\<langle>e # es,s\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\neval_preserves_obj:\"P,E \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<Rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>S. h a = Some(D,S) \n  \\<Longrightarrow> \\<exists>S'. h' a = Some(D,S'))\"\nand evals_preserves_obj:\"P,E \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<Rightarrow>] \\<langle>es',(h',l')\\<rangle> \n\\<Longrightarrow> (\\<And>S. h a = Some(D,S) \\<Longrightarrow> \\<exists>S'. h' a = Some(D,S'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<Rightarrow>\n                      \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>S.\n         h a = \\<lfloor>(D, S)\\<rfloor> \\<Longrightarrow>\n         \\<exists>S'. h' a = \\<lfloor>(D, S')\\<rfloor>)) &&&\n    (P,E \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<Rightarrow>]\n                      \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>S.\n         h a = \\<lfloor>(D, S)\\<rfloor> \\<Longrightarrow>\n         \\<exists>S'. h' a = \\<lfloor>(D, S')\\<rfloor>))", "by(induct rule:eval_evals_inducts)(fastforce dest:new_Addr_SomeD)+"], ["", "end"]]}