{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/WellType.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemmas WT_WTs_induct = WT_WTs.induct [split_format (complete)]\n  and WT_WTs_inducts = WT_WTs.inducts [split_format (complete)]", "lemma [iff]: \"(P,E \\<turnstile> [] [::] Ts) = (Ts = [])\"", "lemma [iff]: \"(P,E \\<turnstile> e#es [::] T#Ts) = (P,E \\<turnstile> e :: T \\<and> P,E \\<turnstile> es [::] Ts)\"", "lemma [iff]: \"(P,E \\<turnstile> (e#es) [::] Ts) =\n  (\\<exists>U Us. Ts = U#Us \\<and> P,E \\<turnstile> e :: U \\<and> P,E \\<turnstile> es [::] Us)\"", "lemma [iff]: \"\\<And>Ts. (P,E \\<turnstile> es\\<^sub>1 @ es\\<^sub>2 [::] Ts) =\n  (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2. Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and> P,E \\<turnstile> es\\<^sub>1 [::] Ts\\<^sub>1 \\<and> P,E \\<turnstile> es\\<^sub>2[::]Ts\\<^sub>2)\"", "lemma [iff]: \"P,E \\<turnstile> Val v :: T = (typeof v = Some T)\"", "lemma [iff]: \"P,E \\<turnstile> Var V :: T = (E V = Some T)\"", "lemma [iff]: \"P,E \\<turnstile> e\\<^sub>1;;e\\<^sub>2 :: T\\<^sub>2 = (\\<exists>T\\<^sub>1. P,E \\<turnstile> e\\<^sub>1::T\\<^sub>1 \\<and> P,E \\<turnstile> e\\<^sub>2::T\\<^sub>2)\"", "lemma [iff]: \"(P,E \\<turnstile> {V:T; e} :: T') = (is_type P T \\<and> P,E(V\\<mapsto>T) \\<turnstile> e :: T')\"", "lemma wt_env_mono:\n  \"P,E \\<turnstile> e :: T \\<Longrightarrow> (\\<And>E'. E \\<subseteq>\\<^sub>m E' \\<Longrightarrow> P,E' \\<turnstile> e :: T)\" and \n  \"P,E \\<turnstile> es [::] Ts \\<Longrightarrow> (\\<And>E'. E \\<subseteq>\\<^sub>m E' \\<Longrightarrow> P,E' \\<turnstile> es [::] Ts)\"", "lemma WT_fv: \"P,E \\<turnstile> e :: T \\<Longrightarrow> fv e \\<subseteq> dom E\"\nand \"P,E \\<turnstile> es [::] Ts \\<Longrightarrow> fvs es \\<subseteq> dom E\""], "translations": [["", "lemmas WT_WTs_induct = WT_WTs.induct [split_format (complete)]\n  and WT_WTs_inducts = WT_WTs.inducts [split_format (complete)]"], ["", "subsection\\<open>Easy consequences\\<close>"], ["", "lemma [iff]: \"(P,E \\<turnstile> [] [::] Ts) = (Ts = [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> [] [::] Ts) = (Ts = [])", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> [] [::] Ts \\<Longrightarrow> Ts = []\n 2. Ts = [] \\<Longrightarrow> P,E \\<turnstile> [] [::] Ts", "apply (auto elim: WTs.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"(P,E \\<turnstile> e#es [::] T#Ts) = (P,E \\<turnstile> e :: T \\<and> P,E \\<turnstile> es [::] Ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> e # es [::] T # Ts) =\n    (P,E \\<turnstile> e :: T \\<and> P,E \\<turnstile> es [::] Ts)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> e # es [::] T # Ts \\<Longrightarrow>\n    P,E \\<turnstile> e :: T \\<and> P,E \\<turnstile> es [::] Ts\n 2. P,E \\<turnstile> e :: T \\<and>\n    P,E \\<turnstile> es [::] Ts \\<Longrightarrow>\n    P,E \\<turnstile> e # es [::] T # Ts", "apply (auto elim: WTs.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"(P,E \\<turnstile> (e#es) [::] Ts) =\n  (\\<exists>U Us. Ts = U#Us \\<and> P,E \\<turnstile> e :: U \\<and> P,E \\<turnstile> es [::] Us)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> e # es [::] Ts) =\n    (\\<exists>U Us.\n        Ts = U # Us \\<and>\n        P,E \\<turnstile> e :: U \\<and> P,E \\<turnstile> es [::] Us)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> e # es [::] Ts \\<Longrightarrow>\n    \\<exists>U Us.\n       Ts = U # Us \\<and>\n       P,E \\<turnstile> e :: U \\<and> P,E \\<turnstile> es [::] Us\n 2. \\<exists>U Us.\n       Ts = U # Us \\<and>\n       P,E \\<turnstile> e :: U \\<and>\n       P,E \\<turnstile> es [::] Us \\<Longrightarrow>\n    P,E \\<turnstile> e # es [::] Ts", "apply (auto elim: WTs.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"\\<And>Ts. (P,E \\<turnstile> es\\<^sub>1 @ es\\<^sub>2 [::] Ts) =\n  (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2. Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and> P,E \\<turnstile> es\\<^sub>1 [::] Ts\\<^sub>1 \\<and> P,E \\<turnstile> es\\<^sub>2[::]Ts\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       (P,E \\<turnstile> es\\<^sub>1 @ es\\<^sub>2 [::] Ts) =\n       (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n           Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n           P,E \\<turnstile> es\\<^sub>1 [::] Ts\\<^sub>1 \\<and>\n           P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply(induct es\\<^sub>1 type:list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>Ts.\n       (P,E \\<turnstile> [] @ es\\<^sub>2 [::] Ts) =\n       (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n           Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n           P,E \\<turnstile> [] [::] Ts\\<^sub>1 \\<and>\n           P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)\n 2. \\<And>a list Ts.\n       (\\<And>Ts.\n           (P,E \\<turnstile> list @ es\\<^sub>2 [::] Ts) =\n           (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n               Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n               P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n               P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)) \\<Longrightarrow>\n       (P,E \\<turnstile> (a # list) @ es\\<^sub>2 [::] Ts) =\n       (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n           Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n           P,E \\<turnstile> a # list [::] Ts\\<^sub>1 \\<and>\n           P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list Ts.\n       (\\<And>Ts.\n           (P,E \\<turnstile> list @ es\\<^sub>2 [::] Ts) =\n           (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n               Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n               P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n               P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)) \\<Longrightarrow>\n       (P,E \\<turnstile> (a # list) @ es\\<^sub>2 [::] Ts) =\n       (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n           Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n           P,E \\<turnstile> a # list [::] Ts\\<^sub>1 \\<and>\n           P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list Ts.\n       (\\<And>Ts.\n           (P,E \\<turnstile> list @ es\\<^sub>2 [::] Ts) =\n           (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n               Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n               P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n               P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)) \\<Longrightarrow>\n       (\\<exists>U Us.\n           Ts = U # Us \\<and>\n           P,E \\<turnstile> a :: U \\<and>\n           (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n               Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n               P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n               P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)) =\n       (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n           Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n           (\\<exists>U Us.\n               Ts\\<^sub>1 = U # Us \\<and>\n               P,E \\<turnstile> a :: U \\<and>\n               P,E \\<turnstile> list [::] Us) \\<and>\n           P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply(erule thin_rl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list Ts.\n       (\\<exists>U Us.\n           Ts = U # Us \\<and>\n           P,E \\<turnstile> a :: U \\<and>\n           (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n               Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n               P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n               P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)) =\n       (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n           Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n           (\\<exists>U Us.\n               Ts\\<^sub>1 = U # Us \\<and>\n               P,E \\<turnstile> a :: U \\<and>\n               P,E \\<turnstile> list [::] Us) \\<and>\n           P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list Ts.\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2) \\<Longrightarrow>\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\n 2. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts\\<^sub>1' Ts\\<^sub>2'.\n                            U # Ts\\<^sub>1 @ Ts\\<^sub>2 =\n                            Ts\\<^sub>1' @ Ts\\<^sub>2' \\<and>\n                            (\\<exists>U Us.\n                                Ts\\<^sub>1' = U # Us \\<and>\n                                P,E \\<turnstile> a :: U \\<and>\n                                P,E \\<turnstile> list [::] Us) \\<and>\n                            P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2'\n 2. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply(rule exI)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> U # Ts\\<^sub>1 @ Ts\\<^sub>2 =\n                         ?Ts\\<^sub>119 a list U Ts\\<^sub>1 Ts\\<^sub>2 @\n                         ?Ts\\<^sub>221 a list U Ts\\<^sub>1 Ts\\<^sub>2 \\<and>\n                         (\\<exists>Ua Us.\n                             ?Ts\\<^sub>119 a list U Ts\\<^sub>1 Ts\\<^sub>2 =\n                             Ua # Us \\<and>\n                             P,E \\<turnstile> a :: Ua \\<and>\n                             P,E \\<turnstile> list [::] Us) \\<and>\n                         P,E \\<turnstile> es\\<^sub>2 [::] ?Ts\\<^sub>221 a\n                     list U Ts\\<^sub>1 Ts\\<^sub>2\n 2. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply(rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> U # Ts\\<^sub>1 @ Ts\\<^sub>2 =\n                         ?Ts\\<^sub>119 a list U Ts\\<^sub>1 Ts\\<^sub>2 @\n                         ?Ts\\<^sub>221 a list U Ts\\<^sub>1 Ts\\<^sub>2\n 2. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Ua Us.\n                             ?Ts\\<^sub>119 a list U Ts\\<^sub>1 Ts\\<^sub>2 =\n                             Ua # Us \\<and>\n                             P,E \\<turnstile> a :: Ua \\<and>\n                             P,E \\<turnstile> list [::] Us) \\<and>\n                         P,E \\<turnstile> es\\<^sub>2 [::] ?Ts\\<^sub>221 a\n                     list U Ts\\<^sub>1 Ts\\<^sub>2\n 3. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>Ua Us.\n                             ?Ts\\<^sub>119 a list U Ts\\<^sub>1 Ts\\<^sub>2 =\n                             Ua # Us \\<and>\n                             P,E \\<turnstile> a :: Ua \\<and>\n                             P,E \\<turnstile> list [::] Us) \\<and>\n                         P,E \\<turnstile> es\\<^sub>2 [::] ?Ts\\<^sub>221 a\n                     list U Ts\\<^sub>1 Ts\\<^sub>2\n 2. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> U # Ts\\<^sub>1 @ Ts\\<^sub>2 =\n                         ?Ts\\<^sub>119 a list U Ts\\<^sub>1 Ts\\<^sub>2 @\n                         ?Ts\\<^sub>221 a list U Ts\\<^sub>1 Ts\\<^sub>2\n 3. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list U Ts\\<^sub>1 Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile> a :: U;\n        P,E \\<turnstile> list [::] Ts\\<^sub>1;\n        P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> U # Ts\\<^sub>1 @ Ts\\<^sub>2 =\n                         (U # Ts\\<^sub>1) @ Ts\\<^sub>2\n 2. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list Ts.\n       \\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n          Ts = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n          (\\<exists>U Us.\n              Ts\\<^sub>1 = U # Us \\<and>\n              P,E \\<turnstile> a :: U \\<and>\n              P,E \\<turnstile> list [::] Us) \\<and>\n          P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2 \\<Longrightarrow>\n       \\<exists>U Us.\n          Ts = U # Us \\<and>\n          P,E \\<turnstile> a :: U \\<and>\n          (\\<exists>Ts\\<^sub>1 Ts\\<^sub>2.\n              Us = Ts\\<^sub>1 @ Ts\\<^sub>2 \\<and>\n              P,E \\<turnstile> list [::] Ts\\<^sub>1 \\<and>\n              P,E \\<turnstile> es\\<^sub>2 [::] Ts\\<^sub>2)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"P,E \\<turnstile> Val v :: T = (typeof v = Some T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> Val v :: T) = (typeof v = \\<lfloor>T\\<rfloor>)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> Val v :: T \\<Longrightarrow>\n    typeof v = \\<lfloor>T\\<rfloor>\n 2. typeof v = \\<lfloor>T\\<rfloor> \\<Longrightarrow>\n    P,E \\<turnstile> Val v :: T", "apply (auto elim: WT.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"P,E \\<turnstile> Var V :: T = (E V = Some T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> Var V :: T) = (E V = \\<lfloor>T\\<rfloor>)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> Var V :: T \\<Longrightarrow> E V = \\<lfloor>T\\<rfloor>\n 2. E V = \\<lfloor>T\\<rfloor> \\<Longrightarrow> P,E \\<turnstile> Var V :: T", "apply (auto elim: WT.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"P,E \\<turnstile> e\\<^sub>1;;e\\<^sub>2 :: T\\<^sub>2 = (\\<exists>T\\<^sub>1. P,E \\<turnstile> e\\<^sub>1::T\\<^sub>1 \\<and> P,E \\<turnstile> e\\<^sub>2::T\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> e\\<^sub>1;; e\\<^sub>2 :: T\\<^sub>2) =\n    (\\<exists>T\\<^sub>1.\n        P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1 \\<and>\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> e\\<^sub>1;; e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n    \\<exists>T\\<^sub>1.\n       P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1 \\<and>\n       P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2\n 2. \\<exists>T\\<^sub>1.\n       P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1 \\<and>\n       P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n    P,E \\<turnstile> e\\<^sub>1;; e\\<^sub>2 :: T\\<^sub>2", "apply (auto elim: WT.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma [iff]: \"(P,E \\<turnstile> {V:T; e} :: T') = (is_type P T \\<and> P,E(V\\<mapsto>T) \\<turnstile> e :: T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> {V:T; e} :: T') =\n    (is_type P T \\<and> P,E(V \\<mapsto> T) \\<turnstile> e :: T')", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,E \\<turnstile> {V:T; e} :: T' \\<Longrightarrow>\n    is_type P T \\<and> P,E(V \\<mapsto> T) \\<turnstile> e :: T'\n 2. is_type P T \\<and> P,E(V \\<mapsto>\n    T) \\<turnstile> e :: T' \\<Longrightarrow>\n    P,E \\<turnstile> {V:T; e} :: T'", "apply (auto elim: WT.cases)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "inductive_cases WT_elim_cases[elim!]:\n  \"P,E \\<turnstile> new C :: T\"\n  \"P,E \\<turnstile> Cast C e :: T\"\n  \"P,E \\<turnstile> \\<lparr>C\\<rparr>e :: T\"\n  \"P,E \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile> V:= e :: T\"\n  \"P,E \\<turnstile> e\\<bullet>F{Cs} :: T\"\n  \"P,E \\<turnstile> e\\<bullet>F{Cs} := v :: T\"\n  \"P,E \\<turnstile> e\\<bullet>M(ps) :: T\"\n  \"P,E \\<turnstile> e\\<bullet>(C::)M(ps) :: T\"\n  \"P,E \\<turnstile> if (e) e\\<^sub>1 else e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile> while (e) c :: T\"\n  \"P,E \\<turnstile> throw e :: T\""], ["", "lemma wt_env_mono:\n  \"P,E \\<turnstile> e :: T \\<Longrightarrow> (\\<And>E'. E \\<subseteq>\\<^sub>m E' \\<Longrightarrow> P,E' \\<turnstile> e :: T)\" and \n  \"P,E \\<turnstile> es [::] Ts \\<Longrightarrow> (\\<And>E'. E \\<subseteq>\\<^sub>m E' \\<Longrightarrow> P,E' \\<turnstile> es [::] Ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> e :: T \\<Longrightarrow>\n     (\\<And>E'.\n         E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n         P,E' \\<turnstile> e :: T)) &&&\n    (P,E \\<turnstile> es [::] Ts \\<Longrightarrow>\n     (\\<And>E'.\n         E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n         P,E' \\<turnstile> es [::] Ts))", "apply(induct rule: WT_WTs_inducts)"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>C E E'.\n       \\<lbrakk>is_class P C; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> new C :: Class C\n 2. \\<And>E e D C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class D;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        (\\<forall>Cs. \\<not> P \\<turnstile> Path D to C via Cs );\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Cast C e :: Class C\n 3. \\<And>E e D C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class D;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and>\n        (\\<forall>Cs.\n            P \\<turnstile> Path C to D via Cs  \\<longrightarrow>\n            Subobjs\\<^sub>R P C Cs);\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> \\<lparr>C\\<rparr>e :: Class C\n 4. \\<And>v T E E'.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Val v :: T\n 5. \\<And>E V T E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Var V :: T\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\n 7. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 8. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 9. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 10. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n        \\<lbrakk>P,E \\<turnstile> e :: Class C';\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: Class C';\n         P \\<turnstile> Path C' to C unique;\n         P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n         P,E \\<turnstile> es [::] Ts';\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> es [::] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n       es :: T\nA total of 18 subgoals...", "apply(simp add: WTNew)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>E e D C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class D;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        (\\<forall>Cs. \\<not> P \\<turnstile> Path D to C via Cs );\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Cast C e :: Class C\n 2. \\<And>E e D C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class D;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and>\n        (\\<forall>Cs.\n            P \\<turnstile> Path C to D via Cs  \\<longrightarrow>\n            Subobjs\\<^sub>R P C Cs);\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> \\<lparr>C\\<rparr>e :: Class C\n 3. \\<And>v T E E'.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Val v :: T\n 4. \\<And>E V T E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Var V :: T\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\n 6. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 7. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 8. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 9. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 10. \\<And>E e C M Ts T a b Cs es Ts' E'.\n        \\<lbrakk>P,E \\<turnstile> e :: Class C;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: Class C;\n         P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n         P,E \\<turnstile> es [::] Ts';\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> es [::] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\nA total of 17 subgoals...", "apply(fastforce simp: WTDynCast)"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>E e D C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class D;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and>\n        (\\<forall>Cs.\n            P \\<turnstile> Path C to D via Cs  \\<longrightarrow>\n            Subobjs\\<^sub>R P C Cs);\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> \\<lparr>C\\<rparr>e :: Class C\n 2. \\<And>v T E E'.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Val v :: T\n 3. \\<And>E V T E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Var V :: T\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\n 5. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 6. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 7. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 8. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 9. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 10. \\<And>T E V e T' E'.\n        \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n         \\<And>E'.\n            E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: T';\n         E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\nA total of 16 subgoals...", "apply(fastforce simp: WTStaticCast)"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>v T E E'.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Val v :: T\n 2. \\<And>E V T E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Var V :: T\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\n 4. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 5. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 6. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 7. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 8. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 9. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 10. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n        \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n         P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n         E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                          e\\<^sub>2 :: T\\<^sub>2\nA total of 15 subgoals...", "apply(fastforce simp: WTVal)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E V T E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Var V :: T\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\n 3. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 4. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 5. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 6. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 7. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 8. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 9. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 10. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n        \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: Boolean;\n         P,E \\<turnstile> e\\<^sub>1 :: T;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e\\<^sub>1 :: T;\n         P,E \\<turnstile> e\\<^sub>2 :: T;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e\\<^sub>2 :: T;\n         E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                          else e\\<^sub>2 :: T\nA total of 14 subgoals...", "apply(simp add: WTVar map_le_def dom_def)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\n 2. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 3. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 4. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 5. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 6. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 7. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 8. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 9. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 10. \\<And>E e c T E'.\n        \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: Boolean;\n         P,E \\<turnstile> c :: T;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> c :: T;\n         E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\nA total of 13 subgoals...", "apply(fastforce simp: WTBinOp)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>E V T e T' E'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> V:=e :: T\n 2. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 3. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 4. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 5. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 6. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 8. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 9. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 10. \\<And>E e C E'.\n        \\<lbrakk>P,E \\<turnstile> e :: Class C;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: Class C;\n         E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\nA total of 12 subgoals...", "apply(force simp:map_le_def)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>E e C F T Cs E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<bullet>F{Cs} :: T\n 2. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 3. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 4. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 5. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 7. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 8. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 9. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 10. \\<And>E E'.\n        E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n        P,E' \\<turnstile> [] [::] []\nA total of 11 subgoals...", "apply(fastforce simp: WTFAcc)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T' E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: Class C;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T';\n        P \\<turnstile> T' \\<le> T; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2 :: T\n 2. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 3. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 4. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 6. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 7. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 8. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 9. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 10. \\<And>E e T es Ts E'.\n        \\<lbrakk>P,E \\<turnstile> e :: T;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> e :: T;\n         P,E \\<turnstile> es [::] Ts;\n         \\<And>E'.\n            E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n            P,E' \\<turnstile> es [::] Ts;\n         E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n        \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTFAss)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>E e C' C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C';\n        P \\<turnstile> Path C' to C unique;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e \\<lfloor>C\\<rfloor> M\n      es :: T\n 2. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 3. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 5. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 6. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 7. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 8. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 9. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTCall)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>E e C M Ts T a b Cs es Ts' E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        P \\<turnstile> C has least M = (Ts, T, a, b) via Cs;\n        P,E \\<turnstile> es [::] Ts';\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts; E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> Call e None M es :: T\n 2. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 4. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 5. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 6. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 7. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 8. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTStaticCall)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>T E V e T' E'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        \\<And>E'.\n           E(V \\<mapsto> T) \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T';\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> {V:T; e} :: T'\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 3. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 4. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 5. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 6. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 7. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: map_le_def WTBlock)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e\\<^sub>1;;\n                         e\\<^sub>2 :: T\\<^sub>2\n 2. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 3. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 4. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 5. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 6. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTSeq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>E e e\\<^sub>1 T e\\<^sub>2 E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> e\\<^sub>1 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>1 :: T;\n        P,E \\<turnstile> e\\<^sub>2 :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e\\<^sub>2 :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> if (e) e\\<^sub>1\n                         else e\\<^sub>2 :: T\n 2. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 3. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 4. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 5. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTCond)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>E e c T E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Boolean;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Boolean;\n        P,E \\<turnstile> c :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> c :: T;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> while (e) c :: Void\n 2. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 3. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 4. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTWhile)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>E e C E'.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: Class C;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> throw e :: Void\n 2. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 3. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(fastforce simp: WTThrow)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>E E'.\n       E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n       P,E' \\<turnstile> [] [::] []\n 2. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(simp add: WTNil)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E e T es Ts E'.\n       \\<lbrakk>P,E \\<turnstile> e :: T;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> e :: T;\n        P,E \\<turnstile> es [::] Ts;\n        \\<And>E'.\n           E \\<subseteq>\\<^sub>m E' \\<Longrightarrow>\n           P,E' \\<turnstile> es [::] Ts;\n        E \\<subseteq>\\<^sub>m E'\\<rbrakk>\n       \\<Longrightarrow> P,E' \\<turnstile> e # es [::] T # Ts", "apply(simp add: WTCons)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma WT_fv: \"P,E \\<turnstile> e :: T \\<Longrightarrow> fv e \\<subseteq> dom E\"\nand \"P,E \\<turnstile> es [::] Ts \\<Longrightarrow> fvs es \\<subseteq> dom E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile> e :: T \\<Longrightarrow> fv e \\<subseteq> dom E) &&&\n    (P,E \\<turnstile> es [::] Ts \\<Longrightarrow> fvs es \\<subseteq> dom E)", "apply(induct rule:WT_WTs.inducts)"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>C E. is_class P C \\<Longrightarrow> fv (new C) \\<subseteq> dom E\n 2. \\<And>E e D C.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D; fv e \\<subseteq> dom E;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        (\\<forall>Cs. \\<not> P \\<turnstile> Path D to C via Cs )\\<rbrakk>\n       \\<Longrightarrow> fv (Cast C e) \\<subseteq> dom E\n 3. \\<And>E e D C.\n       \\<lbrakk>P,E \\<turnstile> e :: Class D; fv e \\<subseteq> dom E;\n        is_class P C;\n        P \\<turnstile> Path D to C unique \\<or>\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<and>\n        (\\<forall>Cs.\n            P \\<turnstile> Path C to D via Cs  \\<longrightarrow>\n            Subobjs\\<^sub>R P C Cs)\\<rbrakk>\n       \\<Longrightarrow> fv (\\<lparr>C\\<rparr>e) \\<subseteq> dom E\n 4. \\<And>v T E.\n       typeof v = \\<lfloor>T\\<rfloor> \\<Longrightarrow>\n       fv (Val v) \\<subseteq> dom E\n 5. \\<And>E V T.\n       E V = \\<lfloor>T\\<rfloor> \\<Longrightarrow>\n       fv (Var V) \\<subseteq> dom E\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: T\\<^sub>1;\n        fv e\\<^sub>1 \\<subseteq> dom E;\n        P,E \\<turnstile> e\\<^sub>2 :: T\\<^sub>2;\n        fv e\\<^sub>2 \\<subseteq> dom E;\n        case bop of\n        Eq \\<Rightarrow> T\\<^sub>1 = T\\<^sub>2 \\<and> T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer\\<rbrakk>\n       \\<Longrightarrow> fv (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n                         \\<subseteq> dom E\n 7. \\<And>E V T e T'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        fv e \\<subseteq> dom E; P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> fv (V:=e) \\<subseteq> dom E\n 8. \\<And>E e C F T Cs.\n       \\<lbrakk>P,E \\<turnstile> e :: Class C; fv e \\<subseteq> dom E;\n        P \\<turnstile> C has least F:T via Cs\\<rbrakk>\n       \\<Longrightarrow> fv (e\\<bullet>F{Cs}) \\<subseteq> dom E\n 9. \\<And>E e\\<^sub>1 C F T Cs e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile> e\\<^sub>1 :: Class C;\n        fv e\\<^sub>1 \\<subseteq> dom E;\n        P \\<turnstile> C has least F:T via Cs;\n        P,E \\<turnstile> e\\<^sub>2 :: T'; fv e\\<^sub>2 \\<subseteq> dom E;\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> fv (e\\<^sub>1\\<bullet>F{Cs} := e\\<^sub>2)\n                         \\<subseteq> dom E\n 10. \\<And>E e C' C M Ts T m Cs es Ts'.\n        \\<lbrakk>P,E \\<turnstile> e :: Class C'; fv e \\<subseteq> dom E;\n         P \\<turnstile> Path C' to C unique;\n         P \\<turnstile> C has least M = (Ts, T, m) via Cs;\n         P,E \\<turnstile> es [::] Ts'; fvs es \\<subseteq> dom E;\n         P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> fv (Call e \\<lfloor>C\\<rfloor> M es)\n                          \\<subseteq> dom E\nA total of 18 subgoals...", "apply(simp_all del: fun_upd_apply)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>E V T. E V = \\<lfloor>T\\<rfloor> \\<Longrightarrow> V \\<in> dom E\n 2. \\<And>E V T e T'.\n       \\<lbrakk>E V = \\<lfloor>T\\<rfloor>; P,E \\<turnstile> e :: T';\n        fv e \\<subseteq> dom E; P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> V \\<in> dom E\n 3. \\<And>T E V e T'.\n       \\<lbrakk>is_type P T; P,E(V \\<mapsto> T) \\<turnstile> e :: T';\n        fv e \\<subseteq> insert V (dom E)\\<rbrakk>\n       \\<Longrightarrow> fv e - {V} \\<subseteq> dom E", "apply fast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}