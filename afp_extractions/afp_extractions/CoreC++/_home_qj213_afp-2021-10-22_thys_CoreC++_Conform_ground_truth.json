{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/Conform.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemma conf_Null [simp]: \"P,h \\<turnstile> Null :\\<le> T  =  P \\<turnstile> NT \\<le> T\"", "lemma typeof_conf[simp]: \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T \\<Longrightarrow> P,h \\<turnstile> v :\\<le> T\"", "lemma typeof_lit_conf[simp]: \"typeof v = Some T \\<Longrightarrow> P,h \\<turnstile> v :\\<le> T\"", "lemma defval_conf[simp]: \"is_type P T \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T\"", "lemma typeof_notclass_heap:\n  \"\\<forall>C. T \\<noteq> Class C \\<Longrightarrow> (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T) = (P \\<turnstile> typeof\\<^bsub>h'\\<^esub> v = Some T)\"", "lemma assumes h:\"h a = Some(C,S)\" \n  shows conf_upd_obj: \"(P,h(a\\<mapsto>(C,S')) \\<turnstile> v :\\<le> T) = (P,h \\<turnstile> v :\\<le> T)\"", "lemma conf_NT [iff]: \"P,h \\<turnstile> v :\\<le> NT = (v = Null)\"", "lemma confs_rev: \"P,h \\<turnstile> rev s [:\\<le>] t = (P,h \\<turnstile> s [:\\<le>] rev t)\"", "lemma confs_Cons2: \"P,h \\<turnstile> xs [:\\<le>] y#ys = (\\<exists>z zs. xs = z#zs \\<and> P,h \\<turnstile> z :\\<le> y \\<and> P,h \\<turnstile> zs [:\\<le>] ys)\"", "lemma fconf_init_fields: \n\"class P C = Some(Bs,fs,ms) \\<Longrightarrow> P,h \\<turnstile> init_class_fieldmap P C (:\\<le>) map_of fs\"", "lemma hconfD: \"\\<lbrakk> P \\<turnstile> h \\<surd>; h a = Some obj \\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> obj \\<surd>\"", "lemma hconf_Subobjs: \n\"\\<lbrakk>h a = Some(C,S); (Cs, fs) \\<in> S; P \\<turnstile> h \\<surd>\\<rbrakk> \\<Longrightarrow> Subobjs P C Cs\"", "lemma lconf_upd:\n  \"\\<lbrakk> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P,h \\<turnstile> v :\\<le> T; E V = Some T \\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> l(V\\<mapsto>v) (:\\<le>)\\<^sub>w E\"", "lemma lconf_empty[iff]: \"P,h \\<turnstile> Map.empty (:\\<le>)\\<^sub>w E\"", "lemma lconf_upd2: \"\\<lbrakk>P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P,h \\<turnstile> v :\\<le> T\\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> l(V\\<mapsto>v) (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\"", "lemma wt_same_type_typeconf:\n\"P,E,h \\<turnstile> e : T \\<Longrightarrow> P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> T\"", "lemma wts_same_types_typesconf:\n  \"P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow> types_conf P E h es Ts\"", "lemma types_conf_smaller_types:\n\"\\<And>es Ts. \\<lbrakk>length es = length Ts'; types_conf P E h es Ts'; P \\<turnstile> Ts' [\\<le>] Ts \\<rbrakk> \n  \\<Longrightarrow> \\<exists>Ts''. P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts\""], "translations": [["", "lemma conf_Null [simp]: \"P,h \\<turnstile> Null :\\<le> T  =  P \\<turnstile> NT \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h \\<turnstile> Null :\\<le> T) = P \\<turnstile> NT \\<le> T", "by(cases T) simp_all"], ["", "lemma typeof_conf[simp]: \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T \\<Longrightarrow> P,h \\<turnstile> v :\\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n    \\<lfloor>T\\<rfloor> \\<Longrightarrow>\n    P,h \\<turnstile> v :\\<le> T", "by (cases T) auto"], ["", "lemma typeof_lit_conf[simp]: \"typeof v = Some T \\<Longrightarrow> P,h \\<turnstile> v :\\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. typeof v = \\<lfloor>T\\<rfloor> \\<Longrightarrow>\n    P,h \\<turnstile> v :\\<le> T", "by (rule typeof_conf[OF type_eq_type])"], ["", "lemma defval_conf[simp]: \"is_type P T \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_type P T \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T", "by(cases T) auto"], ["", "lemma typeof_notclass_heap:\n  \"\\<forall>C. T \\<noteq> Class C \\<Longrightarrow> (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T) = (P \\<turnstile> typeof\\<^bsub>h'\\<^esub> v = Some T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>C. T \\<noteq> Class C \\<Longrightarrow>\n    (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>) =\n    (P \\<turnstile> typeof\\<^bsub>h'\\<^esub> v = \\<lfloor>T\\<rfloor>)", "by(cases T)(auto dest:typeof_Void typeof_NT typeof_Boolean typeof_Integer)"], ["", "lemma assumes h:\"h a = Some(C,S)\" \n  shows conf_upd_obj: \"(P,h(a\\<mapsto>(C,S')) \\<turnstile> v :\\<le> T) = (P,h \\<turnstile> v :\\<le> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)", "proof(cases T)"], ["proof (state)\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "case Void"], ["proof (state)\nthis:\n  T = Void\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence \"(P \\<turnstile> typeof\\<^bsub>h(a\\<mapsto>(C,S'))\\<^esub> v = Some T) = (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T)\""], ["proof (prove)\nusing this:\n  T = Void\n\ngoal (1 subgoal):\n 1. (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n     \\<lfloor>T\\<rfloor>) =\n    (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "by(fastforce intro!:typeof_notclass_heap)"], ["proof (state)\nthis:\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (5 subgoals):\n 1. T = Void \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 5. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with Void"], ["proof (chain)\npicking this:\n  T = Void\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Void\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (1 subgoal):\n 1. (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)", "by simp"], ["proof (state)\nthis:\n  (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n  (P,h \\<turnstile> v :\\<le> T)\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "case Boolean"], ["proof (state)\nthis:\n  T = Boolean\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence \"(P \\<turnstile> typeof\\<^bsub>h(a\\<mapsto>(C,S'))\\<^esub> v = Some T) = (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T)\""], ["proof (prove)\nusing this:\n  T = Boolean\n\ngoal (1 subgoal):\n 1. (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n     \\<lfloor>T\\<rfloor>) =\n    (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "by(fastforce intro!:typeof_notclass_heap)"], ["proof (state)\nthis:\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (4 subgoals):\n 1. T = Boolean \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 4. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with Boolean"], ["proof (chain)\npicking this:\n  T = Boolean\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Boolean\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (1 subgoal):\n 1. (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)", "by simp"], ["proof (state)\nthis:\n  (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n  (P,h \\<turnstile> v :\\<le> T)\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "case Integer"], ["proof (state)\nthis:\n  T = Integer\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence \"(P \\<turnstile> typeof\\<^bsub>h(a\\<mapsto>(C,S'))\\<^esub> v = Some T) = (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T)\""], ["proof (prove)\nusing this:\n  T = Integer\n\ngoal (1 subgoal):\n 1. (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n     \\<lfloor>T\\<rfloor>) =\n    (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "by(fastforce intro!:typeof_notclass_heap)"], ["proof (state)\nthis:\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (3 subgoals):\n 1. T = Integer \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 3. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with Integer"], ["proof (chain)\npicking this:\n  T = Integer\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Integer\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (1 subgoal):\n 1. (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)", "by simp"], ["proof (state)\nthis:\n  (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n  (P,h \\<turnstile> v :\\<le> T)\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "case NT"], ["proof (state)\nthis:\n  T = NT\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence \"(P \\<turnstile> typeof\\<^bsub>h(a\\<mapsto>(C,S'))\\<^esub> v = Some T) = (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some T)\""], ["proof (prove)\nusing this:\n  T = NT\n\ngoal (1 subgoal):\n 1. (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n     \\<lfloor>T\\<rfloor>) =\n    (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "by(fastforce intro!:typeof_notclass_heap)"], ["proof (state)\nthis:\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (2 subgoals):\n 1. T = NT \\<Longrightarrow>\n    (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)\n 2. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with NT"], ["proof (chain)\npicking this:\n  T = NT\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)", "show ?thesis"], ["proof (prove)\nusing this:\n  T = NT\n  (P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n   \\<lfloor>T\\<rfloor>) =\n  (P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<rfloor>)\n\ngoal (1 subgoal):\n 1. (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)", "by simp"], ["proof (state)\nthis:\n  (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n  (P,h \\<turnstile> v :\\<le> T)\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "case (Class C')"], ["proof (state)\nthis:\n  T = Class C'\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "{"], ["proof (state)\nthis:\n  T = Class C'\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "assume \"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some(Class C')\""], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>", "have \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>", "by (cases v) (auto split:if_split_asm)"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "}"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence 1:\"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some(Class C') \\<Longrightarrow> \n           P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n    \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "{"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "assume type:\"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some NT\"\n    and typenot:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq> Some NT\""], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>NT\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq> \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "have \"\\<forall>C. NT \\<noteq> Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>C. NT \\<noteq> Class C", "by simp"], ["proof (state)\nthis:\n  \\<forall>C. NT \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with type"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>NT\\<rfloor>\n  \\<forall>C. NT \\<noteq> Class C", "have \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some NT\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>NT\\<rfloor>\n  \\<forall>C. NT \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>", "by(fastforce dest:typeof_notclass_heap)"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with typenot"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq> \\<lfloor>NT\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>", "have \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq> \\<lfloor>NT\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq>\n   \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence 2:\"\\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some NT; P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq> Some NT\\<rbrakk> \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq>\n   \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n             \\<lfloor>NT\\<rfloor>;\n     P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq>\n     \\<lfloor>NT\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n                      \\<lfloor>Class C'\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq>\n   \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v \\<noteq>\n   \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "assume \"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C')\""], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with h"], ["proof (chain)\npicking this:\n  h a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>", "have \"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  h a = \\<lfloor>(C, S)\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n    \\<lfloor>Class C'\\<rfloor>", "by (cases v) (auto split:if_split_asm)"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "}"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence 3:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some(Class C') \\<Longrightarrow> \n           P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n    \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n    \\<lfloor>Class C'\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "{"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "assume typenot:\"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v \\<noteq> Some NT\"\n    and type:\"P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some NT\""], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v \\<noteq>\n  \\<lfloor>NT\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "have \"\\<forall>C. NT \\<noteq> Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>C. NT \\<noteq> Class C", "by simp"], ["proof (state)\nthis:\n  \\<forall>C. NT \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with type"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n  \\<forall>C. NT \\<noteq> Class C", "have \"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some NT\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\n  \\<forall>C. NT \\<noteq> Class C\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n    \\<lfloor>NT\\<rfloor>", "by(fastforce dest:typeof_notclass_heap)"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "with typenot"], ["proof (chain)\npicking this:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v \\<noteq>\n  \\<lfloor>NT\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>NT\\<rfloor>", "have \"P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v \\<noteq>\n  \\<lfloor>NT\\<rfloor>\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>NT\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n    \\<lfloor>Class C'\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v =\n  \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub>\n            v \\<noteq>\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto>\n                     (C, S'))\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "hence 4:\"\\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v \\<noteq> Some NT; P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = Some NT\\<rbrakk> \\<Longrightarrow>\n    P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub> v = Some(Class C')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub>\n            v \\<noteq>\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto>\n                     (C, S'))\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub>\n              v \\<noteq>\n             \\<lfloor>NT\\<rfloor>;\n     P \\<turnstile> typeof\\<^bsub>h\\<^esub> v =\n     \\<lfloor>NT\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto>\n                       (C, S'))\\<^esub> v =\n                      \\<lfloor>Class C'\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto> (C, S'))\\<^esub>\n            v \\<noteq>\n           \\<lfloor>NT\\<rfloor>;\n   P \\<turnstile> typeof\\<^bsub>h\\<^esub> v = \\<lfloor>NT\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> typeof\\<^bsub>h(a \\<mapsto>\n                     (C, S'))\\<^esub> v =\n                    \\<lfloor>Class C'\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>x5.\n       T = Class x5 \\<Longrightarrow>\n       (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n       (P,h \\<turnstile> v :\\<le> T)", "from Class"], ["proof (chain)\npicking this:\n  T = Class C'", "show ?thesis"], ["proof (prove)\nusing this:\n  T = Class C'\n\ngoal (1 subgoal):\n 1. (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n    (P,h \\<turnstile> v :\\<le> T)", "by (auto intro:1 2 3 4)"], ["proof (state)\nthis:\n  (P,h(a \\<mapsto> (C, S')) \\<turnstile> v :\\<le> T) =\n  (P,h \\<turnstile> v :\\<le> T)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conf_NT [iff]: \"P,h \\<turnstile> v :\\<le> NT = (v = Null)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h \\<turnstile> v :\\<le> NT) = (v = Null)", "by fastforce"], ["", "subsection\\<open>Value list conformance \\<open>[:\\<le>]\\<close>\\<close>"], ["", "lemma confs_rev: \"P,h \\<turnstile> rev s [:\\<le>] t = (P,h \\<turnstile> s [:\\<le>] rev t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h \\<turnstile> rev s [:\\<le>] t) =\n    (P,h \\<turnstile> s [:\\<le>] rev t)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,h \\<turnstile> rev s [:\\<le>] t \\<Longrightarrow>\n    P,h \\<turnstile> s [:\\<le>] rev t\n 2. P,h \\<turnstile> s [:\\<le>] rev t \\<Longrightarrow>\n    P,h \\<turnstile> rev s [:\\<le>] t", "apply (rule subst [OF list_all2_rev])"], ["proof (prove)\ngoal (2 subgoals):\n 1. P,h \\<turnstile> rev s [:\\<le>] t \\<Longrightarrow>\n    P,h \\<turnstile> rev s [:\\<le>] rev (rev t)\n 2. P,h \\<turnstile> s [:\\<le>] rev t \\<Longrightarrow>\n    P,h \\<turnstile> rev s [:\\<le>] t", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> s [:\\<le>] rev t \\<Longrightarrow>\n    P,h \\<turnstile> rev s [:\\<le>] t", "apply (rule subst [OF list_all2_rev])"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> s [:\\<le>] rev t \\<Longrightarrow>\n    P,h \\<turnstile> rev (rev s) [:\\<le>] rev t", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma confs_Cons2: \"P,h \\<turnstile> xs [:\\<le>] y#ys = (\\<exists>z zs. xs = z#zs \\<and> P,h \\<turnstile> z :\\<le> y \\<and> P,h \\<turnstile> zs [:\\<le>] ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h \\<turnstile> xs [:\\<le>] y # ys) =\n    (\\<exists>z zs.\n        xs = z # zs \\<and>\n        P,h \\<turnstile> z :\\<le> y \\<and> P,h \\<turnstile> zs [:\\<le>] ys)", "by (rule list_all2_Cons2)"], ["", "subsection\\<open>Field conformance \\<open>(:\\<le>)\\<close>\\<close>"], ["", "lemma fconf_init_fields: \n\"class P C = Some(Bs,fs,ms) \\<Longrightarrow> P,h \\<turnstile> init_class_fieldmap P C (:\\<le>) map_of fs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<Longrightarrow>\n    P,h \\<turnstile> init_class_fieldmap P C (:\\<le>) map_of fs", "apply(unfold fconf_def init_class_fieldmap_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<Longrightarrow>\n    \\<forall>FD T.\n       map_of fs FD = \\<lfloor>T\\<rfloor> \\<longrightarrow>\n       (\\<exists>v.\n           map_of\n            (map (\\<lambda>(F, T). (F, default_val T))\n              (fst (snd (the (class P C)))))\n            FD =\n           \\<lfloor>v\\<rfloor> \\<and>\n           P,h \\<turnstile> v :\\<le> T)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>v.\n                            map_of\n                             (map (\\<lambda>(F, T). (F, default_val T)) fs)\n                             FD =\n                            \\<lfloor>v\\<rfloor> \\<and>\n                            P,h \\<turnstile> v :\\<le> T", "apply (rule exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> map_of\n                          (map (\\<lambda>(F, T). (F, default_val T)) fs)\n                          FD =\n                         \\<lfloor>?v6 FD T\\<rfloor> \\<and>\n                         P,h \\<turnstile> ?v6 FD T :\\<le> T", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> map_of\n                          (map (\\<lambda>(F, T). (F, default_val T)) fs)\n                          FD =\n                         \\<lfloor>?v6 FD T\\<rfloor>\n 2. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> ?v6 FD T :\\<le> T", "apply (simp add:map_of_map)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T", "apply(case_tac T)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>; T = Void\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T\n 2. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>; T = Boolean\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T\n 3. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>; T = Integer\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T\n 4. \\<And>FD T.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>; T = NT\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T\n 5. \\<And>FD T x5.\n       \\<lbrakk>class P C = \\<lfloor>(Bs, fs, ms)\\<rfloor>;\n        map_of fs FD = \\<lfloor>T\\<rfloor>; T = Class x5\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> default_val T :\\<le> T", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection\\<open>Heap conformance\\<close>"], ["", "lemma hconfD: \"\\<lbrakk> P \\<turnstile> h \\<surd>; h a = Some obj \\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> obj \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> h \\<surd>; h a = \\<lfloor>obj\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> obj \\<surd>", "apply (unfold hconf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>a obj.\n                 h a = \\<lfloor>obj\\<rfloor> \\<longrightarrow>\n                 P,h \\<turnstile> obj \\<surd>) \\<and>\n             preallocated h;\n     h a = \\<lfloor>obj\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> obj \\<surd>", "apply (fast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma hconf_Subobjs: \n\"\\<lbrakk>h a = Some(C,S); (Cs, fs) \\<in> S; P \\<turnstile> h \\<surd>\\<rbrakk> \\<Longrightarrow> Subobjs P C Cs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     P \\<turnstile> h \\<surd>\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply (unfold hconf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     (\\<forall>a obj.\n         h a = \\<lfloor>obj\\<rfloor> \\<longrightarrow>\n         P,h \\<turnstile> obj \\<surd>) \\<and>\n     preallocated h\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     \\<forall>a aa b.\n        h a = \\<lfloor>(aa, b)\\<rfloor> \\<longrightarrow>\n        P,h \\<turnstile> (aa, b) \\<surd>;\n     preallocated h\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply (erule_tac x=\"a\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     preallocated h;\n     \\<forall>aa b.\n        h a = \\<lfloor>(aa, b)\\<rfloor> \\<longrightarrow>\n        P,h \\<turnstile> (aa, b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply (erule_tac x=\"C\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     preallocated h;\n     \\<forall>b.\n        h a = \\<lfloor>(C, b)\\<rfloor> \\<longrightarrow>\n        P,h \\<turnstile> (C, b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply (erule_tac x=\"S\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     preallocated h;\n     h a = \\<lfloor>(C, S)\\<rfloor> \\<longrightarrow>\n     P,h \\<turnstile> (C, S) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     preallocated h; P,h \\<turnstile> (C, S) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply (unfold oconf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h a = \\<lfloor>(C, S)\\<rfloor>; (Cs, fs) \\<in> S;\n     preallocated h;\n     let (C, S) = (C, S)\n     in (\\<forall>Cs.\n            Subobjs P C Cs \\<longrightarrow>\n            (\\<exists>!fs'. (Cs, fs') \\<in> S)) \\<and>\n        (\\<forall>Cs fs'.\n            (Cs, fs') \\<in> S \\<longrightarrow>\n            Subobjs P C Cs \\<and>\n            (\\<exists>fs Bs ms.\n                class P (last Cs) = \\<lfloor>(Bs, fs, ms)\\<rfloor> \\<and>\n                P,h \\<turnstile> fs' (:\\<le>) map_of fs))\\<rbrakk>\n    \\<Longrightarrow> Subobjs P C Cs", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Local variable conformance\\<close>"], ["", "lemma lconf_upd:\n  \"\\<lbrakk> P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P,h \\<turnstile> v :\\<le> T; E V = Some T \\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> l(V\\<mapsto>v) (:\\<le>)\\<^sub>w E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n     P,h \\<turnstile> v :\\<le> T; E V = \\<lfloor>T\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>)\\<^sub>w E", "apply (unfold lconf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>V v.\n                l V = \\<lfloor>v\\<rfloor> \\<longrightarrow>\n                (\\<exists>T.\n                    E V = \\<lfloor>T\\<rfloor> \\<and>\n                    P,h \\<turnstile> v :\\<le> T);\n     P,h \\<turnstile> v :\\<le> T; E V = \\<lfloor>T\\<rfloor>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>Va va.\n                         (l(V \\<mapsto> v)) Va =\n                         \\<lfloor>va\\<rfloor> \\<longrightarrow>\n                         (\\<exists>T.\n                             E Va = \\<lfloor>T\\<rfloor> \\<and>\n                             P,h \\<turnstile> va :\\<le> T)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma lconf_empty[iff]: \"P,h \\<turnstile> Map.empty (:\\<le>)\\<^sub>w E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> Map.empty (:\\<le>)\\<^sub>w E", "by(simp add:lconf_def)"], ["", "lemma lconf_upd2: \"\\<lbrakk>P,h \\<turnstile> l (:\\<le>)\\<^sub>w E; P,h \\<turnstile> v :\\<le> T\\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> l(V\\<mapsto>v) (:\\<le>)\\<^sub>w E(V\\<mapsto>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> l (:\\<le>)\\<^sub>w E;\n     P,h \\<turnstile> v :\\<le> T\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>)\\<^sub>w E\n                      (V \\<mapsto> T)", "by(simp add:lconf_def)"], ["", "subsection\\<open>Environment conformance\\<close>"], ["", "definition envconf :: \"prog \\<Rightarrow> env \\<Rightarrow> bool\" (\"_ \\<turnstile> _ \\<surd>\" [51,51] 50) where\n  \"P \\<turnstile> E \\<surd> \\<equiv> \\<forall>V T. E V = Some T \\<longrightarrow> is_type P T\""], ["", "subsection\\<open>Type conformance\\<close>"], ["", "primrec\n  type_conf :: \"prog \\<Rightarrow> env \\<Rightarrow> heap \\<Rightarrow> expr \\<Rightarrow> ty \\<Rightarrow> bool\"\n    (\"_,_,_ \\<turnstile> _ :\\<^bsub>NT\\<^esub> _\" [51,51,51]50) \nwhere\n  type_conf_Void:      \"P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> Void    \\<longleftrightarrow> (P,E,h \\<turnstile> e : Void)\"\n  | type_conf_Boolean: \"P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> Boolean \\<longleftrightarrow> (P,E,h \\<turnstile> e : Boolean)\"\n  | type_conf_Integer: \"P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> Integer \\<longleftrightarrow> (P,E,h \\<turnstile> e : Integer)\"\n  | type_conf_NT:      \"P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> NT      \\<longleftrightarrow> (P,E,h \\<turnstile> e : NT)\"\n  | type_conf_Class:   \"P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> Class C \\<longleftrightarrow> \n                             (P,E,h \\<turnstile> e : Class C \\<or> P,E,h \\<turnstile> e : NT)\""], ["", "fun\n  types_conf :: \"prog \\<Rightarrow> env \\<Rightarrow> heap \\<Rightarrow> expr list \\<Rightarrow> ty list \\<Rightarrow> bool\" \n    (\"_,_,_ \\<turnstile> _ [:]\\<^bsub>NT\\<^esub> _\"   [51,51,51]50)\nwhere\n  \"P,E,h \\<turnstile> [] [:]\\<^bsub>NT\\<^esub> [] \\<longleftrightarrow> True\"\n  | \"P,E,h \\<turnstile> (e#es) [:]\\<^bsub>NT\\<^esub> (T#Ts) \\<longleftrightarrow>\n      (P,E,h \\<turnstile> e:\\<^bsub>NT\\<^esub> T \\<and> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts)\"\n  | \"P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts \\<longleftrightarrow> False\""], ["", "lemma wt_same_type_typeconf:\n\"P,E,h \\<turnstile> e : T \\<Longrightarrow> P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e : T \\<Longrightarrow>\n    P,E,h \\<turnstile> e :\\<^bsub>NT\\<^esub> T", "by(cases T) auto"], ["", "lemma wts_same_types_typesconf:\n  \"P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow> types_conf P E h es Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts", "proof(induct Ts arbitrary: es)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>es.\n       P,E,h \\<turnstile> es [:] [] \\<Longrightarrow>\n       P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n 2. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "case Nil"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:] []\n\ngoal (2 subgoals):\n 1. \\<And>es.\n       P,E,h \\<turnstile> es [:] [] \\<Longrightarrow>\n       P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n 2. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] []\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []", "by (auto elim:WTrts.cases)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "case (Cons T' Ts')"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> ?es [:] Ts' \\<Longrightarrow>\n  P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ts'\n  P,E,h \\<turnstile> es [:] T' # Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "have wtes:\"P,E,h \\<turnstile> es [:] T'#Ts'\"\n    and IH:\"\\<And>es. P,E,h \\<turnstile> es [:] Ts' \\<Longrightarrow> types_conf P E h es Ts'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:] T' # Ts' &&&\n    (\\<And>es.\n        P,E,h \\<turnstile> es [:] Ts' \\<Longrightarrow>\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts')", "by fact+"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:] T' # Ts'\n  P,E,h \\<turnstile> ?es [:] Ts' \\<Longrightarrow>\n  P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "from wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:] T' # Ts'", "obtain e' es' where es:\"es = e'#es'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] T' # Ts'\n\ngoal (1 subgoal):\n 1. (\\<And>e' es'. es = e' # es' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases es) auto"], ["proof (state)\nthis:\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "with wtes"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:] T' # Ts'\n  es = e' # es'", "have wte':\"P,E,h \\<turnstile> e' : T'\" and wtes':\"P,E,h \\<turnstile> es' [:] Ts'\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:] T' # Ts'\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e' : T' &&& P,E,h \\<turnstile> es' [:] Ts'", "by simp_all"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' : T'\n  P,E,h \\<turnstile> es' [:] Ts'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts es.\n       \\<lbrakk>\\<And>es.\n                   P,E,h \\<turnstile> es [:] Ts \\<Longrightarrow>\n                   P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts;\n        P,E,h \\<turnstile> es [:] a # Ts\\<rbrakk>\n       \\<Longrightarrow> P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts", "from IH[OF wtes'] wte' es"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n  P,E,h \\<turnstile> e' : T'\n  es = e' # es'", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ts'\n  P,E,h \\<turnstile> e' : T'\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T' # Ts'", "by (fastforce intro:wt_same_type_typeconf)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> T' # Ts'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma types_conf_smaller_types:\n\"\\<And>es Ts. \\<lbrakk>length es = length Ts'; types_conf P E h es Ts'; P \\<turnstile> Ts' [\\<le>] Ts \\<rbrakk> \n  \\<Longrightarrow> \\<exists>Ts''. P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>es Ts.\n       \\<lbrakk>length es = length Ts';\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "proof(induct Ts')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>es Ts.\n       \\<lbrakk>length es = length [];\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> [];\n        P \\<turnstile> [] [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts\n 2. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "case Nil"], ["proof (state)\nthis:\n  length es = length []\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n  P \\<turnstile> [] [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>es Ts.\n       \\<lbrakk>length es = length [];\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> [];\n        P \\<turnstile> [] [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts\n 2. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "thus ?case"], ["proof (prove)\nusing this:\n  length es = length []\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> []\n  P \\<turnstile> [] [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. \\<exists>Ts''.\n       P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts", "by simp"], ["proof (state)\nthis:\n  \\<exists>Ts''.\n     P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "case (Cons S Ss)"], ["proof (state)\nthis:\n  \\<lbrakk>length ?es = length Ss;\n   P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ss;\n   P \\<turnstile> Ss [\\<le>] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts''.\n                       P,E,h \\<turnstile> ?es [:] Ts'' \\<and>\n                       P \\<turnstile> Ts'' [\\<le>] ?Ts\n  length es = length (S # Ss)\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> S # Ss\n  P \\<turnstile> (S # Ss) [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "have length:\"length es = length(S#Ss)\"\n    and types_conf:\"types_conf P E h es (S#Ss)\"\n    and subs:\"P \\<turnstile> (S#Ss) [\\<le>] Ts\"\n    and IH:\"\\<And>es Ts. \\<lbrakk>length es = length Ss; types_conf P E h es Ss; P \\<turnstile> Ss [\\<le>] Ts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Ts''. P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (length es = length (S # Ss) &&&\n     P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> S # Ss) &&&\n    P \\<turnstile> (S # Ss) [\\<le>] Ts &&&\n    (\\<And>es Ts.\n        \\<lbrakk>length es = length Ss;\n         P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ss;\n         P \\<turnstile> Ss [\\<le>] Ts\\<rbrakk>\n        \\<Longrightarrow> \\<exists>Ts''.\n                             P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                             P \\<turnstile> Ts'' [\\<le>] Ts)", "by fact+"], ["proof (state)\nthis:\n  length es = length (S # Ss)\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> S # Ss\n  P \\<turnstile> (S # Ss) [\\<le>] Ts\n  \\<lbrakk>length ?es = length Ss;\n   P,E,h \\<turnstile> ?es [:]\\<^bsub>NT\\<^esub> Ss;\n   P \\<turnstile> Ss [\\<le>] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts''.\n                       P,E,h \\<turnstile> ?es [:] Ts'' \\<and>\n                       P \\<turnstile> Ts'' [\\<le>] ?Ts\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "from subs"], ["proof (chain)\npicking this:\n  P \\<turnstile> (S # Ss) [\\<le>] Ts", "obtain U Us where Ts:\"Ts = U#Us\""], ["proof (prove)\nusing this:\n  P \\<turnstile> (S # Ss) [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases Ts) auto"], ["proof (state)\nthis:\n  Ts = U # Us\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "from length"], ["proof (chain)\npicking this:\n  length es = length (S # Ss)", "obtain e' es' where es:\"es = e'#es'\""], ["proof (prove)\nusing this:\n  length es = length (S # Ss)\n\ngoal (1 subgoal):\n 1. (\\<And>e' es'. es = e' # es' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases es) auto"], ["proof (state)\nthis:\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "with types_conf"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> S # Ss\n  es = e' # es'", "have type:\"P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> S\"\n    and type':\"types_conf P E h es' Ss\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> S # Ss\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> S &&&\n    P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ss", "by simp_all"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> S\n  P,E,h \\<turnstile> es' [:]\\<^bsub>NT\\<^esub> Ss\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "from subs Ts"], ["proof (chain)\npicking this:\n  P \\<turnstile> (S # Ss) [\\<le>] Ts\n  Ts = U # Us", "have subs':\"P \\<turnstile> Ss [\\<le>] Us\" and sub:\"P \\<turnstile> S \\<le> U\""], ["proof (prove)\nusing this:\n  P \\<turnstile> (S # Ss) [\\<le>] Ts\n  Ts = U # Us\n\ngoal (1 subgoal):\n 1. P \\<turnstile> Ss [\\<le>] Us &&& P \\<turnstile> S \\<le> U", "by (simp_all add:fun_of_def)"], ["proof (state)\nthis:\n  P \\<turnstile> Ss [\\<le>] Us\n  P \\<turnstile> S \\<le> U\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "from sub type"], ["proof (chain)\npicking this:\n  P \\<turnstile> S \\<le> U\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> S", "obtain T'' where step:\"P,E,h \\<turnstile> e' : T'' \\<and> P \\<turnstile> T'' \\<le> U\""], ["proof (prove)\nusing this:\n  P \\<turnstile> S \\<le> U\n  P,E,h \\<turnstile> e' :\\<^bsub>NT\\<^esub> S\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        P,E,h \\<turnstile> e' : T'' \\<and>\n        P \\<turnstile> T'' \\<le> U \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(cases S,auto,cases U,auto)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' : T'' \\<and> P \\<turnstile> T'' \\<le> U\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "from length es"], ["proof (chain)\npicking this:\n  length es = length (S # Ss)\n  es = e' # es'", "have \"length es' = length Ss\""], ["proof (prove)\nusing this:\n  length es = length (S # Ss)\n  es = e' # es'\n\ngoal (1 subgoal):\n 1. length es' = length Ss", "by simp"], ["proof (state)\nthis:\n  length es' = length Ss\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "from IH[OF this type' subs']"], ["proof (chain)\npicking this:\n  \\<exists>Ts''.\n     P,E,h \\<turnstile> es' [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Us", "obtain Ts'' \n    where \"P,E,h \\<turnstile> es' [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Us\""], ["proof (prove)\nusing this:\n  \\<exists>Ts''.\n     P,E,h \\<turnstile> es' [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. (\\<And>Ts''.\n        P,E,h \\<turnstile> es' [:] Ts'' \\<and>\n        P \\<turnstile> Ts'' [\\<le>] Us \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> es' [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "with step"], ["proof (chain)\npicking this:\n  P,E,h \\<turnstile> e' : T'' \\<and> P \\<turnstile> T'' \\<le> U\n  P,E,h \\<turnstile> es' [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Us", "have \"P,E,h \\<turnstile> (e'#es') [:] (T''#Ts'') \\<and> P \\<turnstile> (T''#Ts'') [\\<le>] (U#Us)\""], ["proof (prove)\nusing this:\n  P,E,h \\<turnstile> e' : T'' \\<and> P \\<turnstile> T'' \\<le> U\n  P,E,h \\<turnstile> es' [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. P,E,h \\<turnstile> e' # es' [:] T'' # Ts'' \\<and>\n    P \\<turnstile> (T'' # Ts'') [\\<le>] (U # Us)", "by (auto simp:fun_of_def)"], ["proof (state)\nthis:\n  P,E,h \\<turnstile> e' # es' [:] T'' # Ts'' \\<and>\n  P \\<turnstile> (T'' # Ts'') [\\<le>] (U # Us)\n\ngoal (1 subgoal):\n 1. \\<And>a Ts' es Ts.\n       \\<lbrakk>\\<And>es Ts.\n                   \\<lbrakk>length es = length Ts';\n                    P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> Ts';\n                    P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>Ts''.\n  P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts;\n        length es = length (a # Ts');\n        P,E,h \\<turnstile> es [:]\\<^bsub>NT\\<^esub> a # Ts';\n        P \\<turnstile> (a # Ts') [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ts''.\n                            P,E,h \\<turnstile> es [:] Ts'' \\<and>\n                            P \\<turnstile> Ts'' [\\<le>] Ts", "with es Ts"], ["proof (chain)\npicking this:\n  es = e' # es'\n  Ts = U # Us\n  P,E,h \\<turnstile> e' # es' [:] T'' # Ts'' \\<and>\n  P \\<turnstile> (T'' # Ts'') [\\<le>] (U # Us)", "show ?case"], ["proof (prove)\nusing this:\n  es = e' # es'\n  Ts = U # Us\n  P,E,h \\<turnstile> e' # es' [:] T'' # Ts'' \\<and>\n  P \\<turnstile> (T'' # Ts'') [\\<le>] (U # Us)\n\ngoal (1 subgoal):\n 1. \\<exists>Ts''.\n       P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts", "by blast"], ["proof (state)\nthis:\n  \\<exists>Ts''.\n     P,E,h \\<turnstile> es [:] Ts'' \\<and> P \\<turnstile> Ts'' [\\<le>] Ts\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}