{"file_name": "/home/qj213/afp-2021-10-22/thys/CoreC++/CWellForm.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CoreC++", "problem_names": ["lemma wf_C_mdecl[simp]:\n  \"wf_C_mdecl P C (M,Ts,T,pns,body) \\<equiv>\n  (length Ts = length pns \\<and>\n  distinct pns \\<and>\n  this \\<notin> set pns \\<and>\n  P,[this\\<mapsto>Class C,pns[\\<mapsto>]Ts] \\<turnstile> body :: T \\<and>\n  \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>)\"", "lemma wf_C_prog_wf_C_mdecl:\n  \"\\<lbrakk> wf_C_prog P; (C,Bs,fs,ms) \\<in> set P; m \\<in> set ms \\<rbrakk>\n  \\<Longrightarrow> wf_C_mdecl P C m\"", "lemma wf_mdecl_wwf_mdecl: \"wf_C_mdecl P C Md \\<Longrightarrow> wwf_mdecl P C Md\"", "lemma wf_prog_wwf_prog: \"wf_C_prog P \\<Longrightarrow> wwf_prog P\""], "translations": [["", "lemma wf_C_mdecl[simp]:\n  \"wf_C_mdecl P C (M,Ts,T,pns,body) \\<equiv>\n  (length Ts = length pns \\<and>\n  distinct pns \\<and>\n  this \\<notin> set pns \\<and>\n  P,[this\\<mapsto>Class C,pns[\\<mapsto>]Ts] \\<turnstile> body :: T \\<and>\n  \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_C_mdecl P C (M, Ts, T, pns, body) \\<equiv>\n    length Ts = length pns \\<and>\n    distinct pns \\<and>\n    this \\<notin> set pns \\<and>\n    P,[this \\<mapsto> Class C, pns [\\<mapsto>]\n       Ts] \\<turnstile> body :: T \\<and>\n    \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>", "by(simp add:wf_C_mdecl_def)"], ["", "abbreviation\n  wf_C_prog :: \"prog \\<Rightarrow> bool\" where\n  \"wf_C_prog ==  wf_prog wf_C_mdecl\""], ["", "lemma wf_C_prog_wf_C_mdecl:\n  \"\\<lbrakk> wf_C_prog P; (C,Bs,fs,ms) \\<in> set P; m \\<in> set ms \\<rbrakk>\n  \\<Longrightarrow> wf_C_mdecl P C m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_C_prog P; (C, Bs, fs, ms) \\<in> set P;\n     m \\<in> set ms\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (simp add: wf_prog_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_syscls P \\<and>\n             distinct_fst P \\<and>\n             (\\<forall>c\\<in>set P. wf_cdecl wf_C_mdecl P c);\n     (C, Bs, fs, ms) \\<in> set P; m \\<in> set ms\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (simp add: wf_cdecl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_syscls P \\<and>\n             distinct_fst P \\<and>\n             (\\<forall>c\\<in>set P.\n                 case c of\n                 (C, ab) \\<Rightarrow>\n                   (\\<forall>M a aa aaa b Cs.\n                       P \\<turnstile> C has M = (a, aa, aaa,\n           b) via Cs \\<longrightarrow>\n                       (\\<exists>a aa aaa b.\n                           Ex (FinalOverriderMethodDef P (C, Cs) M\n                                (a, aa, aaa, b)))) \\<and>\n                   (case ab of\n                    (Bs, fs, ms) \\<Rightarrow>\n                      Ball (set fs) (wf_fdecl P) \\<and>\n                      distinct_fst fs \\<and>\n                      Ball (set ms) (wf_mdecl wf_C_mdecl P C) \\<and>\n                      distinct_fst ms \\<and>\n                      (\\<forall>D\\<in>baseClasses Bs.\n                          is_class P D \\<and>\n                          (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n                          (\\<forall>(M, Ts, T, m)\\<in>set ms.\n                              \\<forall>Ts' T'.\n                                 (\\<exists>a b.\n                                     Ex\n(HasMethodDef P D M (Ts', T', a, b))) \\<longrightarrow>\n                                 Ts' = Ts \\<and>\n                                 P \\<turnstile> T \\<le> T'))));\n     (C, Bs, fs, ms) \\<in> set P; m \\<in> set ms\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, Bs, fs, ms) \\<in> set P; m \\<in> set ms; wf_syscls P;\n     distinct_fst P;\n     \\<forall>c\\<in>set P.\n        case c of\n        (C, ab) \\<Rightarrow>\n          (\\<forall>M a aa aaa b Cs.\n              P \\<turnstile> C has M = (a, aa, aaa,\n  b) via Cs \\<longrightarrow>\n              (\\<exists>a aa aaa b.\n                  Ex (FinalOverriderMethodDef P (C, Cs) M\n                       (a, aa, aaa, b)))) \\<and>\n          (case ab of\n           (Bs, fs, ms) \\<Rightarrow>\n             Ball (set fs) (wf_fdecl P) \\<and>\n             distinct_fst fs \\<and>\n             Ball (set ms) (wf_mdecl wf_C_mdecl P C) \\<and>\n             distinct_fst ms \\<and>\n             (\\<forall>D\\<in>baseClasses Bs.\n                 is_class P D \\<and>\n                 (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n                 (\\<forall>(M, Ts, T, m)\\<in>set ms.\n                     \\<forall>Ts' T'.\n                        (\\<exists>a b.\n                            Ex (HasMethodDef P D M\n                                 (Ts', T', a, b))) \\<longrightarrow>\n                        Ts' = Ts \\<and>\n                        P \\<turnstile> T \\<le> T')))\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, Bs, fs, ms) \\<in> set P; m \\<in> set ms; wf_syscls P;\n     distinct_fst P;\n     case (C, Bs, fs, ms) of\n     (C, ab) \\<Rightarrow>\n       (\\<forall>M a aa aaa b Cs.\n           P \\<turnstile> C has M = (a, aa, aaa, b) via Cs \\<longrightarrow>\n           (\\<exists>a aa aaa b.\n               Ex (FinalOverriderMethodDef P (C, Cs) M\n                    (a, aa, aaa, b)))) \\<and>\n       (case ab of\n        (Bs, fs, ms) \\<Rightarrow>\n          Ball (set fs) (wf_fdecl P) \\<and>\n          distinct_fst fs \\<and>\n          Ball (set ms) (wf_mdecl wf_C_mdecl P C) \\<and>\n          distinct_fst ms \\<and>\n          (\\<forall>D\\<in>baseClasses Bs.\n              is_class P D \\<and>\n              (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n              (\\<forall>(M, Ts, T, m)\\<in>set ms.\n                  \\<forall>Ts' T'.\n                     (\\<exists>a b.\n                         Ex (HasMethodDef P D M\n                              (Ts', T', a, b))) \\<longrightarrow>\n                     Ts' = Ts \\<and> P \\<turnstile> T \\<le> T')))\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, Bs, fs, ms) \\<in> set P; m \\<in> set ms; wf_syscls P;\n     distinct_fst P;\n     (\\<forall>M a aa aaa b Cs.\n         P \\<turnstile> C has M = (a, aa, aaa, b) via Cs \\<longrightarrow>\n         (\\<exists>a aa aaa b.\n             Ex (FinalOverriderMethodDef P (C, Cs) M\n                  (a, aa, aaa, b)))) \\<and>\n     (\\<forall>x\\<in>set fs. wf_fdecl P x) \\<and>\n     distinct_fst fs \\<and>\n     (\\<forall>x\\<in>set ms. wf_mdecl wf_C_mdecl P C x) \\<and>\n     distinct_fst ms \\<and>\n     (\\<forall>D\\<in>baseClasses Bs.\n         is_class P D \\<and>\n         (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n         (\\<forall>x\\<in>set ms.\n             case x of\n             (M, Ts, T, m) \\<Rightarrow>\n               \\<forall>Ts' T'.\n                  (\\<exists>a b.\n                      Ex (HasMethodDef P D M\n                           (Ts', T', a, b))) \\<longrightarrow>\n                  Ts' = Ts \\<and> P \\<turnstile> T \\<le> T'))\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, Bs, fs, ms) \\<in> set P; m \\<in> set ms; wf_syscls P;\n     distinct_fst P;\n     \\<forall>M a aa aaa b Cs.\n        P \\<turnstile> C has M = (a, aa, aaa, b) via Cs \\<longrightarrow>\n        (\\<exists>a aa aaa b.\n            Ex (FinalOverriderMethodDef P (C, Cs) M (a, aa, aaa, b)));\n     \\<forall>x\\<in>set fs. wf_fdecl P x; distinct_fst fs;\n     \\<forall>x\\<in>set ms. wf_mdecl wf_C_mdecl P C x; distinct_fst ms;\n     \\<forall>D\\<in>baseClasses Bs.\n        is_class P D \\<and>\n        (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n        (\\<forall>x\\<in>set ms.\n            case x of\n            (M, Ts, T, m) \\<Rightarrow>\n              \\<forall>Ts' T'.\n                 (\\<exists>a b.\n                     Ex (HasMethodDef P D M\n                          (Ts', T', a, b))) \\<longrightarrow>\n                 Ts' = Ts \\<and> P \\<turnstile> T \\<le> T')\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, Bs, fs, ms) \\<in> set P; m \\<in> set ms; wf_syscls P;\n     distinct_fst P;\n     \\<forall>M a aa aaa b Cs.\n        P \\<turnstile> C has M = (a, aa, aaa, b) via Cs \\<longrightarrow>\n        (\\<exists>a aa aaa b.\n            Ex (FinalOverriderMethodDef P (C, Cs) M (a, aa, aaa, b)));\n     \\<forall>x\\<in>set fs. wf_fdecl P x; distinct_fst fs; distinct_fst ms;\n     \\<forall>D\\<in>baseClasses Bs.\n        is_class P D \\<and>\n        (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n        (\\<forall>x\\<in>set ms.\n            case x of\n            (M, Ts, T, m) \\<Rightarrow>\n              \\<forall>Ts' T'.\n                 (\\<exists>a b.\n                     Ex (HasMethodDef P D M\n                          (Ts', T', a, b))) \\<longrightarrow>\n                 Ts' = Ts \\<and> P \\<turnstile> T \\<le> T');\n     wf_mdecl wf_C_mdecl P C m\\<rbrakk>\n    \\<Longrightarrow> wf_C_mdecl P C m", "apply (simp add: wf_mdecl_def split_beta)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wf_mdecl_wwf_mdecl: \"wf_C_mdecl P C Md \\<Longrightarrow> wwf_mdecl P C Md\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_C_mdecl P C Md \\<Longrightarrow> wwf_mdecl P C Md", "by(fastforce simp:wwf_mdecl_def dest!:WT_fv)"], ["", "lemma wf_prog_wwf_prog: \"wf_C_prog P \\<Longrightarrow> wwf_prog P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_C_prog P \\<Longrightarrow> wwf_prog P", "apply(simp add:wf_prog_def wf_cdecl_def wf_mdecl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_syscls P \\<and>\n    distinct_fst P \\<and>\n    (\\<forall>c\\<in>set P.\n        case c of\n        (C, ab) \\<Rightarrow>\n          (\\<forall>M a aa aaa b Cs.\n              P \\<turnstile> C has M = (a, aa, aaa,\n  b) via Cs \\<longrightarrow>\n              (\\<exists>a aa aaa b.\n                  Ex (FinalOverriderMethodDef P (C, Cs) M\n                       (a, aa, aaa, b)))) \\<and>\n          (case ab of\n           (Bs, fs, ms) \\<Rightarrow>\n             Ball (set fs) (wf_fdecl P) \\<and>\n             distinct_fst fs \\<and>\n             (\\<forall>(M, Ts, ab)\\<in>set ms.\n                 Ball (set Ts) (is_type P) \\<and>\n                 (case ab of\n                  (T, mb) \\<Rightarrow>\n                    is_type P T \\<and>\n                    T \\<noteq> NT \\<and>\n                    wf_C_mdecl P C (M, Ts, T, mb))) \\<and>\n             distinct_fst ms \\<and>\n             (\\<forall>D\\<in>baseClasses Bs.\n                 is_class P D \\<and>\n                 (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n                 (\\<forall>(M, Ts, T, m)\\<in>set ms.\n                     \\<forall>Ts' T'.\n                        (\\<exists>a b.\n                            Ex (HasMethodDef P D M\n                                 (Ts', T', a, b))) \\<longrightarrow>\n                        Ts' = Ts \\<and>\n                        P \\<turnstile> T \\<le> T')))) \\<Longrightarrow>\n    \\<forall>(C, ab)\\<in>set P.\n       (\\<forall>M a aa aaa b Cs.\n           P \\<turnstile> C has M = (a, aa, aaa, b) via Cs \\<longrightarrow>\n           (\\<exists>a aa aaa b.\n               Ex (FinalOverriderMethodDef P (C, Cs) M\n                    (a, aa, aaa, b)))) \\<and>\n       (case ab of\n        (Bs, fs, ms) \\<Rightarrow>\n          Ball (set fs) (wf_fdecl P) \\<and>\n          distinct_fst fs \\<and>\n          (\\<forall>(M, Ts, ab)\\<in>set ms.\n              Ball (set Ts) (is_type P) \\<and>\n              (case ab of\n               (T, mb) \\<Rightarrow>\n                 is_type P T \\<and>\n                 T \\<noteq> NT \\<and> wwf_mdecl P C (M, Ts, T, mb))) \\<and>\n          distinct_fst ms \\<and>\n          (\\<forall>D\\<in>baseClasses Bs.\n              is_class P D \\<and>\n              (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n              (\\<forall>(M, Ts, T, m)\\<in>set ms.\n                  \\<forall>Ts' T'.\n                     (\\<exists>a b.\n                         Ex (HasMethodDef P D M\n                              (Ts', T', a, b))) \\<longrightarrow>\n                     Ts' = Ts \\<and> P \\<turnstile> T \\<le> T')))", "apply(fast intro:wf_mdecl_wwf_mdecl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}