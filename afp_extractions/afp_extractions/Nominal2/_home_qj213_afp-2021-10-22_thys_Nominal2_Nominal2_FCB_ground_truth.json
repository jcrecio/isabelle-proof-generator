{"file_name": "/home/qj213/afp-2021-10-22/thys/Nominal2/Nominal2_FCB.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Nominal2", "problem_names": ["lemma Abs_lst1_fcb:\n  fixes x y :: \"'a :: at\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"[[atom x]]lst. T = [[atom y]]lst. S\"\n  and f1: \"\\<lbrakk>x \\<noteq> y; atom y \\<sharp> T; atom x \\<sharp> (y \\<leftrightarrow> x) \\<bullet> T\\<rbrakk> \\<Longrightarrow> atom x \\<sharp> f x T\"\n  and f2: \"\\<lbrakk>x \\<noteq> y; atom y \\<sharp> T; atom x \\<sharp> (y \\<leftrightarrow> x) \\<bullet> T\\<rbrakk> \\<Longrightarrow> atom y \\<sharp> f x T\"\n  and p: \"\\<lbrakk>S = (x \\<leftrightarrow> y) \\<bullet> T; x \\<noteq> y; atom y \\<sharp> T; atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> (f x T) = f y S\"\n  shows \"f x T = f y S\"", "lemma Abs_lst_fcb:\n  fixes xs ys :: \"'a :: fs\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"(Abs_lst (ba xs) T) = (Abs_lst (ba ys) S)\"\n    and f1: \"\\<And>x. x \\<in> set (ba xs) \\<Longrightarrow> x \\<sharp> f xs T\"\n    and f2: \"\\<And>x. \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys); x \\<in> set (ba ys)\\<rbrakk> \\<Longrightarrow> x \\<sharp> f xs T\"\n    and eqv: \"\\<And>p. \\<lbrakk>p \\<bullet> T = S; p \\<bullet> ba xs = ba ys; supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n      \\<Longrightarrow> p \\<bullet> (f xs T) = f ys S\"\n  shows \"f xs T = f ys S\"", "lemma Abs_set_fcb:\n  fixes xs ys :: \"'a :: fs\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"(Abs_set (ba xs) T) = (Abs_set (ba ys) S)\"\n    and f1: \"\\<And>x. x \\<in> ba xs \\<Longrightarrow> x \\<sharp> f xs T\"\n    and f2: \"\\<And>x. \\<lbrakk>supp T - ba xs = supp S - ba ys; x \\<in> ba ys\\<rbrakk> \\<Longrightarrow> x \\<sharp> f xs T\"\n    and eqv: \"\\<And>p. \\<lbrakk>p \\<bullet> T = S; p \\<bullet> ba xs = ba ys; supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk> \\<Longrightarrow> p \\<bullet> (f xs T) = f ys S\"\n  shows \"f xs T = f ys S\"", "lemma Abs_res_fcb:\n  fixes xs ys :: \"('a :: at_base) set\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"(Abs_res (atom ` xs) T) = (Abs_res (atom ` ys) S)\"\n    and f1: \"\\<And>x. x \\<in> atom ` xs \\<Longrightarrow> x \\<in> supp T \\<Longrightarrow> x \\<sharp> f xs T\"\n    and f2: \"\\<And>x. \\<lbrakk>supp T - atom ` xs = supp S - atom ` ys; x \\<in> atom ` ys; x \\<in> supp S\\<rbrakk> \\<Longrightarrow> x \\<sharp> f xs T\"\n    and eqv: \"\\<And>p. \\<lbrakk>p \\<bullet> T = S; supp p \\<subseteq> atom ` xs \\<inter> supp T \\<union> atom ` ys \\<inter> supp S;\n      p \\<bullet> (atom ` xs \\<inter> supp T) = atom ` ys \\<inter> supp S\\<rbrakk> \\<Longrightarrow> p \\<bullet> (f xs T) = f ys S\"\n  shows \"f xs T = f ys S\"", "lemma Abs_set_fcb2:\n  fixes as bs :: \"atom set\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c::fs\"\n  assumes eq: \"[as]set. x = [bs]set. y\"\n  and fin: \"finite as\" \"finite bs\"\n  and fcb1: \"as \\<sharp>* f as x c\"\n  and fresh1: \"as \\<sharp>* c\"\n  and fresh2: \"bs \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f as x c) = f (p \\<bullet> as) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f bs y c) = f (p \\<bullet> bs) (p \\<bullet> y) c\"\n  shows \"f as x c = f bs y c\"", "lemma Abs_res_fcb2:\n  fixes as bs :: \"atom set\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c::fs\"\n  assumes eq: \"[as]res. x = [bs]res. y\"\n  and fin: \"finite as\" \"finite bs\"\n  and fcb1: \"(as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\"\n  and fresh1: \"as \\<sharp>* c\"\n  and fresh2: \"bs \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f (as \\<inter> supp x) x c) = f (p \\<bullet> (as \\<inter> supp x)) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f (bs \\<inter> supp y) y c) = f (p \\<bullet> (bs \\<inter> supp y)) (p \\<bullet> y) c\"\n  shows \"f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c\"", "lemma Abs_lst_fcb2:\n  fixes as bs :: \"atom list\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c::fs\"\n  assumes eq: \"[as]lst. x = [bs]lst. y\"\n  and fcb1: \"(set as) \\<sharp>* f as x c\"\n  and fresh1: \"set as \\<sharp>* c\"\n  and fresh2: \"set bs \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f as x c) = f (p \\<bullet> as) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f bs y c) = f (p \\<bullet> bs) (p \\<bullet> y) c\"\n  shows \"f as x c = f bs y c\"", "lemma Abs_lst1_fcb2:\n  fixes a b :: \"atom\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c :: fs\"\n  assumes e: \"[[a]]lst. x = [[b]]lst. y\"\n  and fcb1: \"a \\<sharp> f a x c\"\n  and fresh: \"{a, b} \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f a x c) = f (p \\<bullet> a) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f b y c) = f (p \\<bullet> b) (p \\<bullet> y) c\"\n  shows \"f a x c = f b y c\"", "lemma Abs_lst1_fcb2':\n  fixes a b :: \"'a::at_base\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c :: fs\"\n  assumes e: \"[[atom a]]lst. x = [[atom b]]lst. y\"\n  and fcb1: \"atom a \\<sharp> f a x c\"\n  and fresh: \"{atom a, atom b} \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f a x c) = f (p \\<bullet> a) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f b y c) = f (p \\<bullet> b) (p \\<bullet> y) c\"\n  shows \"f a x c = f b y c\""], "translations": [["", "lemma Abs_lst1_fcb:\n  fixes x y :: \"'a :: at\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"[[atom x]]lst. T = [[atom y]]lst. S\"\n  and f1: \"\\<lbrakk>x \\<noteq> y; atom y \\<sharp> T; atom x \\<sharp> (y \\<leftrightarrow> x) \\<bullet> T\\<rbrakk> \\<Longrightarrow> atom x \\<sharp> f x T\"\n  and f2: \"\\<lbrakk>x \\<noteq> y; atom y \\<sharp> T; atom x \\<sharp> (y \\<leftrightarrow> x) \\<bullet> T\\<rbrakk> \\<Longrightarrow> atom y \\<sharp> f x T\"\n  and p: \"\\<lbrakk>S = (x \\<leftrightarrow> y) \\<bullet> T; x \\<noteq> y; atom y \\<sharp> T; atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> (f x T) = f y S\"\n  shows \"f x T = f y S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x T = f y S", "using e"], ["proof (prove)\nusing this:\n  [[atom x]]lst. T = [[atom y]]lst. S\n\ngoal (1 subgoal):\n 1. f x T = f y S", "apply(case_tac \"atom x \\<sharp> S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S; atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S\n 2. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(simp add: Abs1_eq_iff')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y \\<and> T = S \\<or>\n             x \\<noteq> y \\<and>\n             (y \\<leftrightarrow> x) \\<bullet> T = S \\<and>\n             atom y \\<sharp> T;\n     atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S\n 2. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(elim conjE disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>atom x \\<sharp> S; x = y; T = S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S\n 2. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S\n 3. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S\n 2. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(rule trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> f x T = ?s6\n 2. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> ?s6 = f y S\n 3. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(rule_tac p=\"(x \\<leftrightarrow> y)\" in supp_perm_eq[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> supp (f x T) \\<sharp>* (x \\<leftrightarrow> y)\n 2. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> f x T = f y S\n 3. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(rule fresh_star_supp_conv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> supp (x \\<leftrightarrow> y) \\<sharp>* f x T\n 2. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> f x T = f y S\n 3. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(simp add: flip_def supp_swap fresh_star_def f1 f2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>atom x \\<sharp> S; x \\<noteq> y;\n     (y \\<leftrightarrow> x) \\<bullet> T = S; atom y \\<sharp> T\\<rbrakk>\n    \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> f x T = f y S\n 2. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(simp add: flip_commute p)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[[atom x]]lst. T = [[atom y]]lst. S;\n     \\<not> atom x \\<sharp> S\\<rbrakk>\n    \\<Longrightarrow> f x T = f y S", "apply(simp add: Abs1_eq_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_lst_fcb:\n  fixes xs ys :: \"'a :: fs\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"(Abs_lst (ba xs) T) = (Abs_lst (ba ys) S)\"\n    and f1: \"\\<And>x. x \\<in> set (ba xs) \\<Longrightarrow> x \\<sharp> f xs T\"\n    and f2: \"\\<And>x. \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys); x \\<in> set (ba ys)\\<rbrakk> \\<Longrightarrow> x \\<sharp> f xs T\"\n    and eqv: \"\\<And>p. \\<lbrakk>p \\<bullet> T = S; p \\<bullet> ba xs = ba ys; supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n      \\<Longrightarrow> p \\<bullet> (f xs T) = f ys S\"\n  shows \"f xs T = f ys S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f xs T = f ys S", "using e"], ["proof (prove)\nusing this:\n  [ba xs]lst. T = [ba ys]lst. S\n\ngoal (1 subgoal):\n 1. f xs T = f ys S", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ba xs]lst. T = [ba ys]lst. S \\<Longrightarrow> f xs T = f ys S", "apply(subst (asm) Abs_eq_iff2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       (ba xs, T) \\<approx>lst (=) supp p (ba ys, S) \\<and>\n       supp p \\<subseteq> set (ba xs) \\<union> set (ba ys) \\<Longrightarrow>\n    f xs T = f ys S", "apply(simp add: alphas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp T - set (ba xs) = supp S - set (ba ys) \\<and>\n    (\\<exists>p.\n        (supp T - set (ba xs)) \\<sharp>* p \\<and>\n        p \\<bullet> T = S \\<and>\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys \\<and>\n        supp p\n        \\<subseteq> set (ba xs) \\<union> set (ba ys)) \\<Longrightarrow>\n    f xs T = f ys S", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> f xs T = f ys S", "apply(rule trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> f xs T = ?s7 p\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> ?s7 p = f ys S", "apply(rule_tac p=\"p\" in supp_perm_eq[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> supp (f xs T) \\<sharp>* p\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule fresh_star_supp_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(drule fresh_star_perm_set_conv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> finite (supp T - set (ba xs))\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule finite_Diff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> finite (supp T)\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule finite_supp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subgoal_tac \"(set (ba xs) \\<union> set (ba ys)) \\<sharp>* f xs T\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs));\n        (set (ba xs) \\<union> set (ba ys)) \\<sharp>* f xs T\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> (set (ba xs) \\<union> set (ba ys)) \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(metis Un_absorb2 fresh_star_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> (set (ba xs) \\<union> set (ba ys)) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subst fresh_star_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> set (ba xs) \\<sharp>* f xs T \\<and>\n                         set (ba ys) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> set (ba xs) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> set (ba ys) \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: fresh_star_def f1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        p \\<bullet> T = S; (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys);\n        supp p \\<sharp>* (supp T - set (ba xs))\\<rbrakk>\n       \\<Longrightarrow> set (ba ys) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: fresh_star_def f2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp T - set (ba xs) = supp S - set (ba ys);\n        (supp T - set (ba xs)) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> set (ba xs) \\<union> set (ba ys)\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: eqv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_set_fcb:\n  fixes xs ys :: \"'a :: fs\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"(Abs_set (ba xs) T) = (Abs_set (ba ys) S)\"\n    and f1: \"\\<And>x. x \\<in> ba xs \\<Longrightarrow> x \\<sharp> f xs T\"\n    and f2: \"\\<And>x. \\<lbrakk>supp T - ba xs = supp S - ba ys; x \\<in> ba ys\\<rbrakk> \\<Longrightarrow> x \\<sharp> f xs T\"\n    and eqv: \"\\<And>p. \\<lbrakk>p \\<bullet> T = S; p \\<bullet> ba xs = ba ys; supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk> \\<Longrightarrow> p \\<bullet> (f xs T) = f ys S\"\n  shows \"f xs T = f ys S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f xs T = f ys S", "using e"], ["proof (prove)\nusing this:\n  [ba xs]set. T = [ba ys]set. S\n\ngoal (1 subgoal):\n 1. f xs T = f ys S", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. [ba xs]set. T = [ba ys]set. S \\<Longrightarrow> f xs T = f ys S", "apply(subst (asm) Abs_eq_iff2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       (ba xs, T) \\<approx>set (=) supp p (ba ys, S) \\<and>\n       supp p \\<subseteq> ba xs \\<union> ba ys \\<Longrightarrow>\n    f xs T = f ys S", "apply(simp add: alphas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp T - ba xs = supp S - ba ys \\<and>\n    (\\<exists>p.\n        (supp T - ba xs) \\<sharp>* p \\<and>\n        p \\<bullet> T = S \\<and>\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys \\<and>\n        supp p \\<subseteq> ba xs \\<union> ba ys) \\<Longrightarrow>\n    f xs T = f ys S", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> f xs T = f ys S", "apply(rule trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> f xs T = ?s7 p\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> ?s7 p = f ys S", "apply(rule_tac p=\"p\" in supp_perm_eq[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> supp (f xs T) \\<sharp>* p\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule fresh_star_supp_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(drule fresh_star_perm_set_conv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> finite (supp T - ba xs)\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule finite_Diff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> finite (supp T)\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule finite_supp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subgoal_tac \"(ba xs \\<union> ba ys) \\<sharp>* f xs T\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs);\n        (ba xs \\<union> ba ys) \\<sharp>* f xs T\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> (ba xs \\<union> ba ys) \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(metis Un_absorb2 fresh_star_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> (ba xs \\<union> ba ys) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subst fresh_star_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> ba xs \\<sharp>* f xs T \\<and>\n                         ba ys \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> ba xs \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> ba ys \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: fresh_star_def f1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys;\n        supp p \\<sharp>* (supp T - ba xs)\\<rbrakk>\n       \\<Longrightarrow> ba ys \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: fresh_star_def f2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp T - ba xs = supp S - ba ys;\n        (supp T - ba xs) \\<sharp>* p; p \\<bullet> T = S;\n        (p \\<bullet> ba) (p \\<bullet> xs) = ba ys;\n        supp p \\<subseteq> ba xs \\<union> ba ys\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: eqv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_res_fcb:\n  fixes xs ys :: \"('a :: at_base) set\"\n    and S T :: \"'b :: fs\"\n  assumes e: \"(Abs_res (atom ` xs) T) = (Abs_res (atom ` ys) S)\"\n    and f1: \"\\<And>x. x \\<in> atom ` xs \\<Longrightarrow> x \\<in> supp T \\<Longrightarrow> x \\<sharp> f xs T\"\n    and f2: \"\\<And>x. \\<lbrakk>supp T - atom ` xs = supp S - atom ` ys; x \\<in> atom ` ys; x \\<in> supp S\\<rbrakk> \\<Longrightarrow> x \\<sharp> f xs T\"\n    and eqv: \"\\<And>p. \\<lbrakk>p \\<bullet> T = S; supp p \\<subseteq> atom ` xs \\<inter> supp T \\<union> atom ` ys \\<inter> supp S;\n      p \\<bullet> (atom ` xs \\<inter> supp T) = atom ` ys \\<inter> supp S\\<rbrakk> \\<Longrightarrow> p \\<bullet> (f xs T) = f ys S\"\n  shows \"f xs T = f ys S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f xs T = f ys S", "using e"], ["proof (prove)\nusing this:\n  [atom ` xs]res. T = [atom ` ys]res. S\n\ngoal (1 subgoal):\n 1. f xs T = f ys S", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. [atom ` xs]res. T = [atom ` ys]res. S \\<Longrightarrow> f xs T = f ys S", "apply(subst (asm) Abs_eq_res_set)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [atom ` xs \\<inter> supp T]set. T =\n    [atom ` ys \\<inter> supp S]set. S \\<Longrightarrow>\n    f xs T = f ys S", "apply(subst (asm) Abs_eq_iff2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       (atom ` xs \\<inter> supp T,\n        T) \\<approx>set (=) supp p (atom ` ys \\<inter> supp S, S) \\<and>\n       supp p\n       \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                   atom ` ys \\<inter> supp S \\<Longrightarrow>\n    f xs T = f ys S", "apply(simp add: alphas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp T - atom ` xs \\<inter> supp T =\n    supp S - atom ` ys \\<inter> supp S \\<and>\n    (\\<exists>p.\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p \\<and>\n        p \\<bullet> T = S \\<and>\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S \\<and>\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S) \\<Longrightarrow>\n    f xs T = f ys S", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> f xs T = f ys S", "apply(rule trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> f xs T = ?s15 p\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> ?s15 p = f ys S", "apply(rule_tac p=\"p\" in supp_perm_eq[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> supp (f xs T) \\<sharp>* p\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule fresh_star_supp_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(drule fresh_star_perm_set_conv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> finite (supp T - atom ` xs \\<inter> supp T)\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule finite_Diff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> finite (supp T)\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule finite_supp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subgoal_tac \"(atom ` xs \\<inter> supp T \\<union> atom ` ys \\<inter> supp S) \\<sharp>* f xs T\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T);\n        (atom ` xs \\<inter> supp T \\<union>\n         atom ` ys \\<inter> supp S) \\<sharp>* f xs T\\<rbrakk>\n       \\<Longrightarrow> supp p \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> (atom ` xs \\<inter> supp T \\<union>\n                          atom ` ys \\<inter> supp S) \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(metis Un_absorb2 fresh_star_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> (atom ` xs \\<inter> supp T \\<union>\n                          atom ` ys \\<inter> supp S) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subst fresh_star_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> (atom ` xs \\<inter> supp T) \\<sharp>* f xs T \\<and>\n                         (atom ` ys \\<inter> supp S) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> (atom ` xs \\<inter> supp T) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> (atom ` ys \\<inter> supp S) \\<sharp>* f xs T\n 3. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: fresh_star_def f1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> (atom ` ys \\<inter> supp S) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(subgoal_tac \"supp T - atom ` xs = supp S - atom ` ys\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T);\n        supp T - atom ` xs = supp S - atom ` ys\\<rbrakk>\n       \\<Longrightarrow> (atom ` ys \\<inter> supp S) \\<sharp>* f xs T\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> supp T - atom ` xs = supp S - atom ` ys\n 3. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: fresh_star_def f2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S;\n        supp p \\<sharp>* (supp T - atom ` xs \\<inter> supp T)\\<rbrakk>\n       \\<Longrightarrow> supp T - atom ` xs = supp S - atom ` ys\n 2. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp T - atom ` xs \\<inter> supp T =\n                supp S - atom ` ys \\<inter> supp S;\n        (supp T - atom ` xs \\<inter> supp T) \\<sharp>* p; p \\<bullet> T = S;\n        atom ` (p \\<bullet> xs) \\<inter> supp (p \\<bullet> T) =\n        atom ` ys \\<inter> supp S;\n        supp p\n        \\<subseteq> atom ` xs \\<inter> supp T \\<union>\n                    atom ` ys \\<inter> supp S\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> f xs T = f ys S", "apply(simp add: eqv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_set_fcb2:\n  fixes as bs :: \"atom set\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c::fs\"\n  assumes eq: \"[as]set. x = [bs]set. y\"\n  and fin: \"finite as\" \"finite bs\"\n  and fcb1: \"as \\<sharp>* f as x c\"\n  and fresh1: \"as \\<sharp>* c\"\n  and fresh2: \"bs \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f as x c) = f (p \\<bullet> as) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f bs y c) = f (p \\<bullet> bs) (p \\<bullet> y) c\"\n  shows \"f as x c = f bs y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"supp (as, x, c) supports (f as x c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (as, x, c) supports f as x c", "unfolding  supports_def fresh_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<sharp> (as, x, c) \\<and> b \\<sharp> (as, x, c) \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f as x c = f as x c", "by (simp add: fresh_Pair perm1 fresh_star_def supp_swap swap_fresh_fresh)"], ["proof (state)\nthis:\n  supp (as, x, c) supports f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  supp (as, x, c) supports f as x c", "have fin1: \"finite (supp (f as x c))\""], ["proof (prove)\nusing this:\n  supp (as, x, c) supports f as x c\n\ngoal (1 subgoal):\n 1. finite (supp (f as x c))", "using fin"], ["proof (prove)\nusing this:\n  supp (as, x, c) supports f as x c\n  finite as\n  finite bs\n\ngoal (1 subgoal):\n 1. finite (supp (f as x c))", "by (auto intro: supports_finite simp add: finite_supp supp_of_finite_sets supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (f as x c))\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"supp (bs, y, c) supports (f bs y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (bs, y, c) supports f bs y c", "unfolding  supports_def fresh_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<sharp> (bs, y, c) \\<and> b \\<sharp> (bs, y, c) \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f bs y c = f bs y c", "by (simp add: fresh_Pair perm2 fresh_star_def supp_swap swap_fresh_fresh)"], ["proof (state)\nthis:\n  supp (bs, y, c) supports f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  supp (bs, y, c) supports f bs y c", "have fin2: \"finite (supp (f bs y c))\""], ["proof (prove)\nusing this:\n  supp (bs, y, c) supports f bs y c\n\ngoal (1 subgoal):\n 1. finite (supp (f bs y c))", "using fin"], ["proof (prove)\nusing this:\n  supp (bs, y, c) supports f bs y c\n  finite as\n  finite bs\n\ngoal (1 subgoal):\n 1. finite (supp (f bs y c))", "by (auto intro: supports_finite simp add: finite_supp supp_of_finite_sets supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (f bs y c))\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "obtain q::\"perm\" where\n    fr1: \"(q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\" and\n    fr2: \"supp q \\<sharp>* ([as]set. x)\" and\n    inc: \"supp q \\<subseteq> as \\<union> (q \\<bullet> as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c);\n         supp q \\<sharp>* ([as]set. x);\n         supp q \\<subseteq> as \\<union> q \\<bullet> as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using at_set_avoiding3[where xs=\"as\" and c=\"(x, c, f as x c, f bs y c)\" and x=\"[as]set. x\"]\n      fin1 fin2 fin"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite as; finite (supp (x, c, f as x c, f bs y c));\n   finite (supp ([as]set. x)); as \\<sharp>* ([as]set. x)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p.\n                       (p \\<bullet> as) \\<sharp>* (x, c, f as x c,\n             f bs y c) \\<and>\n                       supp ([as]set. x) \\<sharp>* p \\<and>\n                       supp p = as \\<union> p \\<bullet> as\n  finite (supp (f as x c))\n  finite (supp (f bs y c))\n  finite as\n  finite bs\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c);\n         supp q \\<sharp>* ([as]set. x);\n         supp q \\<subseteq> as \\<union> q \\<bullet> as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: supp_Pair finite_supp Abs_fresh_star dest: fresh_star_supp_conv)"], ["proof (state)\nthis:\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n  supp q \\<sharp>* ([as]set. x)\n  supp q \\<subseteq> as \\<union> q \\<bullet> as\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"[q \\<bullet> as]set. (q \\<bullet> x) = q \\<bullet> ([as]set. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [q \\<bullet> as]set. q \\<bullet> x = q \\<bullet> ([as]set. x)", "by simp"], ["proof (state)\nthis:\n  [q \\<bullet> as]set. q \\<bullet> x = q \\<bullet> ([as]set. x)\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  [q \\<bullet> as]set. q \\<bullet> x = q \\<bullet> ([as]set. x)\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = [as]set. x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<bullet> ([as]set. x) = [as]set. x", "by (simp only: fr2 perm_supp_eq)"], ["proof (state)\nthis:\n  q \\<bullet> ([as]set. x) = [as]set. x\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "finally"], ["proof (chain)\npicking this:\n  [q \\<bullet> as]set. q \\<bullet> x = [as]set. x", "have \"[q \\<bullet> as]set. (q \\<bullet> x) = [bs]set. y\""], ["proof (prove)\nusing this:\n  [q \\<bullet> as]set. q \\<bullet> x = [as]set. x\n\ngoal (1 subgoal):\n 1. [q \\<bullet> as]set. q \\<bullet> x = [bs]set. y", "using eq"], ["proof (prove)\nusing this:\n  [q \\<bullet> as]set. q \\<bullet> x = [as]set. x\n  [as]set. x = [bs]set. y\n\ngoal (1 subgoal):\n 1. [q \\<bullet> as]set. q \\<bullet> x = [bs]set. y", "by simp"], ["proof (state)\nthis:\n  [q \\<bullet> as]set. q \\<bullet> x = [bs]set. y\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  [q \\<bullet> as]set. q \\<bullet> x = [bs]set. y", "obtain r::perm where\n    qq1: \"q \\<bullet> x = r \\<bullet> y\" and\n    qq2: \"q \\<bullet> as = r \\<bullet> bs\" and\n    qq3: \"supp r \\<subseteq> (q \\<bullet> as) \\<union> bs\""], ["proof (prove)\nusing this:\n  [q \\<bullet> as]set. q \\<bullet> x = [bs]set. y\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n         q \\<bullet> as = r \\<bullet> bs;\n         supp r \\<subseteq> q \\<bullet> as \\<union> bs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r.\n                \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                 q \\<bullet> as = r \\<bullet> bs;\n                 supp r \\<subseteq> q \\<bullet> as \\<union> bs\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     [bs]set. y = [q \\<bullet> as]set. q \\<bullet> x\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(simp only: Abs_eq_iff2 alphas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r.\n                \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                 q \\<bullet> as = r \\<bullet> bs;\n                 supp r \\<subseteq> r \\<bullet> bs \\<union> bs\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>p.\n        (supp y - bs = supp (q \\<bullet> x) - q \\<bullet> as \\<and>\n         (supp y - bs) \\<sharp>* p \\<and>\n         p \\<bullet> y = q \\<bullet> x \\<and>\n         p \\<bullet> bs = q \\<bullet> as) \\<and>\n        supp p \\<subseteq> bs \\<union> q \\<bullet> as\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                    q \\<bullet> as = r \\<bullet> bs;\n                    supp r \\<subseteq> r \\<bullet> bs \\<union> bs\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (supp y - bs = supp (q \\<bullet> x) - q \\<bullet> as \\<and>\n         (supp y - bs) \\<sharp>* p \\<and>\n         p \\<bullet> y = q \\<bullet> x \\<and>\n         p \\<bullet> bs = q \\<bullet> as) \\<and>\n        supp p \\<subseteq> bs \\<union> q \\<bullet> as\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                    q \\<bullet> as = r \\<bullet> bs;\n                    supp r \\<subseteq> r \\<bullet> bs \\<union> bs\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        supp p \\<subseteq> bs \\<union> q \\<bullet> as;\n        supp y - bs = supp (q \\<bullet> x) - q \\<bullet> as;\n        (supp y - bs) \\<sharp>* p; p \\<bullet> y = q \\<bullet> x;\n        p \\<bullet> bs = q \\<bullet> as\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(drule_tac x=\"p\" in meta_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp p \\<subseteq> bs \\<union> q \\<bullet> as;\n        supp y - bs = supp (q \\<bullet> x) - q \\<bullet> as;\n        (supp y - bs) \\<sharp>* p; p \\<bullet> y = q \\<bullet> x;\n        p \\<bullet> bs = q \\<bullet> as;\n        \\<lbrakk>q \\<bullet> x = p \\<bullet> y;\n         q \\<bullet> as = p \\<bullet> bs;\n         supp p \\<subseteq> p \\<bullet> bs \\<union> bs\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(simp add: set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp p \\<subseteq> bs \\<union> q \\<bullet> as;\n        supp y - bs = supp (q \\<bullet> x) - q \\<bullet> as;\n        (supp (q \\<bullet> x) - q \\<bullet> as) \\<sharp>* p;\n        p \\<bullet> y = q \\<bullet> x; p \\<bullet> bs = q \\<bullet> as;\n        supp p \\<subseteq> q \\<bullet> as \\<union> bs \\<Longrightarrow>\n        thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as = r \\<bullet> bs\n  supp r \\<subseteq> q \\<bullet> as \\<union> bs\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"as \\<sharp>* f as x c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. as \\<sharp>* f as x c", "by (rule fcb1)"], ["proof (state)\nthis:\n  as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  as \\<sharp>* f as x c", "have \"q \\<bullet> (as \\<sharp>* f as x c)\""], ["proof (prove)\nusing this:\n  as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. q \\<bullet> as \\<sharp>* f as x c", "by (simp add: permute_bool_def)"], ["proof (state)\nthis:\n  q \\<bullet> as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  q \\<bullet> as \\<sharp>* f as x c", "have \"(q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\""], ["proof (prove)\nusing this:\n  q \\<bullet> as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "apply(simp only: fresh_star_eqvt set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (q \\<bullet> as) \\<sharp>* (q \\<bullet> f as x c) \\<Longrightarrow>\n    (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "apply(subst (asm) perm1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. supp q \\<sharp>* c\n 2. (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x)\n                                c \\<Longrightarrow>\n    (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "using inc fresh1 fr1"], ["proof (prove)\nusing this:\n  supp q \\<subseteq> as \\<union> q \\<bullet> as\n  as \\<sharp>* c\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (2 subgoals):\n 1. supp q \\<sharp>* c\n 2. (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x)\n                                c \\<Longrightarrow>\n    (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "apply(auto simp add: fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "have \"(r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c\""], ["proof (prove)\nusing this:\n  (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c", "using qq1 qq2"], ["proof (prove)\nusing this:\n  (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as = r \\<bullet> bs\n\ngoal (1 subgoal):\n 1. (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c", "by simp"], ["proof (state)\nthis:\n  (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c", "have \"r \\<bullet> (bs \\<sharp>* f bs y c)\""], ["proof (prove)\nusing this:\n  (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. r \\<bullet> bs \\<sharp>* f bs y c", "apply(simp only: fresh_star_eqvt set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y)\n                                c \\<Longrightarrow>\n    (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c)", "apply(subst (asm) perm2[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. supp r \\<sharp>* c\n 2. (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c) \\<Longrightarrow>\n    (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c)", "using qq3 fresh2 fr1"], ["proof (prove)\nusing this:\n  supp r \\<subseteq> q \\<bullet> as \\<union> bs\n  bs \\<sharp>* c\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (2 subgoals):\n 1. supp r \\<sharp>* c\n 2. (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c) \\<Longrightarrow>\n    (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c)", "apply(auto simp add: set_eqvt fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  r \\<bullet> bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  r \\<bullet> bs \\<sharp>* f bs y c", "have fcb2: \"bs \\<sharp>* f bs y c\""], ["proof (prove)\nusing this:\n  r \\<bullet> bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. bs \\<sharp>* f bs y c", "by (simp add: permute_bool_def)"], ["proof (state)\nthis:\n  bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"f as x c = q \\<bullet> (f as x c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f as x c = q \\<bullet> f as x c", "apply(rule perm_supp_eq[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<sharp>* f as x c", "using inc fcb1 fr1"], ["proof (prove)\nusing this:\n  supp q \\<subseteq> as \\<union> q \\<bullet> as\n  as \\<sharp>* f as x c\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (1 subgoal):\n 1. supp q \\<sharp>* f as x c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  f as x c = q \\<bullet> f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  f as x c = q \\<bullet> f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = f (q \\<bullet> as) (q \\<bullet> x) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<bullet> f as x c = f (q \\<bullet> as) (q \\<bullet> x) c", "apply(rule perm1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<sharp>* c", "using inc fresh1 fr1"], ["proof (prove)\nusing this:\n  supp q \\<subseteq> as \\<union> q \\<bullet> as\n  as \\<sharp>* c\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (1 subgoal):\n 1. supp q \\<sharp>* c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  q \\<bullet> f as x c = f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  q \\<bullet> f as x c = f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = f (r \\<bullet> bs) (r \\<bullet> y) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (q \\<bullet> as) (q \\<bullet> x) c =\n    f (r \\<bullet> bs) (r \\<bullet> y) c", "using qq1 qq2"], ["proof (prove)\nusing this:\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as = r \\<bullet> bs\n\ngoal (1 subgoal):\n 1. f (q \\<bullet> as) (q \\<bullet> x) c =\n    f (r \\<bullet> bs) (r \\<bullet> y) c", "by simp"], ["proof (state)\nthis:\n  f (q \\<bullet> as) (q \\<bullet> x) c =\n  f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  f (q \\<bullet> as) (q \\<bullet> x) c =\n  f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = r \\<bullet> (f bs y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (r \\<bullet> bs) (r \\<bullet> y) c = r \\<bullet> f bs y c", "apply(rule perm2[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp r \\<sharp>* c", "using qq3 fresh2 fr1"], ["proof (prove)\nusing this:\n  supp r \\<subseteq> q \\<bullet> as \\<union> bs\n  bs \\<sharp>* c\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (1 subgoal):\n 1. supp r \\<sharp>* c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  f (r \\<bullet> bs) (r \\<bullet> y) c = r \\<bullet> f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  f (r \\<bullet> bs) (r \\<bullet> y) c = r \\<bullet> f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"... = f bs y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<bullet> f bs y c = f bs y c", "apply(rule perm_supp_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp r \\<sharp>* f bs y c", "using qq3 fr1 fcb2"], ["proof (prove)\nusing this:\n  supp r \\<subseteq> q \\<bullet> as \\<union> bs\n  (q \\<bullet> as) \\<sharp>* (x, c, f as x c, f bs y c)\n  bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. supp r \\<sharp>* f bs y c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  r \\<bullet> f bs y c = f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "finally"], ["proof (chain)\npicking this:\n  f as x c = f bs y c", "show ?thesis"], ["proof (prove)\nusing this:\n  f as x c = f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "by simp"], ["proof (state)\nthis:\n  f as x c = f bs y c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Abs_res_fcb2:\n  fixes as bs :: \"atom set\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c::fs\"\n  assumes eq: \"[as]res. x = [bs]res. y\"\n  and fin: \"finite as\" \"finite bs\"\n  and fcb1: \"(as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\"\n  and fresh1: \"as \\<sharp>* c\"\n  and fresh2: \"bs \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f (as \\<inter> supp x) x c) = f (p \\<bullet> (as \\<inter> supp x)) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f (bs \\<inter> supp y) y c) = f (p \\<bullet> (bs \\<inter> supp y)) (p \\<bullet> y) c\"\n  shows \"f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"supp (as, x, c) supports (f (as \\<inter> supp x) x c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (as, x, c) supports f (as \\<inter> supp x) x c", "unfolding  supports_def fresh_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<sharp> (as, x, c) \\<and> b \\<sharp> (as, x, c) \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f (as \\<inter> supp x) x c =\n       f (as \\<inter> supp x) x c", "by (simp add: fresh_Pair perm1 fresh_star_def supp_swap swap_fresh_fresh inter_eqvt supp_eqvt)"], ["proof (state)\nthis:\n  supp (as, x, c) supports f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  supp (as, x, c) supports f (as \\<inter> supp x) x c", "have fin1: \"finite (supp (f (as \\<inter> supp x) x c))\""], ["proof (prove)\nusing this:\n  supp (as, x, c) supports f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. finite (supp (f (as \\<inter> supp x) x c))", "using fin"], ["proof (prove)\nusing this:\n  supp (as, x, c) supports f (as \\<inter> supp x) x c\n  finite as\n  finite bs\n\ngoal (1 subgoal):\n 1. finite (supp (f (as \\<inter> supp x) x c))", "by (auto intro: supports_finite simp add: finite_supp supp_of_finite_sets supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (f (as \\<inter> supp x) x c))\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"supp (bs, y, c) supports (f (bs \\<inter> supp y) y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (bs, y, c) supports f (bs \\<inter> supp y) y c", "unfolding  supports_def fresh_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<sharp> (bs, y, c) \\<and> b \\<sharp> (bs, y, c) \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f (bs \\<inter> supp y) y c =\n       f (bs \\<inter> supp y) y c", "by (simp add: fresh_Pair perm2 fresh_star_def supp_swap swap_fresh_fresh inter_eqvt supp_eqvt)"], ["proof (state)\nthis:\n  supp (bs, y, c) supports f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  supp (bs, y, c) supports f (bs \\<inter> supp y) y c", "have fin2: \"finite (supp (f (bs \\<inter> supp y) y c))\""], ["proof (prove)\nusing this:\n  supp (bs, y, c) supports f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. finite (supp (f (bs \\<inter> supp y) y c))", "using fin"], ["proof (prove)\nusing this:\n  supp (bs, y, c) supports f (bs \\<inter> supp y) y c\n  finite as\n  finite bs\n\ngoal (1 subgoal):\n 1. finite (supp (f (bs \\<inter> supp y) y c))", "by (auto intro: supports_finite simp add: finite_supp supp_of_finite_sets supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (f (bs \\<inter> supp y) y c))\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "obtain q::\"perm\" where\n    fr1: \"(q \\<bullet> (as \\<inter> supp x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c, f (bs \\<inter> supp y) y c)\" and\n    fr2: \"supp q \\<sharp>* ([as \\<inter> supp x]set. x)\" and\n    inc: \"supp q \\<subseteq> (as \\<inter> supp x) \\<union> (q \\<bullet> (as \\<inter> supp x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(q \\<bullet> (as \\<inter>\n                               supp\n                                x)) \\<sharp>* (x, c,\n         f (as \\<inter> supp x) x c, f (bs \\<inter> supp y) y c);\n         supp q \\<sharp>* ([as \\<inter> supp x]set. x);\n         supp q\n         \\<subseteq> as \\<inter> supp x \\<union>\n                     q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using at_set_avoiding3[where xs=\"as \\<inter> supp x\" and c=\"(x, c, f (as \\<inter> supp x) x c, f (bs \\<inter> supp y) y c)\"\n      and x=\"[as \\<inter> supp x]set. x\"]\n      fin1 fin2 fin"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (as \\<inter> supp x);\n   finite\n    (supp (x, c, f (as \\<inter> supp x) x c, f (bs \\<inter> supp y) y c));\n   finite (supp ([as \\<inter> supp x]set. x));\n   (as \\<inter> supp x) \\<sharp>* ([as \\<inter> supp x]set. x)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p.\n                       (p \\<bullet> (as \\<inter>\n                                     supp\nx)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n               f (bs \\<inter> supp y) y c) \\<and>\n                       supp ([as \\<inter> supp x]set. x) \\<sharp>* p \\<and>\n                       supp p =\n                       as \\<inter> supp x \\<union>\n                       p \\<bullet> (as \\<inter> supp x)\n  finite (supp (f (as \\<inter> supp x) x c))\n  finite (supp (f (bs \\<inter> supp y) y c))\n  finite as\n  finite bs\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(q \\<bullet> (as \\<inter>\n                               supp\n                                x)) \\<sharp>* (x, c,\n         f (as \\<inter> supp x) x c, f (bs \\<inter> supp y) y c);\n         supp q \\<sharp>* ([as \\<inter> supp x]set. x);\n         supp q\n         \\<subseteq> as \\<inter> supp x \\<union>\n                     q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply (auto simp add: supp_Pair finite_supp Abs_fresh_star dest: fresh_star_supp_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n  supp q \\<sharp>* ([as \\<inter> supp x]set. x)\n  supp q\n  \\<subseteq> as \\<inter> supp x \\<union> q \\<bullet> (as \\<inter> supp x)\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"[q \\<bullet> (as \\<inter> supp x)]set. (q \\<bullet> x) = q \\<bullet> ([as \\<inter> supp x]set. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n    q \\<bullet> ([as \\<inter> supp x]set. x)", "by simp"], ["proof (state)\nthis:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  q \\<bullet> ([as \\<inter> supp x]set. x)\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "also"], ["proof (state)\nthis:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  q \\<bullet> ([as \\<inter> supp x]set. x)\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"\\<dots> = [as \\<inter> supp x]set. x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<bullet> ([as \\<inter> supp x]set. x) = [as \\<inter> supp x]set. x", "by (simp only: fr2 perm_supp_eq)"], ["proof (state)\nthis:\n  q \\<bullet> ([as \\<inter> supp x]set. x) = [as \\<inter> supp x]set. x\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "finally"], ["proof (chain)\npicking this:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  [as \\<inter> supp x]set. x", "have \"[q \\<bullet> (as \\<inter> supp x)]set. (q \\<bullet> x) = [bs \\<inter> supp y]set. y\""], ["proof (prove)\nusing this:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  [as \\<inter> supp x]set. x\n\ngoal (1 subgoal):\n 1. [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n    [bs \\<inter> supp y]set. y", "using eq"], ["proof (prove)\nusing this:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  [as \\<inter> supp x]set. x\n  [as]res. x = [bs]res. y\n\ngoal (1 subgoal):\n 1. [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n    [bs \\<inter> supp y]set. y", "by(simp add: Abs_eq_res_set)"], ["proof (state)\nthis:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  [bs \\<inter> supp y]set. y\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  [bs \\<inter> supp y]set. y", "obtain r::perm where\n    qq1: \"q \\<bullet> x = r \\<bullet> y\" and\n    qq2: \"(q \\<bullet> as \\<inter> supp (q \\<bullet> x)) = r \\<bullet> (bs \\<inter> supp y)\" and\n    qq3: \"supp r \\<subseteq> (bs \\<inter> supp y) \\<union> q \\<bullet> (as \\<inter> supp x)\""], ["proof (prove)\nusing this:\n  [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x =\n  [bs \\<inter> supp y]set. y\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n         q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n         r \\<bullet> (bs \\<inter> supp y);\n         supp r\n         \\<subseteq> bs \\<inter> supp y \\<union>\n                     q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r.\n                \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                 q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n                 r \\<bullet> (bs \\<inter> supp y);\n                 supp r\n                 \\<subseteq> bs \\<inter> supp y \\<union>\n                             q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     [bs \\<inter> supp y]set. y =\n     [q \\<bullet> (as \\<inter> supp x)]set. q \\<bullet> x\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(simp only: Abs_eq_iff2 alphas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r.\n                \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                 q \\<bullet> as \\<inter> supp (r \\<bullet> y) =\n                 r \\<bullet> (bs \\<inter> supp y);\n                 supp r\n                 \\<subseteq> bs \\<inter> supp y \\<union>\n                             q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>p.\n        (supp y - bs \\<inter> supp y =\n         supp (q \\<bullet> x) - q \\<bullet> (as \\<inter> supp x) \\<and>\n         (supp y - bs \\<inter> supp y) \\<sharp>* p \\<and>\n         p \\<bullet> y = q \\<bullet> x \\<and>\n         p \\<bullet> (bs \\<inter> supp y) =\n         q \\<bullet> (as \\<inter> supp x)) \\<and>\n        supp p\n        \\<subseteq> bs \\<inter> supp y \\<union>\n                    q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                    q \\<bullet> as \\<inter> supp (r \\<bullet> y) =\n                    r \\<bullet> (bs \\<inter> supp y);\n                    supp r\n                    \\<subseteq> bs \\<inter> supp y \\<union>\n                                q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (supp y - bs \\<inter> supp y =\n         supp (q \\<bullet> x) - q \\<bullet> (as \\<inter> supp x) \\<and>\n         (supp y - bs \\<inter> supp y) \\<sharp>* p \\<and>\n         p \\<bullet> y = q \\<bullet> x \\<and>\n         p \\<bullet> (bs \\<inter> supp y) =\n         q \\<bullet> (as \\<inter> supp x)) \\<and>\n        supp p\n        \\<subseteq> bs \\<inter> supp y \\<union>\n                    q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                    q \\<bullet> as \\<inter> supp (r \\<bullet> y) =\n                    r \\<bullet> (bs \\<inter> supp y);\n                    supp r\n                    \\<subseteq> bs \\<inter> supp y \\<union>\n                                q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        supp p\n        \\<subseteq> bs \\<inter> supp y \\<union>\n                    q \\<bullet> (as \\<inter> supp x);\n        supp y - bs \\<inter> supp y =\n        supp (q \\<bullet> x) - q \\<bullet> (as \\<inter> supp x);\n        (supp y - bs \\<inter> supp y) \\<sharp>* p;\n        p \\<bullet> y = q \\<bullet> x;\n        p \\<bullet> (bs \\<inter> supp y) =\n        q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(drule_tac x=\"p\" in meta_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp p\n                \\<subseteq> bs \\<inter> supp y \\<union>\n                            q \\<bullet> (as \\<inter> supp x);\n        supp y - bs \\<inter> supp y =\n        supp (q \\<bullet> x) - q \\<bullet> (as \\<inter> supp x);\n        (supp y - bs \\<inter> supp y) \\<sharp>* p;\n        p \\<bullet> y = q \\<bullet> x;\n        p \\<bullet> (bs \\<inter> supp y) = q \\<bullet> (as \\<inter> supp x);\n        \\<lbrakk>q \\<bullet> x = p \\<bullet> y;\n         q \\<bullet> as \\<inter> supp (p \\<bullet> y) =\n         p \\<bullet> (bs \\<inter> supp y);\n         supp p\n         \\<subseteq> bs \\<inter> supp y \\<union>\n                     q \\<bullet> (as \\<inter> supp x)\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(simp add: set_eqvt inter_eqvt supp_eqvt)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n  r \\<bullet> (bs \\<inter> supp y)\n  supp r\n  \\<subseteq> bs \\<inter> supp y \\<union> q \\<bullet> (as \\<inter> supp x)\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"(as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c", "by (rule fcb1)"], ["proof (state)\nthis:\n  (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c", "have \"q \\<bullet> ((as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c)\""], ["proof (prove)\nusing this:\n  (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. q \\<bullet> (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c", "by (simp add: permute_bool_def)"], ["proof (state)\nthis:\n  q \\<bullet> (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  q \\<bullet> (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c", "have \"(q \\<bullet> (as \\<inter> supp x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c\""], ["proof (prove)\nusing this:\n  q \\<bullet> (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                  (q \\<bullet> x) c", "apply(simp only: fresh_star_eqvt set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* (q \\<bullet> f (as \\<inter> supp x) x\n         c) \\<Longrightarrow>\n    (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                  (q \\<bullet> x) c", "apply(subst (asm) perm1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. supp q \\<sharp>* c\n 2. (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                  (q \\<bullet> x) c \\<Longrightarrow>\n    (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                  (q \\<bullet> x) c", "using inc fresh1 fr1"], ["proof (prove)\nusing this:\n  supp q\n  \\<subseteq> as \\<inter> supp x \\<union> q \\<bullet> (as \\<inter> supp x)\n  as \\<sharp>* c\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n\ngoal (2 subgoals):\n 1. supp q \\<sharp>* c\n 2. (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                  (q \\<bullet> x) c \\<Longrightarrow>\n    (q \\<bullet> (as \\<inter>\n                  supp\n                   x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                  (q \\<bullet> x) c", "apply(auto simp add: fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                (q \\<bullet> x) c", "have \"(r \\<bullet> (bs \\<inter> supp y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c\""], ["proof (prove)\nusing this:\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y))\n                                  (r \\<bullet> y) c", "using qq1 qq2"], ["proof (prove)\nusing this:\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* f (q \\<bullet> (as \\<inter> supp x))\n                                (q \\<bullet> x) c\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n  r \\<bullet> (bs \\<inter> supp y)\n\ngoal (1 subgoal):\n 1. (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y))\n                                  (r \\<bullet> y) c", "apply(perm_simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(q \\<bullet> as \\<inter>\n              supp\n               (q \\<bullet> x)) \\<sharp>* f\n     (q \\<bullet> as \\<inter> supp (q \\<bullet> x)) (q \\<bullet> x) c;\n     q \\<bullet> x = r \\<bullet> y;\n     q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n     r \\<bullet> bs \\<inter> supp (r \\<bullet> y)\\<rbrakk>\n    \\<Longrightarrow> (r \\<bullet> bs \\<inter>\n                       supp\n                        (r \\<bullet> y)) \\<sharp>* f\n              (r \\<bullet> bs \\<inter> supp (r \\<bullet> y)) (r \\<bullet> y)\n              c", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (r \\<bullet> (bs \\<inter>\n                supp\n                 y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y))\n                                (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  (r \\<bullet> (bs \\<inter>\n                supp\n                 y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y))\n                                (r \\<bullet> y) c", "have \"r \\<bullet> ((bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c)\""], ["proof (prove)\nusing this:\n  (r \\<bullet> (bs \\<inter>\n                supp\n                 y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y))\n                                (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. r \\<bullet> (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c", "apply(simp only: fresh_star_eqvt set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* f (r \\<bullet> (bs \\<inter> supp y))\n                                  (r \\<bullet> y) c \\<Longrightarrow>\n    (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* (r \\<bullet> f (bs \\<inter> supp y) y c)", "apply(subst (asm) perm2[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. supp r \\<sharp>* c\n 2. (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* (r \\<bullet> f (bs \\<inter> supp y) y\n         c) \\<Longrightarrow>\n    (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* (r \\<bullet> f (bs \\<inter> supp y) y c)", "using qq3 fresh2 fr1"], ["proof (prove)\nusing this:\n  supp r\n  \\<subseteq> bs \\<inter> supp y \\<union> q \\<bullet> (as \\<inter> supp x)\n  bs \\<sharp>* c\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n\ngoal (2 subgoals):\n 1. supp r \\<sharp>* c\n 2. (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* (r \\<bullet> f (bs \\<inter> supp y) y\n         c) \\<Longrightarrow>\n    (r \\<bullet> (bs \\<inter>\n                  supp\n                   y)) \\<sharp>* (r \\<bullet> f (bs \\<inter> supp y) y c)", "apply(auto simp add: set_eqvt fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  r \\<bullet> (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "then"], ["proof (chain)\npicking this:\n  r \\<bullet> (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c", "have fcb2: \"(bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c\""], ["proof (prove)\nusing this:\n  r \\<bullet> (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c", "by (simp add: permute_bool_def)"], ["proof (state)\nthis:\n  (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"f (as \\<inter> supp x) x c = q \\<bullet> (f (as \\<inter> supp x) x c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = q \\<bullet> f (as \\<inter> supp x) x c", "apply(rule perm_supp_eq[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<sharp>* f (as \\<inter> supp x) x c", "using inc fcb1 fr1"], ["proof (prove)\nusing this:\n  supp q\n  \\<subseteq> as \\<inter> supp x \\<union> q \\<bullet> (as \\<inter> supp x)\n  (as \\<inter> supp x) \\<sharp>* f (as \\<inter> supp x) x c\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n\ngoal (1 subgoal):\n 1. supp q \\<sharp>* f (as \\<inter> supp x) x c", "apply (auto simp add: fresh_star_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f (as \\<inter> supp x) x c = q \\<bullet> f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "also"], ["proof (state)\nthis:\n  f (as \\<inter> supp x) x c = q \\<bullet> f (as \\<inter> supp x) x c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"\\<dots> = f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<bullet> f (as \\<inter> supp x) x c =\n    f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c", "apply(rule perm1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<sharp>* c", "using inc fresh1 fr1"], ["proof (prove)\nusing this:\n  supp q\n  \\<subseteq> as \\<inter> supp x \\<union> q \\<bullet> (as \\<inter> supp x)\n  as \\<sharp>* c\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n\ngoal (1 subgoal):\n 1. supp q \\<sharp>* c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  q \\<bullet> f (as \\<inter> supp x) x c =\n  f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "also"], ["proof (state)\nthis:\n  q \\<bullet> f (as \\<inter> supp x) x c =\n  f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"\\<dots> = f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c =\n    f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c", "using qq1 qq2"], ["proof (prove)\nusing this:\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n  r \\<bullet> (bs \\<inter> supp y)\n\ngoal (1 subgoal):\n 1. f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c =\n    f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c", "apply(perm_simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n     q \\<bullet> as \\<inter> supp (q \\<bullet> x) =\n     r \\<bullet> bs \\<inter> supp (r \\<bullet> y)\\<rbrakk>\n    \\<Longrightarrow> f (q \\<bullet> as \\<inter> supp (q \\<bullet> x))\n                       (q \\<bullet> x) c =\n                      f (r \\<bullet> bs \\<inter> supp (r \\<bullet> y))\n                       (r \\<bullet> y) c", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c =\n  f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "also"], ["proof (state)\nthis:\n  f (q \\<bullet> (as \\<inter> supp x)) (q \\<bullet> x) c =\n  f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"\\<dots> = r \\<bullet> (f (bs \\<inter> supp y) y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c =\n    r \\<bullet> f (bs \\<inter> supp y) y c", "apply(rule perm2[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp r \\<sharp>* c", "using qq3 fresh2 fr1"], ["proof (prove)\nusing this:\n  supp r\n  \\<subseteq> bs \\<inter> supp y \\<union> q \\<bullet> (as \\<inter> supp x)\n  bs \\<sharp>* c\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n\ngoal (1 subgoal):\n 1. supp r \\<sharp>* c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c =\n  r \\<bullet> f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "also"], ["proof (state)\nthis:\n  f (r \\<bullet> (bs \\<inter> supp y)) (r \\<bullet> y) c =\n  r \\<bullet> f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "have \"... = f (bs \\<inter> supp y) y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<bullet> f (bs \\<inter> supp y) y c = f (bs \\<inter> supp y) y c", "apply(rule perm_supp_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp r \\<sharp>* f (bs \\<inter> supp y) y c", "using qq3 fr1 fcb2"], ["proof (prove)\nusing this:\n  supp r\n  \\<subseteq> bs \\<inter> supp y \\<union> q \\<bullet> (as \\<inter> supp x)\n  (q \\<bullet> (as \\<inter>\n                supp\n                 x)) \\<sharp>* (x, c, f (as \\<inter> supp x) x c,\n                                f (bs \\<inter> supp y) y c)\n  (bs \\<inter> supp y) \\<sharp>* f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. supp r \\<sharp>* f (bs \\<inter> supp y) y c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  r \\<bullet> f (bs \\<inter> supp y) y c = f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "finally"], ["proof (chain)\npicking this:\n  f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "show ?thesis"], ["proof (prove)\nusing this:\n  f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c\n\ngoal (1 subgoal):\n 1. f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c", "by simp"], ["proof (state)\nthis:\n  f (as \\<inter> supp x) x c = f (bs \\<inter> supp y) y c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Abs_lst_fcb2:\n  fixes as bs :: \"atom list\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c::fs\"\n  assumes eq: \"[as]lst. x = [bs]lst. y\"\n  and fcb1: \"(set as) \\<sharp>* f as x c\"\n  and fresh1: \"set as \\<sharp>* c\"\n  and fresh2: \"set bs \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f as x c) = f (p \\<bullet> as) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f bs y c) = f (p \\<bullet> bs) (p \\<bullet> y) c\"\n  shows \"f as x c = f bs y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"supp (as, x, c) supports (f as x c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (as, x, c) supports f as x c", "unfolding  supports_def fresh_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<sharp> (as, x, c) \\<and> b \\<sharp> (as, x, c) \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f as x c = f as x c", "by (simp add: fresh_Pair perm1 fresh_star_def supp_swap swap_fresh_fresh)"], ["proof (state)\nthis:\n  supp (as, x, c) supports f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  supp (as, x, c) supports f as x c", "have fin1: \"finite (supp (f as x c))\""], ["proof (prove)\nusing this:\n  supp (as, x, c) supports f as x c\n\ngoal (1 subgoal):\n 1. finite (supp (f as x c))", "by (auto intro: supports_finite simp add: finite_supp)"], ["proof (state)\nthis:\n  finite (supp (f as x c))\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"supp (bs, y, c) supports (f bs y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (bs, y, c) supports f bs y c", "unfolding  supports_def fresh_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<sharp> (bs, y, c) \\<and> b \\<sharp> (bs, y, c) \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f bs y c = f bs y c", "by (simp add: fresh_Pair perm2 fresh_star_def supp_swap swap_fresh_fresh)"], ["proof (state)\nthis:\n  supp (bs, y, c) supports f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  supp (bs, y, c) supports f bs y c", "have fin2: \"finite (supp (f bs y c))\""], ["proof (prove)\nusing this:\n  supp (bs, y, c) supports f bs y c\n\ngoal (1 subgoal):\n 1. finite (supp (f bs y c))", "by (auto intro: supports_finite simp add: finite_supp)"], ["proof (state)\nthis:\n  finite (supp (f bs y c))\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "obtain q::\"perm\" where\n    fr1: \"(q \\<bullet> (set as)) \\<sharp>* (x, c, f as x c, f bs y c)\" and\n    fr2: \"supp q \\<sharp>* Abs_lst as x\" and\n    inc: \"supp q \\<subseteq> (set as) \\<union> q \\<bullet> (set as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c);\n         supp q \\<sharp>* ([as]lst. x);\n         supp q \\<subseteq> set as \\<union> q \\<bullet> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using at_set_avoiding3[where xs=\"set as\" and c=\"(x, c, f as x c, f bs y c)\" and x=\"[as]lst. x\"]\n      fin1 fin2"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (set as); finite (supp (x, c, f as x c, f bs y c));\n   finite (supp ([as]lst. x)); set as \\<sharp>* ([as]lst. x)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p.\n                       (p \\<bullet> set as) \\<sharp>* (x, c, f as x c,\n                 f bs y c) \\<and>\n                       supp ([as]lst. x) \\<sharp>* p \\<and>\n                       supp p = set as \\<union> p \\<bullet> set as\n  finite (supp (f as x c))\n  finite (supp (f bs y c))\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>(q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c);\n         supp q \\<sharp>* ([as]lst. x);\n         supp q \\<subseteq> set as \\<union> q \\<bullet> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: supp_Pair finite_supp Abs_fresh_star dest: fresh_star_supp_conv)"], ["proof (state)\nthis:\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n  supp q \\<sharp>* ([as]lst. x)\n  supp q \\<subseteq> set as \\<union> q \\<bullet> set as\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"Abs_lst (q \\<bullet> as) (q \\<bullet> x) = q \\<bullet> Abs_lst as x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [q \\<bullet> as]lst. q \\<bullet> x = q \\<bullet> ([as]lst. x)", "by simp"], ["proof (state)\nthis:\n  [q \\<bullet> as]lst. q \\<bullet> x = q \\<bullet> ([as]lst. x)\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  [q \\<bullet> as]lst. q \\<bullet> x = q \\<bullet> ([as]lst. x)\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = Abs_lst as x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<bullet> ([as]lst. x) = [as]lst. x", "by (simp only: fr2 perm_supp_eq)"], ["proof (state)\nthis:\n  q \\<bullet> ([as]lst. x) = [as]lst. x\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "finally"], ["proof (chain)\npicking this:\n  [q \\<bullet> as]lst. q \\<bullet> x = [as]lst. x", "have \"Abs_lst (q \\<bullet> as) (q \\<bullet> x) = Abs_lst bs y\""], ["proof (prove)\nusing this:\n  [q \\<bullet> as]lst. q \\<bullet> x = [as]lst. x\n\ngoal (1 subgoal):\n 1. [q \\<bullet> as]lst. q \\<bullet> x = [bs]lst. y", "using eq"], ["proof (prove)\nusing this:\n  [q \\<bullet> as]lst. q \\<bullet> x = [as]lst. x\n  [as]lst. x = [bs]lst. y\n\ngoal (1 subgoal):\n 1. [q \\<bullet> as]lst. q \\<bullet> x = [bs]lst. y", "by simp"], ["proof (state)\nthis:\n  [q \\<bullet> as]lst. q \\<bullet> x = [bs]lst. y\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  [q \\<bullet> as]lst. q \\<bullet> x = [bs]lst. y", "obtain r::perm where\n    qq1: \"q \\<bullet> x = r \\<bullet> y\" and\n    qq2: \"q \\<bullet> as = r \\<bullet> bs\" and\n    qq3: \"supp r \\<subseteq> (q \\<bullet> (set as)) \\<union> set bs\""], ["proof (prove)\nusing this:\n  [q \\<bullet> as]lst. q \\<bullet> x = [bs]lst. y\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n         q \\<bullet> as = r \\<bullet> bs;\n         supp r \\<subseteq> q \\<bullet> set as \\<union> set bs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply(drule_tac sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r.\n                \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                 q \\<bullet> as = r \\<bullet> bs;\n                 supp r\n                 \\<subseteq> q \\<bullet> set as \\<union> set bs\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     [bs]lst. y = [q \\<bullet> as]lst. q \\<bullet> x\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(simp only: Abs_eq_iff2 alphas)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>r.\n                \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                 q \\<bullet> as = r \\<bullet> bs;\n                 supp r\n                 \\<subseteq> q \\<bullet> set as \\<union> set bs\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<exists>p.\n        (supp y - set bs =\n         supp (q \\<bullet> x) - set (q \\<bullet> as) \\<and>\n         (supp y - set bs) \\<sharp>* p \\<and>\n         p \\<bullet> y = q \\<bullet> x \\<and>\n         p \\<bullet> bs = q \\<bullet> as) \\<and>\n        supp p \\<subseteq> set bs \\<union> set (q \\<bullet> as)\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply(erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                    q \\<bullet> as = r \\<bullet> bs;\n                    supp r\n                    \\<subseteq> q \\<bullet> set as \\<union> set bs\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (supp y - set bs =\n         supp (q \\<bullet> x) - set (q \\<bullet> as) \\<and>\n         (supp y - set bs) \\<sharp>* p \\<and>\n         p \\<bullet> y = q \\<bullet> x \\<and>\n         p \\<bullet> bs = q \\<bullet> as) \\<and>\n        supp p \\<subseteq> set bs \\<union> set (q \\<bullet> as)\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>q \\<bullet> x = r \\<bullet> y;\n                    q \\<bullet> as = r \\<bullet> bs;\n                    supp r\n                    \\<subseteq> q \\<bullet> set as \\<union> set bs\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        supp p \\<subseteq> set bs \\<union> set (q \\<bullet> as);\n        supp y - set bs = supp (q \\<bullet> x) - set (q \\<bullet> as);\n        (supp y - set bs) \\<sharp>* p; p \\<bullet> y = q \\<bullet> x;\n        p \\<bullet> bs = q \\<bullet> as\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(drule_tac x=\"p\" in meta_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp p \\<subseteq> set bs \\<union> set (q \\<bullet> as);\n        supp y - set bs = supp (q \\<bullet> x) - set (q \\<bullet> as);\n        (supp y - set bs) \\<sharp>* p; p \\<bullet> y = q \\<bullet> x;\n        p \\<bullet> bs = q \\<bullet> as;\n        \\<lbrakk>q \\<bullet> x = p \\<bullet> y;\n         q \\<bullet> as = p \\<bullet> bs;\n         supp p \\<subseteq> q \\<bullet> set as \\<union> set bs\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(simp add: set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>supp p \\<subseteq> set bs \\<union> set (q \\<bullet> as);\n        supp y - set bs = supp (q \\<bullet> x) - set (q \\<bullet> as);\n        (supp (q \\<bullet> x) - set (q \\<bullet> as)) \\<sharp>* p;\n        p \\<bullet> y = q \\<bullet> x; p \\<bullet> bs = q \\<bullet> as;\n        supp p\n        \\<subseteq> set (q \\<bullet> as) \\<union> set bs \\<Longrightarrow>\n        thesis\\<rbrakk>\n       \\<Longrightarrow> thesis", "apply(blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as = r \\<bullet> bs\n  supp r \\<subseteq> q \\<bullet> set as \\<union> set bs\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"(set as) \\<sharp>* f as x c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set as \\<sharp>* f as x c", "by (rule fcb1)"], ["proof (state)\nthis:\n  set as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  set as \\<sharp>* f as x c", "have \"q \\<bullet> ((set as) \\<sharp>* f as x c)\""], ["proof (prove)\nusing this:\n  set as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. q \\<bullet> set as \\<sharp>* f as x c", "by (simp add: permute_bool_def)"], ["proof (state)\nthis:\n  q \\<bullet> set as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  q \\<bullet> set as \\<sharp>* f as x c", "have \"set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\""], ["proof (prove)\nusing this:\n  q \\<bullet> set as \\<sharp>* f as x c\n\ngoal (1 subgoal):\n 1. set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "apply(simp only: fresh_star_eqvt set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (q \\<bullet> as) \\<sharp>* (q \\<bullet> f as x c) \\<Longrightarrow>\n    set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "apply(subst (asm) perm1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. supp q \\<sharp>* c\n 2. set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x)\n                                    c \\<Longrightarrow>\n    set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "using inc fresh1 fr1"], ["proof (prove)\nusing this:\n  supp q \\<subseteq> set as \\<union> q \\<bullet> set as\n  set as \\<sharp>* c\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (2 subgoals):\n 1. supp q \\<sharp>* c\n 2. set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x)\n                                    c \\<Longrightarrow>\n    set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "apply(auto simp add: fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c", "have \"set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c\""], ["proof (prove)\nusing this:\n  set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c", "using qq1 qq2"], ["proof (prove)\nusing this:\n  set (q \\<bullet> as) \\<sharp>* f (q \\<bullet> as) (q \\<bullet> x) c\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as = r \\<bullet> bs\n\ngoal (1 subgoal):\n 1. set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c", "by simp"], ["proof (state)\nthis:\n  set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c", "have \"r \\<bullet> ((set bs) \\<sharp>* f bs y c)\""], ["proof (prove)\nusing this:\n  set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. r \\<bullet> set bs \\<sharp>* f bs y c", "apply(simp only: fresh_star_eqvt set_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (r \\<bullet> bs) \\<sharp>* f (r \\<bullet> bs) (r \\<bullet> y)\n                                    c \\<Longrightarrow>\n    set (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c)", "apply(subst (asm) perm2[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. supp r \\<sharp>* c\n 2. set (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c) \\<Longrightarrow>\n    set (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c)", "using qq3 fresh2 fr1"], ["proof (prove)\nusing this:\n  supp r \\<subseteq> q \\<bullet> set as \\<union> set bs\n  set bs \\<sharp>* c\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (2 subgoals):\n 1. supp r \\<sharp>* c\n 2. set (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c) \\<Longrightarrow>\n    set (r \\<bullet> bs) \\<sharp>* (r \\<bullet> f bs y c)", "apply(auto simp add: set_eqvt fresh_star_def fresh_Pair)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  r \\<bullet> set bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "then"], ["proof (chain)\npicking this:\n  r \\<bullet> set bs \\<sharp>* f bs y c", "have fcb2: \"(set bs) \\<sharp>* f bs y c\""], ["proof (prove)\nusing this:\n  r \\<bullet> set bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. set bs \\<sharp>* f bs y c", "by (simp add: permute_bool_def)"], ["proof (state)\nthis:\n  set bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"f as x c = q \\<bullet> (f as x c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f as x c = q \\<bullet> f as x c", "apply(rule perm_supp_eq[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<sharp>* f as x c", "using inc fcb1 fr1"], ["proof (prove)\nusing this:\n  supp q \\<subseteq> set as \\<union> q \\<bullet> set as\n  set as \\<sharp>* f as x c\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (1 subgoal):\n 1. supp q \\<sharp>* f as x c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  f as x c = q \\<bullet> f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  f as x c = q \\<bullet> f as x c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = f (q \\<bullet> as) (q \\<bullet> x) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q \\<bullet> f as x c = f (q \\<bullet> as) (q \\<bullet> x) c", "apply(rule perm1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<sharp>* c", "using inc fresh1 fr1"], ["proof (prove)\nusing this:\n  supp q \\<subseteq> set as \\<union> q \\<bullet> set as\n  set as \\<sharp>* c\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (1 subgoal):\n 1. supp q \\<sharp>* c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  q \\<bullet> f as x c = f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  q \\<bullet> f as x c = f (q \\<bullet> as) (q \\<bullet> x) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = f (r \\<bullet> bs) (r \\<bullet> y) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (q \\<bullet> as) (q \\<bullet> x) c =\n    f (r \\<bullet> bs) (r \\<bullet> y) c", "using qq1 qq2"], ["proof (prove)\nusing this:\n  q \\<bullet> x = r \\<bullet> y\n  q \\<bullet> as = r \\<bullet> bs\n\ngoal (1 subgoal):\n 1. f (q \\<bullet> as) (q \\<bullet> x) c =\n    f (r \\<bullet> bs) (r \\<bullet> y) c", "by simp"], ["proof (state)\nthis:\n  f (q \\<bullet> as) (q \\<bullet> x) c =\n  f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  f (q \\<bullet> as) (q \\<bullet> x) c =\n  f (r \\<bullet> bs) (r \\<bullet> y) c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"\\<dots> = r \\<bullet> (f bs y c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (r \\<bullet> bs) (r \\<bullet> y) c = r \\<bullet> f bs y c", "apply(rule perm2[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp r \\<sharp>* c", "using qq3 fresh2 fr1"], ["proof (prove)\nusing this:\n  supp r \\<subseteq> q \\<bullet> set as \\<union> set bs\n  set bs \\<sharp>* c\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n\ngoal (1 subgoal):\n 1. supp r \\<sharp>* c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  f (r \\<bullet> bs) (r \\<bullet> y) c = r \\<bullet> f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "also"], ["proof (state)\nthis:\n  f (r \\<bullet> bs) (r \\<bullet> y) c = r \\<bullet> f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "have \"... = f bs y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<bullet> f bs y c = f bs y c", "apply(rule perm_supp_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp r \\<sharp>* f bs y c", "using qq3 fr1 fcb2"], ["proof (prove)\nusing this:\n  supp r \\<subseteq> q \\<bullet> set as \\<union> set bs\n  (q \\<bullet> set as) \\<sharp>* (x, c, f as x c, f bs y c)\n  set bs \\<sharp>* f bs y c\n\ngoal (1 subgoal):\n 1. supp r \\<sharp>* f bs y c", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  r \\<bullet> f bs y c = f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "finally"], ["proof (chain)\npicking this:\n  f as x c = f bs y c", "show ?thesis"], ["proof (prove)\nusing this:\n  f as x c = f bs y c\n\ngoal (1 subgoal):\n 1. f as x c = f bs y c", "by simp"], ["proof (state)\nthis:\n  f as x c = f bs y c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Abs_lst1_fcb2:\n  fixes a b :: \"atom\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c :: fs\"\n  assumes e: \"[[a]]lst. x = [[b]]lst. y\"\n  and fcb1: \"a \\<sharp> f a x c\"\n  and fresh: \"{a, b} \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f a x c) = f (p \\<bullet> a) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f b y c) = f (p \\<bullet> b) (p \\<bullet> y) c\"\n  shows \"f a x c = f b y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a x c = f b y c", "using e"], ["proof (prove)\nusing this:\n  [[a]]lst. x = [[b]]lst. y\n\ngoal (1 subgoal):\n 1. f a x c = f b y c", "apply(drule_tac Abs_lst_fcb2[where c=\"c\" and f=\"\\<lambda>(as::atom list) . f (hd as)\"])"], ["proof (prove)\ngoal (6 subgoals):\n 1. set [a] \\<sharp>* f (hd [a]) x c\n 2. set [a] \\<sharp>* c\n 3. set [b] \\<sharp>* c\n 4. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       p \\<bullet> f (hd [a]) x c =\n       f (hd (p \\<bullet> [a])) (p \\<bullet> x) c\n 5. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       p \\<bullet> f (hd [b]) y c =\n       f (hd (p \\<bullet> [b])) (p \\<bullet> y) c\n 6. f (hd [a]) x c = f (hd [b]) y c \\<Longrightarrow> f a x c = f b y c", "apply(simp_all)"], ["proof (prove)\ngoal (5 subgoals):\n 1. {a} \\<sharp>* f a x c\n 2. {a} \\<sharp>* c\n 3. {b} \\<sharp>* c\n 4. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       (p \\<bullet> f) (p \\<bullet> a) (p \\<bullet> x) (p \\<bullet> c) =\n       f (p \\<bullet> a) (p \\<bullet> x) c\n 5. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       (p \\<bullet> f) (p \\<bullet> b) (p \\<bullet> y) (p \\<bullet> c) =\n       f (p \\<bullet> b) (p \\<bullet> y) c", "using fcb1 fresh perm1 perm2"], ["proof (prove)\nusing this:\n  a \\<sharp> f a x c\n  {a, b} \\<sharp>* c\n  supp ?p \\<sharp>* c \\<Longrightarrow>\n  ?p \\<bullet> f a x c = f (?p \\<bullet> a) (?p \\<bullet> x) c\n  supp ?p \\<sharp>* c \\<Longrightarrow>\n  ?p \\<bullet> f b y c = f (?p \\<bullet> b) (?p \\<bullet> y) c\n\ngoal (5 subgoals):\n 1. {a} \\<sharp>* f a x c\n 2. {a} \\<sharp>* c\n 3. {b} \\<sharp>* c\n 4. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       (p \\<bullet> f) (p \\<bullet> a) (p \\<bullet> x) (p \\<bullet> c) =\n       f (p \\<bullet> a) (p \\<bullet> x) c\n 5. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       (p \\<bullet> f) (p \\<bullet> b) (p \\<bullet> y) (p \\<bullet> c) =\n       f (p \\<bullet> b) (p \\<bullet> y) c", "apply(simp_all add: fresh_star_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_lst1_fcb2':\n  fixes a b :: \"'a::at_base\"\n    and x y :: \"'b :: fs\"\n    and c::\"'c :: fs\"\n  assumes e: \"[[atom a]]lst. x = [[atom b]]lst. y\"\n  and fcb1: \"atom a \\<sharp> f a x c\"\n  and fresh: \"{atom a, atom b} \\<sharp>* c\"\n  and perm1: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f a x c) = f (p \\<bullet> a) (p \\<bullet> x) c\"\n  and perm2: \"\\<And>p. supp p \\<sharp>* c \\<Longrightarrow> p \\<bullet> (f b y c) = f (p \\<bullet> b) (p \\<bullet> y) c\"\n  shows \"f a x c = f b y c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a x c = f b y c", "using e"], ["proof (prove)\nusing this:\n  [[atom a]]lst. x = [[atom b]]lst. y\n\ngoal (1 subgoal):\n 1. f a x c = f b y c", "apply(drule_tac Abs_lst1_fcb2[where c=\"c\" and f=\"\\<lambda>a . f ((inv atom) a)\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. atom a \\<sharp> f (inv atom (atom a)) x c\n 2. {atom a, atom b} \\<sharp>* c\n 3. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       p \\<bullet> f (inv atom (atom a)) x c =\n       f (inv atom (p \\<bullet> atom a)) (p \\<bullet> x) c\n 4. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       p \\<bullet> f (inv atom (atom b)) y c =\n       f (inv atom (p \\<bullet> atom b)) (p \\<bullet> y) c\n 5. f (inv atom (atom a)) x c = f (inv atom (atom b)) y c \\<Longrightarrow>\n    f a x c = f b y c", "using  fcb1 fresh perm1 perm2"], ["proof (prove)\nusing this:\n  atom a \\<sharp> f a x c\n  {atom a, atom b} \\<sharp>* c\n  supp ?p \\<sharp>* c \\<Longrightarrow>\n  ?p \\<bullet> f a x c = f (?p \\<bullet> a) (?p \\<bullet> x) c\n  supp ?p \\<sharp>* c \\<Longrightarrow>\n  ?p \\<bullet> f b y c = f (?p \\<bullet> b) (?p \\<bullet> y) c\n\ngoal (5 subgoals):\n 1. atom a \\<sharp> f (inv atom (atom a)) x c\n 2. {atom a, atom b} \\<sharp>* c\n 3. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       p \\<bullet> f (inv atom (atom a)) x c =\n       f (inv atom (p \\<bullet> atom a)) (p \\<bullet> x) c\n 4. \\<And>p.\n       supp p \\<sharp>* c \\<Longrightarrow>\n       p \\<bullet> f (inv atom (atom b)) y c =\n       f (inv atom (p \\<bullet> atom b)) (p \\<bullet> y) c\n 5. f (inv atom (atom a)) x c = f (inv atom (atom b)) y c \\<Longrightarrow>\n    f a x c = f b y c", "apply(simp_all add: fresh_star_def inv_f_f inj_on_def atom_eqvt)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}