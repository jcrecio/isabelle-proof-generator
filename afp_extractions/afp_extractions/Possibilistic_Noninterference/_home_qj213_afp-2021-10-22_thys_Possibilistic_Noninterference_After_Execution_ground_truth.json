{"file_name": "/home/qj213/afp-2021-10-22/thys/Possibilistic_Noninterference/After_Execution.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Possibilistic_Noninterference", "problem_names": ["lemma Sbis_transC[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>s d'\"", "lemma Sbis_transT[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>t t'\" and \"s' \\<approx> t'\"", "lemma Sbis_transC2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>s d'\"", "lemma Sbis_transT2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>t s'\" and \"s' \\<approx> t'\"", "lemma ZObisT_transC[consumes 3, case_names Match MatchS]: \nassumes 0: \"c \\<approx>01T d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>c (d',t'); s' \\<approx> t'; c' \\<approx>01T d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s' \\<approx> t; c' \\<approx>01T d\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma ZObisT_transT[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>01T d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>t t'\" and \"s' \\<approx> t'\"", "lemma ZObisT_transC2[consumes 3, case_names Match MatchS]: \nassumes 0: \"c \\<approx>01T d\" and 2: \"s \\<approx> t\" and 3: \"(d,t) \\<rightarrow>c (d',t')\"\nand 4: \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>c (c',s'); s' \\<approx> t'; c' \\<approx>01T d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 5: \"\\<lbrakk>s \\<approx> t'; c \\<approx>01T d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma ZObisT_transT2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>01T d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>t s'\" and \"s' \\<approx> t'\"", "lemma WbisT_transC[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\"", "lemma WbisT_transT[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\"", "lemma WbisT_transC2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\"", "lemma WbisT_transT2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\"", "lemma WbisT_MtransC[consumes 3, case_names Match]: \nassumes 1: \"c \\<approx>wT d\" and 2: \"s \\<approx> t\" and 3: \"(c,s) \\<rightarrow>*c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\"", "lemma WbisT_MtransT[consumes 3, case_names Match]: \nassumes 1: \"c \\<approx>wT d\" and 2: \"s \\<approx> t\" and 3: \"(c,s) \\<rightarrow>*t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\"", "lemma WbisT_MtransC2[consumes 3, case_names Match]: \nassumes \"c \\<approx>wT d\" and \"s \\<approx> t\" and 1: \"(d,t) \\<rightarrow>*c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\"", "lemma WbisT_MtransT2[consumes 3, case_names Match]: \nassumes \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>*t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\"", "lemma ZObis_transC[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>c (d',t'); s' \\<approx> t'; c' \\<approx>01 d'\\<rbrakk> \\<Longrightarrow> thesis\" \nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>t t'; s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s' \\<approx> t; c' \\<approx>01 d\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma ZObis_transT[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>c (d',t'); s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s' \\<approx> t; discr d\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma ZObis_transC2[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>c (c',s'); s' \\<approx> t'; c' \\<approx>01 d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>t s'; s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s \\<approx> t'; c \\<approx>01 d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma ZObis_transT2[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>c (c',s'); s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s \\<approx> t'; discr c\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_transC[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\" \nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_transT[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_transC2[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_transT2[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_MtransC[consumes 3, case_names Match MatchO]: \nassumes \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_MtransT[consumes 3, case_names Match MatchO]: \nassumes c_d: \"c \\<approx>w d\" and st: \"s \\<approx> t\" and cs: \"(c,s) \\<rightarrow>*t s'\" \nand 1: \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 2: \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_MtransC2[consumes 3, case_names Match MatchO]: \nassumes \"c \\<approx>w d\" and \"s \\<approx> t\" and dt: \"(d,t) \\<rightarrow>*c (d',t')\"\nand 1: \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 2: \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma Wbis_MtransT2[consumes 3, case_names Match MatchO]: \nassumes \"c \\<approx>w d\" and \"s \\<approx> t\" and dt: \"(d,t) \\<rightarrow>*t t'\"\nand 1: \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 2: \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis", "lemma BisT_transC[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\"", "lemma BisT_transT[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\"", "lemma BisT_transC2[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\"", "lemma BisT_transT2[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\"", "lemma BisT_MtransC[consumes 5, case_names Match]: \nassumes \"c \\<approx>T d\" \nand \"mustT c s\" \"mustT d t\"\nand \"s \\<approx> t\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\"", "lemma BisT_MtransT[consumes 5, case_names Match]: \nassumes 1: \"c \\<approx>T d\" \nand ter: \"mustT c s\" \"mustT d t\"\nand 2: \"s \\<approx> t\" and 3: \"(c,s) \\<rightarrow>*t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\"", "lemma BisT_MtransC2[consumes 3, case_names Match]: \nassumes \"c \\<approx>T d\" \nand ter: \"mustT c s\" \"mustT d t\"\nand \"s \\<approx> t\" and 1: \"(d,t) \\<rightarrow>*c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\"", "lemma BisT_MtransT02[consumes 3, case_names Match]: \nassumes \"c \\<approx>T d\" \nand ter: \"mustT c s\" \"mustT d t\"\nand \"s \\<approx> t\" and \"(d,t) \\<rightarrow>*t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\"", "lemma trans_Step2:\n  \"cf \\<rightarrow>*c cf' \\<Longrightarrow> cf' \\<rightarrow>c cf'' \\<Longrightarrow> cf \\<rightarrow>*c cf''\"", "lemma parTrace_not_empty[simp]: \"parTrace cfl \\<Longrightarrow> cfl \\<noteq> []\"", "lemma parTrace_snoc[simp]:\n  \"parTrace (cfl@[cf]) \\<longleftrightarrow> (cfl \\<noteq> [] \\<longrightarrow> parTrace cfl \\<and> last cfl \\<rightarrow>c cf)\"", "lemma MtransC_Ex_parTrace:\n  assumes \"cf \\<rightarrow>*c cf'\" shows \"\\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'\"", "lemma parTrace_imp_MtransC:\n  assumes pT: \"parTrace cfl\"\n  shows \"(hd cfl) \\<rightarrow>*c (last cfl)\"", "lemma MtransT_Ex_finTrace:\n  assumes \"cf \\<rightarrow>*t s\" shows \"\\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s\"", "lemma finTrace_imp_MtransT:\n  \"finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr\"", "lemma WbisT_trace2:\n  assumes bis: \"c \\<approx>wT d\" \"s \\<approx> t\" \n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (d,t) \\<and> fstate tr \\<approx> fstate tr'\"", "theorem WbisT_trace:\n  assumes \"c \\<approx>wT c\" and \"s \\<approx> t\" \n  and \"finTrace tr\" and \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\"", "theorem ZObisT_trace2:\n  assumes bis: \"c \\<approx>01T d\" \"s \\<approx> t\" \n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (d,t) \\<and>\n               fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr\"", "theorem ZObisT_trace:\n  assumes \"c \\<approx>01T c\" \"s \\<approx> t\"\n  and \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and>\n               fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr\"", "theorem Sbis_trace:\n  assumes bis: \"c \\<approx>s d\" \"s \\<approx> t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (d,t) \\<and> fstate tr \\<approx> fstate tr' \\<and>\n               lengthFT tr' = lengthFT tr\"", "theorem Wbis_trace:\n  assumes T: \"\\<And>s. mustT c s\"\n  and bis: \"c \\<approx>w c\" \"s \\<approx> t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\"", "theorem BisT_trace:\n  assumes bis: \"c \\<approx>T c\" \"s \\<approx> t\"\n  and T: \"mustT c s\" \"mustT c t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\""], "translations": [["", "lemma Sbis_transC[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>s d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); s' \\<approx> t';\n         c' \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms Sbis_matchC_C[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  matchC_C Sbis c d\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); s' \\<approx> t';\n         c' \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_C_def"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<forall>s t c' s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>c (d', t') \\<and>\n         s' \\<approx> t' \\<and> c' \\<approx>s d')\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); s' \\<approx> t';\n         c' \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma Sbis_transT[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>t t'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms Sbis_matchT_T[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  matchT_T c d\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_T_def"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<forall>s t s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n     (\\<exists>t'. (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma Sbis_transC2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>s d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>c (c', s'); s' \\<approx> t';\n         c' \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms Sbis_matchC_C_rev[OF 0] Sbis_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  matchC_C Sbis d c\n  ?c \\<approx>s ?d \\<Longrightarrow> ?d \\<approx>s ?c\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>c (c', s'); s' \\<approx> t';\n         c' \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_C_def2"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<forall>s t d' t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>c (c', s') \\<and>\n         s' \\<approx> t' \\<and> d' \\<approx>s c')\n  ?c \\<approx>s ?d \\<Longrightarrow> ?d \\<approx>s ?c\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>c (c', s'); s' \\<approx> t';\n         c' \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma Sbis_transT2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>s d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>t s'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms Sbis_matchT_T_rev[OF 0] Sbis_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  matchT_T d c\n  ?c \\<approx>s ?d \\<Longrightarrow> ?d \\<approx>s ?c\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_T_def2"], ["proof (prove)\nusing this:\n  c \\<approx>s d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<forall>s t t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n     (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t')\n  ?c \\<approx>s ?d \\<Longrightarrow> ?d \\<approx>s ?c\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "(* ZObisT: *)"], ["", "lemma ZObisT_transC[consumes 3, case_names Match MatchS]: \nassumes 0: \"c \\<approx>01T d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>c (d',t'); s' \\<approx> t'; c' \\<approx>01T d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s' \\<approx> t; c' \\<approx>01T d\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms ZObisT_matchC_ZOC[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>01T ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s' \\<approx> t; c' \\<approx>01T d\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchC_ZOC ZObisT c d\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchC_ZOC_def"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>01T ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s' \\<approx> t; c' \\<approx>01T d\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t c' s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n     s' \\<approx> t \\<and> c' \\<approx>01T d \\<or>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>c (d', t') \\<and>\n         s' \\<approx> t' \\<and> c' \\<approx>01T d')\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma ZObisT_transT[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>01T d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>t t'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms ZObisT_matchT_T[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  matchT_T c d\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_T_def"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<forall>s t s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n     (\\<exists>t'. (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma ZObisT_transC2[consumes 3, case_names Match MatchS]: \nassumes 0: \"c \\<approx>01T d\" and 2: \"s \\<approx> t\" and 3: \"(d,t) \\<rightarrow>c (d',t')\"\nand 4: \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>c (c',s'); s' \\<approx> t'; c' \\<approx>01T d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 5: \"\\<lbrakk>s \\<approx> t'; c \\<approx>01T d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms ZObisT_matchC_ZOC_rev[OF 0] ZObisT_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<lbrakk>(c, s) \\<rightarrow>c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>01T d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s \\<approx> t'; c \\<approx>01T d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchC_ZOC ZObisT d c\n  ?s \\<approx>01T ?t \\<Longrightarrow> ?t \\<approx>01T ?s\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchC_ZOC_def2"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<lbrakk>(c, s) \\<rightarrow>c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>01T d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s \\<approx> t'; c \\<approx>01T d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t d' t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n     s \\<approx> t' \\<and> d' \\<approx>01T c \\<or>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>c (c', s') \\<and>\n         s' \\<approx> t' \\<and> d' \\<approx>01T c')\n  ?s \\<approx>01T ?t \\<Longrightarrow> ?t \\<approx>01T ?s\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma ZObisT_transT2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>01T d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>t s'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms ZObisT_matchT_T_rev[OF 0] ZObisT_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  matchT_T d c\n  ?s \\<approx>01T ?t \\<Longrightarrow> ?t \\<approx>01T ?s\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_T_def2"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<forall>s t t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n     (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t')\n  ?s \\<approx>01T ?t \\<Longrightarrow> ?t \\<approx>01T ?s\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "(* WbisT: *)"], ["", "lemma WbisT_transC[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms WbisT_matchC_MC[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  matchC_MC WbisT c d\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_MC_def"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<forall>s t c' s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>*c (d', t') \\<and>\n         s' \\<approx> t' \\<and> c' \\<approx>wT d')\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma WbisT_transT[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms WbisT_matchT_MT[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  matchT_MT c d\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_MT_def"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<forall>s t s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n     (\\<exists>t'. (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma WbisT_transC2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms WbisT_matchC_MC_rev[OF 0] WbisT_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  matchC_MC WbisT d c\n  ?c \\<approx>wT ?d \\<Longrightarrow> ?d \\<approx>wT ?c\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_MC_def2"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<forall>s t d' t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>*c (c', s') \\<and>\n         s' \\<approx> t' \\<and> d' \\<approx>wT c')\n  ?c \\<approx>wT ?d \\<Longrightarrow> ?d \\<approx>wT ?c\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma WbisT_transT2[consumes 3, case_names Match]: \nassumes 0: \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms WbisT_matchT_MT_rev[OF 0] WbisT_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  matchT_MT d c\n  ?c \\<approx>wT ?d \\<Longrightarrow> ?d \\<approx>wT ?c\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_MT_def2"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<forall>s t t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n     (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t')\n  ?c \\<approx>wT ?d \\<Longrightarrow> ?d \\<approx>wT ?c\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "(*  *)"], ["", "lemma WbisT_MtransC[consumes 3, case_names Match]: \nassumes 1: \"c \\<approx>wT d\" and 2: \"s \\<approx> t\" and 3: \"(c,s) \\<rightarrow>*c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> \n        c \\<approx>wT d \\<Longrightarrow> s \\<approx> t \\<Longrightarrow> \n        (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> c' \\<approx>wT d')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>wT d;\n     s \\<approx> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>d' t'.\n                         (d, t) \\<rightarrow>*c (d', t') \\<and>\n                         s' \\<approx> t' \\<and> c' \\<approx>wT d'", "proof (induct rule: MtransC_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>wT d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>wT d';\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>wT d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>wT d'", "case (Trans c s c' s' c'' s'')"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>wT d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  c \\<approx>wT d\n  s \\<approx> t\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>wT d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>wT d';\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>wT d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>wT d'", "then"], ["proof (chain)\npicking this:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>wT d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  c \\<approx>wT d\n  s \\<approx> t", "obtain d' t' where d: \"(d, t) \\<rightarrow>*c (d', t')\" \n    and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\"\n    and \"(c', s') \\<rightarrow>c (c'', s'')\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>wT d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  c \\<approx>wT d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'; (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>wT d'\n  (c', s') \\<rightarrow>c (c'', s'')\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>wT d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>wT d';\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>wT d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>wT d'", "then"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>wT d'\n  (c', s') \\<rightarrow>c (c'', s'')", "obtain d'' t'' where \"s'' \\<approx> t''\" and \"c'' \\<approx>wT d''\" \n    and \"(d', t') \\<rightarrow>*c (d'', t'')\""], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>wT d'\n  (c', s') \\<rightarrow>c (c'', s'')\n\ngoal (1 subgoal):\n 1. (\\<And>t'' d''.\n        \\<lbrakk>s'' \\<approx> t''; c'' \\<approx>wT d'';\n         (d', t') \\<rightarrow>*c (d'', t'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis WbisT_transC)"], ["proof (state)\nthis:\n  s'' \\<approx> t''\n  c'' \\<approx>wT d''\n  (d', t') \\<rightarrow>*c (d'', t'')\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>wT d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>wT d';\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>wT d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>wT d'", "thus ?case"], ["proof (prove)\nusing this:\n  s'' \\<approx> t''\n  c'' \\<approx>wT d''\n  (d', t') \\<rightarrow>*c (d'', t'')\n\ngoal (1 subgoal):\n 1. \\<exists>d' t'.\n       (d, t) \\<rightarrow>*c (d', t') \\<and>\n       s'' \\<approx> t' \\<and> c'' \\<approx>wT d'", "using d"], ["proof (prove)\nusing this:\n  s'' \\<approx> t''\n  c'' \\<approx>wT d''\n  (d', t') \\<rightarrow>*c (d'', t'')\n  (d, t) \\<rightarrow>*c (d', t')\n\ngoal (1 subgoal):\n 1. \\<exists>d' t'.\n       (d, t) \\<rightarrow>*c (d', t') \\<and>\n       s'' \\<approx> t' \\<and> c'' \\<approx>wT d'", "by (metis MtransC_Trans)"], ["proof (state)\nthis:\n  \\<exists>d' t'.\n     (d, t) \\<rightarrow>*c (d', t') \\<and>\n     s'' \\<approx> t' \\<and> c'' \\<approx>wT d'\n\ngoal (1 subgoal):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>wT d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>wT d'", "qed (metis MtransC_Refl)"], ["proof (state)\nthis:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>wT d;\n   s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>wT d'\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>wT d;\n   s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>wT d'\n\ngoal (1 subgoal):\n 1. thesis", "using that assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>wT d;\n   s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>wT d'\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>wT ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  c \\<approx>wT d\n  s \\<approx> t\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WbisT_MtransT[consumes 3, case_names Match]: \nassumes 1: \"c \\<approx>wT d\" and 2: \"s \\<approx> t\" and 3: \"(c,s) \\<rightarrow>*t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain c'' s'' where 4: \"(c,s) \\<rightarrow>*c (c'',s'')\" \n  and 5: \"(c'',s'') \\<rightarrow>t s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c'' s''.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c'', s'');\n         (c'', s'') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 3"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. (\\<And>c'' s''.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c'', s'');\n         (c'', s'') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis MtransT_invert2)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'", "obtain d'' t'' where d: \"(d,t) \\<rightarrow>*c (d'',t'')\" \n  and \"s'' \\<approx> t''\" and \"c'' \\<approx>wT d''\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. (\\<And>d'' t''.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d'', t''); s'' \\<approx> t'';\n         c'' \\<approx>wT d''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1 2 4 WbisT_MtransC"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n  c \\<approx>wT d\n  s \\<approx> t\n  (c, s) \\<rightarrow>*c (c'', s'')\n  \\<lbrakk>?c \\<approx>wT ?d; ?s \\<approx> ?t;\n   (?c, ?s) \\<rightarrow>*c (?c', ?s');\n   \\<And>d' t'.\n      \\<lbrakk>(?d, ?t) \\<rightarrow>*c (d', t'); ?s' \\<approx> t';\n       ?c' \\<approx>wT d'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d'' t''.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d'', t''); s'' \\<approx> t'';\n         c'' \\<approx>wT d''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>wT d''\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>wT d''", "obtain t' where \"s' \\<approx> t'\" and \"(d'',t'') \\<rightarrow>*t t'\""], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>wT d''\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>s' \\<approx> t'; (d'', t'') \\<rightarrow>*t t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis 5 WbisT_transT)"], ["proof (state)\nthis:\n  s' \\<approx> t'\n  (d'', t'') \\<rightarrow>*t t'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus thesis"], ["proof (prove)\nusing this:\n  s' \\<approx> t'\n  (d'', t'') \\<rightarrow>*t t'\n\ngoal (1 subgoal):\n 1. thesis", "using d that"], ["proof (prove)\nusing this:\n  s' \\<approx> t'\n  (d'', t'') \\<rightarrow>*t t'\n  (d, t) \\<rightarrow>*c (d'', t'')\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis MtransC_MtransT)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WbisT_MtransC2[consumes 3, case_names Match]: \nassumes \"c \\<approx>wT d\" and \"s \\<approx> t\" and 1: \"(d,t) \\<rightarrow>*c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>wT d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"d \\<approx>wT c\" and \"t \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<approx>wT c &&& t \\<approx> s", "using assms"], ["proof (prove)\nusing this:\n  c \\<approx>wT d\n  s \\<approx> t\n  (d, t) \\<rightarrow>*c (d', t')\n\ngoal (1 subgoal):\n 1. d \\<approx>wT c &&& t \\<approx> s", "by (metis WbisT_Sym indis_sym)+"], ["proof (state)\nthis:\n  d \\<approx>wT c\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d \\<approx>wT c\n  t \\<approx> s", "obtain c' s' where \n  \"(c,s) \\<rightarrow>*c (c',s')\" and \"t' \\<approx> s'\" and \"d' \\<approx>wT c'\""], ["proof (prove)\nusing this:\n  d \\<approx>wT c\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); t' \\<approx> s';\n         d' \\<approx>wT c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis 1 WbisT_MtransC)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s')\n  t' \\<approx> s'\n  d' \\<approx>wT c'\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>wT d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  t' \\<approx> s'\n  d' \\<approx>wT c'\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  t' \\<approx> s'\n  d' \\<approx>wT c'\n  \\<lbrakk>(c, s) \\<rightarrow>*c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>wT d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis WbisT_Sym indis_sym)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma WbisT_MtransT2[consumes 3, case_names Match]: \nassumes \"c \\<approx>wT d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>*t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis WbisT_MtransT WbisT_Sym assms indis_sym)"], ["", "(* ZObis: *)"], ["", "lemma ZObis_transC[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>c (d',t'); s' \\<approx> t'; c' \\<approx>01 d'\\<rbrakk> \\<Longrightarrow> thesis\" \nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>t t'; s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s' \\<approx> t; c' \\<approx>01 d\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms ZObis_matchC_ZO[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>01 ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>t ?t'1; s' \\<approx> ?t'1; discr c'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s' \\<approx> t; c' \\<approx>01 d\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchC_ZO ZObis c d\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchC_ZO_def"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>01 ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>t ?t'1; s' \\<approx> ?t'1; discr c'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s' \\<approx> t; c' \\<approx>01 d\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t c' s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n     s' \\<approx> t \\<and> c' \\<approx>01 d \\<or>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>c (d', t') \\<and>\n         s' \\<approx> t' \\<and> c' \\<approx>01 d') \\<or>\n     (\\<exists>t'.\n         (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t' \\<and> discr c')\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma ZObis_transT[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>c (d',t'); s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s' \\<approx> t; discr d\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms ZObis_matchT_ZO[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<lbrakk>(d, t) \\<rightarrow>t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   discr ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s' \\<approx> t; discr d\\<rbrakk> \\<Longrightarrow> thesis\n  matchT_ZO c d\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchT_ZO_def"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<lbrakk>(d, t) \\<rightarrow>t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   discr ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s' \\<approx> t; discr d\\<rbrakk> \\<Longrightarrow> thesis\n  \\<forall>s t s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n     s' \\<approx> t \\<and> discr d \\<or>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>c (d', t') \\<and>\n         s' \\<approx> t' \\<and> discr d') \\<or>\n     (\\<exists>t'. (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma ZObis_transC2[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>c (c',s'); s' \\<approx> t'; c' \\<approx>01 d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>t s'; s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s \\<approx> t'; c \\<approx>01 d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms ZObis_matchC_ZO_rev[OF 0] ZObis_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<lbrakk>(c, s) \\<rightarrow>c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>01 d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>t ?s'1; ?s'1 \\<approx> t'; discr d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s \\<approx> t'; c \\<approx>01 d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchC_ZO ZObis d c\n  ?s \\<approx>01 ?t \\<Longrightarrow> ?t \\<approx>01 ?s\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchC_ZO_def2"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<lbrakk>(c, s) \\<rightarrow>c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>01 d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>t ?s'1; ?s'1 \\<approx> t'; discr d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s \\<approx> t'; c \\<approx>01 d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t d' t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n     s \\<approx> t' \\<and> d' \\<approx>01 c \\<or>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>c (c', s') \\<and>\n         s' \\<approx> t' \\<and> d' \\<approx>01 c') \\<or>\n     (\\<exists>s'.\n         (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t' \\<and> discr d')\n  ?s \\<approx>01 ?t \\<Longrightarrow> ?t \\<approx>01 ?s\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma ZObis_transT2[consumes 3, case_names Match MatchO MatchS]: \nassumes 0: \"c \\<approx>01 d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>t s'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>c (c',s'); s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<lbrakk>s \\<approx> t'; discr c\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms ZObis_matchT_ZO_rev[OF 0] ZObis_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<lbrakk>(c, s) \\<rightarrow>t ?s'1; ?s'1 \\<approx> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   discr ?c'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s \\<approx> t'; discr c\\<rbrakk> \\<Longrightarrow> thesis\n  matchT_ZO d c\n  ?s \\<approx>01 ?t \\<Longrightarrow> ?t \\<approx>01 ?s\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchT_ZO_def2"], ["proof (prove)\nusing this:\n  c \\<approx>01 d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<lbrakk>(c, s) \\<rightarrow>t ?s'1; ?s'1 \\<approx> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   discr ?c'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>s \\<approx> t'; discr c\\<rbrakk> \\<Longrightarrow> thesis\n  \\<forall>s t t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n     s \\<approx> t' \\<and> discr c \\<or>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>c (c', s') \\<and>\n         s' \\<approx> t' \\<and> discr c') \\<or>\n     (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t')\n  ?s \\<approx>01 ?t \\<Longrightarrow> ?t \\<approx>01 ?s\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "(* Wbis: *)"], ["", "lemma Wbis_transC[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\" \nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms Wbis_matchC_M[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>w ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1; discr c'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchC_M Wbis c d\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchC_M_def"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>w ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1; discr c'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t c' s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>*c (d', t') \\<and>\n         s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n     (\\<exists>t'.\n         (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma Wbis_transT[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms Wbis_matchT_M[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   discr ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchT_M c d\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchT_M_def"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   discr ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t s'.\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>*c (d', t') \\<and>\n         s' \\<approx> t' \\<and> discr d') \\<or>\n     (\\<exists>t'. (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma Wbis_transC2[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms Wbis_matchC_M_rev[OF 0] Wbis_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<lbrakk>(c, s) \\<rightarrow>*c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>w d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>*t ?s'1; ?s'1 \\<approx> t'; discr d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchC_M Wbis d c\n  ?c \\<approx>w ?d \\<Longrightarrow> ?d \\<approx>w ?c\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchC_M_def2"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<lbrakk>(c, s) \\<rightarrow>*c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>w d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>*t ?s'1; ?s'1 \\<approx> t'; discr d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t d' t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>*c (c', s') \\<and>\n         s' \\<approx> t' \\<and> d' \\<approx>w c') \\<or>\n     (\\<exists>s'.\n         (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t' \\<and> discr d')\n  ?c \\<approx>w ?d \\<Longrightarrow> ?d \\<approx>w ?c\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "lemma Wbis_transT2[consumes 3, case_names Match MatchO]: \nassumes 0: \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nand \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms Wbis_matchT_M_rev[OF 0] Wbis_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<lbrakk>(c, s) \\<rightarrow>*t ?s'1; ?s'1 \\<approx> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>*c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   discr ?c'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  matchT_M d c\n  ?c \\<approx>w ?d \\<Longrightarrow> ?d \\<approx>w ?c\n\ngoal (1 subgoal):\n 1. thesis", "unfolding matchT_M_def2"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<lbrakk>(c, s) \\<rightarrow>*t ?s'1; ?s'1 \\<approx> t'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(c, s) \\<rightarrow>*c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   discr ?c'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<forall>s t t'.\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>*c (c', s') \\<and>\n         s' \\<approx> t' \\<and> discr c') \\<or>\n     (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t')\n  ?c \\<approx>w ?d \\<Longrightarrow> ?d \\<approx>w ?c\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["", "(*  *)"], ["", "lemma Wbis_MtransC[consumes 3, case_names Match MatchO]: \nassumes \"c \\<approx>w d\" and \"s \\<approx> t\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nand \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. thesis", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> \n        c \\<approx>w d \\<Longrightarrow> s \\<approx> t \\<Longrightarrow> \n        (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or> \n        (\\<exists> t'. (d,t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>w d;\n     s \\<approx> t\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>d' t'.\n                          (d, t) \\<rightarrow>*c (d', t') \\<and>\n                          s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                      (\\<exists>t'.\n                          (d, t) \\<rightarrow>*t t' \\<and>\n                          s' \\<approx> t' \\<and> discr c')", "proof (induct rule: MtransC_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s \\<approx> t' \\<and> c \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s \\<approx> t' \\<and> discr c)\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>d' t'.\n                              (d, t) \\<rightarrow>*c (d', t') \\<and>\n                              s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                          (\\<exists>t'.\n                              (d, t) \\<rightarrow>*t t' \\<and>\n                              s' \\<approx> t' \\<and> discr c');\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>w d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "case (Trans c s c' s' c'' s'')"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>d' t'.\n                        (d, t) \\<rightarrow>*c (d', t') \\<and>\n                        s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                    (\\<exists>t'.\n                        (d, t) \\<rightarrow>*t t' \\<and>\n                        s' \\<approx> t' \\<and> discr c')\n  (c', s') \\<rightarrow>c (c'', s'')\n  c \\<approx>w d\n  s \\<approx> t\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s \\<approx> t' \\<and> c \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s \\<approx> t' \\<and> discr c)\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>d' t'.\n                              (d, t) \\<rightarrow>*c (d', t') \\<and>\n                              s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                          (\\<exists>t'.\n                              (d, t) \\<rightarrow>*t t' \\<and>\n                              s' \\<approx> t' \\<and> discr c');\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>w d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "hence c's': \"(c', s') \\<rightarrow>c (c'', s'')\"\n    and  \n    \"(\\<exists>d' t'. (d, t) \\<rightarrow>*c (d', t') \\<and> s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n     (\\<exists>t'. (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>d' t'.\n                        (d, t) \\<rightarrow>*c (d', t') \\<and>\n                        s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                    (\\<exists>t'.\n                        (d, t) \\<rightarrow>*t t' \\<and>\n                        s' \\<approx> t' \\<and> discr c')\n  (c', s') \\<rightarrow>c (c'', s'')\n  c \\<approx>w d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (c', s') \\<rightarrow>c (c'', s'') &&&\n    (\\<exists>d' t'.\n        (d, t) \\<rightarrow>*c (d', t') \\<and>\n        s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n    (\\<exists>t'.\n        (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')", "by auto"], ["proof (state)\nthis:\n  (c', s') \\<rightarrow>c (c'', s'')\n  (\\<exists>d' t'.\n      (d, t) \\<rightarrow>*c (d', t') \\<and>\n      s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n  (\\<exists>t'.\n      (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s \\<approx> t' \\<and> c \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s \\<approx> t' \\<and> discr c)\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> (\\<exists>d' t'.\n                              (d, t) \\<rightarrow>*c (d', t') \\<and>\n                              s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                          (\\<exists>t'.\n                              (d, t) \\<rightarrow>*t t' \\<and>\n                              s' \\<approx> t' \\<and> discr c');\n        (c', s') \\<rightarrow>c (c'', s''); c \\<approx>w d;\n        s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "thus ?case (is \"?A \\<or> ?B\")"], ["proof (prove)\nusing this:\n  (c', s') \\<rightarrow>c (c'', s'')\n  (\\<exists>d' t'.\n      (d, t) \\<rightarrow>*c (d', t') \\<and>\n      s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n  (\\<exists>t'.\n      (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')\n\ngoal (1 subgoal):\n 1. (\\<exists>d' t'.\n        (d, t) \\<rightarrow>*c (d', t') \\<and>\n        s'' \\<approx> t' \\<and> c'' \\<approx>w d') \\<or>\n    (\\<exists>t'.\n        (d, t) \\<rightarrow>*t t' \\<and> s'' \\<approx> t' \\<and> discr c'')", "proof(elim disjE exE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n        c' \\<approx>w d'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')\n 2. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "fix d' t'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n        c' \\<approx>w d'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')\n 2. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "assume c'd': \"c' \\<approx>w d'\" and s't': \"s' \\<approx> t'\"\n      and dt: \"(d, t) \\<rightarrow>*c (d', t')\""], ["proof (state)\nthis:\n  c' \\<approx>w d'\n  s' \\<approx> t'\n  (d, t) \\<rightarrow>*c (d', t')\n\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n        c' \\<approx>w d'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')\n 2. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "from c'd' s't' c's'"], ["proof (chain)\npicking this:\n  c' \\<approx>w d'\n  s' \\<approx> t'\n  (c', s') \\<rightarrow>c (c'', s'')", "show ?case"], ["proof (prove)\nusing this:\n  c' \\<approx>w d'\n  s' \\<approx> t'\n  (c', s') \\<rightarrow>c (c'', s'')\n\ngoal (1 subgoal):\n 1. (\\<exists>d' t'.\n        (d, t) \\<rightarrow>*c (d', t') \\<and>\n        s'' \\<approx> t' \\<and> c'' \\<approx>w d') \\<or>\n    (\\<exists>t'.\n        (d, t) \\<rightarrow>*t t' \\<and> s'' \\<approx> t' \\<and> discr c'')", "apply (cases rule: Wbis_transC)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>d'a t'a.\n       \\<lbrakk>(d', t') \\<rightarrow>*c (d'a, t'a); s'' \\<approx> t'a;\n        c'' \\<approx>w d'a\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')\n 2. \\<And>t'a.\n       \\<lbrakk>(d', t') \\<rightarrow>*t t'a; s'' \\<approx> t'a;\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "by (metis dt MtransC_Trans MtransC_MtransT)+"], ["proof (state)\nthis:\n  (\\<exists>d' t'.\n      (d, t) \\<rightarrow>*c (d', t') \\<and>\n      s'' \\<approx> t' \\<and> c'' \\<approx>w d') \\<or>\n  (\\<exists>t'.\n      (d, t) \\<rightarrow>*t t' \\<and> s'' \\<approx> t' \\<and> discr c'')\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "fix t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "assume s't': \"s' \\<approx> t'\" and c': \"discr c'\" \n      and dt: \"(d, t) \\<rightarrow>*t t'\""], ["proof (state)\nthis:\n  s' \\<approx> t'\n  discr c'\n  (d, t) \\<rightarrow>*t t'\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(c', s') \\<rightarrow>c (c'', s'');\n        (d, t) \\<rightarrow>*t t'; s' \\<approx> t'; discr c'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s'' \\<approx> t' \\<and>\n                             c'' \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s'' \\<approx> t' \\<and> discr c'')", "from c' s't' c's'"], ["proof (chain)\npicking this:\n  discr c'\n  s' \\<approx> t'\n  (c', s') \\<rightarrow>c (c'', s'')", "show ?case"], ["proof (prove)\nusing this:\n  discr c'\n  s' \\<approx> t'\n  (c', s') \\<rightarrow>c (c'', s'')\n\ngoal (1 subgoal):\n 1. (\\<exists>d' t'.\n        (d, t) \\<rightarrow>*c (d', t') \\<and>\n        s'' \\<approx> t' \\<and> c'' \\<approx>w d') \\<or>\n    (\\<exists>t'.\n        (d, t) \\<rightarrow>*t t' \\<and> s'' \\<approx> t' \\<and> discr c'')", "by (metis discr.simps dt indis_sym indis_trans)"], ["proof (state)\nthis:\n  (\\<exists>d' t'.\n      (d, t) \\<rightarrow>*c (d', t') \\<and>\n      s'' \\<approx> t' \\<and> c'' \\<approx>w d') \\<or>\n  (\\<exists>t'.\n      (d, t) \\<rightarrow>*t t' \\<and> s'' \\<approx> t' \\<and> discr c'')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>d' t'.\n      (d, t) \\<rightarrow>*c (d', t') \\<and>\n      s'' \\<approx> t' \\<and> c'' \\<approx>w d') \\<or>\n  (\\<exists>t'.\n      (d, t) \\<rightarrow>*t t' \\<and> s'' \\<approx> t' \\<and> discr c'')\n\ngoal (1 subgoal):\n 1. \\<And>c s.\n       \\<lbrakk>c \\<approx>w d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s \\<approx> t' \\<and> c \\<approx>w d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>*t t' \\<and>\n                             s \\<approx> t' \\<and> discr c)", "qed auto"], ["proof (state)\nthis:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>w d;\n   s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>d' t'.\n                        (d, t) \\<rightarrow>*c (d', t') \\<and>\n                        s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                    (\\<exists>t'.\n                        (d, t) \\<rightarrow>*t t' \\<and>\n                        s' \\<approx> t' \\<and> discr c')\n\ngoal (1 subgoal):\n 1. thesis", "thus thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>w d;\n   s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>d' t'.\n                        (d, t) \\<rightarrow>*c (d', t') \\<and>\n                        s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                    (\\<exists>t'.\n                        (d, t) \\<rightarrow>*t t' \\<and>\n                        s' \\<approx> t' \\<and> discr c')\n\ngoal (1 subgoal):\n 1. thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); c \\<approx>w d;\n   s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> (\\<exists>d' t'.\n                        (d, t) \\<rightarrow>*c (d', t') \\<and>\n                        s' \\<approx> t' \\<and> c' \\<approx>w d') \\<or>\n                    (\\<exists>t'.\n                        (d, t) \\<rightarrow>*t t' \\<and>\n                        s' \\<approx> t' \\<and> discr c')\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>w ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1; discr c'\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Wbis_MtransT[consumes 3, case_names Match MatchO]: \nassumes c_d: \"c \\<approx>w d\" and st: \"s \\<approx> t\" and cs: \"(c,s) \\<rightarrow>*t s'\" \nand 1: \"\\<And> t'. \\<lbrakk>(d,t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 2: \"\\<And> d' t'. \\<lbrakk>(d,t) \\<rightarrow>*c (d',t'); s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using cs"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. thesis", "proof(elim MtransT_invert2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c' s'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'a);\n        (c', s'a) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix c'' s''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c' s'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'a);\n        (c', s'a) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume cs: \"(c,s) \\<rightarrow>*c (c'',s'')\" \n  and c''s'': \"(c'',s'') \\<rightarrow>t s'\""], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. \\<And>c' s'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'a);\n        (c', s'a) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> thesis", "from c_d st cs"], ["proof (chain)\npicking this:\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>*c (c'', s'')", "show thesis"], ["proof (prove)\nusing this:\n  c \\<approx>w d\n  s \\<approx> t\n  (c, s) \\<rightarrow>*c (c'', s'')\n\ngoal (1 subgoal):\n 1. thesis", "proof (cases rule: Wbis_MtransC)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s'' \\<approx> t';\n        c'' \\<approx>w d'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*t t'; s'' \\<approx> t';\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix d'' t''"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s'' \\<approx> t';\n        c'' \\<approx>w d'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*t t'; s'' \\<approx> t';\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume dt: \"(d, t) \\<rightarrow>*c (d'', t'')\"\n    and s''t'': \"s'' \\<approx> t''\" and c''d'': \"c'' \\<approx>w d''\""], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>w d''\n\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s'' \\<approx> t';\n        c'' \\<approx>w d'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*t t'; s'' \\<approx> t';\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> thesis", "from c''d'' s''t'' c''s''"], ["proof (chain)\npicking this:\n  c'' \\<approx>w d''\n  s'' \\<approx> t''\n  (c'', s'') \\<rightarrow>t s'", "show thesis"], ["proof (prove)\nusing this:\n  c'' \\<approx>w d''\n  s'' \\<approx> t''\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. thesis", "apply (cases rule: Wbis_transT)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>(d'', t'') \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>d' t'.\n       \\<lbrakk>(d'', t'') \\<rightarrow>*c (d', t'); s' \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> thesis", "by (metis 1 2 dt MtransC_MtransT MtransC_Trans)+"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*t t'; s'' \\<approx> t';\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*t t'; s'' \\<approx> t';\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (MatchO t')"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*t t'\n  s'' \\<approx> t'\n  discr c''\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       \\<lbrakk>(d, t) \\<rightarrow>*t t'; s'' \\<approx> t';\n        discr c''\\<rbrakk>\n       \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>*t t'\n  s'' \\<approx> t'\n  discr c''\n\ngoal (1 subgoal):\n 1. thesis", "using 1 c''s''"], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>*t t'\n  s'' \\<approx> t'\n  discr c''\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. thesis", "by (metis discr_MtransT indis_sym indis_trans transT_MtransT)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Wbis_MtransC2[consumes 3, case_names Match MatchO]: \nassumes \"c \\<approx>w d\" and \"s \\<approx> t\" and dt: \"(d,t) \\<rightarrow>*c (d',t')\"\nand 1: \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; c' \\<approx>w d'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 2: \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'; discr d'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. thesis", "have dc: \"d \\<approx>w c\" and ts: \"t \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<approx>w c &&& t \\<approx> s", "by (metis assms Wbis_Sym indis_sym)+"], ["proof (state)\nthis:\n  d \\<approx>w c\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. thesis", "from dc ts dt"], ["proof (chain)\npicking this:\n  d \\<approx>w c\n  t \\<approx> s\n  (d, t) \\<rightarrow>*c (d', t')", "show thesis"], ["proof (prove)\nusing this:\n  d \\<approx>w c\n  t \\<approx> s\n  (d, t) \\<rightarrow>*c (d', t')\n\ngoal (1 subgoal):\n 1. thesis", "apply(cases rule: Wbis_MtransC)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>d'a t'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (d'a, t'a); t' \\<approx> t'a;\n        d' \\<approx>w d'a\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>t'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*t t'a; t' \\<approx> t'a;\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> thesis", "by (metis 1 2 Wbis_Sym indis_sym)+"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Wbis_MtransT2[consumes 3, case_names Match MatchO]: \nassumes \"c \\<approx>w d\" and \"s \\<approx> t\" and dt: \"(d,t) \\<rightarrow>*t t'\"\nand 1: \"\\<And> s'. \\<lbrakk>(c,s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk> \\<Longrightarrow> thesis\"\nand 2: \"\\<And> c' s'. \\<lbrakk>(c,s) \\<rightarrow>*c (c',s'); s' \\<approx> t'; discr c'\\<rbrakk> \\<Longrightarrow> thesis\"\nshows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. thesis", "have dc: \"d \\<approx>w c\" and ts: \"t \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<approx>w c &&& t \\<approx> s", "by (metis assms Wbis_Sym indis_sym)+"], ["proof (state)\nthis:\n  d \\<approx>w c\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. thesis", "from dc ts dt"], ["proof (chain)\npicking this:\n  d \\<approx>w c\n  t \\<approx> s\n  (d, t) \\<rightarrow>*t t'", "show thesis"], ["proof (prove)\nusing this:\n  d \\<approx>w c\n  t \\<approx> s\n  (d, t) \\<rightarrow>*t t'\n\ngoal (1 subgoal):\n 1. thesis", "apply(cases rule: Wbis_MtransT)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*t t'a; t' \\<approx> t'a\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>d' t'a.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (d', t'a); t' \\<approx> t'a;\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> thesis", "by (metis 1 2 Wbis_Sym indis_sym)+"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "(* BisT: *)"], ["", "lemma BisT_transC[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(c,s) \\<rightarrow>c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms BisT_matchC_TMC[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  matchC_TMC BisT c d\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_TMC_def"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (c', s')\n  \\<forall>s t c' s'.\n     mustT c s \\<and>\n     mustT d t \\<and>\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n     (\\<exists>d' t'.\n         (d, t) \\<rightarrow>*c (d', t') \\<and>\n         s' \\<approx> t' \\<and> c' \\<approx>T d')\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma BisT_transT[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(c,s) \\<rightarrow>t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms BisT_matchT_TMT[OF 0]"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  matchT_TMT c d\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_TMT_def"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (c, s) \\<rightarrow>t s'\n  \\<forall>s t s'.\n     mustT c s \\<and>\n     mustT d t \\<and>\n     s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n     (\\<exists>t'. (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma BisT_transC2[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(d,t) \\<rightarrow>c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms BisT_matchC_TMC_rev[OF 0] BisT_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  matchC_TMC BisT d c\n  ?c \\<approx>T ?d \\<Longrightarrow> ?d \\<approx>T ?c\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchC_TMC_def2"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (d, t) \\<rightarrow>c (d', t')\n  \\<forall>s t d' t'.\n     mustT c s \\<and>\n     mustT d t \\<and>\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n     (\\<exists>c' s'.\n         (c, s) \\<rightarrow>*c (c', s') \\<and>\n         s' \\<approx> t' \\<and> d' \\<approx>T c')\n  ?c \\<approx>T ?d \\<Longrightarrow> ?d \\<approx>T ?c\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma BisT_transT2[consumes 5, case_names Match]: \nassumes 0: \"c \\<approx>T d\" \nand \"mustT c s\" and \"mustT d t\"\nand \"s \\<approx> t\" and \"(d,t) \\<rightarrow>t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms BisT_matchT_TMT_rev[OF 0] BisT_Sym"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  matchT_TMT d c\n  ?c \\<approx>T ?d \\<Longrightarrow> ?d \\<approx>T ?c\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding matchT_TMT_def2"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  \\<forall>s t t'.\n     mustT c s \\<and>\n     mustT d t \\<and>\n     s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n     (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t')\n  ?c \\<approx>T ?d \\<Longrightarrow> ?d \\<approx>T ?c\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "(*  *)"], ["", "lemma BisT_MtransC[consumes 5, case_names Match]: \nassumes \"c \\<approx>T d\" \nand \"mustT c s\" \"mustT d t\"\nand \"s \\<approx> t\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nobtains d' t' where \n\"(d,t) \\<rightarrow>*c (d',t')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> \n        mustT c s \\<Longrightarrow> mustT d t \\<Longrightarrow> \n        c \\<approx>T d \\<Longrightarrow> s \\<approx> t \\<Longrightarrow> \n        (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> c' \\<approx>T d')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); mustT c s; mustT d t;\n     c \\<approx>T d; s \\<approx> t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>d' t'.\n                         (d, t) \\<rightarrow>*c (d', t') \\<and>\n                         s' \\<approx> t' \\<and> c' \\<approx>T d'", "proof (induct rule: MtransC_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d;\n         s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>T d';\n        (c', s') \\<rightarrow>c (c'', s''); mustT c s; mustT d t;\n        c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "case (Trans c s c' s' c'' s'')"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  mustT c s\n  mustT d t\n  c \\<approx>T d\n  s \\<approx> t\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d;\n         s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>T d';\n        (c', s') \\<rightarrow>c (c'', s''); mustT c s; mustT d t;\n        c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "then"], ["proof (chain)\npicking this:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  mustT c s\n  mustT d t\n  c \\<approx>T d\n  s \\<approx> t", "obtain d' t' where d: \"(d, t) \\<rightarrow>*c (d', t')\" \n    and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\"\n    and c's': \"(c', s') \\<rightarrow>c (c'', s'')\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  mustT c s\n  mustT d t\n  c \\<approx>T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'; (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d;\n         s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>T d';\n        (c', s') \\<rightarrow>c (c'', s''); mustT c s; mustT d t;\n        c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "moreover"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d;\n         s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>T d';\n        (c', s') \\<rightarrow>c (c'', s''); mustT c s; mustT d t;\n        c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "have \"mustT c' s'\" \"mustT d' t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mustT c' s' &&& mustT d' t'", "by (metis Trans mustT_MtransC d)+"], ["proof (state)\nthis:\n  mustT c' s'\n  mustT d' t'\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d;\n         s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>T d';\n        (c', s') \\<rightarrow>c (c'', s''); mustT c s; mustT d t;\n        c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "ultimately"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  mustT c' s'\n  mustT d' t'", "obtain d'' t'' where \"s'' \\<approx> t''\" and \"c'' \\<approx>T d''\" \n    and \"(d', t') \\<rightarrow>*c (d'', t'')\""], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>*c (d', t')\n  s' \\<approx> t'\n  c' \\<approx>T d'\n  (c', s') \\<rightarrow>c (c'', s'')\n  mustT c' s'\n  mustT d' t'\n\ngoal (1 subgoal):\n 1. (\\<And>t'' d''.\n        \\<lbrakk>s'' \\<approx> t''; c'' \\<approx>T d'';\n         (d', t') \\<rightarrow>*c (d'', t'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis BisT_transC)"], ["proof (state)\nthis:\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n  (d', t') \\<rightarrow>*c (d'', t'')\n\ngoal (2 subgoals):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d;\n         s \\<approx> t\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (d, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> c' \\<approx>T d';\n        (c', s') \\<rightarrow>c (c'', s''); mustT c s; mustT d t;\n        c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "thus ?case"], ["proof (prove)\nusing this:\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n  (d', t') \\<rightarrow>*c (d'', t'')\n\ngoal (1 subgoal):\n 1. \\<exists>d' t'.\n       (d, t) \\<rightarrow>*c (d', t') \\<and>\n       s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "using d"], ["proof (prove)\nusing this:\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n  (d', t') \\<rightarrow>*c (d'', t'')\n  (d, t) \\<rightarrow>*c (d', t')\n\ngoal (1 subgoal):\n 1. \\<exists>d' t'.\n       (d, t) \\<rightarrow>*c (d', t') \\<and>\n       s'' \\<approx> t' \\<and> c'' \\<approx>T d'", "by (metis MtransC_Trans)"], ["proof (state)\nthis:\n  \\<exists>d' t'.\n     (d, t) \\<rightarrow>*c (d', t') \\<and>\n     s'' \\<approx> t' \\<and> c'' \\<approx>T d'\n\ngoal (1 subgoal):\n 1. \\<And>c s.\n       \\<lbrakk>mustT c s; mustT d t; c \\<approx>T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s \\<approx> t' \\<and> c \\<approx>T d'", "qed (metis MtransC_Refl)"], ["proof (state)\nthis:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); mustT c s; mustT d t;\n   c \\<approx>T d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>T d'\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d', t'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); mustT c s; mustT d t;\n   c \\<approx>T d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>T d'\n\ngoal (1 subgoal):\n 1. thesis", "using that assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); mustT c s; mustT d t;\n   c \\<approx>T d; s \\<approx> t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (d, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> c' \\<approx>T d'\n  \\<lbrakk>(d, t) \\<rightarrow>*c (?d'1, ?t'1); s' \\<approx> ?t'1;\n   c' \\<approx>T ?d'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BisT_MtransT[consumes 5, case_names Match]: \nassumes 1: \"c \\<approx>T d\" \nand ter: \"mustT c s\" \"mustT d t\"\nand 2: \"s \\<approx> t\" and 3: \"(c,s) \\<rightarrow>*t s'\"\nobtains t' where \"(d,t) \\<rightarrow>*t t'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain c'' s'' where 4: \"(c,s) \\<rightarrow>*c (c'',s'')\" \n  and 5: \"(c'',s'') \\<rightarrow>t s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c'' s''.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c'', s'');\n         (c'', s'') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 3"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. (\\<And>c'' s''.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c'', s'');\n         (c'', s'') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis MtransT_invert2)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'", "obtain d'' t'' where d: \"(d,t) \\<rightarrow>*c (d'',t'')\" \n  and \"s'' \\<approx> t''\" and \"c'' \\<approx>T d''\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. (\\<And>d'' t''.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d'', t''); s'' \\<approx> t'';\n         c'' \\<approx>T d''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 1 2 ter 4 BisT_MtransC"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c'', s'')\n  (c'', s'') \\<rightarrow>t s'\n  c \\<approx>T d\n  s \\<approx> t\n  mustT c s\n  mustT d t\n  (c, s) \\<rightarrow>*c (c'', s'')\n  \\<lbrakk>?c \\<approx>T ?d; mustT ?c ?s; mustT ?d ?t; ?s \\<approx> ?t;\n   (?c, ?s) \\<rightarrow>*c (?c', ?s');\n   \\<And>d' t'.\n      \\<lbrakk>(?d, ?t) \\<rightarrow>*c (d', t'); ?s' \\<approx> t';\n       ?c' \\<approx>T d'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>d'' t''.\n        \\<lbrakk>(d, t) \\<rightarrow>*c (d'', t''); s'' \\<approx> t'';\n         c'' \\<approx>T d''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"mustT c'' s''\" \"mustT d'' t''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mustT c'' s'' &&& mustT d'' t''", "by (metis d 4 assms mustT_MtransC)+"], ["proof (state)\nthis:\n  mustT c'' s''\n  mustT d'' t''\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n  mustT c'' s''\n  mustT d'' t''", "obtain t' where \"s' \\<approx> t'\" and \"(d'',t'') \\<rightarrow>*t t'\""], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>*c (d'', t'')\n  s'' \\<approx> t''\n  c'' \\<approx>T d''\n  mustT c'' s''\n  mustT d'' t''\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>s' \\<approx> t'; (d'', t'') \\<rightarrow>*t t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis 5 ter BisT_transT)"], ["proof (state)\nthis:\n  s' \\<approx> t'\n  (d'', t'') \\<rightarrow>*t t'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus thesis"], ["proof (prove)\nusing this:\n  s' \\<approx> t'\n  (d'', t'') \\<rightarrow>*t t'\n\ngoal (1 subgoal):\n 1. thesis", "using d that"], ["proof (prove)\nusing this:\n  s' \\<approx> t'\n  (d'', t'') \\<rightarrow>*t t'\n  (d, t) \\<rightarrow>*c (d'', t'')\n  \\<lbrakk>(d, t) \\<rightarrow>*t ?t'1; s' \\<approx> ?t'1\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis MtransC_MtransT)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BisT_MtransC2[consumes 3, case_names Match]: \nassumes \"c \\<approx>T d\" \nand ter: \"mustT c s\" \"mustT d t\"\nand \"s \\<approx> t\" and 1: \"(d,t) \\<rightarrow>*c (d',t')\"\nobtains c' s' where \n\"(c,s) \\<rightarrow>*c (c',s')\" and \"s' \\<approx> t'\" and \"c' \\<approx>T d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"d \\<approx>T c\" and \"t \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<approx>T c &&& t \\<approx> s", "using assms"], ["proof (prove)\nusing this:\n  c \\<approx>T d\n  mustT c s\n  mustT d t\n  s \\<approx> t\n  (d, t) \\<rightarrow>*c (d', t')\n\ngoal (1 subgoal):\n 1. d \\<approx>T c &&& t \\<approx> s", "by (metis BisT_Sym indis_sym)+"], ["proof (state)\nthis:\n  d \\<approx>T c\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  d \\<approx>T c\n  t \\<approx> s", "obtain c' s' where \n  \"(c,s) \\<rightarrow>*c (c',s')\" and \"t' \\<approx> s'\" and \"d' \\<approx>T c'\""], ["proof (prove)\nusing this:\n  d \\<approx>T c\n  t \\<approx> s\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); t' \\<approx> s';\n         d' \\<approx>T c'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis 1 ter BisT_MtransC)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s')\n  t' \\<approx> s'\n  d' \\<approx>T c'\n\ngoal (1 subgoal):\n 1. (\\<And>c' s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (c', s'); s' \\<approx> t';\n         c' \\<approx>T d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  t' \\<approx> s'\n  d' \\<approx>T c'\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s')\n  t' \\<approx> s'\n  d' \\<approx>T c'\n  \\<lbrakk>(c, s) \\<rightarrow>*c (?c'1, ?s'1); ?s'1 \\<approx> t';\n   ?c'1 \\<approx>T d'\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis BisT_Sym indis_sym)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BisT_MtransT02[consumes 3, case_names Match]: \nassumes \"c \\<approx>T d\" \nand ter: \"mustT c s\" \"mustT d t\"\nand \"s \\<approx> t\" and \"(d,t) \\<rightarrow>*t t'\"\nobtains s' where \"(c,s) \\<rightarrow>*t s'\" and \"s' \\<approx> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        \\<lbrakk>(c, s) \\<rightarrow>*t s'; s' \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis BisT_MtransT BisT_Sym assms indis_sym)"], ["", "subsection \\<open>Execution traces\\<close>"], ["", "(* Partial traces, modeled as lists of configurations *)"], ["", "primrec parTrace where\n\"parTrace [] \\<longleftrightarrow> False\" |\n\"parTrace (cf#cfl) \\<longleftrightarrow> (cfl \\<noteq> [] \\<longrightarrow> parTrace cfl \\<and> cf \\<rightarrow>c hd cfl)\""], ["", "lemma trans_Step2:\n  \"cf \\<rightarrow>*c cf' \\<Longrightarrow> cf' \\<rightarrow>c cf'' \\<Longrightarrow> cf \\<rightarrow>*c cf''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cf \\<rightarrow>*c cf'; cf' \\<rightarrow>c cf''\\<rbrakk>\n    \\<Longrightarrow> cf \\<rightarrow>*c cf''", "using trans_Step[of \"fst cf\" \"snd cf\" \"fst cf'\" \"snd cf'\" \"fst cf''\" \"snd cf''\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(fst cf, snd cf) \\<rightarrow>*c (fst cf', snd cf');\n   (fst cf', snd cf') \\<rightarrow>c (fst cf'', snd cf'')\\<rbrakk>\n  \\<Longrightarrow> (fst cf, snd cf) \\<rightarrow>*c (fst cf'', snd cf'')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cf \\<rightarrow>*c cf'; cf' \\<rightarrow>c cf''\\<rbrakk>\n    \\<Longrightarrow> cf \\<rightarrow>*c cf''", "by simp"], ["", "lemma parTrace_not_empty[simp]: \"parTrace cfl \\<Longrightarrow> cfl \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parTrace cfl \\<Longrightarrow> cfl \\<noteq> []", "by (cases \"cfl = []\") simp"], ["", "lemma parTrace_snoc[simp]:\n  \"parTrace (cfl@[cf]) \\<longleftrightarrow> (cfl \\<noteq> [] \\<longrightarrow> parTrace cfl \\<and> last cfl \\<rightarrow>c cf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parTrace (cfl @ [cf]) =\n    (cfl \\<noteq> [] \\<longrightarrow>\n     parTrace cfl \\<and> last cfl \\<rightarrow>c cf)", "by (induct cfl) auto"], ["", "lemma MtransC_Ex_parTrace:\n  assumes \"cf \\<rightarrow>*c cf'\" shows \"\\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'", "using assms"], ["proof (prove)\nusing this:\n  cf \\<rightarrow>*c cf'\n\ngoal (1 subgoal):\n 1. \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'", "proof (induct rule: MtransC_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cf.\n       \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf\n 2. \\<And>cf cf' cf''.\n       \\<lbrakk>cf \\<rightarrow>*c cf';\n        \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf';\n        cf' \\<rightarrow>c cf''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfl.\n                            parTrace cfl \\<and>\n                            hd cfl = cf \\<and> last cfl = cf''", "case (Refl cf)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>cf.\n       \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf\n 2. \\<And>cf cf' cf''.\n       \\<lbrakk>cf \\<rightarrow>*c cf';\n        \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf';\n        cf' \\<rightarrow>c cf''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfl.\n                            parTrace cfl \\<and>\n                            hd cfl = cf \\<and> last cfl = cf''", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf", "by (auto intro!: exI[of _ \"[cf]\"])"], ["proof (state)\nthis:\n  \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf\n\ngoal (1 subgoal):\n 1. \\<And>cf cf' cf''.\n       \\<lbrakk>cf \\<rightarrow>*c cf';\n        \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf';\n        cf' \\<rightarrow>c cf''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfl.\n                            parTrace cfl \\<and>\n                            hd cfl = cf \\<and> last cfl = cf''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>cf cf' cf''.\n       \\<lbrakk>cf \\<rightarrow>*c cf';\n        \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf';\n        cf' \\<rightarrow>c cf''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfl.\n                            parTrace cfl \\<and>\n                            hd cfl = cf \\<and> last cfl = cf''", "case (Trans cf cf' cf'')"], ["proof (state)\nthis:\n  cf \\<rightarrow>*c cf'\n  \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'\n  cf' \\<rightarrow>c cf''\n\ngoal (1 subgoal):\n 1. \\<And>cf cf' cf''.\n       \\<lbrakk>cf \\<rightarrow>*c cf';\n        \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf';\n        cf' \\<rightarrow>c cf''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfl.\n                            parTrace cfl \\<and>\n                            hd cfl = cf \\<and> last cfl = cf''", "then"], ["proof (chain)\npicking this:\n  cf \\<rightarrow>*c cf'\n  \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'\n  cf' \\<rightarrow>c cf''", "obtain cfl where \"parTrace cfl\" \"hd cfl = cf\" \"last cfl = cf'\""], ["proof (prove)\nusing this:\n  cf \\<rightarrow>*c cf'\n  \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf'\n  cf' \\<rightarrow>c cf''\n\ngoal (1 subgoal):\n 1. (\\<And>cfl.\n        \\<lbrakk>parTrace cfl; hd cfl = cf; last cfl = cf'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  parTrace cfl\n  hd cfl = cf\n  last cfl = cf'\n\ngoal (1 subgoal):\n 1. \\<And>cf cf' cf''.\n       \\<lbrakk>cf \\<rightarrow>*c cf';\n        \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf';\n        cf' \\<rightarrow>c cf''\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfl.\n                            parTrace cfl \\<and>\n                            hd cfl = cf \\<and> last cfl = cf''", "with \\<open>cf' \\<rightarrow>c cf''\\<close>"], ["proof (chain)\npicking this:\n  cf' \\<rightarrow>c cf''\n  parTrace cfl\n  hd cfl = cf\n  last cfl = cf'", "show ?case"], ["proof (prove)\nusing this:\n  cf' \\<rightarrow>c cf''\n  parTrace cfl\n  hd cfl = cf\n  last cfl = cf'\n\ngoal (1 subgoal):\n 1. \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf''", "by (auto intro!: exI[of _ \"cfl @ [cf'']\"])"], ["proof (state)\nthis:\n  \\<exists>cfl. parTrace cfl \\<and> hd cfl = cf \\<and> last cfl = cf''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma parTrace_imp_MtransC:\n  assumes pT: \"parTrace cfl\"\n  shows \"(hd cfl) \\<rightarrow>*c (last cfl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd cfl \\<rightarrow>*c last cfl", "using pT"], ["proof (prove)\nusing this:\n  parTrace cfl\n\ngoal (1 subgoal):\n 1. hd cfl \\<rightarrow>*c last cfl", "proof (induct cfl rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. parTrace [] \\<Longrightarrow> hd [] \\<rightarrow>*c last []\n 2. \\<And>x xs.\n       \\<lbrakk>parTrace xs \\<Longrightarrow> hd xs \\<rightarrow>*c last xs;\n        parTrace (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> hd (xs @ [x]) \\<rightarrow>*c last (xs @ [x])", "case (snoc cf cfl)"], ["proof (state)\nthis:\n  parTrace cfl \\<Longrightarrow> hd cfl \\<rightarrow>*c last cfl\n  parTrace (cfl @ [cf])\n\ngoal (2 subgoals):\n 1. parTrace [] \\<Longrightarrow> hd [] \\<rightarrow>*c last []\n 2. \\<And>x xs.\n       \\<lbrakk>parTrace xs \\<Longrightarrow> hd xs \\<rightarrow>*c last xs;\n        parTrace (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> hd (xs @ [x]) \\<rightarrow>*c last (xs @ [x])", "with trans_Step2[of \"hd cfl\" \"last cfl\" cf]"], ["proof (chain)\npicking this:\n  \\<lbrakk>hd cfl \\<rightarrow>*c last cfl;\n   last cfl \\<rightarrow>c cf\\<rbrakk>\n  \\<Longrightarrow> hd cfl \\<rightarrow>*c cf\n  parTrace cfl \\<Longrightarrow> hd cfl \\<rightarrow>*c last cfl\n  parTrace (cfl @ [cf])", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>hd cfl \\<rightarrow>*c last cfl;\n   last cfl \\<rightarrow>c cf\\<rbrakk>\n  \\<Longrightarrow> hd cfl \\<rightarrow>*c cf\n  parTrace cfl \\<Longrightarrow> hd cfl \\<rightarrow>*c last cfl\n  parTrace (cfl @ [cf])\n\ngoal (1 subgoal):\n 1. hd (cfl @ [cf]) \\<rightarrow>*c last (cfl @ [cf])", "by auto"], ["proof (state)\nthis:\n  hd (cfl @ [cf]) \\<rightarrow>*c last (cfl @ [cf])\n\ngoal (1 subgoal):\n 1. parTrace [] \\<Longrightarrow> hd [] \\<rightarrow>*c last []", "qed simp"], ["", "(* Finite traces, modeled as pairs (partial trace, state): *)"], ["", "fun finTrace where\n\"finTrace (cfl,s) \\<longleftrightarrow>  \n parTrace cfl \\<and> last cfl \\<rightarrow>t s\""], ["", "declare finTrace.simps[simp del]"], ["", "(* The length of a finite trace *)"], ["", "definition \"lengthFT tr \\<equiv> Suc (length (fst tr))\""], ["", "(* The final state of a finite trace *)"], ["", "definition \"fstate tr \\<equiv> snd tr\""], ["", "(* The initial configuration of a finite trace *)"], ["", "definition \"iconfig tr \\<equiv> hd (fst tr)\""], ["", "lemma MtransT_Ex_finTrace:\n  assumes \"cf \\<rightarrow>*t s\" shows \"\\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s", "from \\<open>cf \\<rightarrow>*t s\\<close>"], ["proof (chain)\npicking this:\n  cf \\<rightarrow>*t s", "obtain cf' cfl where \"parTrace cfl\" \"hd cfl = cf\" \"last cfl \\<rightarrow>t s\""], ["proof (prove)\nusing this:\n  cf \\<rightarrow>*t s\n\ngoal (1 subgoal):\n 1. (\\<And>cfl.\n        \\<lbrakk>parTrace cfl; hd cfl = cf;\n         last cfl \\<rightarrow>t s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: MtransT.simps dest!: MtransC_Ex_parTrace)"], ["proof (state)\nthis:\n  parTrace cfl\n  hd cfl = cf\n  last cfl \\<rightarrow>t s\n\ngoal (1 subgoal):\n 1. \\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s", "then"], ["proof (chain)\npicking this:\n  parTrace cfl\n  hd cfl = cf\n  last cfl \\<rightarrow>t s", "show ?thesis"], ["proof (prove)\nusing this:\n  parTrace cfl\n  hd cfl = cf\n  last cfl \\<rightarrow>t s\n\ngoal (1 subgoal):\n 1. \\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s", "by (auto simp: finTrace.simps iconfig_def fstate_def\n             intro!: exI[of _ \"cfl\"] exI[of _ s])"], ["proof (state)\nthis:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = cf \\<and> fstate tr = s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finTrace_imp_MtransT:\n  \"finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr", "using parTrace_imp_MtransC[of \"fst tr\"]"], ["proof (prove)\nusing this:\n  parTrace (fst tr) \\<Longrightarrow>\n  hd (fst tr) \\<rightarrow>*c last (fst tr)\n\ngoal (1 subgoal):\n 1. finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr", "by (cases tr)\n     (auto simp add: iconfig_def fstate_def finTrace.simps MtransT.simps\n           simp del: split_paired_Ex)"], ["", "subsection\n\\<open>Relationship between during-execution and after-execution security\\<close>"], ["", "(* For the termination-sensitive versions: *)"], ["", "lemma WbisT_trace2:\n  assumes bis: \"c \\<approx>wT d\" \"s \\<approx> t\" \n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (d,t) \\<and> fstate tr \\<approx> fstate tr'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and> fstate tr \\<approx> fstate tr'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and> fstate tr \\<approx> fstate tr'", "from tr finTrace_imp_MtransT[of tr]"], ["proof (chain)\npicking this:\n  finTrace tr\n  iconfig tr = (c, s)\n  finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr", "have \"(c, s) \\<rightarrow>*t fstate tr\""], ["proof (prove)\nusing this:\n  finTrace tr\n  iconfig tr = (c, s)\n  finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*t fstate tr", "by auto"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and> fstate tr \\<approx> fstate tr'", "from WbisT_MtransT[OF bis this]"], ["proof (chain)\npicking this:\n  (\\<And>t'.\n      \\<lbrakk>(d, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain t' where \"(d, t) \\<rightarrow>*t t'\" \"fstate tr \\<approx> t'\""], ["proof (prove)\nusing this:\n  (\\<And>t'.\n      \\<lbrakk>(d, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>*t t'\n  fstate tr \\<approx> t'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and> fstate tr \\<approx> fstate tr'", "from MtransT_Ex_finTrace[OF this(1)] this(2)"], ["proof (chain)\npicking this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (d, t) \\<and> fstate tr = t'\n  fstate tr \\<approx> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (d, t) \\<and> fstate tr = t'\n  fstate tr \\<approx> t'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and> fstate tr \\<approx> fstate tr'", "by auto"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and> fstate tr \\<approx> fstate tr'\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem WbisT_trace:\n  assumes \"c \\<approx>wT c\" and \"s \\<approx> t\" \n  and \"finTrace tr\" and \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "using WbisT_trace2[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "."], ["", "theorem ZObisT_trace2:\n  assumes bis: \"c \\<approx>01T d\" \"s \\<approx> t\" \n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (d,t) \\<and>\n               fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "obtain s' cfl where tr_eq: \"tr = (cfl, s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cfl s'.\n        tr = (cfl, s') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases tr) auto"], ["proof (state)\nthis:\n  tr = (cfl, s')\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "with tr"], ["proof (chain)\npicking this:\n  finTrace tr\n  iconfig tr = (c, s)\n  tr = (cfl, s')", "have cfl: \"cfl \\<noteq> []\" \"parTrace cfl\" \"last cfl \\<rightarrow>t s'\" \"hd cfl = (c,s)\""], ["proof (prove)\nusing this:\n  finTrace tr\n  iconfig tr = (c, s)\n  tr = (cfl, s')\n\ngoal (1 subgoal):\n 1. (cfl \\<noteq> [] &&& parTrace cfl) &&&\n    last cfl \\<rightarrow>t s' &&& hd cfl = (c, s)", "by (auto simp add: finTrace.simps iconfig_def)"], ["proof (state)\nthis:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "from this bis"], ["proof (chain)\npicking this:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t", "show ?thesis"], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "unfolding tr_eq fstate_def snd_conv"], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cfl, s')", "proof (induct cfl arbitrary: c d s t rule: list_nonempty_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x c d s t.\n       \\<lbrakk>parTrace [x]; last [x] \\<rightarrow>t s'; hd [x] = (c, s);\n        c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT ([x], s')\n 2. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "case (single cf)"], ["proof (state)\nthis:\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (2 subgoals):\n 1. \\<And>x c d s t.\n       \\<lbrakk>parTrace [x]; last [x] \\<rightarrow>t s'; hd [x] = (c, s);\n        c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT ([x], s')\n 2. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "with ZObisT_transT[of c d s t s']"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<approx>01T d; s \\<approx> t; (c, s) \\<rightarrow>t s';\n   \\<And>t'.\n      \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t", "obtain t' where \"(d,t) \\<rightarrow>t t'\" \"s' \\<approx> t'\" \"cf = (c,s)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<approx>01T d; s \\<approx> t; (c, s) \\<rightarrow>t s';\n   \\<And>t'.\n      \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t';\n         cf = (c, s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>t t'\n  s' \\<approx> t'\n  cf = (c, s)\n\ngoal (2 subgoals):\n 1. \\<And>x c d s t.\n       \\<lbrakk>parTrace [x]; last [x] \\<rightarrow>t s'; hd [x] = (c, s);\n        c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT ([x], s')\n 2. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "then"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>t t'\n  s' \\<approx> t'\n  cf = (c, s)", "show ?case"], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>t t'\n  s' \\<approx> t'\n  cf = (c, s)\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT ([cf], s')", "by (intro exI[of _ \"([(d,t)], t')\"])\n         (simp add: finTrace.simps parTrace_def iconfig_def fstate_def lengthFT_def)"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT ([cf], s')\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "case (cons cf cfl)"], ["proof (state)\nthis:\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>01T ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' \\<le> lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "then"], ["proof (chain)\npicking this:\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>01T ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' \\<le> lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t", "have cfl: \"parTrace cfl\" \"last cfl \\<rightarrow>t s'\""], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>01T ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' \\<le> lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. parTrace cfl &&& last cfl \\<rightarrow>t s'", "by auto"], ["proof (state)\nthis:\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "from cons"], ["proof (chain)\npicking this:\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>01T ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' \\<le> lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t", "have \"(c,s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl))\""], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>01T ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' \\<le> lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl))", "unfolding parTrace_def"], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  \\<lbrakk>rec_list False\n            (\\<lambda>cf cfl cfla.\n                cfl \\<noteq> [] \\<longrightarrow>\n                cfla \\<and> cf \\<rightarrow>c hd cfl)\n            cfl;\n   last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1); ?c1 \\<approx>01T ?d1;\n   ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' \\<le> lengthFT (cfl, s')\n  rec_list False\n   (\\<lambda>cf cfl cfla.\n       cfl \\<noteq> [] \\<longrightarrow>\n       cfla \\<and> cf \\<rightarrow>c hd cfl)\n   (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>01T d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl))", "by (auto simp add: hd_conv_nth)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl))\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' \\<le> lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>01T d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (x # xs, s')", "with \\<open>c \\<approx>01T d\\<close> \\<open>s \\<approx> t\\<close>"], ["proof (chain)\npicking this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl))", "show ?case"], ["proof (prove)\nusing this:\n  c \\<approx>01T d\n  s \\<approx> t\n  (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl))\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and>\n       lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "proof (cases rule: ZObisT_transC)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n        fst (hd cfl) \\<approx>01T d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (cf # cfl, s')\n 2. \\<lbrakk>snd (hd cfl) \\<approx> t; fst (hd cfl) \\<approx>01T d\\<rbrakk>\n    \\<Longrightarrow> \\<exists>tr'.\n                         finTrace tr' \\<and>\n                         iconfig tr' = (d, t) \\<and>\n                         s' \\<approx> snd tr' \\<and>\n                         lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "case MatchS"], ["proof (state)\nthis:\n  snd (hd cfl) \\<approx> t\n  fst (hd cfl) \\<approx>01T d\n\ngoal (2 subgoals):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n        fst (hd cfl) \\<approx>01T d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (cf # cfl, s')\n 2. \\<lbrakk>snd (hd cfl) \\<approx> t; fst (hd cfl) \\<approx>01T d\\<rbrakk>\n    \\<Longrightarrow> \\<exists>tr'.\n                         finTrace tr' \\<and>\n                         iconfig tr' = (d, t) \\<and>\n                         s' \\<approx> snd tr' \\<and>\n                         lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "from cons(2)[OF cfl _ this(2,1)]"], ["proof (chain)\npicking this:\n  hd cfl = (fst (hd cfl), snd (hd cfl)) \\<Longrightarrow>\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cfl, s')", "show ?thesis"], ["proof (prove)\nusing this:\n  hd cfl = (fst (hd cfl), snd (hd cfl)) \\<Longrightarrow>\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cfl, s')\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and>\n       lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "by (auto simp: lengthFT_def le_Suc_eq)"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cf # cfl, s')\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n        fst (hd cfl) \\<approx>01T d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n        fst (hd cfl) \\<approx>01T d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "case (Match d' t')"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>01T d'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n        fst (hd cfl) \\<approx>01T d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "from cons(2)[OF cfl _ Match(3,2)]"], ["proof (chain)\npicking this:\n  hd cfl = (fst (hd cfl), snd (hd cfl)) \\<Longrightarrow>\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d', t') \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cfl, s')", "obtain cfl' s where \"finTrace (cfl', s)\" \"hd cfl' = (d', t')\" \"s' \\<approx> s\" \"length cfl' \\<le> length cfl\""], ["proof (prove)\nusing this:\n  hd cfl = (fst (hd cfl), snd (hd cfl)) \\<Longrightarrow>\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d', t') \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cfl, s')\n\ngoal (1 subgoal):\n 1. (\\<And>cfl' s.\n        \\<lbrakk>finTrace (cfl', s); hd cfl' = (d', t'); s' \\<approx> s;\n         length cfl' \\<le> length cfl\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: iconfig_def lengthFT_def)"], ["proof (state)\nthis:\n  finTrace (cfl', s)\n  hd cfl' = (d', t')\n  s' \\<approx> s\n  length cfl' \\<le> length cfl\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n        fst (hd cfl) \\<approx>01T d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "with Match(1)"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>c (d', t')\n  finTrace (cfl', s)\n  hd cfl' = (d', t')\n  s' \\<approx> s\n  length cfl' \\<le> length cfl", "show ?thesis"], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>c (d', t')\n  finTrace (cfl', s)\n  hd cfl' = (d', t')\n  s' \\<approx> s\n  length cfl' \\<le> length cfl\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and>\n       lengthFT tr' \\<le> lengthFT (cf # cfl, s')", "by (intro exI[of _ \"((d,t)#cfl', s)\"])\n           (auto simp: iconfig_def lengthFT_def finTrace.simps)"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cf # cfl, s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' \\<le> lengthFT (cf # cfl, s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ZObisT_trace:\n  assumes \"c \\<approx>01T c\" \"s \\<approx> t\"\n  and \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and>\n               fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "using ZObisT_trace2[OF assms]"], ["proof (prove)\nusing this:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (c, t) \\<and>\n     fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' \\<le> lengthFT tr", "."], ["", "theorem Sbis_trace:\n  assumes bis: \"c \\<approx>s d\" \"s \\<approx> t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (d,t) \\<and> fstate tr \\<approx> fstate tr' \\<and>\n               lengthFT tr' = lengthFT tr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr", "obtain s' cfl where tr_eq: \"tr = (cfl, s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cfl s'.\n        tr = (cfl, s') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases tr) auto"], ["proof (state)\nthis:\n  tr = (cfl, s')\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr", "with tr"], ["proof (chain)\npicking this:\n  finTrace tr\n  iconfig tr = (c, s)\n  tr = (cfl, s')", "have cfl: \"cfl \\<noteq> []\" \"parTrace cfl\" \"last cfl \\<rightarrow>t s'\" \"hd cfl = (c,s)\""], ["proof (prove)\nusing this:\n  finTrace tr\n  iconfig tr = (c, s)\n  tr = (cfl, s')\n\ngoal (1 subgoal):\n 1. (cfl \\<noteq> [] &&& parTrace cfl) &&&\n    last cfl \\<rightarrow>t s' &&& hd cfl = (c, s)", "by (auto simp add: finTrace.simps iconfig_def)"], ["proof (state)\nthis:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr", "from this bis"], ["proof (chain)\npicking this:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n  c \\<approx>s d\n  s \\<approx> t", "show ?thesis"], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr", "unfolding tr_eq fstate_def snd_conv"], ["proof (prove)\nusing this:\n  cfl \\<noteq> []\n  parTrace cfl\n  last cfl \\<rightarrow>t s'\n  hd cfl = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and> lengthFT tr' = lengthFT (cfl, s')", "proof (induct cfl arbitrary: c d s t rule: list_nonempty_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x c d s t.\n       \\<lbrakk>parTrace [x]; last [x] \\<rightarrow>t s'; hd [x] = (c, s);\n        c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT ([x], s')\n 2. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "case (single cf)"], ["proof (state)\nthis:\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n\ngoal (2 subgoals):\n 1. \\<And>x c d s t.\n       \\<lbrakk>parTrace [x]; last [x] \\<rightarrow>t s'; hd [x] = (c, s);\n        c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT ([x], s')\n 2. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "with Sbis_transT[of c d s t s']"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<approx>s d; s \\<approx> t; (c, s) \\<rightarrow>t s';\n   \\<And>t'.\n      \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>s d\n  s \\<approx> t", "obtain t' where \"(d,t) \\<rightarrow>t t'\" \"s' \\<approx> t'\" \"cf = (c,s)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<approx>s d; s \\<approx> t; (c, s) \\<rightarrow>t s';\n   \\<And>t'.\n      \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(d, t) \\<rightarrow>t t'; s' \\<approx> t';\n         cf = (c, s)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>t t'\n  s' \\<approx> t'\n  cf = (c, s)\n\ngoal (2 subgoals):\n 1. \\<And>x c d s t.\n       \\<lbrakk>parTrace [x]; last [x] \\<rightarrow>t s'; hd [x] = (c, s);\n        c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT ([x], s')\n 2. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "with single"], ["proof (chain)\npicking this:\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  s' \\<approx> t'\n  cf = (c, s)", "show ?case"], ["proof (prove)\nusing this:\n  parTrace [cf]\n  last [cf] \\<rightarrow>t s'\n  hd [cf] = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n  (d, t) \\<rightarrow>t t'\n  s' \\<approx> t'\n  cf = (c, s)\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and> lengthFT tr' = lengthFT ([cf], s')", "by (intro exI[of _ \"([(d,t)], t')\"])\n         (simp add: lengthFT_def iconfig_def indis_refl finTrace.simps)"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' = lengthFT ([cf], s')\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "case (cons cf cfl)"], ["proof (state)\nthis:\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>s ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' = lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "with Sbis_transC[of c d s t \"fst (hd cfl)\" \"snd (hd cfl)\"]"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<approx>s d; s \\<approx> t;\n   (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl));\n   \\<And>d' t'.\n      \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n       fst (hd cfl) \\<approx>s d'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>s ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' = lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>s d\n  s \\<approx> t", "obtain d' t' where *: \"(d,t) \\<rightarrow>c (d',t')\" \"snd (hd cfl) \\<approx> t'\" \"fst (hd cfl) \\<approx>s d'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<approx>s d; s \\<approx> t;\n   (c, s) \\<rightarrow>c (fst (hd cfl), snd (hd cfl));\n   \\<And>d' t'.\n      \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n       fst (hd cfl) \\<approx>s d'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  cfl \\<noteq> []\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s'; hd cfl = (?c1, ?s1);\n   ?c1 \\<approx>s ?d1; ?s1 \\<approx> ?t1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (?d1, ?t1) \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' = lengthFT (cfl, s')\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  hd (cf # cfl) = (c, s)\n  c \\<approx>s d\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(d, t) \\<rightarrow>c (d', t'); snd (hd cfl) \\<approx> t';\n         fst (hd cfl) \\<approx>s d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>s d'\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "moreover"], ["proof (state)\nthis:\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>s d'\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "with cons(2)[of \"fst (hd cfl)\" \"snd (hd cfl)\" d' t'] cons(1,3,4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s';\n   hd cfl = (fst (hd cfl), snd (hd cfl)); fst (hd cfl) \\<approx>s d';\n   snd (hd cfl) \\<approx> t'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (d', t') \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' = lengthFT (cfl, s')\n  cfl \\<noteq> []\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>s d'", "obtain cfl' s where \"finTrace (cfl', s)\" \"hd cfl' = (d', t')\" \"s' \\<approx> s\" \"length cfl' = length cfl\""], ["proof (prove)\nusing this:\n  \\<lbrakk>parTrace cfl; last cfl \\<rightarrow>t s';\n   hd cfl = (fst (hd cfl), snd (hd cfl)); fst (hd cfl) \\<approx>s d';\n   snd (hd cfl) \\<approx> t'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>tr'.\n                       finTrace tr' \\<and>\n                       iconfig tr' = (d', t') \\<and>\n                       s' \\<approx> snd tr' \\<and>\n                       lengthFT tr' = lengthFT (cfl, s')\n  cfl \\<noteq> []\n  parTrace (cf # cfl)\n  last (cf # cfl) \\<rightarrow>t s'\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>s d'\n\ngoal (1 subgoal):\n 1. (\\<And>cfl' s.\n        \\<lbrakk>finTrace (cfl', s); hd cfl' = (d', t'); s' \\<approx> s;\n         length cfl' = length cfl\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: iconfig_def lengthFT_def)"], ["proof (state)\nthis:\n  finTrace (cfl', s)\n  hd cfl' = (d', t')\n  s' \\<approx> s\n  length cfl' = length cfl\n\ngoal (1 subgoal):\n 1. \\<And>x xs c d s t.\n       \\<lbrakk>xs \\<noteq> [];\n        \\<And>c d s t.\n           \\<lbrakk>parTrace xs; last xs \\<rightarrow>t s'; hd xs = (c, s);\n            c \\<approx>s d; s \\<approx> t\\<rbrakk>\n           \\<Longrightarrow> \\<exists>tr'.\n                                finTrace tr' \\<and>\n                                iconfig tr' = (d, t) \\<and>\n                                s' \\<approx> snd tr' \\<and>\n                                lengthFT tr' = lengthFT (xs, s');\n        parTrace (x # xs); last (x # xs) \\<rightarrow>t s';\n        hd (x # xs) = (c, s); c \\<approx>s d; s \\<approx> t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (d, t) \\<and>\n                            s' \\<approx> snd tr' \\<and>\n                            lengthFT tr' = lengthFT (x # xs, s')", "ultimately"], ["proof (chain)\npicking this:\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>s d'\n  finTrace (cfl', s)\n  hd cfl' = (d', t')\n  s' \\<approx> s\n  length cfl' = length cfl", "show ?case"], ["proof (prove)\nusing this:\n  (d, t) \\<rightarrow>c (d', t')\n  snd (hd cfl) \\<approx> t'\n  fst (hd cfl) \\<approx>s d'\n  finTrace (cfl', s)\n  hd cfl' = (d', t')\n  s' \\<approx> s\n  length cfl' = length cfl\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (d, t) \\<and>\n       s' \\<approx> snd tr' \\<and> lengthFT tr' = lengthFT (cf # cfl, s')", "by (intro exI[of _ \"((d,t)#cfl', s)\"])\n         (auto simp: finTrace.simps lengthFT_def iconfig_def)"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     s' \\<approx> snd tr' \\<and> lengthFT tr' = lengthFT (cf # cfl, s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (d, t) \\<and>\n     fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary siso_trace:\nassumes \"siso c\" and \"s \\<approx> t\" \nand \"finTrace tr\" and \"iconfig tr = (c,s)\"\nshows \n\"\\<exists> tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\n        \\<and> lengthFT tr' = lengthFT tr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and>\n       fstate tr \\<approx> fstate tr' \\<and> lengthFT tr' = lengthFT tr", "apply(rule Sbis_trace)"], ["proof (prove)\ngoal (4 subgoals):\n 1. ?c \\<approx>s c\n 2. ?s \\<approx> t\n 3. finTrace tr\n 4. iconfig tr = (?c, ?s)", "using assms"], ["proof (prove)\nusing this:\n  siso c\n  s \\<approx> t\n  finTrace tr\n  iconfig tr = (c, s)\n\ngoal (4 subgoals):\n 1. ?c \\<approx>s c\n 2. ?s \\<approx> t\n 3. finTrace tr\n 4. iconfig tr = (?c, ?s)", "by auto"], ["", "(* For the termination-insensitive versions: *)"], ["", "theorem Wbis_trace:\n  assumes T: \"\\<And>s. mustT c s\"\n  and bis: \"c \\<approx>w c\" \"s \\<approx> t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "from tr finTrace_imp_MtransT[of tr]"], ["proof (chain)\npicking this:\n  finTrace tr\n  iconfig tr = (c, s)\n  finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr", "have \"(c, s) \\<rightarrow>*t fstate tr\""], ["proof (prove)\nusing this:\n  finTrace tr\n  iconfig tr = (c, s)\n  finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*t fstate tr", "by auto"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "from bis this"], ["proof (chain)\npicking this:\n  c \\<approx>w c\n  s \\<approx> t\n  (c, s) \\<rightarrow>*t fstate tr", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<approx>w c\n  s \\<approx> t\n  (c, s) \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "proof (cases rule: Wbis_MtransT)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'\n 2. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "case (Match t')"], ["proof (state)\nthis:\n  (c, t) \\<rightarrow>*t t'\n  fstate tr \\<approx> t'\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'\n 2. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "from MtransT_Ex_finTrace[OF this(1)] this(2)"], ["proof (chain)\npicking this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = t'\n  fstate tr \\<approx> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = t'\n  fstate tr \\<approx> t'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "by auto"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "case (MatchO d' t')"], ["proof (state)\nthis:\n  (c, t) \\<rightarrow>*c (d', t')\n  fstate tr \\<approx> t'\n  discr d'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "from T[THEN mustT_MtransC, OF MatchO(1)]"], ["proof (chain)\npicking this:\n  mustT d' t'", "have \"mustT d' t'\""], ["proof (prove)\nusing this:\n  mustT d' t'\n\ngoal (1 subgoal):\n 1. mustT d' t'", "."], ["proof (state)\nthis:\n  mustT d' t'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "from this[THEN mustT_MtransT]"], ["proof (chain)\npicking this:\n  \\<exists>s'. (d', t') \\<rightarrow>*t s'", "obtain s' where \"(d', t') \\<rightarrow>*t s'\""], ["proof (prove)\nusing this:\n  \\<exists>s'. (d', t') \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        (d', t') \\<rightarrow>*t s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  (d', t') \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "from MatchO(1) \\<open>(d', t') \\<rightarrow>*t s'\\<close>"], ["proof (chain)\npicking this:\n  (c, t) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>*t s'", "have \"(c, t) \\<rightarrow>*t s'\""], ["proof (prove)\nusing this:\n  (c, t) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. (c, t) \\<rightarrow>*t s'", "by (rule MtransC_MtransT)"], ["proof (state)\nthis:\n  (c, t) \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "note MtransT_Ex_finTrace[OF this]"], ["proof (state)\nthis:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = s'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "moreover"], ["proof (state)\nthis:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = s'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "from \\<open>discr d'\\<close> \\<open>(d', t') \\<rightarrow>*t s'\\<close>"], ["proof (chain)\npicking this:\n  discr d'\n  (d', t') \\<rightarrow>*t s'", "have \"t' \\<approx> s'\""], ["proof (prove)\nusing this:\n  discr d'\n  (d', t') \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. t' \\<approx> s'", "by (rule discr_MtransT)"], ["proof (state)\nthis:\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "with \\<open>fstate tr \\<approx> t'\\<close>"], ["proof (chain)\npicking this:\n  fstate tr \\<approx> t'\n  t' \\<approx> s'", "have \"fstate tr \\<approx> s'\""], ["proof (prove)\nusing this:\n  fstate tr \\<approx> t'\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. fstate tr \\<approx> s'", "by (rule indis_trans)"], ["proof (state)\nthis:\n  fstate tr \\<approx> s'\n\ngoal (1 subgoal):\n 1. \\<And>d' t'.\n       \\<lbrakk>(c, t) \\<rightarrow>*c (d', t'); fstate tr \\<approx> t';\n        discr d'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>tr'.\n                            finTrace tr' \\<and>\n                            iconfig tr' = (c, t) \\<and>\n                            fstate tr \\<approx> fstate tr'", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = s'\n  fstate tr \\<approx> s'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = s'\n  fstate tr \\<approx> s'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "by auto"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ZObis_trace:\n  assumes T: \"\\<And>s. mustT c s\"\n  and ZObis: \"c \\<approx>01 c\" and indis: \"s \\<approx> t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "by (rule Wbis_trace[OF T bis_imp(4)[OF ZObis] indis tr])"], ["", "(* For the mustT-interactive notion: *)"], ["", "theorem BisT_trace:\n  assumes bis: \"c \\<approx>T c\" \"s \\<approx> t\"\n  and T: \"mustT c s\" \"mustT c t\"\n  and tr: \"finTrace tr\" \"iconfig tr = (c,s)\"\n  shows \"\\<exists>tr'. finTrace tr' \\<and> iconfig tr' = (c,t) \\<and> fstate tr \\<approx> fstate tr'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "from tr finTrace_imp_MtransT[of tr]"], ["proof (chain)\npicking this:\n  finTrace tr\n  iconfig tr = (c, s)\n  finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr", "have \"(c, s) \\<rightarrow>*t fstate tr\""], ["proof (prove)\nusing this:\n  finTrace tr\n  iconfig tr = (c, s)\n  finTrace tr \\<Longrightarrow> iconfig tr \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*t fstate tr", "by auto"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*t fstate tr\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "from BisT_MtransT[OF bis(1) T bis(2) this]"], ["proof (chain)\npicking this:\n  (\\<And>t'.\n      \\<lbrakk>(c, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain t' where \"(c,t) \\<rightarrow>*t t'\" \"fstate tr \\<approx> t'\""], ["proof (prove)\nusing this:\n  (\\<And>t'.\n      \\<lbrakk>(c, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>(c, t) \\<rightarrow>*t t'; fstate tr \\<approx> t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  (c, t) \\<rightarrow>*t t'\n  fstate tr \\<approx> t'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "from MtransT_Ex_finTrace[OF this(1)] this(2)"], ["proof (chain)\npicking this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = t'\n  fstate tr \\<approx> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>tr. finTrace tr \\<and> iconfig tr = (c, t) \\<and> fstate tr = t'\n  fstate tr \\<approx> t'\n\ngoal (1 subgoal):\n 1. \\<exists>tr'.\n       finTrace tr' \\<and>\n       iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'", "by auto"], ["proof (state)\nthis:\n  \\<exists>tr'.\n     finTrace tr' \\<and>\n     iconfig tr' = (c, t) \\<and> fstate tr \\<approx> fstate tr'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* context PL_Indis  *)"], ["", "end"]]}