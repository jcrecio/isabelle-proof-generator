{"file_name": "/home/qj213/afp-2021-10-22/thys/Possibilistic_Noninterference/During_Execution.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Possibilistic_Noninterference", "problem_names": ["lemma refl_indis: \"refl indis\"\nand trans_indis: \"trans indis\"\nand sym_indis: \"sym indis\"", "lemma indis_refl[intro]: \"s \\<approx> s\"", "lemma indis_trans: \"\\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk> \\<Longrightarrow> s \\<approx> s''\"", "lemma indis_sym: \"s \\<approx> s' \\<Longrightarrow> s' \\<approx> s\"", "lemma presAtm_compatAtm[simp]:\nassumes \"presAtm atm\"\nshows \"compatAtm atm\"", "lemma discr_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> (phi c' \\<or> discr c')\" and \n***: \"\\<And> c s s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr c\"", "lemma discr_raw_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> phi c'\" and \n***: \"\\<And> c s s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr c\"", "lemma discr_transC:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"discr c'\"", "lemma discr_MtransC:\nassumes \"discr c\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"discr c'\"", "lemma discr_transC_indis:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"s \\<approx> s'\"", "lemma discr_MtransC_indis:\nassumes \"discr c\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"s \\<approx> s'\"", "lemma discr_transT:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>t s'\"\nshows \"s \\<approx> s'\"", "lemma discr_MtransT:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>*t s'\"\nshows \"s \\<approx> s'\"", "lemma discr0_coind[consumes 1, case_names Cont Term, induct pred: discr0]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \n       \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n       s \\<approx> s' \\<and> (phi c' \\<or> discr0 c')\" and \n***: \"\\<And> c s s'. \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr0 c\"", "lemma discr0_raw_coind[consumes 1, case_names Cont Term]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> phi c'\" and \n***: \"\\<And> c s s'. \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr0 c\"", "lemma discr0_transC:\nassumes *: \"discr0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"discr0 c'\"", "lemma discr0_MtransC:\nassumes \"discr0 c\" and \"mustT c s\" \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"discr0 c'\"", "lemma discr0_transC_indis:\nassumes *: \"discr0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"s \\<approx> s'\"", "lemma discr0_MtransC_indis:\nassumes \"discr0 c\" and \"mustT c s\" \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"s \\<approx> s'\"", "lemma discr0_transT:\nassumes *: \"discr0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>t s'\"\nshows \"s \\<approx> s'\"", "lemma discr0_MtransT:\nassumes *: \"discr0 c\" and ***: \"mustT c s\" and **: \"(c,s) \\<rightarrow>*t s'\"\nshows \"s \\<approx> s'\"", "lemma discr_discr0[simp]: \"discr c \\<Longrightarrow> discr0 c\"", "lemma siso_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c' \\<or> siso c'\" and \n***: \"\\<And> c s t c' s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso c\"", "lemma siso_raw_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c'\" and \n***: \"\\<And> c s t c' s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso c\"", "lemma siso_transC:\nassumes *: \"siso c\" and **: \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"siso c'\"", "lemma siso_MtransC:\nassumes \"siso c\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"siso c'\"", "lemma siso_transC_indis:\nassumes *: \"siso c\" and **: \"(c,s) \\<rightarrow>c (c',s')\" and ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\"", "lemma siso_transT:\nassumes *: \"siso c\" and **: \"(c,s) \\<rightarrow>t s'\" and ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"", "lemma siso0_coind[consumes 1, case_names Indef Cont Term, induct pred: discr0]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; mustT c s; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c' \\<or> siso0 c'\" and \n***: \"\\<And> c s t c' s'. \n        \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n        \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \n         \\<lbrakk>mustT c s; mustT c t; phi c; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \n         \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso0 c\"", "lemma siso0_raw_coind[consumes 1, case_names Indef Cont Term]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; mustT c s; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c'\" and \n***: \"\\<And> c s t c' s'. \n        \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n        \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \n         \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \n         \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso0 c\"", "lemma siso0_transC:\nassumes *: \"siso0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"siso0 c'\"", "lemma siso0_MtransC:\nassumes \"siso0 c\" and \"mustT c s\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"siso0 c'\"", "lemma siso0_transC_indis:\nassumes *: \"siso0 c\" \nand **: \"mustT c s\" \"mustT c t\" \"(c,s) \\<rightarrow>c (c',s')\" \nand ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\"", "lemma siso0_transT:\nassumes *: \"siso0 c\" \nand **: \"mustT c s\" \"mustT c t\" \"(c,s) \\<rightarrow>t s'\" \nand ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"", "lemmas match_defs = \nmatchC_C_def \nmatchC_ZOC_def matchC_ZO_def\nmatchT_T_def matchT_ZO_def\nmatchC_MC_def matchC_M_def\nmatchT_MT_def matchT_M_def\nmatchC_TMC_def matchT_TMT_def", "lemma matchC_C_def2: \n\"matchC_C theta d c =\n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\"", "lemma matchC_ZOC_def2:  \n\"matchC_ZOC theta d c= \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (s \\<approx> t' \\<and> (d',c) \\<in> theta)\n   \\<or> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\"", "lemma matchC_ZO_def2:\n\"matchC_ZO theta d c = \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (s \\<approx> t' \\<and> (d',c) \\<in> theta)\n   \\<or> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta) \n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>t s' \\<and> s' \\<approx> t' \\<and> discr d'))\"", "lemma matchT_T_def2:\n\"matchT_T d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> s'. (c,s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))\"", "lemma matchT_ZO_def2:\n\"matchT_ZO d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (s \\<approx> t' \\<and> discr c)\n   \\<or> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> discr c')\n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))\"", "lemma matchC_MC_def2:  \n\"matchC_MC theta d c= \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\"", "lemma matchC_TMC_def2:  \n\"matchC_TMC theta d c= \n (\\<forall> s t d' t'. \n   mustT c s \\<and> mustT d t \\<and> s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\"", "lemma matchC_M_def2:\n\"matchC_M theta d c = \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta) \n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t' \\<and> discr d'))\"", "lemma matchT_MT_def2:\n\"matchT_MT d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))\"", "lemma matchT_TMT_def2:\n\"matchT_TMT d c = \n (\\<forall> s t t'. \n   mustT c s \\<and> mustT d t \\<and> s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))\"", "lemma matchT_M_def2:\n\"matchT_M d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> discr c')\n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))\"", "lemmas Retr_defs = \nSretr_def \nZOretr_def ZOretrT_def \nWretr_def WretrT_def \nRetrT_def", "lemmas bis_defs = \nSbis_def \nZObis_def ZObisT_def \nWbis_def WbisT_def \nBisT_def", "lemma mono_Retr:\n\"mono Sretr\"\n\"mono ZOretr\"  \"mono ZOretrT\"\n\"mono Wretr\"  \"mono WretrT\"\n\"mono RetrT\"", "lemma Sbis_prefix:\n\"Sbis \\<subseteq> Sretr Sbis\"", "lemma Sbis_sym: \"sym Sbis\"", "lemma Sbis_Sym: \"c \\<approx>s d \\<Longrightarrow> d \\<approx>s c\"", "lemma Sbis_converse:\n\"((c,d) \\<in> theta^-1 \\<union> Sbis) = ((d,c) \\<in> theta \\<union> Sbis)\"", "lemma\nSbis_matchC_C: \"\\<And> s t. c \\<approx>s d \\<Longrightarrow> matchC_C Sbis c d\"\nand \nSbis_matchT_T: \"\\<And> c d. c \\<approx>s d \\<Longrightarrow> matchT_T c d\"", "lemmas Sbis_step = Sbis_matchC_C Sbis_matchT_T", "lemma\nSbis_matchC_C_rev: \"\\<And> s t. s \\<approx>s t \\<Longrightarrow> matchC_C Sbis t s\"\nand \nSbis_matchT_T_rev: \"\\<And> s t. s \\<approx>s t \\<Longrightarrow> matchT_T t s\"", "lemmas Sbis_step_rev = Sbis_matchC_C_rev Sbis_matchT_T_rev", "lemma Sbis_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Sretr (theta \\<union> Sbis)\"\nshows \"theta \\<subseteq> Sbis\"", "lemma Sbis_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Sretr theta\"\nshows \"theta \\<subseteq> Sbis\"", "lemma Sbis_coind2:\nassumes \"theta \\<subseteq> Sretr (theta \\<union> Sbis)\" and \n\"theta ^-1 \\<subseteq> Sretr ((theta ^-1) \\<union> Sbis)\"\nshows \"theta \\<subseteq> Sbis\"", "lemma Sbis_raw_coind2:\nassumes \"theta \\<subseteq> Sretr theta\" and \n\"theta ^-1 \\<subseteq> Sretr (theta ^-1)\"\nshows \"theta \\<subseteq> Sbis\"", "lemma ZObis_prefix:\n\"ZObis \\<subseteq> ZOretr ZObis\"", "lemma ZObis_sym: \"sym ZObis\"", "lemma ZObis_converse:\n\"((c,d) \\<in> theta^-1 \\<union> ZObis) = ((d,c) \\<in> theta \\<union> ZObis)\"", "lemma ZObis_Sym: \"s \\<approx>01 t \\<Longrightarrow> t \\<approx>01 s\"", "lemma\nZObis_matchC_ZO: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis s t\"\nand \nZObis_matchT_ZO: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO s t\"", "lemmas ZObis_step = ZObis_matchC_ZO ZObis_matchT_ZO", "lemma\nZObis_matchC_ZO_rev: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis t s\"\nand \nZObis_matchT_ZO_rev: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO t s\"", "lemmas ZObis_step_rev = ZObis_matchC_ZO_rev ZObis_matchT_ZO_rev", "lemma ZObis_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretr (theta \\<union> ZObis)\"\nshows \"theta \\<subseteq> ZObis\"", "lemma ZObis_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretr theta\"\nshows \"theta \\<subseteq> ZObis\"", "lemma ZObis_coind2:\nassumes \"theta \\<subseteq> ZOretr (theta \\<union> ZObis)\" and \n\"theta ^-1 \\<subseteq> ZOretr ((theta ^-1) \\<union> ZObis)\"\nshows \"theta \\<subseteq> ZObis\"", "lemma ZObis_raw_coind2:\nassumes \"theta \\<subseteq> ZOretr theta\" and \n\"theta ^-1 \\<subseteq> ZOretr (theta ^-1)\"\nshows \"theta \\<subseteq> ZObis\"", "lemma ZObisT_prefix:\n\"ZObisT \\<subseteq> ZOretrT ZObisT\"", "lemma ZObisT_sym: \"sym ZObisT\"", "lemma ZObisT_Sym: \"s \\<approx>01T t \\<Longrightarrow> t \\<approx>01T s\"", "lemma ZObisT_converse:\n\"((c,d) \\<in> theta^-1 \\<union> ZObisT) = ((d,c) \\<in> theta \\<union> ZObisT)\"", "lemma\nZObisT_matchC_ZOC: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT s t\"\nand \nZObisT_matchT_T: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchT_T s t\"", "lemmas ZObisT_step = ZObisT_matchC_ZOC ZObisT_matchT_T", "lemma\nZObisT_matchC_ZOC_rev: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT t s\"\nand \nZObisT_matchT_T_rev: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchT_T t s\"", "lemmas ZObisT_step_rev = ZObisT_matchC_ZOC_rev ZObisT_matchT_T_rev", "lemma ZObisT_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretrT (theta \\<union> ZObisT)\"\nshows \"theta \\<subseteq> ZObisT\"", "lemma ZObisT_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretrT theta\"\nshows \"theta \\<subseteq> ZObisT\"", "lemma ZObisT_coind2:\nassumes \"theta \\<subseteq> ZOretrT (theta \\<union> ZObisT)\" and \n\"theta ^-1 \\<subseteq> ZOretrT ((theta ^-1) \\<union> ZObisT)\"\nshows \"theta \\<subseteq> ZObisT\"", "lemma ZObisT_raw_coind2:\nassumes \"theta \\<subseteq> ZOretrT theta\" and \n\"theta ^-1 \\<subseteq> ZOretrT (theta ^-1)\"\nshows \"theta \\<subseteq> ZObisT\"", "lemma Wbis_prefix:\n\"Wbis \\<subseteq> Wretr Wbis\"", "lemma Wbis_sym: \"sym Wbis\"", "lemma Wbis_converse:\n\"((c,d) \\<in> theta^-1 \\<union> Wbis) = ((d,c) \\<in> theta \\<union> Wbis)\"", "lemma Wbis_Sym: \"c \\<approx>w d \\<Longrightarrow> d \\<approx>w c\"", "lemma\nWbis_matchC_M: \"\\<And> c d. c \\<approx>w d \\<Longrightarrow> matchC_M Wbis c d\"\nand \nWbis_matchT_M: \"\\<And> c d. c \\<approx>w d \\<Longrightarrow> matchT_M c d\"", "lemmas Wbis_step = Wbis_matchC_M Wbis_matchT_M", "lemma\nWbis_matchC_M_rev: \"\\<And> s t. s \\<approx>w t \\<Longrightarrow> matchC_M Wbis t s\"\nand \nWbis_matchT_M_rev: \"\\<And> s t. s \\<approx>w t \\<Longrightarrow> matchT_M t s\"", "lemmas Wbis_step_rev = Wbis_matchC_M_rev Wbis_matchT_M_rev", "lemma Wbis_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Wretr (theta \\<union> Wbis)\"\nshows \"theta \\<subseteq> Wbis\"", "lemma Wbis_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Wretr theta\"\nshows \"theta \\<subseteq> Wbis\"", "lemma Wbis_coind2:\nassumes \"theta \\<subseteq> Wretr (theta \\<union> Wbis)\" and \n\"theta ^-1 \\<subseteq> Wretr ((theta ^-1) \\<union> Wbis)\"\nshows \"theta \\<subseteq> Wbis\"", "lemma Wbis_raw_coind2:\nassumes \"theta \\<subseteq> Wretr theta\" and \n\"theta ^-1 \\<subseteq> Wretr (theta ^-1)\"\nshows \"theta \\<subseteq> Wbis\"", "lemma WbisT_prefix:\n\"WbisT \\<subseteq> WretrT WbisT\"", "lemma WbisT_sym: \"sym WbisT\"", "lemma WbisT_Sym: \"c \\<approx>wT d \\<Longrightarrow> d \\<approx>wT c\"", "lemma WbisT_converse:\n\"((c,d) \\<in> theta^-1 \\<union> WbisT) = ((d,c) \\<in> theta \\<union> WbisT)\"", "lemma\nWbisT_matchC_MC: \"\\<And> c d. c \\<approx>wT d \\<Longrightarrow> matchC_MC WbisT c d\"\nand \nWbisT_matchT_MT: \"\\<And> c d. c \\<approx>wT d \\<Longrightarrow> matchT_MT c d\"", "lemmas WbisT_step = WbisT_matchC_MC WbisT_matchT_MT", "lemma\nWbisT_matchC_MC_rev: \"\\<And> s t. s \\<approx>wT t \\<Longrightarrow> matchC_MC WbisT t s\"\nand \nWbisT_matchT_MT_rev: \"\\<And> s t. s \\<approx>wT t \\<Longrightarrow> matchT_MT t s\"", "lemmas WbisT_step_rev = WbisT_matchC_MC_rev WbisT_matchT_MT_rev", "lemma WbisT_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> WretrT (theta \\<union> WbisT)\"\nshows \"theta \\<subseteq> WbisT\"", "lemma WbisT_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> WretrT theta\"\nshows \"theta \\<subseteq> WbisT\"", "lemma WbisT_coind2:\nassumes \"theta \\<subseteq> WretrT (theta \\<union> WbisT)\" and \n\"theta ^-1 \\<subseteq> WretrT ((theta ^-1) \\<union> WbisT)\"\nshows \"theta \\<subseteq> WbisT\"", "lemma WbisT_raw_coind2:\nassumes \"theta \\<subseteq> WretrT theta\" and \n\"theta ^-1 \\<subseteq> WretrT (theta ^-1)\"\nshows \"theta \\<subseteq> WbisT\"", "lemma WbisT_coinduct[consumes 1, case_names sym cont termi]:\n  assumes \\<phi>: \"\\<phi> c d\"\n  assumes S: \"\\<And>c d. \\<phi> c d \\<Longrightarrow> \\<phi> d c\"\n  assumes C: \"\\<And>c s d t c' s'.\n    \\<lbrakk> \\<phi> c d ; s \\<approx> t ; (c, s) \\<rightarrow>c (c', s') \\<rbrakk> \\<Longrightarrow> \\<exists>d' t'. (d, t) \\<rightarrow>*c (d', t') \\<and> s' \\<approx> t' \\<and> (\\<phi> c' d' \\<or> c' \\<approx>wT d')\"\n  assumes T: \"\\<And>c s d t s'.\n    \\<lbrakk> \\<phi> c d ; s \\<approx> t ; (c, s) \\<rightarrow>t s' \\<rbrakk> \\<Longrightarrow> \\<exists>t'. (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'\"\n  shows \"c \\<approx>wT d\"", "lemma BisT_prefix:\n\"BisT \\<subseteq> RetrT BisT\"", "lemma BisT_sym: \"sym BisT\"", "lemma BisT_Sym: \"c \\<approx>T d \\<Longrightarrow> d \\<approx>T c\"", "lemma BisT_converse:\n\"((c,d) \\<in> theta^-1 \\<union> BisT) = ((d,c) \\<in> theta \\<union> BisT)\"", "lemma\nBisT_matchC_TMC: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT c d\"\nand \nBisT_matchT_TMT: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT c d\"", "lemmas BisT_step = BisT_matchC_TMC BisT_matchT_TMT", "lemma\nBisT_matchC_TMC_rev: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT d c\"\nand \nBisT_matchT_TMT_rev: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT d c\"", "lemmas BisT_step_rev = BisT_matchC_TMC_rev BisT_matchT_TMT_rev", "lemma BisT_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> RetrT (theta \\<union> BisT)\"\nshows \"theta \\<subseteq> BisT\"", "lemma BisT_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> RetrT theta\"\nshows \"theta \\<subseteq> BisT\"", "lemma BisT_coind2:\nassumes \"theta \\<subseteq> RetrT (theta \\<union> BisT)\" and \n\"theta ^-1 \\<subseteq> RetrT ((theta ^-1) \\<union> BisT)\"\nshows \"theta \\<subseteq> BisT\"", "lemma BisT_raw_coind2:\nassumes \"theta \\<subseteq> RetrT theta\" and \n\"theta ^-1 \\<subseteq> RetrT (theta ^-1)\"\nshows \"theta \\<subseteq> BisT\"", "lemma match_imp[simp]:\n\"\\<And> theta c1 c2. matchC_C theta c1 c2 \\<Longrightarrow> matchC_ZOC theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_ZOC theta c1 c2 \\<Longrightarrow> matchC_ZO theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_ZOC theta c1 c2 \\<Longrightarrow> matchC_MC theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_ZO theta c1 c2 \\<Longrightarrow> matchC_M theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_MC theta c1 c2 \\<Longrightarrow> matchC_M theta c1 c2\"\n(*  *)\n(*  *)\n\"\\<And> c1 c2. matchT_T c1 c2 \\<Longrightarrow> matchT_ZO c1 c2\"\n(*  *)\n\"\\<And> c1 c2. matchT_T c1 c2 \\<Longrightarrow> matchT_MT c1 c2\"\n(*  *)\n\"\\<And> c1 c2. matchT_ZO c1 c2 \\<Longrightarrow> matchT_M c1 c2\"\n(*  *)\n\"\\<And> c1 c2. matchT_MT c1 c2 \\<Longrightarrow> matchT_M c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_MC theta c1 c2 \\<Longrightarrow> matchC_TMC theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchT_MT c1 c2 \\<Longrightarrow> matchT_TMT c1 c2\"", "lemma Retr_incl:\n\"\\<And>theta. Sretr theta \\<subseteq> ZOretrT theta\"\n(*  *)\n\"\\<And>theta. ZOretrT theta \\<subseteq> ZOretr theta\"\n(*  *)\n\"\\<And>theta. ZOretrT theta \\<subseteq> WretrT theta\"\n(*  *)\n\"\\<And>theta. ZOretr theta \\<subseteq> Wretr theta\"\n(*  *)\n\"\\<And>theta. WretrT theta \\<subseteq> Wretr theta\"\n(*  *)\n\"\\<And>theta. WretrT theta \\<subseteq> RetrT theta\"", "lemma bis_incl:\n\"Sbis \\<subseteq> ZObisT\"\n(*  *)\n\"ZObisT \\<subseteq> ZObis\"\n(*  *)\n\"ZObisT \\<subseteq> WbisT\"\n(*  *)\n\"ZObis \\<subseteq> Wbis\"\n(*  *)\n\"WbisT \\<subseteq> Wbis\"\n(*  *)\n\"WbisT \\<subseteq> BisT\"", "lemma bis_imp[simp]:\n\"\\<And> c1 c2. c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01T c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>01 c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>wT c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>01 c2 \\<Longrightarrow> c1 \\<approx>w c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>w c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>T c2\"", "lemma siso_Sbis[simp]:\nassumes \"siso c\"\nshows \"c \\<approx>s c\"", "lemma siso0_Sbis[simp]:\nassumes \"siso0 c\"\nshows \"c \\<approx>T c\""], "translations": [["", "lemma refl_indis: \"refl indis\"\nand trans_indis: \"trans indis\"\nand sym_indis: \"sym indis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl indis &&& trans indis &&& sym indis", "using equiv_indis"], ["proof (prove)\nusing this:\n  equiv UNIV indis\n\ngoal (1 subgoal):\n 1. refl indis &&& trans indis &&& sym indis", "unfolding equiv_def"], ["proof (prove)\nusing this:\n  refl indis \\<and> sym indis \\<and> trans indis\n\ngoal (1 subgoal):\n 1. refl indis &&& trans indis &&& sym indis", "by auto"], ["", "lemma indis_refl[intro]: \"s \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s", "using refl_indis"], ["proof (prove)\nusing this:\n  refl indis\n\ngoal (1 subgoal):\n 1. s \\<approx> s", "unfolding refl_on_def"], ["proof (prove)\nusing this:\n  indis \\<subseteq> UNIV \\<times> UNIV \\<and>\n  (\\<forall>x\\<in>UNIV. x \\<approx> x)\n\ngoal (1 subgoal):\n 1. s \\<approx> s", "by simp"], ["", "lemma indis_trans: \"\\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk> \\<Longrightarrow> s \\<approx> s''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk>\n    \\<Longrightarrow> s \\<approx> s''", "using trans_indis"], ["proof (prove)\nusing this:\n  trans indis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk>\n    \\<Longrightarrow> s \\<approx> s''", "unfolding trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x y z.\n     x \\<approx> y \\<longrightarrow>\n     y \\<approx> z \\<longrightarrow> x \\<approx> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<approx> s'; s' \\<approx> s''\\<rbrakk>\n    \\<Longrightarrow> s \\<approx> s''", "by blast"], ["", "lemma indis_sym: \"s \\<approx> s' \\<Longrightarrow> s' \\<approx> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s' \\<Longrightarrow> s' \\<approx> s", "using sym_indis"], ["proof (prove)\nusing this:\n  sym indis\n\ngoal (1 subgoal):\n 1. s \\<approx> s' \\<Longrightarrow> s' \\<approx> s", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx> y \\<longrightarrow> y \\<approx> x\n\ngoal (1 subgoal):\n 1. s \\<approx> s' \\<Longrightarrow> s' \\<approx> s", "by blast"], ["", "subsection\\<open>Compatibility and discreetness\\<close>"], ["", "definition compatTst where \n\"compatTst tst \\<equiv> \n \\<forall> s t. s \\<approx> t \\<longrightarrow> tval tst s = tval tst t\""], ["", "definition compatAtm where \n\"compatAtm atm \\<equiv> \n \\<forall> s t. s \\<approx> t \\<longrightarrow> aval atm s \\<approx> aval atm t\""], ["", "(* \\<approx>-preservation: *)"], ["", "definition presAtm where \n\"presAtm atm \\<equiv> \n \\<forall> s. s \\<approx> aval atm s\""], ["", "coinductive discr where \nintro: \n\"\\<lbrakk>\\<And> s c' s'. (c,s) \\<rightarrow>c (c',s') \\<Longrightarrow> s \\<approx> s' \\<and> discr c'; \n  \\<And> s s'. (c,s) \\<rightarrow>t s' \\<Longrightarrow> s \\<approx> s'\\<rbrakk> \n  \\<Longrightarrow> discr c\""], ["", "lemma presAtm_compatAtm[simp]:\nassumes \"presAtm atm\"\nshows \"compatAtm atm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compatAtm atm", "using assms"], ["proof (prove)\nusing this:\n  presAtm atm\n\ngoal (1 subgoal):\n 1. compatAtm atm", "unfolding compatAtm_def"], ["proof (prove)\nusing this:\n  presAtm atm\n\ngoal (1 subgoal):\n 1. \\<forall>s t.\n       s \\<approx> t \\<longrightarrow> aval atm s \\<approx> aval atm t", "by (metis presAtm_def indis_sym indis_trans)"], ["", "text\\<open>Coinduction for discreetness:\\<close>"], ["", "lemma discr_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> (phi c' \\<or> discr c')\" and \n***: \"\\<And> c s s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. discr c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> discr c", "apply(erule discr.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              x \\<approx> xb \\<and> (phi xa \\<or> discr xa)) \\<and>\n          (\\<forall>x xa.\n              (c, x) \\<rightarrow>t xa \\<longrightarrow> x \\<approx> xa)", "using ** ***"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c1; (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1 \\<and> (phi ?c'1 \\<or> discr ?c'1)\n  \\<lbrakk>phi ?c1; (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              x \\<approx> xb \\<and> (phi xa \\<or> discr xa)) \\<and>\n          (\\<forall>x xa.\n              (c, x) \\<rightarrow>t xa \\<longrightarrow> x \\<approx> xa)", "by auto"], ["", "lemma discr_raw_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> phi c'\" and \n***: \"\\<And> c s s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. discr c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> discr c", "apply(erule discr_coind)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>phi c; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s' \\<and> (phi c' \\<or> discr c')\n 2. \\<And>c s s'.\n       \\<lbrakk>phi c; (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "using ** ***"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c1; (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1 \\<and> phi ?c'1\n  \\<lbrakk>phi ?c1; (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1\n\ngoal (2 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>phi c; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s' \\<and> (phi c' \\<or> discr c')\n 2. \\<And>c s s'.\n       \\<lbrakk>phi c; (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "by blast+"], ["", "text\\<open>Discreetness versus transition:\\<close>"], ["", "lemma discr_transC:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"discr c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c'", "using *"], ["proof (prove)\nusing this:\n  discr c\n\ngoal (1 subgoal):\n 1. discr c'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c \\<Longrightarrow> discr c'", "apply(erule discr.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow>\n           s \\<approx> s' \\<and> discr c';\n        \\<And>s s'.\n           (ca, s) \\<rightarrow>t s' \\<Longrightarrow>\n           s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> discr c'", "using **"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>c (c', s')\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow>\n           s \\<approx> s' \\<and> discr c';\n        \\<And>s s'.\n           (ca, s) \\<rightarrow>t s' \\<Longrightarrow>\n           s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> discr c'", "by blast"], ["", "lemma discr_MtransC:\nassumes \"discr c\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"discr c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. discr c'", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> discr c \\<longrightarrow> discr c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n    discr c \\<longrightarrow> discr c'", "apply(erule MtransC_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s. discr c \\<longrightarrow> discr c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        discr c \\<longrightarrow> discr c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> discr c \\<longrightarrow> discr c''", "using discr_transC"], ["proof (prove)\nusing this:\n  \\<lbrakk>discr ?c; (?c, ?s) \\<rightarrow>c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> discr ?c'\n\ngoal (2 subgoals):\n 1. \\<And>c s. discr c \\<longrightarrow> discr c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        discr c \\<longrightarrow> discr c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> discr c \\<longrightarrow> discr c''", "by blast+"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  discr c \\<longrightarrow> discr c'\n\ngoal (1 subgoal):\n 1. discr c'", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  discr c \\<longrightarrow> discr c'\n\ngoal (1 subgoal):\n 1. discr c'", "using assms"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  discr c \\<longrightarrow> discr c'\n  discr c\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. discr c'", "by blast"], ["proof (state)\nthis:\n  discr c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma discr_transC_indis:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using *"], ["proof (prove)\nusing this:\n  discr c\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c \\<Longrightarrow> s \\<approx> s'", "apply(erule discr.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow>\n           s \\<approx> s' \\<and> discr c';\n        \\<And>s s'.\n           (ca, s) \\<rightarrow>t s' \\<Longrightarrow>\n           s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "using **"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>c (c', s')\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow>\n           s \\<approx> s' \\<and> discr c';\n        \\<And>s s'.\n           (ca, s) \\<rightarrow>t s' \\<Longrightarrow>\n           s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "by blast"], ["", "lemma discr_MtransC_indis:\nassumes \"discr c\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> discr c \\<longrightarrow> s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n    discr c \\<longrightarrow> s \\<approx> s'", "apply(erule MtransC_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s. discr c \\<longrightarrow> s \\<approx> s\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        discr c \\<longrightarrow> s \\<approx> s';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> discr c \\<longrightarrow> s \\<approx> s''", "apply (metis indis_refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        discr c \\<longrightarrow> s \\<approx> s';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> discr c \\<longrightarrow> s \\<approx> s''", "by (metis discr.cases discr_MtransC indis_trans)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  discr c \\<longrightarrow> s \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  discr c \\<longrightarrow> s \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using assms"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  discr c \\<longrightarrow> s \\<approx> s'\n  discr c\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "by blast"], ["proof (state)\nthis:\n  s \\<approx> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma discr_transT:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>t s'\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using *"], ["proof (prove)\nusing this:\n  discr c\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c \\<Longrightarrow> s \\<approx> s'", "apply(erule discr.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow>\n           s \\<approx> s' \\<and> discr c';\n        \\<And>s s'.\n           (ca, s) \\<rightarrow>t s' \\<Longrightarrow>\n           s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "using **"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow>\n           s \\<approx> s' \\<and> discr c';\n        \\<And>s s'.\n           (ca, s) \\<rightarrow>t s' \\<Longrightarrow>\n           s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "by blast"], ["", "lemma discr_MtransT:\nassumes *: \"discr c\" and **: \"(c,s) \\<rightarrow>*t s'\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "obtain d' t' where \n  cs: \"(c,s) \\<rightarrow>*c (d',t')\" and d't': \"(d',t') \\<rightarrow>t s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (d', t');\n         (d', t') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using **"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (d', t');\n         (d', t') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule MtransT_invert2)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "hence \"s \\<approx> t'\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. s \\<approx> t'", "using * discr_MtransC_indis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>t s'\n  discr c\n  \\<lbrakk>discr ?c; (?c, ?s) \\<rightarrow>*c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s'\n\ngoal (1 subgoal):\n 1. s \\<approx> t'", "by blast"], ["proof (state)\nthis:\n  s \\<approx> t'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "moreover"], ["proof (state)\nthis:\n  s \\<approx> t'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "{"], ["proof (state)\nthis:\n  s \\<approx> t'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "have \"discr d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr d'", "using cs * discr_MtransC"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (d', t')\n  discr c\n  \\<lbrakk>discr ?c; (?c, ?s) \\<rightarrow>*c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> discr ?c'\n\ngoal (1 subgoal):\n 1. discr d'", "by blast"], ["proof (state)\nthis:\n  discr d'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "hence \"t' \\<approx> s'\""], ["proof (prove)\nusing this:\n  discr d'\n\ngoal (1 subgoal):\n 1. t' \\<approx> s'", "using d't' discr_transT"], ["proof (prove)\nusing this:\n  discr d'\n  (d', t') \\<rightarrow>t s'\n  \\<lbrakk>discr ?c; (?c, ?s) \\<rightarrow>t ?s'\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s'\n\ngoal (1 subgoal):\n 1. t' \\<approx> s'", "by blast"], ["proof (state)\nthis:\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "}"], ["proof (state)\nthis:\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "ultimately"], ["proof (chain)\npicking this:\n  s \\<approx> t'\n  t' \\<approx> s'", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<approx> t'\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using indis_trans"], ["proof (prove)\nusing this:\n  s \\<approx> t'\n  t' \\<approx> s'\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "by blast"], ["proof (state)\nthis:\n  s \\<approx> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Terminating-interctive discreetness\\<close>"], ["", "coinductive discr0 where \nintro: \n\"\\<lbrakk>\\<And> s c' s'. \\<lbrakk>mustT c s; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c'; \n  \\<And> s s'. \\<lbrakk>mustT c s; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\\<rbrakk> \n  \\<Longrightarrow> discr0 c\""], ["", "text\\<open>Coinduction for 0-discreetness:\\<close>"], ["", "lemma discr0_coind[consumes 1, case_names Cont Term, induct pred: discr0]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \n       \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n       s \\<approx> s' \\<and> (phi c' \\<or> discr0 c')\" and \n***: \"\\<And> c s s'. \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr0 c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. discr0 c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> discr0 c", "apply(erule discr0.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              mustT c x \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              x \\<approx> xb \\<and> (phi xa \\<or> discr0 xa)) \\<and>\n          (\\<forall>x xa.\n              mustT c x \\<longrightarrow>\n              (c, x) \\<rightarrow>t xa \\<longrightarrow> x \\<approx> xa)", "using ** ***"], ["proof (prove)\nusing this:\n  \\<lbrakk>mustT ?c1 ?s1; phi ?c1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1 \\<and> (phi ?c'1 \\<or> discr0 ?c'1)\n  \\<lbrakk>mustT ?c1 ?s1; phi ?c1; (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              mustT c x \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              x \\<approx> xb \\<and> (phi xa \\<or> discr0 xa)) \\<and>\n          (\\<forall>x xa.\n              mustT c x \\<longrightarrow>\n              (c, x) \\<rightarrow>t xa \\<longrightarrow> x \\<approx> xa)", "by auto"], ["", "lemma discr0_raw_coind[consumes 1, case_names Cont Term]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> s \\<approx> s' \\<and> phi c'\" and \n***: \"\\<And> c s s'. \\<lbrakk>mustT c s; phi c; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> s \\<approx> s'\"\nshows \"discr0 c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. discr0 c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> discr0 c", "apply(erule discr0_coind)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>mustT c s; phi c; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s' \\<and> (phi c' \\<or> discr0 c')\n 2. \\<And>c s s'.\n       \\<lbrakk>mustT c s; phi c; (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "using ** ***"], ["proof (prove)\nusing this:\n  \\<lbrakk>mustT ?c1 ?s1; phi ?c1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1 \\<and> phi ?c'1\n  \\<lbrakk>mustT ?c1 ?s1; phi ?c1; (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> ?s1 \\<approx> ?s'1\n\ngoal (2 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>mustT c s; phi c; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s' \\<and> (phi c' \\<or> discr0 c')\n 2. \\<And>c s s'.\n       \\<lbrakk>mustT c s; phi c; (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "by blast+"], ["", "text\\<open>0-Discreetness versus transition:\\<close>"], ["", "lemma discr0_transC:\nassumes *: \"discr0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"discr0 c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c'", "using *"], ["proof (prove)\nusing this:\n  discr0 c\n\ngoal (1 subgoal):\n 1. discr0 c'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c \\<Longrightarrow> discr0 c'", "apply(erule discr0.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c';\n        \\<And>s s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> discr0 c'", "using **"], ["proof (prove)\nusing this:\n  mustT c s\n  (c, s) \\<rightarrow>c (c', s')\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c';\n        \\<And>s s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> discr0 c'", "by blast"], ["", "lemma discr0_MtransC:\nassumes \"discr0 c\" and \"mustT c s\" \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"discr0 c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. discr0 c'", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n    mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c'", "apply(erule MtransC_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s. mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> mustT c s \\<and> discr0 c \\<longrightarrow>\n                         discr0 c''", "using discr0_transC mustT_MtransC"], ["proof (prove)\nusing this:\n  \\<lbrakk>discr0 ?c; mustT ?c ?s;\n   (?c, ?s) \\<rightarrow>c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> discr0 ?c'\n  \\<lbrakk>mustT ?c ?s; (?c, ?s) \\<rightarrow>*c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> mustT ?c' ?s'\n\ngoal (2 subgoals):\n 1. \\<And>c s. mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> mustT c s \\<and> discr0 c \\<longrightarrow>\n                         discr0 c''", "by blast+"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c'\n\ngoal (1 subgoal):\n 1. discr0 c'", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c'\n\ngoal (1 subgoal):\n 1. discr0 c'", "using assms"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> discr0 c \\<longrightarrow> discr0 c'\n  discr0 c\n  mustT c s\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. discr0 c'", "by blast"], ["proof (state)\nthis:\n  discr0 c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma discr0_transC_indis:\nassumes *: \"discr0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using *"], ["proof (prove)\nusing this:\n  discr0 c\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c \\<Longrightarrow> s \\<approx> s'", "apply(erule discr0.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c';\n        \\<And>s s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "using **"], ["proof (prove)\nusing this:\n  mustT c s\n  (c, s) \\<rightarrow>c (c', s')\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c';\n        \\<And>s s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "by blast"], ["", "lemma discr0_MtransC_indis:\nassumes \"discr0 c\" and \"mustT c s\" \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n    mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s'", "apply(erule MtransC_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s. mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> mustT c s \\<and> discr0 c \\<longrightarrow>\n                         s \\<approx> s''", "apply (metis indis_refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> mustT c s \\<and> discr0 c \\<longrightarrow>\n                         s \\<approx> s''", "by (metis discr0_MtransC discr0_transC_indis indis_trans mustT_MtransC)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using assms"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> discr0 c \\<longrightarrow> s \\<approx> s'\n  discr0 c\n  mustT c s\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "by blast"], ["proof (state)\nthis:\n  s \\<approx> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma discr0_transT:\nassumes *: \"discr0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>t s'\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using *"], ["proof (prove)\nusing this:\n  discr0 c\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 c \\<Longrightarrow> s \\<approx> s'", "apply(erule discr0.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c';\n        \\<And>s s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "using **"], ["proof (prove)\nusing this:\n  mustT c s\n  (c, s) \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s' \\<and> discr0 c';\n        \\<And>s s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> s \\<approx> s'\\<rbrakk>\n       \\<Longrightarrow> s \\<approx> s'", "by blast"], ["", "lemma discr0_MtransT:\nassumes *: \"discr0 c\" and ***: \"mustT c s\" and **: \"(c,s) \\<rightarrow>*t s'\"\nshows \"s \\<approx> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<approx> s'", "obtain d' t' where \n  cs: \"(c,s) \\<rightarrow>*c (d',t')\" and d't': \"(d',t') \\<rightarrow>t s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (d', t');\n         (d', t') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using **"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*t s'\n\ngoal (1 subgoal):\n 1. (\\<And>d' t'.\n        \\<lbrakk>(c, s) \\<rightarrow>*c (d', t');\n         (d', t') \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(rule MtransT_invert2)"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "hence \"s \\<approx> t'\""], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>t s'\n\ngoal (1 subgoal):\n 1. s \\<approx> t'", "using * discr0_MtransC_indis ***"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (d', t')\n  (d', t') \\<rightarrow>t s'\n  discr0 c\n  \\<lbrakk>discr0 ?c; mustT ?c ?s;\n   (?c, ?s) \\<rightarrow>*c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s'\n  mustT c s\n\ngoal (1 subgoal):\n 1. s \\<approx> t'", "by blast"], ["proof (state)\nthis:\n  s \\<approx> t'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "moreover"], ["proof (state)\nthis:\n  s \\<approx> t'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "{"], ["proof (state)\nthis:\n  s \\<approx> t'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "have \"discr0 d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr0 d'", "using cs * discr0_MtransC ***"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (d', t')\n  discr0 c\n  \\<lbrakk>discr0 ?c; mustT ?c ?s;\n   (?c, ?s) \\<rightarrow>*c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> discr0 ?c'\n  mustT c s\n\ngoal (1 subgoal):\n 1. discr0 d'", "by blast"], ["proof (state)\nthis:\n  discr0 d'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "hence \"t' \\<approx> s'\""], ["proof (prove)\nusing this:\n  discr0 d'\n\ngoal (1 subgoal):\n 1. t' \\<approx> s'", "using ***"], ["proof (prove)\nusing this:\n  discr0 d'\n  mustT c s\n\ngoal (1 subgoal):\n 1. t' \\<approx> s'", "by (metis mustT_MtransC cs d't' discr0_transT)"], ["proof (state)\nthis:\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "}"], ["proof (state)\nthis:\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "ultimately"], ["proof (chain)\npicking this:\n  s \\<approx> t'\n  t' \\<approx> s'", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<approx> t'\n  t' \\<approx> s'\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "using indis_trans"], ["proof (prove)\nusing this:\n  s \\<approx> t'\n  t' \\<approx> s'\n  \\<lbrakk>?s \\<approx> ?s'; ?s' \\<approx> ?s''\\<rbrakk>\n  \\<Longrightarrow> ?s \\<approx> ?s''\n\ngoal (1 subgoal):\n 1. s \\<approx> s'", "by blast"], ["proof (state)\nthis:\n  s \\<approx> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma discr_discr0[simp]: \"discr c \\<Longrightarrow> discr0 c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discr c \\<Longrightarrow> discr0 c", "by (induct rule: discr0_coind)\n     (metis discr_transC discr_transC_indis discr_transT)+"], ["", "subsection\\<open>Self-isomorphism\\<close>"], ["", "coinductive siso where \nintro: \n\"\\<lbrakk>\\<And> s c' s'. (c,s) \\<rightarrow>c (c',s') \\<Longrightarrow> siso c'; \n  \\<And> s t c' s'. \\<lbrakk>s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t');\n  \\<And> s t s'. \\<lbrakk>s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\\<rbrakk> \n  \\<Longrightarrow> siso c\""], ["", "text\\<open>Coinduction for self-isomorphism:\\<close>"], ["", "lemma siso_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c' \\<or> siso c'\" and \n***: \"\\<And> c s t c' s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. siso c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> siso c", "apply(erule siso.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              phi xa \\<or> siso xa) \\<and>\n          (\\<forall>x xa xb xc.\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xb, xc) \\<longrightarrow>\n              (\\<exists>t'.\n                  xc \\<approx> t' \\<and>\n                  (c, xa) \\<rightarrow>c (xb, t'))) \\<and>\n          (\\<forall>x xa xb.\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>t xb \\<longrightarrow>\n              (\\<exists>t'.\n                  xb \\<approx> t' \\<and> (c, xa) \\<rightarrow>t t'))", "using ** *** ****"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c1; (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> phi ?c'1 \\<or> siso ?c'1\n  \\<lbrakk>phi ?c1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and>\n                       (?c1, ?t1) \\<rightarrow>c (?c'1, t')\n  \\<lbrakk>phi ?c1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and> (?c1, ?t1) \\<rightarrow>t t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              phi xa \\<or> siso xa) \\<and>\n          (\\<forall>x xa xb xc.\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xb, xc) \\<longrightarrow>\n              (\\<exists>t'.\n                  xc \\<approx> t' \\<and>\n                  (c, xa) \\<rightarrow>c (xb, t'))) \\<and>\n          (\\<forall>x xa xb.\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>t xb \\<longrightarrow>\n              (\\<exists>t'.\n                  xb \\<approx> t' \\<and> (c, xa) \\<rightarrow>t t'))", "by auto"], ["", "lemma siso_raw_coind:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c'\" and \n***: \"\\<And> c s t c' s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \\<lbrakk>phi c; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. siso c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> siso c", "apply(erule siso_coind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>phi c; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> phi c' \\<or> siso c'\n 2. \\<And>c s t c' s'.\n       \\<lbrakk>phi c; s \\<approx> t;\n        (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')\n 3. \\<And>c s t s'.\n       \\<lbrakk>phi c; s \\<approx> t; (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "using ** *** ****"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c1; (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> phi ?c'1\n  \\<lbrakk>phi ?c1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and>\n                       (?c1, ?t1) \\<rightarrow>c (?c'1, t')\n  \\<lbrakk>phi ?c1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and> (?c1, ?t1) \\<rightarrow>t t'\n\ngoal (3 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>phi c; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> phi c' \\<or> siso c'\n 2. \\<And>c s t c' s'.\n       \\<lbrakk>phi c; s \\<approx> t;\n        (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')\n 3. \\<And>c s t s'.\n       \\<lbrakk>phi c; s \\<approx> t; (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "by blast+"], ["", "text\\<open>Self-Isomorphism versus transition:\\<close>"], ["", "lemma siso_transC:\nassumes *: \"siso c\" and **: \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"siso c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c'", "using *"], ["proof (prove)\nusing this:\n  siso c\n\ngoal (1 subgoal):\n 1. siso c'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c \\<Longrightarrow> siso c'", "apply(erule siso.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow> siso c';\n        \\<And>s t c' s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> siso c'", "using **"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>c (c', s')\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow> siso c';\n        \\<And>s t c' s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> siso c'", "by blast"], ["", "lemma siso_MtransC:\nassumes \"siso c\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"siso c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. siso c'", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> siso c \\<longrightarrow> siso c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n    siso c \\<longrightarrow> siso c'", "apply(erule MtransC_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s. siso c \\<longrightarrow> siso c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        siso c \\<longrightarrow> siso c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> siso c \\<longrightarrow> siso c''", "using siso_transC"], ["proof (prove)\nusing this:\n  \\<lbrakk>siso ?c; (?c, ?s) \\<rightarrow>c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> siso ?c'\n\ngoal (2 subgoals):\n 1. \\<And>c s. siso c \\<longrightarrow> siso c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        siso c \\<longrightarrow> siso c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> siso c \\<longrightarrow> siso c''", "by blast+"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  siso c \\<longrightarrow> siso c'\n\ngoal (1 subgoal):\n 1. siso c'", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  siso c \\<longrightarrow> siso c'\n\ngoal (1 subgoal):\n 1. siso c'", "using assms"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  siso c \\<longrightarrow> siso c'\n  siso c\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. siso c'", "by blast"], ["proof (state)\nthis:\n  siso c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma siso_transC_indis:\nassumes *: \"siso c\" and **: \"(c,s) \\<rightarrow>c (c',s')\" and ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>c (c', t')", "using *"], ["proof (prove)\nusing this:\n  siso c\n\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>c (c', t')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c \\<Longrightarrow>\n    \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>c (c', t')", "apply(erule siso.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow> siso c';\n        \\<And>s t c' s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')", "using ** ***"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>c (c', s')\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow> siso c';\n        \\<And>s t c' s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')", "by blast"], ["", "lemma siso_transT:\nassumes *: \"siso c\" and **: \"(c,s) \\<rightarrow>t s'\" and ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "using *"], ["proof (prove)\nusing this:\n  siso c\n\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. siso c \\<Longrightarrow>\n    \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "apply(erule siso.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow> siso c';\n        \\<And>s t c' s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "using ** ***"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>t s'\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           (ca, s) \\<rightarrow>c (c', s') \\<Longrightarrow> siso c';\n        \\<And>s t c' s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>s \\<approx> t; (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "by blast"], ["", "subsection\\<open>MustT-interactive self-isomorphism\\<close>"], ["", "coinductive siso0 where \nintro: \n\"\\<lbrakk>\\<And> s c' s'. \\<lbrakk>mustT c s; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> siso0 c'; \n  \\<And> s t c' s'. \n    \\<lbrakk>mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n    \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t');\n  \\<And> s t s'. \n    \\<lbrakk>mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \n    \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\\<rbrakk> \n  \\<Longrightarrow> siso0 c\""], ["", "text\\<open>Coinduction for self-isomorphism:\\<close>"], ["", "lemma siso0_coind[consumes 1, case_names Indef Cont Term, induct pred: discr0]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; mustT c s; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c' \\<or> siso0 c'\" and \n***: \"\\<And> c s t c' s'. \n        \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n        \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \n         \\<lbrakk>mustT c s; mustT c t; phi c; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \n         \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso0 c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. siso0 c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> siso0 c", "apply(erule siso0.coinduct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              mustT c x \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              phi xa \\<or> siso0 xa) \\<and>\n          (\\<forall>x xa xb xc.\n              mustT c x \\<longrightarrow>\n              mustT c xa \\<longrightarrow>\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xb, xc) \\<longrightarrow>\n              (\\<exists>t'.\n                  xc \\<approx> t' \\<and>\n                  (c, xa) \\<rightarrow>c (xb, t'))) \\<and>\n          (\\<forall>x xa xb.\n              mustT c x \\<longrightarrow>\n              mustT c xa \\<longrightarrow>\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>t xb \\<longrightarrow>\n              (\\<exists>t'.\n                  xb \\<approx> t' \\<and> (c, xa) \\<rightarrow>t t'))", "using ** *** ****"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c1; mustT ?c1 ?s1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> phi ?c'1 \\<or> siso0 ?c'1\n  \\<lbrakk>phi ?c1; mustT ?c1 ?s1; mustT ?c1 ?t1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and>\n                       (?c1, ?t1) \\<rightarrow>c (?c'1, t')\n  \\<lbrakk>mustT ?c1 ?s1; mustT ?c1 ?t1; phi ?c1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and> (?c1, ?t1) \\<rightarrow>t t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       phi x \\<Longrightarrow>\n       \\<exists>c.\n          x = c \\<and>\n          (\\<forall>x xa xb.\n              mustT c x \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xa, xb) \\<longrightarrow>\n              phi xa \\<or> siso0 xa) \\<and>\n          (\\<forall>x xa xb xc.\n              mustT c x \\<longrightarrow>\n              mustT c xa \\<longrightarrow>\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>c (xb, xc) \\<longrightarrow>\n              (\\<exists>t'.\n                  xc \\<approx> t' \\<and>\n                  (c, xa) \\<rightarrow>c (xb, t'))) \\<and>\n          (\\<forall>x xa xb.\n              mustT c x \\<longrightarrow>\n              mustT c xa \\<longrightarrow>\n              x \\<approx> xa \\<longrightarrow>\n              (c, x) \\<rightarrow>t xb \\<longrightarrow>\n              (\\<exists>t'.\n                  xb \\<approx> t' \\<and> (c, xa) \\<rightarrow>t t'))", "by auto"], ["", "lemma siso0_raw_coind[consumes 1, case_names Indef Cont Term]:\nassumes *: \"phi c\" and \n**: \"\\<And> c s c' s'. \\<lbrakk>phi c; mustT c s; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> phi c'\" and \n***: \"\\<And> c s t c' s'. \n        \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>c (c',s')\\<rbrakk> \\<Longrightarrow> \n        \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\" and \n****: \"\\<And> c s t s'. \n         \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t; (c,s) \\<rightarrow>t s'\\<rbrakk> \\<Longrightarrow> \n         \\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\"\nshows \"siso0 c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c", "using *"], ["proof (prove)\nusing this:\n  phi c\n\ngoal (1 subgoal):\n 1. siso0 c", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. phi c \\<Longrightarrow> siso0 c", "apply(erule siso0_coind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>phi c; mustT c s; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> phi c' \\<or> siso0 c'\n 2. \\<And>c s t c' s'.\n       \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t;\n        (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')\n 3. \\<And>c s t s'.\n       \\<lbrakk>mustT c s; mustT c t; phi c; s \\<approx> t;\n        (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "using ** *** ****"], ["proof (prove)\nusing this:\n  \\<lbrakk>phi ?c1; mustT ?c1 ?s1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> phi ?c'1\n  \\<lbrakk>phi ?c1; mustT ?c1 ?s1; mustT ?c1 ?t1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and>\n                       (?c1, ?t1) \\<rightarrow>c (?c'1, t')\n  \\<lbrakk>phi ?c1; mustT ?c1 ?s1; mustT ?c1 ?t1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       ?s'1 \\<approx> t' \\<and> (?c1, ?t1) \\<rightarrow>t t'\n\ngoal (3 subgoals):\n 1. \\<And>c s c' s'.\n       \\<lbrakk>phi c; mustT c s; (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> phi c' \\<or> siso0 c'\n 2. \\<And>c s t c' s'.\n       \\<lbrakk>phi c; mustT c s; mustT c t; s \\<approx> t;\n        (c, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')\n 3. \\<And>c s t s'.\n       \\<lbrakk>mustT c s; mustT c t; phi c; s \\<approx> t;\n        (c, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "by blast+"], ["", "text\\<open>Self-Isomorphism versus transition:\\<close>"], ["", "lemma siso0_transC:\nassumes *: \"siso0 c\" and **: \"mustT c s\" \"(c,s) \\<rightarrow>c (c',s')\"\nshows \"siso0 c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c'", "using *"], ["proof (prove)\nusing this:\n  siso0 c\n\ngoal (1 subgoal):\n 1. siso0 c'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c \\<Longrightarrow> siso0 c'", "apply(erule siso0.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> siso0 c';\n        \\<And>s t c' s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> siso0 c'", "using **"], ["proof (prove)\nusing this:\n  mustT c s\n  (c, s) \\<rightarrow>c (c', s')\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> siso0 c';\n        \\<And>s t c' s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> siso0 c'", "by blast"], ["", "lemma siso0_MtransC:\nassumes \"siso0 c\" and \"mustT c s\" and \"(c,s) \\<rightarrow>*c (c',s')\"\nshows \"siso0 c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c'", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. siso0 c'", "have \"(c,s) \\<rightarrow>*c (c',s') \\<Longrightarrow> mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n    mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c'", "apply(erule MtransC_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c s. mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> mustT c s \\<and> siso0 c \\<longrightarrow>\n                         siso0 c''", "using siso0_transC mustT_MtransC siso0_transC"], ["proof (prove)\nusing this:\n  \\<lbrakk>siso0 ?c; mustT ?c ?s;\n   (?c, ?s) \\<rightarrow>c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> siso0 ?c'\n  \\<lbrakk>mustT ?c ?s; (?c, ?s) \\<rightarrow>*c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> mustT ?c' ?s'\n  \\<lbrakk>siso0 ?c; mustT ?c ?s;\n   (?c, ?s) \\<rightarrow>c (?c', ?s')\\<rbrakk>\n  \\<Longrightarrow> siso0 ?c'\n\ngoal (2 subgoals):\n 1. \\<And>c s. mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c\n 2. \\<And>c s c' s' c'' s''.\n       \\<lbrakk>(c, s) \\<rightarrow>*c (c', s');\n        mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c';\n        (c', s') \\<rightarrow>c (c'', s'')\\<rbrakk>\n       \\<Longrightarrow> mustT c s \\<and> siso0 c \\<longrightarrow>\n                         siso0 c''", "by blast+"], ["proof (state)\nthis:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c'\n\ngoal (1 subgoal):\n 1. siso0 c'", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c'\n\ngoal (1 subgoal):\n 1. siso0 c'", "using assms"], ["proof (prove)\nusing this:\n  (c, s) \\<rightarrow>*c (c', s') \\<Longrightarrow>\n  mustT c s \\<and> siso0 c \\<longrightarrow> siso0 c'\n  siso0 c\n  mustT c s\n  (c, s) \\<rightarrow>*c (c', s')\n\ngoal (1 subgoal):\n 1. siso0 c'", "by blast"], ["proof (state)\nthis:\n  siso0 c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma siso0_transC_indis:\nassumes *: \"siso0 c\" \nand **: \"mustT c s\" \"mustT c t\" \"(c,s) \\<rightarrow>c (c',s')\" \nand ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>c (c',t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>c (c', t')", "using *"], ["proof (prove)\nusing this:\n  siso0 c\n\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>c (c', t')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c \\<Longrightarrow>\n    \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>c (c', t')", "apply(erule siso0.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> siso0 c';\n        \\<And>s t c' s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')", "using ** ***"], ["proof (prove)\nusing this:\n  mustT c s\n  mustT c t\n  (c, s) \\<rightarrow>c (c', s')\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> siso0 c';\n        \\<And>s t c' s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and>\n                            (c, t) \\<rightarrow>c (c', t')", "by blast"], ["", "lemma siso0_transT:\nassumes *: \"siso0 c\" \nand **: \"mustT c s\" \"mustT c t\" \"(c,s) \\<rightarrow>t s'\" \nand ***: \"s \\<approx> t\"\nshows \"\\<exists> t'. s' \\<approx> t' \\<and> (c,t) \\<rightarrow>t t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "using *"], ["proof (prove)\nusing this:\n  siso0 c\n\ngoal (1 subgoal):\n 1. \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. siso0 c \\<Longrightarrow>\n    \\<exists>t'. s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "apply(erule siso0.cases)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> siso0 c';\n        \\<And>s t c' s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "using ** ***"], ["proof (prove)\nusing this:\n  mustT c s\n  mustT c t\n  (c, s) \\<rightarrow>t s'\n  s \\<approx> t\n\ngoal (1 subgoal):\n 1. \\<And>ca.\n       \\<lbrakk>c = ca;\n        \\<And>s c' s'.\n           \\<lbrakk>mustT ca s; (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> siso0 c';\n        \\<And>s t c' s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>c (c', s')\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>c (c', t');\n        \\<And>s t s'.\n           \\<lbrakk>mustT ca s; mustT ca t; s \\<approx> t;\n            (ca, s) \\<rightarrow>t s'\\<rbrakk>\n           \\<Longrightarrow> \\<exists>t'.\n                                s' \\<approx> t' \\<and>\n                                (ca, t) \\<rightarrow>t t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            s' \\<approx> t' \\<and> (c, t) \\<rightarrow>t t'", "by blast"], ["", "subsection\\<open>Notions of bisimilarity\\<close>"], ["", "text\\<open>Matchers:\\<close>"], ["", "(* Notations and conventions:\n\\\\- ``<u>_<v>\" means: ``match u by v\", where u, v can be: \nC (one continuation step), MC (multiple continuation steps), \nZOC (zero or one continuation steps), \nT (termination step), MT (multiple steps leading to termination).   *)"], ["", "definition matchC_C where \n\"matchC_C theta c d \\<equiv> \n \\<forall> s t c' s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>c (c',s') \n   \\<longrightarrow> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>c (d',t') \\<and> s' \\<approx> t' \\<and> (c',d') \\<in> theta)\""], ["", "definition matchC_ZOC where \n\"matchC_ZOC theta c d \\<equiv> \n \\<forall> s t c' s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>c (c',s') \n   \\<longrightarrow> \n   (s' \\<approx> t \\<and> (c',d) \\<in> theta)\n   \\<or> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>c (d',t') \\<and> s' \\<approx> t' \\<and> (c',d') \\<in> theta)\""], ["", "definition matchC_ZO where \n\"matchC_ZO theta c d \\<equiv> \n \\<forall> s t c' s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>c (c',s') \n   \\<longrightarrow> \n   (s' \\<approx> t \\<and> (c',d) \\<in> theta)\n   \\<or> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>c (d',t') \\<and> s' \\<approx> t' \\<and> (c',d') \\<in> theta) \n   \\<or> \n   (\\<exists> t'. (d,t) \\<rightarrow>t t' \\<and> s' \\<approx> t' \\<and> discr c')\""], ["", "definition matchT_T where \n\"matchT_T c d \\<equiv> \n \\<forall> s t s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>t s' \n   \\<longrightarrow> \n   (\\<exists> t'. (d,t) \\<rightarrow>t t' \\<and> s' \\<approx> t')\""], ["", "definition matchT_ZO where \n\"matchT_ZO c d \\<equiv> \n \\<forall> s t s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>t s' \n   \\<longrightarrow> \n   (s' \\<approx> t \\<and> discr d)\n   \\<or> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>c (d',t') \\<and> s' \\<approx> t' \\<and> discr d')\n   \\<or> \n   (\\<exists> t'. (d,t) \\<rightarrow>t t' \\<and> s' \\<approx> t')\""], ["", "(*  *)"], ["", "definition matchC_MC where \n\"matchC_MC theta c d \\<equiv> \n \\<forall> s t c' s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>c (c',s') \n   \\<longrightarrow> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> (c',d') \\<in> theta)\""], ["", "definition matchC_TMC where \n\"matchC_TMC theta c d \\<equiv> \n \\<forall> s t c' s'. \n   mustT c s \\<and> mustT d t \\<and> s \\<approx> t \\<and> (c,s) \\<rightarrow>c (c',s') \n   \\<longrightarrow> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> (c',d') \\<in> theta)\""], ["", "definition matchC_M where \n\"matchC_M theta c d \\<equiv> \n \\<forall> s t c' s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>c (c',s') \n   \\<longrightarrow> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> (c',d') \\<in> theta) \n   \\<or> \n   (\\<exists> t'. (d,t) \\<rightarrow>*t t' \\<and> s' \\<approx> t' \\<and> discr c')\""], ["", "definition matchT_MT where \n\"matchT_MT c d \\<equiv> \n \\<forall> s t s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>t s' \n   \\<longrightarrow> \n   (\\<exists> t'. (d,t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')\""], ["", "definition matchT_TMT where \n\"matchT_TMT c d \\<equiv> \n \\<forall> s t s'. \n   mustT c s \\<and> mustT d t \\<and> s \\<approx> t \\<and> (c,s) \\<rightarrow>t s' \n   \\<longrightarrow> \n   (\\<exists> t'. (d,t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')\""], ["", "definition matchT_M where \n\"matchT_M c d \\<equiv> \n \\<forall> s t s'. \n   s \\<approx> t \\<and> (c,s) \\<rightarrow>t s' \n   \\<longrightarrow> \n   (\\<exists> d' t'. (d,t) \\<rightarrow>*c (d',t') \\<and> s' \\<approx> t' \\<and> discr d')\n   \\<or> \n   (\\<exists> t'. (d,t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')\""], ["", "lemmas match_defs = \nmatchC_C_def \nmatchC_ZOC_def matchC_ZO_def\nmatchT_T_def matchT_ZO_def\nmatchC_MC_def matchC_M_def\nmatchT_MT_def matchT_M_def\nmatchC_TMC_def matchT_TMT_def"], ["", "(* For convenience, indis-symmetric variations of the above definitions: *)"], ["", "lemma matchC_C_def2: \n\"matchC_C theta d c =\n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_C theta d c =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "unfolding matchC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "by blast"], ["", "lemma matchC_ZOC_def2:  \n\"matchC_ZOC theta d c= \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (s \\<approx> t' \\<and> (d',c) \\<in> theta)\n   \\<or> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_ZOC theta d c =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        s \\<approx> t' \\<and> (d', c) \\<in> theta \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "unfolding matchC_ZOC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        s' \\<approx> t \\<and> (c', c) \\<in> theta \\<or>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        s \\<approx> t' \\<and> (d', c) \\<in> theta \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        s' \\<approx> t \\<and> (c', c) \\<in> theta \\<or>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        s \\<approx> t' \\<and> (d', c) \\<in> theta \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "by blast"], ["", "lemma matchC_ZO_def2:\n\"matchC_ZO theta d c = \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (s \\<approx> t' \\<and> (d',c) \\<in> theta)\n   \\<or> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta) \n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>t s' \\<and> s' \\<approx> t' \\<and> discr d'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_ZO theta d c =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        s \\<approx> t' \\<and> (d', c) \\<in> theta \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta) \\<or>\n        (\\<exists>s'.\n            (c, s) \\<rightarrow>t s' \\<and>\n            s' \\<approx> t' \\<and> discr d'))", "unfolding matchC_ZO_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        s' \\<approx> t \\<and> (c', c) \\<in> theta \\<or>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n        (\\<exists>t'.\n            (c, t) \\<rightarrow>t t' \\<and>\n            s' \\<approx> t' \\<and> discr c')) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        s \\<approx> t' \\<and> (d', c) \\<in> theta \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta) \\<or>\n        (\\<exists>s'.\n            (c, s) \\<rightarrow>t s' \\<and>\n            s' \\<approx> t' \\<and> discr d'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        s' \\<approx> t \\<and> (c', c) \\<in> theta \\<or>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n        (\\<exists>t'.\n            (c, t) \\<rightarrow>t t' \\<and>\n            s' \\<approx> t' \\<and> discr c')) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        s \\<approx> t' \\<and> (d', c) \\<in> theta \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta) \\<or>\n        (\\<exists>s'.\n            (c, s) \\<rightarrow>t s' \\<and>\n            s' \\<approx> t' \\<and> discr d'))", "by blast"], ["", "lemma matchT_T_def2:\n\"matchT_T d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> s'. (c,s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_T d c =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))", "unfolding matchT_T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>t'. (c, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>t'. (c, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))", "by blast"], ["", "lemma matchT_ZO_def2:\n\"matchT_ZO d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (s \\<approx> t' \\<and> discr c)\n   \\<or> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>c (c',s') \\<and> s' \\<approx> t' \\<and> discr c')\n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_ZO d c =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        s \\<approx> t' \\<and> discr c \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> discr c') \\<or>\n        (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))", "unfolding matchT_ZO_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        s' \\<approx> t \\<and> discr c \\<or>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> discr d') \\<or>\n        (\\<exists>t'. (c, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        s \\<approx> t' \\<and> discr c \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> discr c') \\<or>\n        (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        s' \\<approx> t \\<and> discr c \\<or>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>c (d', t') \\<and>\n            s' \\<approx> t' \\<and> discr d') \\<or>\n        (\\<exists>t'. (c, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        s \\<approx> t' \\<and> discr c \\<or>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>c (c', s') \\<and>\n            s' \\<approx> t' \\<and> discr c') \\<or>\n        (\\<exists>s'. (c, s) \\<rightarrow>t s' \\<and> s' \\<approx> t'))", "by blast"], ["", "(*  *)"], ["", "lemma matchC_MC_def2:  \n\"matchC_MC theta d c= \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_MC theta d c =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "unfolding matchC_MC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "by blast"], ["", "lemma matchC_TMC_def2:  \n\"matchC_TMC theta d c= \n (\\<forall> s t d' t'. \n   mustT c s \\<and> mustT d t \\<and> s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_TMC theta d c =\n    (\\<forall>s t d' t'.\n        mustT c s \\<and>\n        mustT d t \\<and>\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "unfolding matchC_TMC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        mustT d s \\<and>\n        mustT c t \\<and>\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        mustT c s \\<and>\n        mustT d t \\<and>\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        mustT d s \\<and>\n        mustT c t \\<and>\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta)) =\n    (\\<forall>s t d' t'.\n        mustT c s \\<and>\n        mustT d t \\<and>\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta))", "by blast"], ["", "lemma matchC_M_def2:\n\"matchC_M theta d c = \n (\\<forall> s t d' t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>c (d',t') \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> (d',c') \\<in> theta) \n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t' \\<and> discr d'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_M theta d c =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta) \\<or>\n        (\\<exists>s'.\n            (c, s) \\<rightarrow>*t s' \\<and>\n            s' \\<approx> t' \\<and> discr d'))", "unfolding matchC_M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n        (\\<exists>t'.\n            (c, t) \\<rightarrow>*t t' \\<and>\n            s' \\<approx> t' \\<and> discr c')) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta) \\<or>\n        (\\<exists>s'.\n            (c, s) \\<rightarrow>*t s' \\<and>\n            s' \\<approx> t' \\<and> discr d'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t c' s'.\n        s \\<approx> t \\<and>\n        (d, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n        (\\<exists>t'.\n            (c, t) \\<rightarrow>*t t' \\<and>\n            s' \\<approx> t' \\<and> discr c')) =\n    (\\<forall>s t d' t'.\n        s \\<approx> t \\<and>\n        (d, t) \\<rightarrow>c (d', t') \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> (d', c') \\<in> theta) \\<or>\n        (\\<exists>s'.\n            (c, s) \\<rightarrow>*t s' \\<and>\n            s' \\<approx> t' \\<and> discr d'))", "by blast"], ["", "lemma matchT_MT_def2:\n\"matchT_MT d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_MT d c =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "unfolding matchT_MT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>t'. (c, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>t'. (c, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "by blast"], ["", "lemma matchT_TMT_def2:\n\"matchT_TMT d c = \n (\\<forall> s t t'. \n   mustT c s \\<and> mustT d t \\<and> s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_TMT d c =\n    (\\<forall>s t t'.\n        mustT c s \\<and>\n        mustT d t \\<and>\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "unfolding matchT_TMT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        mustT d s \\<and>\n        mustT c t \\<and>\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>t'. (c, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        mustT c s \\<and>\n        mustT d t \\<and>\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        mustT d s \\<and>\n        mustT c t \\<and>\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>t'. (c, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        mustT c s \\<and>\n        mustT d t \\<and>\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "by blast"], ["", "lemma matchT_M_def2:\n\"matchT_M d c = \n (\\<forall> s t t'. \n   s \\<approx> t \\<and> (d,t) \\<rightarrow>t t' \n   \\<longrightarrow> \n   (\\<exists> c' s'. (c,s) \\<rightarrow>*c (c',s') \\<and> s' \\<approx> t' \\<and> discr c')\n   \\<or> \n   (\\<exists> s'. (c,s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_M d c =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> discr c') \\<or>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "unfolding matchT_M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> discr d') \\<or>\n        (\\<exists>t'. (c, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> discr c') \\<or>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "using indis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx> ?s' \\<Longrightarrow> ?s' \\<approx> ?s\n\ngoal (1 subgoal):\n 1. (\\<forall>s t s'.\n        s \\<approx> t \\<and> (d, s) \\<rightarrow>t s' \\<longrightarrow>\n        (\\<exists>d' t'.\n            (c, t) \\<rightarrow>*c (d', t') \\<and>\n            s' \\<approx> t' \\<and> discr d') \\<or>\n        (\\<exists>t'. (c, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) =\n    (\\<forall>s t t'.\n        s \\<approx> t \\<and> (d, t) \\<rightarrow>t t' \\<longrightarrow>\n        (\\<exists>c' s'.\n            (c, s) \\<rightarrow>*c (c', s') \\<and>\n            s' \\<approx> t' \\<and> discr c') \\<or>\n        (\\<exists>s'. (c, s) \\<rightarrow>*t s' \\<and> s' \\<approx> t'))", "by blast"], ["", "text\\<open>Retracts:\\<close>"], ["", "(* Strong retract: *)"], ["", "definition Sretr where \n\"Sretr theta \\<equiv> \n {(c,d). \n    matchC_C theta c d \\<and> \n    matchT_T c d}\""], ["", "(* Zero-one retract: *)"], ["", "definition ZOretr where \n\"ZOretr theta \\<equiv> \n {(c,d). \n    matchC_ZO theta c d \\<and> \n    matchT_ZO c d}\""], ["", "(* Zero-one termination-sensitive retract: *)"], ["", "definition ZOretrT where \n\"ZOretrT theta \\<equiv> \n {(c,d). \n    matchC_ZOC theta c d \\<and> \n    matchT_T c d}\""], ["", "(* Weak retract: *)"], ["", "definition Wretr where \n\"Wretr theta \\<equiv> \n {(c,d). \n    matchC_M theta c d \\<and> \n    matchT_M c d }\""], ["", "(* Weak termination-sensitive retract: *)"], ["", "definition WretrT where \n\"WretrT theta \\<equiv> \n {(c,d). \n    matchC_MC theta c d \\<and> \n    matchT_MT c d}\""], ["", "(* Weak terminating-interactive termination-sensitive retract: *)"], ["", "definition RetrT where \n\"RetrT theta \\<equiv> \n {(c,d). \n    matchC_TMC theta c d \\<and> \n    matchT_TMT c d}\""], ["", "lemmas Retr_defs = \nSretr_def \nZOretr_def ZOretrT_def \nWretr_def WretrT_def \nRetrT_def"], ["", "text\\<open>The associated bisimilarity relations:\\<close>"], ["", "definition Sbis where \"Sbis \\<equiv> bis Sretr\""], ["", "definition ZObis where \"ZObis \\<equiv> bis ZOretr\""], ["", "definition ZObisT where \"ZObisT \\<equiv> bis ZOretrT\""], ["", "definition Wbis where \"Wbis \\<equiv> bis Wretr\""], ["", "definition WbisT where \"WbisT \\<equiv> bis WretrT\""], ["", "definition BisT where \"BisT \\<equiv> bis RetrT\""], ["", "lemmas bis_defs = \nSbis_def \nZObis_def ZObisT_def \nWbis_def WbisT_def \nBisT_def"], ["", "abbreviation Sbis_abbrev (infix \"\\<approx>s\" 55) where \"c1 \\<approx>s c2 \\<equiv> (c1,c2) \\<in> Sbis\""], ["", "abbreviation ZObis_abbrev (infix \"\\<approx>01\" 55) where \"c1 \\<approx>01 c2 \\<equiv> (c1,c2) \\<in> ZObis\""], ["", "abbreviation ZObisT_abbrev (infix \"\\<approx>01T\" 55) where \"c1 \\<approx>01T c2 \\<equiv> (c1,c2) \\<in> ZObisT\""], ["", "abbreviation Wbis_abbrev (infix \"\\<approx>w\" 55) where \"c1 \\<approx>w c2 \\<equiv> (c1,c2) \\<in> Wbis\""], ["", "abbreviation WbisT_abbrev (infix \"\\<approx>wT\" 55) where \"c1 \\<approx>wT c2 \\<equiv> (c1,c2) \\<in> WbisT\""], ["", "abbreviation BisT_abbrev (infix \"\\<approx>T\" 55) where \"c1 \\<approx>T c2 \\<equiv> (c1,c2) \\<in> BisT\""], ["", "lemma mono_Retr:\n\"mono Sretr\"\n\"mono ZOretr\"  \"mono ZOretrT\"\n\"mono Wretr\"  \"mono WretrT\"\n\"mono RetrT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Bisim.mono Sretr &&& Bisim.mono ZOretr &&& Bisim.mono ZOretrT) &&&\n    Bisim.mono Wretr &&& Bisim.mono WretrT &&& Bisim.mono RetrT", "unfolding mono_def Retr_defs match_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>theta theta'.\n        theta \\<subseteq> theta' \\<longrightarrow>\n        {(c, d).\n         (\\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             (\\<exists>d' t'.\n                 (d, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and> (c', d') \\<in> theta)) \\<and>\n         (\\<forall>s t s'.\n             s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n             (\\<exists>t'.\n                 (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t'))}\n        \\<subseteq> {(c, d).\n                     (\\<forall>s t c' s'.\n                         s \\<approx> t \\<and>\n                         (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                         (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta')) \\<and>\n                     (\\<forall>s t s'.\n                         s \\<approx> t \\<and>\n                         (c, s) \\<rightarrow>t s' \\<longrightarrow>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t'))} &&&\n     \\<forall>theta theta'.\n        theta \\<subseteq> theta' \\<longrightarrow>\n        {(c, d).\n         (\\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             s' \\<approx> t \\<and> (c', d) \\<in> theta \\<or>\n             (\\<exists>d' t'.\n                 (d, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n             (\\<exists>t'.\n                 (d, t) \\<rightarrow>t t' \\<and>\n                 s' \\<approx> t' \\<and> discr c')) \\<and>\n         (\\<forall>s t s'.\n             s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n             s' \\<approx> t \\<and> discr d \\<or>\n             (\\<exists>d' t'.\n                 (d, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and> discr d') \\<or>\n             (\\<exists>t'.\n                 (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t'))}\n        \\<subseteq> {(c, d).\n                     (\\<forall>s t c' s'.\n                         s \\<approx> t \\<and>\n                         (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                         s' \\<approx> t \\<and> (c', d) \\<in> theta' \\<or>\n                         (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')) \\<and>\n                     (\\<forall>s t s'.\n                         s \\<approx> t \\<and>\n                         (c, s) \\<rightarrow>t s' \\<longrightarrow>\n                         s' \\<approx> t \\<and> discr d \\<or>\n                         (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t'))} &&&\n     \\<forall>theta theta'.\n        theta \\<subseteq> theta' \\<longrightarrow>\n        {(c, d).\n         (\\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             s' \\<approx> t \\<and> (c', d) \\<in> theta \\<or>\n             (\\<exists>d' t'.\n                 (d, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and> (c', d') \\<in> theta)) \\<and>\n         (\\<forall>s t s'.\n             s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n             (\\<exists>t'.\n                 (d, t) \\<rightarrow>t t' \\<and> s' \\<approx> t'))}\n        \\<subseteq> {(c, d).\n                     (\\<forall>s t c' s'.\n                         s \\<approx> t \\<and>\n                         (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                         s' \\<approx> t \\<and> (c', d) \\<in> theta' \\<or>\n                         (\\<exists>d' t'.\n                             (d, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta')) \\<and>\n                     (\\<forall>s t s'.\n                         s \\<approx> t \\<and>\n                         (c, s) \\<rightarrow>t s' \\<longrightarrow>\n                         (\\<exists>t'.\n                             (d, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t'))}) &&&\n    \\<forall>theta theta'.\n       theta \\<subseteq> theta' \\<longrightarrow>\n       {(c, d).\n        (\\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (d, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n            (\\<exists>t'.\n                (d, t) \\<rightarrow>*t t' \\<and>\n                s' \\<approx> t' \\<and> discr c')) \\<and>\n        (\\<forall>s t s'.\n            s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>d' t'.\n                (d, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> discr d') \\<or>\n            (\\<exists>t'.\n                (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'))}\n       \\<subseteq> {(c, d).\n                    (\\<forall>s t c' s'.\n                        s \\<approx> t \\<and>\n                        (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                        (\\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and>\n                            (c', d') \\<in> theta') \\<or>\n                        (\\<exists>t'.\n                            (d, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t' \\<and> discr c')) \\<and>\n                    (\\<forall>s t s'.\n                        s \\<approx> t \\<and>\n                        (c, s) \\<rightarrow>t s' \\<longrightarrow>\n                        (\\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> discr d') \\<or>\n                        (\\<exists>t'.\n                            (d, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'))} &&&\n    \\<forall>theta theta'.\n       theta \\<subseteq> theta' \\<longrightarrow>\n       {(c, d).\n        (\\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (d, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta)) \\<and>\n        (\\<forall>s t s'.\n            s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>t'.\n                (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'))}\n       \\<subseteq> {(c, d).\n                    (\\<forall>s t c' s'.\n                        s \\<approx> t \\<and>\n                        (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                        (\\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and>\n                            (c', d') \\<in> theta')) \\<and>\n                    (\\<forall>s t s'.\n                        s \\<approx> t \\<and>\n                        (c, s) \\<rightarrow>t s' \\<longrightarrow>\n                        (\\<exists>t'.\n                            (d, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'))} &&&\n    \\<forall>theta theta'.\n       theta \\<subseteq> theta' \\<longrightarrow>\n       {(c, d).\n        (\\<forall>s t c' s'.\n            mustT c s \\<and>\n            mustT d t \\<and>\n            s \\<approx> t \\<and>\n            (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (d, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta)) \\<and>\n        (\\<forall>s t s'.\n            mustT c s \\<and>\n            mustT d t \\<and>\n            s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>t'.\n                (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'))}\n       \\<subseteq> {(c, d).\n                    (\\<forall>s t c' s'.\n                        mustT c s \\<and>\n                        mustT d t \\<and>\n                        s \\<approx> t \\<and>\n                        (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                        (\\<exists>d' t'.\n                            (d, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and>\n                            (c', d') \\<in> theta')) \\<and>\n                    (\\<forall>s t s'.\n                        mustT c s \\<and>\n                        mustT d t \\<and>\n                        s \\<approx> t \\<and>\n                        (c, s) \\<rightarrow>t s' \\<longrightarrow>\n                        (\\<exists>t'.\n                            (d, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'))}", "by blast+"], ["", "(* Sbis: *)"], ["", "lemma Sbis_prefix:\n\"Sbis \\<subseteq> Sretr Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sbis \\<subseteq> Sretr Sbis", "unfolding Sbis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis Sretr \\<subseteq> Sretr (bis Sretr)", "using mono_Retr bis_prefix"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> bis ?Retr \\<subseteq> ?Retr (bis ?Retr)\n\ngoal (1 subgoal):\n 1. bis Sretr \\<subseteq> Sretr (bis Sretr)", "by blast"], ["", "lemma Sbis_sym: \"sym Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym Sbis", "unfolding Sbis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis Sretr)", "using mono_Retr sym_bis"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> sym (bis ?Retr)\n\ngoal (1 subgoal):\n 1. sym (bis Sretr)", "by blast"], ["", "lemma Sbis_Sym: \"c \\<approx>s d \\<Longrightarrow> d \\<approx>s c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>s d \\<Longrightarrow> d \\<approx>s c", "using Sbis_sym"], ["proof (prove)\nusing this:\n  sym Sbis\n\ngoal (1 subgoal):\n 1. c \\<approx>s d \\<Longrightarrow> d \\<approx>s c", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>s y \\<longrightarrow> y \\<approx>s x\n\ngoal (1 subgoal):\n 1. c \\<approx>s d \\<Longrightarrow> d \\<approx>s c", "by blast"], ["", "lemma Sbis_converse:\n\"((c,d) \\<in> theta^-1 \\<union> Sbis) = ((d,c) \\<in> theta \\<union> Sbis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c, d) \\<in> theta\\<inverse> \\<union> Sbis) =\n    ((d, c) \\<in> theta \\<union> Sbis)", "by (metis Sbis_sym converseI converse_Un converse_converse sym_conv_converse_eq)"], ["", "lemma\nSbis_matchC_C: \"\\<And> s t. c \\<approx>s d \\<Longrightarrow> matchC_C Sbis c d\"\nand \nSbis_matchT_T: \"\\<And> c d. c \\<approx>s d \\<Longrightarrow> matchT_T c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t. c \\<approx>s d \\<Longrightarrow> matchC_C Sbis c d) &&&\n    (\\<And>c d. c \\<approx>s d \\<Longrightarrow> matchT_T c d)", "using Sbis_prefix"], ["proof (prove)\nusing this:\n  Sbis \\<subseteq> Sretr Sbis\n\ngoal (1 subgoal):\n 1. (\\<And>s t. c \\<approx>s d \\<Longrightarrow> matchC_C Sbis c d) &&&\n    (\\<And>c d. c \\<approx>s d \\<Longrightarrow> matchT_T c d)", "unfolding Sretr_def"], ["proof (prove)\nusing this:\n  Sbis \\<subseteq> {(c, d). matchC_C Sbis c d \\<and> matchT_T c d}\n\ngoal (1 subgoal):\n 1. (\\<And>s t. c \\<approx>s d \\<Longrightarrow> matchC_C Sbis c d) &&&\n    (\\<And>c d. c \\<approx>s d \\<Longrightarrow> matchT_T c d)", "by auto"], ["", "lemmas Sbis_step = Sbis_matchC_C Sbis_matchT_T"], ["", "lemma\nSbis_matchC_C_rev: \"\\<And> s t. s \\<approx>s t \\<Longrightarrow> matchC_C Sbis t s\"\nand \nSbis_matchT_T_rev: \"\\<And> s t. s \\<approx>s t \\<Longrightarrow> matchT_T t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>s t \\<Longrightarrow> matchC_C Sbis t s) &&&\n    (\\<And>s t. s \\<approx>s t \\<Longrightarrow> matchT_T t s)", "using Sbis_step Sbis_sym"], ["proof (prove)\nusing this:\n  ?c \\<approx>s ?d \\<Longrightarrow> matchC_C Sbis ?c ?d\n  ?c \\<approx>s ?d \\<Longrightarrow> matchT_T ?c ?d\n  sym Sbis\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>s t \\<Longrightarrow> matchC_C Sbis t s) &&&\n    (\\<And>s t. s \\<approx>s t \\<Longrightarrow> matchT_T t s)", "unfolding sym_def"], ["proof (prove)\nusing this:\n  ?c \\<approx>s ?d \\<Longrightarrow> matchC_C Sbis ?c ?d\n  ?c \\<approx>s ?d \\<Longrightarrow> matchT_T ?c ?d\n  \\<forall>x y. x \\<approx>s y \\<longrightarrow> y \\<approx>s x\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>s t \\<Longrightarrow> matchC_C Sbis t s) &&&\n    (\\<And>s t. s \\<approx>s t \\<Longrightarrow> matchT_T t s)", "by blast+"], ["", "lemmas Sbis_step_rev = Sbis_matchC_C_rev Sbis_matchT_T_rev"], ["", "lemma Sbis_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Sretr (theta \\<union> Sbis)\"\nshows \"theta \\<subseteq> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "using assms mono_Retr bis_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Sretr (theta \\<union> Sbis)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "unfolding Sbis_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Sretr (theta \\<union> bis Sretr)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Sretr", "by blast"], ["", "lemma Sbis_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Sretr theta\"\nshows \"theta \\<subseteq> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "using assms mono_Retr bis_raw_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Sretr theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "unfolding Sbis_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Sretr theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Sretr", "by blast"], ["", "lemma Sbis_coind2:\nassumes \"theta \\<subseteq> Sretr (theta \\<union> Sbis)\" and \n\"theta ^-1 \\<subseteq> Sretr ((theta ^-1) \\<union> Sbis)\"\nshows \"theta \\<subseteq> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "using assms mono_Retr bis_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr (theta \\<union> Sbis)\n  theta\\<inverse> \\<subseteq> Sretr (theta\\<inverse> \\<union> Sbis)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "unfolding Sbis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr (theta \\<union> bis Sretr)\n  theta\\<inverse> \\<subseteq> Sretr (theta\\<inverse> \\<union> bis Sretr)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Sretr", "by blast"], ["", "lemma Sbis_raw_coind2:\nassumes \"theta \\<subseteq> Sretr theta\" and \n\"theta ^-1 \\<subseteq> Sretr (theta ^-1)\"\nshows \"theta \\<subseteq> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "using assms mono_Retr bis_raw_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr theta\n  theta\\<inverse> \\<subseteq> Sretr (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Sbis", "unfolding Sbis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Sretr theta\n  theta\\<inverse> \\<subseteq> Sretr (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Sretr", "by blast"], ["", "(* ZObis: *)"], ["", "lemma ZObis_prefix:\n\"ZObis \\<subseteq> ZOretr ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObis \\<subseteq> ZOretr ZObis", "unfolding ZObis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis ZOretr \\<subseteq> ZOretr (bis ZOretr)", "using mono_Retr bis_prefix"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> bis ?Retr \\<subseteq> ?Retr (bis ?Retr)\n\ngoal (1 subgoal):\n 1. bis ZOretr \\<subseteq> ZOretr (bis ZOretr)", "by blast"], ["", "lemma ZObis_sym: \"sym ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym ZObis", "unfolding ZObis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis ZOretr)", "using mono_Retr sym_bis"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> sym (bis ?Retr)\n\ngoal (1 subgoal):\n 1. sym (bis ZOretr)", "by blast"], ["", "lemma ZObis_converse:\n\"((c,d) \\<in> theta^-1 \\<union> ZObis) = ((d,c) \\<in> theta \\<union> ZObis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c, d) \\<in> theta\\<inverse> \\<union> ZObis) =\n    ((d, c) \\<in> theta \\<union> ZObis)", "by (metis ZObis_sym converseI converse_Un converse_converse sym_conv_converse_eq)"], ["", "lemma ZObis_Sym: \"s \\<approx>01 t \\<Longrightarrow> t \\<approx>01 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx>01 t \\<Longrightarrow> t \\<approx>01 s", "using ZObis_sym"], ["proof (prove)\nusing this:\n  sym ZObis\n\ngoal (1 subgoal):\n 1. s \\<approx>01 t \\<Longrightarrow> t \\<approx>01 s", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>01 y \\<longrightarrow> y \\<approx>01 x\n\ngoal (1 subgoal):\n 1. s \\<approx>01 t \\<Longrightarrow> t \\<approx>01 s", "by blast"], ["", "lemma\nZObis_matchC_ZO: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis s t\"\nand \nZObis_matchT_ZO: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis s t) &&&\n    (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO s t)", "using ZObis_prefix"], ["proof (prove)\nusing this:\n  ZObis \\<subseteq> ZOretr ZObis\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis s t) &&&\n    (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO s t)", "unfolding ZOretr_def"], ["proof (prove)\nusing this:\n  ZObis \\<subseteq> {(c, d). matchC_ZO ZObis c d \\<and> matchT_ZO c d}\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis s t) &&&\n    (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO s t)", "by auto"], ["", "lemmas ZObis_step = ZObis_matchC_ZO ZObis_matchT_ZO"], ["", "lemma\nZObis_matchC_ZO_rev: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis t s\"\nand \nZObis_matchT_ZO_rev: \"\\<And> s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis t s) &&&\n    (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO t s)", "using ZObis_step ZObis_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx>01 ?t \\<Longrightarrow> matchC_ZO ZObis ?s ?t\n  ?s \\<approx>01 ?t \\<Longrightarrow> matchT_ZO ?s ?t\n  sym ZObis\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis t s) &&&\n    (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO t s)", "unfolding sym_def"], ["proof (prove)\nusing this:\n  ?s \\<approx>01 ?t \\<Longrightarrow> matchC_ZO ZObis ?s ?t\n  ?s \\<approx>01 ?t \\<Longrightarrow> matchT_ZO ?s ?t\n  \\<forall>x y. x \\<approx>01 y \\<longrightarrow> y \\<approx>01 x\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchC_ZO ZObis t s) &&&\n    (\\<And>s t. s \\<approx>01 t \\<Longrightarrow> matchT_ZO t s)", "by blast+"], ["", "lemmas ZObis_step_rev = ZObis_matchC_ZO_rev ZObis_matchT_ZO_rev"], ["", "lemma ZObis_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretr (theta \\<union> ZObis)\"\nshows \"theta \\<subseteq> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "using assms mono_Retr bis_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "unfolding ZObis_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretr (theta \\<union> bis ZOretr)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretr", "by blast"], ["", "lemma ZObis_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretr theta\"\nshows \"theta \\<subseteq> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "using assms mono_Retr bis_raw_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretr theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "unfolding ZObis_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretr theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretr", "by blast"], ["", "lemma ZObis_coind2:\nassumes \"theta \\<subseteq> ZOretr (theta \\<union> ZObis)\" and \n\"theta ^-1 \\<subseteq> ZOretr ((theta ^-1) \\<union> ZObis)\"\nshows \"theta \\<subseteq> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "using assms mono_Retr bis_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr (theta \\<union> ZObis)\n  theta\\<inverse> \\<subseteq> ZOretr (theta\\<inverse> \\<union> ZObis)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "unfolding ZObis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr (theta \\<union> bis ZOretr)\n  theta\\<inverse> \\<subseteq> ZOretr (theta\\<inverse> \\<union> bis ZOretr)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretr", "by blast"], ["", "lemma ZObis_raw_coind2:\nassumes \"theta \\<subseteq> ZOretr theta\" and \n\"theta ^-1 \\<subseteq> ZOretr (theta ^-1)\"\nshows \"theta \\<subseteq> ZObis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "using assms mono_Retr bis_raw_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr theta\n  theta\\<inverse> \\<subseteq> ZOretr (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObis", "unfolding ZObis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretr theta\n  theta\\<inverse> \\<subseteq> ZOretr (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretr", "by blast"], ["", "(* ZObisT: *)"], ["", "lemma ZObisT_prefix:\n\"ZObisT \\<subseteq> ZOretrT ZObisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ZObisT \\<subseteq> ZOretrT ZObisT", "unfolding ZObisT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis ZOretrT \\<subseteq> ZOretrT (bis ZOretrT)", "using mono_Retr bis_prefix"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> bis ?Retr \\<subseteq> ?Retr (bis ?Retr)\n\ngoal (1 subgoal):\n 1. bis ZOretrT \\<subseteq> ZOretrT (bis ZOretrT)", "by blast"], ["", "lemma ZObisT_sym: \"sym ZObisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym ZObisT", "unfolding ZObisT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis ZOretrT)", "using mono_Retr sym_bis"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> sym (bis ?Retr)\n\ngoal (1 subgoal):\n 1. sym (bis ZOretrT)", "by blast"], ["", "lemma ZObisT_Sym: \"s \\<approx>01T t \\<Longrightarrow> t \\<approx>01T s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<approx>01T t \\<Longrightarrow> t \\<approx>01T s", "using ZObisT_sym"], ["proof (prove)\nusing this:\n  sym ZObisT\n\ngoal (1 subgoal):\n 1. s \\<approx>01T t \\<Longrightarrow> t \\<approx>01T s", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>01T y \\<longrightarrow> y \\<approx>01T x\n\ngoal (1 subgoal):\n 1. s \\<approx>01T t \\<Longrightarrow> t \\<approx>01T s", "by blast"], ["", "lemma ZObisT_converse:\n\"((c,d) \\<in> theta^-1 \\<union> ZObisT) = ((d,c) \\<in> theta \\<union> ZObisT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c, d) \\<in> theta\\<inverse> \\<union> ZObisT) =\n    ((d, c) \\<in> theta \\<union> ZObisT)", "by (metis ZObisT_sym converseI converse_Un converse_converse sym_conv_converse_eq)"], ["", "lemma\nZObisT_matchC_ZOC: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT s t\"\nand \nZObisT_matchT_T: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchT_T s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT s t) &&&\n    (\\<And>s t. s \\<approx>01T t \\<Longrightarrow> matchT_T s t)", "using ZObisT_prefix"], ["proof (prove)\nusing this:\n  ZObisT \\<subseteq> ZOretrT ZObisT\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT s t) &&&\n    (\\<And>s t. s \\<approx>01T t \\<Longrightarrow> matchT_T s t)", "unfolding ZOretrT_def"], ["proof (prove)\nusing this:\n  ZObisT \\<subseteq> {(c, d). matchC_ZOC ZObisT c d \\<and> matchT_T c d}\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT s t) &&&\n    (\\<And>s t. s \\<approx>01T t \\<Longrightarrow> matchT_T s t)", "by auto"], ["", "lemmas ZObisT_step = ZObisT_matchC_ZOC ZObisT_matchT_T"], ["", "lemma\nZObisT_matchC_ZOC_rev: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT t s\"\nand \nZObisT_matchT_T_rev: \"\\<And> s t. s \\<approx>01T t \\<Longrightarrow> matchT_T t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT t s) &&&\n    (\\<And>s t. s \\<approx>01T t \\<Longrightarrow> matchT_T t s)", "using ZObisT_step ZObisT_sym"], ["proof (prove)\nusing this:\n  ?s \\<approx>01T ?t \\<Longrightarrow> matchC_ZOC ZObisT ?s ?t\n  ?s \\<approx>01T ?t \\<Longrightarrow> matchT_T ?s ?t\n  sym ZObisT\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT t s) &&&\n    (\\<And>s t. s \\<approx>01T t \\<Longrightarrow> matchT_T t s)", "unfolding sym_def"], ["proof (prove)\nusing this:\n  ?s \\<approx>01T ?t \\<Longrightarrow> matchC_ZOC ZObisT ?s ?t\n  ?s \\<approx>01T ?t \\<Longrightarrow> matchT_T ?s ?t\n  \\<forall>x y. x \\<approx>01T y \\<longrightarrow> y \\<approx>01T x\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        s \\<approx>01T t \\<Longrightarrow> matchC_ZOC ZObisT t s) &&&\n    (\\<And>s t. s \\<approx>01T t \\<Longrightarrow> matchT_T t s)", "by blast+"], ["", "lemmas ZObisT_step_rev = ZObisT_matchC_ZOC_rev ZObisT_matchT_T_rev"], ["", "lemma ZObisT_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretrT (theta \\<union> ZObisT)\"\nshows \"theta \\<subseteq> ZObisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "using assms mono_Retr bis_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretrT (theta \\<union> ZObisT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "unfolding ZObisT_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretrT (theta \\<union> bis ZOretrT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretrT", "by blast"], ["", "lemma ZObisT_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> ZOretrT theta\"\nshows \"theta \\<subseteq> ZObisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "using assms mono_Retr bis_raw_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretrT theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "unfolding ZObisT_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> ZOretrT theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretrT", "by blast"], ["", "lemma ZObisT_coind2:\nassumes \"theta \\<subseteq> ZOretrT (theta \\<union> ZObisT)\" and \n\"theta ^-1 \\<subseteq> ZOretrT ((theta ^-1) \\<union> ZObisT)\"\nshows \"theta \\<subseteq> ZObisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "using assms mono_Retr bis_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretrT (theta \\<union> ZObisT)\n  theta\\<inverse> \\<subseteq> ZOretrT (theta\\<inverse> \\<union> ZObisT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "unfolding ZObisT_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretrT (theta \\<union> bis ZOretrT)\n  theta\\<inverse> \\<subseteq> ZOretrT (theta\\<inverse> \\<union> bis ZOretrT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretrT", "by blast"], ["", "lemma ZObisT_raw_coind2:\nassumes \"theta \\<subseteq> ZOretrT theta\" and \n\"theta ^-1 \\<subseteq> ZOretrT (theta ^-1)\"\nshows \"theta \\<subseteq> ZObisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "using assms mono_Retr bis_raw_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretrT theta\n  theta\\<inverse> \\<subseteq> ZOretrT (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> ZObisT", "unfolding ZObisT_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> ZOretrT theta\n  theta\\<inverse> \\<subseteq> ZOretrT (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis ZOretrT", "by blast"], ["", "(* Wbis: *)"], ["", "lemma Wbis_prefix:\n\"Wbis \\<subseteq> Wretr Wbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Wbis \\<subseteq> Wretr Wbis", "unfolding Wbis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis Wretr \\<subseteq> Wretr (bis Wretr)", "using mono_Retr bis_prefix"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> bis ?Retr \\<subseteq> ?Retr (bis ?Retr)\n\ngoal (1 subgoal):\n 1. bis Wretr \\<subseteq> Wretr (bis Wretr)", "by blast"], ["", "lemma Wbis_sym: \"sym Wbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym Wbis", "unfolding Wbis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis Wretr)", "using mono_Retr sym_bis"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> sym (bis ?Retr)\n\ngoal (1 subgoal):\n 1. sym (bis Wretr)", "by blast"], ["", "lemma Wbis_converse:\n\"((c,d) \\<in> theta^-1 \\<union> Wbis) = ((d,c) \\<in> theta \\<union> Wbis)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c, d) \\<in> theta\\<inverse> \\<union> Wbis) =\n    ((d, c) \\<in> theta \\<union> Wbis)", "by (metis Wbis_sym converseI converse_Un converse_converse sym_conv_converse_eq)"], ["", "lemma Wbis_Sym: \"c \\<approx>w d \\<Longrightarrow> d \\<approx>w c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>w d \\<Longrightarrow> d \\<approx>w c", "using Wbis_sym"], ["proof (prove)\nusing this:\n  sym Wbis\n\ngoal (1 subgoal):\n 1. c \\<approx>w d \\<Longrightarrow> d \\<approx>w c", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>w y \\<longrightarrow> y \\<approx>w x\n\ngoal (1 subgoal):\n 1. c \\<approx>w d \\<Longrightarrow> d \\<approx>w c", "by blast"], ["", "lemma\nWbis_matchC_M: \"\\<And> c d. c \\<approx>w d \\<Longrightarrow> matchC_M Wbis c d\"\nand \nWbis_matchT_M: \"\\<And> c d. c \\<approx>w d \\<Longrightarrow> matchT_M c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>w d \\<Longrightarrow> matchC_M Wbis c d) &&&\n    (\\<And>c d. c \\<approx>w d \\<Longrightarrow> matchT_M c d)", "using Wbis_prefix"], ["proof (prove)\nusing this:\n  Wbis \\<subseteq> Wretr Wbis\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>w d \\<Longrightarrow> matchC_M Wbis c d) &&&\n    (\\<And>c d. c \\<approx>w d \\<Longrightarrow> matchT_M c d)", "unfolding Wretr_def"], ["proof (prove)\nusing this:\n  Wbis \\<subseteq> {(c, d). matchC_M Wbis c d \\<and> matchT_M c d}\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>w d \\<Longrightarrow> matchC_M Wbis c d) &&&\n    (\\<And>c d. c \\<approx>w d \\<Longrightarrow> matchT_M c d)", "by auto"], ["", "lemmas Wbis_step = Wbis_matchC_M Wbis_matchT_M"], ["", "lemma\nWbis_matchC_M_rev: \"\\<And> s t. s \\<approx>w t \\<Longrightarrow> matchC_M Wbis t s\"\nand \nWbis_matchT_M_rev: \"\\<And> s t. s \\<approx>w t \\<Longrightarrow> matchT_M t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>w t \\<Longrightarrow> matchC_M Wbis t s) &&&\n    (\\<And>s t. s \\<approx>w t \\<Longrightarrow> matchT_M t s)", "using Wbis_step Wbis_sym"], ["proof (prove)\nusing this:\n  ?c \\<approx>w ?d \\<Longrightarrow> matchC_M Wbis ?c ?d\n  ?c \\<approx>w ?d \\<Longrightarrow> matchT_M ?c ?d\n  sym Wbis\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>w t \\<Longrightarrow> matchC_M Wbis t s) &&&\n    (\\<And>s t. s \\<approx>w t \\<Longrightarrow> matchT_M t s)", "unfolding sym_def"], ["proof (prove)\nusing this:\n  ?c \\<approx>w ?d \\<Longrightarrow> matchC_M Wbis ?c ?d\n  ?c \\<approx>w ?d \\<Longrightarrow> matchT_M ?c ?d\n  \\<forall>x y. x \\<approx>w y \\<longrightarrow> y \\<approx>w x\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>w t \\<Longrightarrow> matchC_M Wbis t s) &&&\n    (\\<And>s t. s \\<approx>w t \\<Longrightarrow> matchT_M t s)", "by blast+"], ["", "lemmas Wbis_step_rev = Wbis_matchC_M_rev Wbis_matchT_M_rev"], ["", "lemma Wbis_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Wretr (theta \\<union> Wbis)\"\nshows \"theta \\<subseteq> Wbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "using assms mono_Retr bis_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Wretr (theta \\<union> Wbis)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "unfolding Wbis_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Wretr (theta \\<union> bis Wretr)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Wretr", "by blast"], ["", "lemma Wbis_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> Wretr theta\"\nshows \"theta \\<subseteq> Wbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "using assms mono_Retr bis_raw_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Wretr theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "unfolding Wbis_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> Wretr theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Wretr", "by blast"], ["", "lemma Wbis_coind2:\nassumes \"theta \\<subseteq> Wretr (theta \\<union> Wbis)\" and \n\"theta ^-1 \\<subseteq> Wretr ((theta ^-1) \\<union> Wbis)\"\nshows \"theta \\<subseteq> Wbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "using assms mono_Retr bis_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Wretr (theta \\<union> Wbis)\n  theta\\<inverse> \\<subseteq> Wretr (theta\\<inverse> \\<union> Wbis)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "unfolding Wbis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Wretr (theta \\<union> bis Wretr)\n  theta\\<inverse> \\<subseteq> Wretr (theta\\<inverse> \\<union> bis Wretr)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Wretr", "by blast"], ["", "lemma Wbis_raw_coind2:\nassumes \"theta \\<subseteq> Wretr theta\" and \n\"theta ^-1 \\<subseteq> Wretr (theta ^-1)\"\nshows \"theta \\<subseteq> Wbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "using assms mono_Retr bis_raw_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Wretr theta\n  theta\\<inverse> \\<subseteq> Wretr (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> Wbis", "unfolding Wbis_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> Wretr theta\n  theta\\<inverse> \\<subseteq> Wretr (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis Wretr", "by blast"], ["", "(* WbisT: *)"], ["", "lemma WbisT_prefix:\n\"WbisT \\<subseteq> WretrT WbisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WbisT \\<subseteq> WretrT WbisT", "unfolding WbisT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis WretrT \\<subseteq> WretrT (bis WretrT)", "using mono_Retr bis_prefix"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> bis ?Retr \\<subseteq> ?Retr (bis ?Retr)\n\ngoal (1 subgoal):\n 1. bis WretrT \\<subseteq> WretrT (bis WretrT)", "by blast"], ["", "lemma WbisT_sym: \"sym WbisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym WbisT", "unfolding WbisT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis WretrT)", "using mono_Retr sym_bis"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> sym (bis ?Retr)\n\ngoal (1 subgoal):\n 1. sym (bis WretrT)", "by blast"], ["", "lemma WbisT_Sym: \"c \\<approx>wT d \\<Longrightarrow> d \\<approx>wT c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>wT d \\<Longrightarrow> d \\<approx>wT c", "using WbisT_sym"], ["proof (prove)\nusing this:\n  sym WbisT\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d \\<Longrightarrow> d \\<approx>wT c", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>wT y \\<longrightarrow> y \\<approx>wT x\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d \\<Longrightarrow> d \\<approx>wT c", "by blast"], ["", "lemma WbisT_converse:\n\"((c,d) \\<in> theta^-1 \\<union> WbisT) = ((d,c) \\<in> theta \\<union> WbisT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c, d) \\<in> theta\\<inverse> \\<union> WbisT) =\n    ((d, c) \\<in> theta \\<union> WbisT)", "by (metis WbisT_sym converseI converse_Un converse_converse sym_conv_converse_eq)"], ["", "lemma\nWbisT_matchC_MC: \"\\<And> c d. c \\<approx>wT d \\<Longrightarrow> matchC_MC WbisT c d\"\nand \nWbisT_matchT_MT: \"\\<And> c d. c \\<approx>wT d \\<Longrightarrow> matchT_MT c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>wT d \\<Longrightarrow> matchC_MC WbisT c d) &&&\n    (\\<And>c d. c \\<approx>wT d \\<Longrightarrow> matchT_MT c d)", "using WbisT_prefix"], ["proof (prove)\nusing this:\n  WbisT \\<subseteq> WretrT WbisT\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>wT d \\<Longrightarrow> matchC_MC WbisT c d) &&&\n    (\\<And>c d. c \\<approx>wT d \\<Longrightarrow> matchT_MT c d)", "unfolding WretrT_def"], ["proof (prove)\nusing this:\n  WbisT \\<subseteq> {(c, d). matchC_MC WbisT c d \\<and> matchT_MT c d}\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>wT d \\<Longrightarrow> matchC_MC WbisT c d) &&&\n    (\\<And>c d. c \\<approx>wT d \\<Longrightarrow> matchT_MT c d)", "by auto"], ["", "lemmas WbisT_step = WbisT_matchC_MC WbisT_matchT_MT"], ["", "lemma\nWbisT_matchC_MC_rev: \"\\<And> s t. s \\<approx>wT t \\<Longrightarrow> matchC_MC WbisT t s\"\nand \nWbisT_matchT_MT_rev: \"\\<And> s t. s \\<approx>wT t \\<Longrightarrow> matchT_MT t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>wT t \\<Longrightarrow> matchC_MC WbisT t s) &&&\n    (\\<And>s t. s \\<approx>wT t \\<Longrightarrow> matchT_MT t s)", "using WbisT_step WbisT_sym"], ["proof (prove)\nusing this:\n  ?c \\<approx>wT ?d \\<Longrightarrow> matchC_MC WbisT ?c ?d\n  ?c \\<approx>wT ?d \\<Longrightarrow> matchT_MT ?c ?d\n  sym WbisT\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>wT t \\<Longrightarrow> matchC_MC WbisT t s) &&&\n    (\\<And>s t. s \\<approx>wT t \\<Longrightarrow> matchT_MT t s)", "unfolding sym_def"], ["proof (prove)\nusing this:\n  ?c \\<approx>wT ?d \\<Longrightarrow> matchC_MC WbisT ?c ?d\n  ?c \\<approx>wT ?d \\<Longrightarrow> matchT_MT ?c ?d\n  \\<forall>x y. x \\<approx>wT y \\<longrightarrow> y \\<approx>wT x\n\ngoal (1 subgoal):\n 1. (\\<And>s t. s \\<approx>wT t \\<Longrightarrow> matchC_MC WbisT t s) &&&\n    (\\<And>s t. s \\<approx>wT t \\<Longrightarrow> matchT_MT t s)", "by blast+"], ["", "lemmas WbisT_step_rev = WbisT_matchC_MC_rev WbisT_matchT_MT_rev"], ["", "lemma WbisT_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> WretrT (theta \\<union> WbisT)\"\nshows \"theta \\<subseteq> WbisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "using assms mono_Retr bis_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> WretrT (theta \\<union> WbisT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "unfolding WbisT_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> WretrT (theta \\<union> bis WretrT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis WretrT", "by blast"], ["", "lemma WbisT_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> WretrT theta\"\nshows \"theta \\<subseteq> WbisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "using assms mono_Retr bis_raw_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> WretrT theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "unfolding WbisT_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> WretrT theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis WretrT", "by blast"], ["", "lemma WbisT_coind2:\nassumes \"theta \\<subseteq> WretrT (theta \\<union> WbisT)\" and \n\"theta ^-1 \\<subseteq> WretrT ((theta ^-1) \\<union> WbisT)\"\nshows \"theta \\<subseteq> WbisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "using assms mono_Retr bis_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> WretrT (theta \\<union> WbisT)\n  theta\\<inverse> \\<subseteq> WretrT (theta\\<inverse> \\<union> WbisT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "unfolding WbisT_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> WretrT (theta \\<union> bis WretrT)\n  theta\\<inverse> \\<subseteq> WretrT (theta\\<inverse> \\<union> bis WretrT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis WretrT", "by blast"], ["", "lemma WbisT_raw_coind2:\nassumes \"theta \\<subseteq> WretrT theta\" and \n\"theta ^-1 \\<subseteq> WretrT (theta ^-1)\"\nshows \"theta \\<subseteq> WbisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "using assms mono_Retr bis_raw_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> WretrT theta\n  theta\\<inverse> \\<subseteq> WretrT (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> WbisT", "unfolding WbisT_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> WretrT theta\n  theta\\<inverse> \\<subseteq> WretrT (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis WretrT", "by blast"], ["", "lemma WbisT_coinduct[consumes 1, case_names sym cont termi]:\n  assumes \\<phi>: \"\\<phi> c d\"\n  assumes S: \"\\<And>c d. \\<phi> c d \\<Longrightarrow> \\<phi> d c\"\n  assumes C: \"\\<And>c s d t c' s'.\n    \\<lbrakk> \\<phi> c d ; s \\<approx> t ; (c, s) \\<rightarrow>c (c', s') \\<rbrakk> \\<Longrightarrow> \\<exists>d' t'. (d, t) \\<rightarrow>*c (d', t') \\<and> s' \\<approx> t' \\<and> (\\<phi> c' d' \\<or> c' \\<approx>wT d')\"\n  assumes T: \"\\<And>c s d t s'.\n    \\<lbrakk> \\<phi> c d ; s \\<approx> t ; (c, s) \\<rightarrow>t s' \\<rbrakk> \\<Longrightarrow> \\<exists>t'. (d, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'\"\n  shows \"c \\<approx>wT d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "let ?\\<theta> = \"{(c, d). \\<phi> c d}\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "have \"sym ?\\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym {(c, d). \\<phi> c d}", "by (auto intro!: symI S)"], ["proof (state)\nthis:\n  sym {(c, d). \\<phi> c d}\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "moreover"], ["proof (state)\nthis:\n  sym {(c, d). \\<phi> c d}\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "have \"?\\<theta> \\<subseteq> WretrT (?\\<theta> \\<union> WbisT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, d). \\<phi> c d}\n    \\<subseteq> WretrT ({(c, d). \\<phi> c d} \\<union> WbisT)", "using C T"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<phi> ?c1 ?d1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>c (?c'1, ?s'1)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>d' t'.\n                       (?d1, ?t1) \\<rightarrow>*c (d', t') \\<and>\n                       ?s'1 \\<approx> t' \\<and>\n                       (\\<phi> ?c'1 d' \\<or> ?c'1 \\<approx>wT d')\n  \\<lbrakk>\\<phi> ?c1 ?d1; ?s1 \\<approx> ?t1;\n   (?c1, ?s1) \\<rightarrow>t ?s'1\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t'.\n                       (?d1, ?t1) \\<rightarrow>*t t' \\<and>\n                       ?s'1 \\<approx> t'\n\ngoal (1 subgoal):\n 1. {(c, d). \\<phi> c d}\n    \\<subseteq> WretrT ({(c, d). \\<phi> c d} \\<union> WbisT)", "by (auto simp: WretrT_def matchC_MC_def matchT_MT_def)"], ["proof (state)\nthis:\n  {(c, d). \\<phi> c d}\n  \\<subseteq> WretrT ({(c, d). \\<phi> c d} \\<union> WbisT)\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "ultimately"], ["proof (chain)\npicking this:\n  sym {(c, d). \\<phi> c d}\n  {(c, d). \\<phi> c d}\n  \\<subseteq> WretrT ({(c, d). \\<phi> c d} \\<union> WbisT)", "have \"?\\<theta> \\<subseteq> WbisT\""], ["proof (prove)\nusing this:\n  sym {(c, d). \\<phi> c d}\n  {(c, d). \\<phi> c d}\n  \\<subseteq> WretrT ({(c, d). \\<phi> c d} \\<union> WbisT)\n\ngoal (1 subgoal):\n 1. {(c, d). \\<phi> c d} \\<subseteq> WbisT", "using WbisT_coind"], ["proof (prove)\nusing this:\n  sym {(c, d). \\<phi> c d}\n  {(c, d). \\<phi> c d}\n  \\<subseteq> WretrT ({(c, d). \\<phi> c d} \\<union> WbisT)\n  \\<lbrakk>sym ?theta;\n   ?theta \\<subseteq> WretrT (?theta \\<union> WbisT)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> WbisT\n\ngoal (1 subgoal):\n 1. {(c, d). \\<phi> c d} \\<subseteq> WbisT", "by auto"], ["proof (state)\nthis:\n  {(c, d). \\<phi> c d} \\<subseteq> WbisT\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "with \\<phi>"], ["proof (chain)\npicking this:\n  \\<phi> c d\n  {(c, d). \\<phi> c d} \\<subseteq> WbisT", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<phi> c d\n  {(c, d). \\<phi> c d} \\<subseteq> WbisT\n\ngoal (1 subgoal):\n 1. c \\<approx>wT d", "by auto"], ["proof (state)\nthis:\n  c \\<approx>wT d\n\ngoal:\nNo subgoals!", "qed"], ["", "(* BisT: *)"], ["", "lemma BisT_prefix:\n\"BisT \\<subseteq> RetrT BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BisT \\<subseteq> RetrT BisT", "unfolding BisT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bis RetrT \\<subseteq> RetrT (bis RetrT)", "using mono_Retr bis_prefix"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> bis ?Retr \\<subseteq> ?Retr (bis ?Retr)\n\ngoal (1 subgoal):\n 1. bis RetrT \\<subseteq> RetrT (bis RetrT)", "by blast"], ["", "lemma BisT_sym: \"sym BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym BisT", "unfolding BisT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (bis RetrT)", "using mono_Retr sym_bis"], ["proof (prove)\nusing this:\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  Bisim.mono ?Retr \\<Longrightarrow> sym (bis ?Retr)\n\ngoal (1 subgoal):\n 1. sym (bis RetrT)", "by blast"], ["", "lemma BisT_Sym: \"c \\<approx>T d \\<Longrightarrow> d \\<approx>T c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>T d \\<Longrightarrow> d \\<approx>T c", "using BisT_sym"], ["proof (prove)\nusing this:\n  sym BisT\n\ngoal (1 subgoal):\n 1. c \\<approx>T d \\<Longrightarrow> d \\<approx>T c", "unfolding sym_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<approx>T y \\<longrightarrow> y \\<approx>T x\n\ngoal (1 subgoal):\n 1. c \\<approx>T d \\<Longrightarrow> d \\<approx>T c", "by blast"], ["", "lemma BisT_converse:\n\"((c,d) \\<in> theta^-1 \\<union> BisT) = ((d,c) \\<in> theta \\<union> BisT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c, d) \\<in> theta\\<inverse> \\<union> BisT) =\n    ((d, c) \\<in> theta \\<union> BisT)", "by (metis BisT_sym converseI converse_Un converse_converse sym_conv_converse_eq)"], ["", "lemma\nBisT_matchC_TMC: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT c d\"\nand \nBisT_matchT_TMT: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT c d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT c d) &&&\n    (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT c d)", "using BisT_prefix"], ["proof (prove)\nusing this:\n  BisT \\<subseteq> RetrT BisT\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT c d) &&&\n    (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT c d)", "unfolding RetrT_def"], ["proof (prove)\nusing this:\n  BisT \\<subseteq> {(c, d). matchC_TMC BisT c d \\<and> matchT_TMT c d}\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT c d) &&&\n    (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT c d)", "by auto"], ["", "lemmas BisT_step = BisT_matchC_TMC BisT_matchT_TMT"], ["", "lemma\nBisT_matchC_TMC_rev: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT d c\"\nand \nBisT_matchT_TMT_rev: \"\\<And> c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT d c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT d c) &&&\n    (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT d c)", "using BisT_step BisT_sym"], ["proof (prove)\nusing this:\n  ?c \\<approx>T ?d \\<Longrightarrow> matchC_TMC BisT ?c ?d\n  ?c \\<approx>T ?d \\<Longrightarrow> matchT_TMT ?c ?d\n  sym BisT\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT d c) &&&\n    (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT d c)", "unfolding sym_def"], ["proof (prove)\nusing this:\n  ?c \\<approx>T ?d \\<Longrightarrow> matchC_TMC BisT ?c ?d\n  ?c \\<approx>T ?d \\<Longrightarrow> matchT_TMT ?c ?d\n  \\<forall>x y. x \\<approx>T y \\<longrightarrow> y \\<approx>T x\n\ngoal (1 subgoal):\n 1. (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchC_TMC BisT d c) &&&\n    (\\<And>c d. c \\<approx>T d \\<Longrightarrow> matchT_TMT d c)", "by blast+"], ["", "lemmas BisT_step_rev = BisT_matchC_TMC_rev BisT_matchT_TMT_rev"], ["", "lemma BisT_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> RetrT (theta \\<union> BisT)\"\nshows \"theta \\<subseteq> BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "using assms mono_Retr bis_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> RetrT (theta \\<union> BisT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "unfolding BisT_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> RetrT (theta \\<union> bis RetrT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis RetrT", "by blast"], ["", "lemma BisT_raw_coind:  \nassumes \"sym theta\" and \"theta \\<subseteq> RetrT theta\"\nshows \"theta \\<subseteq> BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "using assms mono_Retr bis_raw_coind"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> RetrT theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "unfolding BisT_def"], ["proof (prove)\nusing this:\n  sym theta\n  theta \\<subseteq> RetrT theta\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; sym ?theta;\n   ?theta \\<subseteq> ?Retr ?theta\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis RetrT", "by blast"], ["", "lemma BisT_coind2:\nassumes \"theta \\<subseteq> RetrT (theta \\<union> BisT)\" and \n\"theta ^-1 \\<subseteq> RetrT ((theta ^-1) \\<union> BisT)\"\nshows \"theta \\<subseteq> BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "using assms mono_Retr bis_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> RetrT (theta \\<union> BisT)\n  theta\\<inverse> \\<subseteq> RetrT (theta\\<inverse> \\<union> BisT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "unfolding BisT_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> RetrT (theta \\<union> bis RetrT)\n  theta\\<inverse> \\<subseteq> RetrT (theta\\<inverse> \\<union> bis RetrT)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr;\n   ?theta \\<subseteq> ?Retr (?theta \\<union> bis ?Retr);\n   ?theta\\<inverse>\n   \\<subseteq> ?Retr (?theta\\<inverse> \\<union> bis ?Retr)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis RetrT", "by blast"], ["", "lemma BisT_raw_coind2:\nassumes \"theta \\<subseteq> RetrT theta\" and \n\"theta ^-1 \\<subseteq> RetrT (theta ^-1)\"\nshows \"theta \\<subseteq> BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "using assms mono_Retr bis_raw_coind2"], ["proof (prove)\nusing this:\n  theta \\<subseteq> RetrT theta\n  theta\\<inverse> \\<subseteq> RetrT (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> BisT", "unfolding BisT_def"], ["proof (prove)\nusing this:\n  theta \\<subseteq> RetrT theta\n  theta\\<inverse> \\<subseteq> RetrT (theta\\<inverse>)\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n  \\<lbrakk>Bisim.mono ?Retr; ?theta \\<subseteq> ?Retr ?theta;\n   ?theta\\<inverse> \\<subseteq> ?Retr (?theta\\<inverse>)\\<rbrakk>\n  \\<Longrightarrow> ?theta \\<subseteq> bis ?Retr\n\ngoal (1 subgoal):\n 1. theta \\<subseteq> bis RetrT", "by blast"], ["", "text\\<open>Inclusions between bisimilarities:\\<close>"], ["", "lemma match_imp[simp]:\n\"\\<And> theta c1 c2. matchC_C theta c1 c2 \\<Longrightarrow> matchC_ZOC theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_ZOC theta c1 c2 \\<Longrightarrow> matchC_ZO theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_ZOC theta c1 c2 \\<Longrightarrow> matchC_MC theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_ZO theta c1 c2 \\<Longrightarrow> matchC_M theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_MC theta c1 c2 \\<Longrightarrow> matchC_M theta c1 c2\"\n(*  *)\n(*  *)\n\"\\<And> c1 c2. matchT_T c1 c2 \\<Longrightarrow> matchT_ZO c1 c2\"\n(*  *)\n\"\\<And> c1 c2. matchT_T c1 c2 \\<Longrightarrow> matchT_MT c1 c2\"\n(*  *)\n\"\\<And> c1 c2. matchT_ZO c1 c2 \\<Longrightarrow> matchT_M c1 c2\"\n(*  *)\n\"\\<And> c1 c2. matchT_MT c1 c2 \\<Longrightarrow> matchT_M c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchC_MC theta c1 c2 \\<Longrightarrow> matchC_TMC theta c1 c2\"\n(*  *)\n\"\\<And> theta c1 c2. matchT_MT c1 c2 \\<Longrightarrow> matchT_TMT c1 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>theta c1 c2.\n          matchC_C theta c1 c2 \\<Longrightarrow> matchC_ZOC theta c1 c2) &&&\n      (\\<And>theta c1 c2.\n          matchC_ZOC theta c1 c2 \\<Longrightarrow>\n          matchC_ZO theta c1 c2)) &&&\n     (\\<And>theta c1 c2.\n         matchC_ZOC theta c1 c2 \\<Longrightarrow> matchC_MC theta c1 c2) &&&\n     (\\<And>theta c1 c2.\n         matchC_ZO theta c1 c2 \\<Longrightarrow> matchC_M theta c1 c2) &&&\n     (\\<And>theta c1 c2.\n         matchC_MC theta c1 c2 \\<Longrightarrow> matchC_M theta c1 c2)) &&&\n    ((\\<And>c1 c2. matchT_T c1 c2 \\<Longrightarrow> matchT_ZO c1 c2) &&&\n     (\\<And>c1 c2. matchT_T c1 c2 \\<Longrightarrow> matchT_MT c1 c2) &&&\n     (\\<And>c1 c2. matchT_ZO c1 c2 \\<Longrightarrow> matchT_M c1 c2)) &&&\n    (\\<And>c1 c2. matchT_MT c1 c2 \\<Longrightarrow> matchT_M c1 c2) &&&\n    (\\<And>theta c1 c2.\n        matchC_MC theta c1 c2 \\<Longrightarrow> matchC_TMC theta c1 c2) &&&\n    (\\<And>theta c1 c2. matchT_MT c1 c2 \\<Longrightarrow> matchT_TMT c1 c2)", "unfolding match_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<And>theta c1 c2.\n          \\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             (\\<exists>d' t'.\n                 (c2, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and>\n                 (c', d') \\<in> theta) \\<Longrightarrow>\n          \\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n             (\\<exists>d' t'.\n                 (c2, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and> (c', d') \\<in> theta)) &&&\n      (\\<And>theta c1 c2.\n          \\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n             (\\<exists>d' t'.\n                 (c2, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and>\n                 (c', d') \\<in> theta) \\<Longrightarrow>\n          \\<forall>s t c' s'.\n             s \\<approx> t \\<and>\n             (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n             s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n             (\\<exists>d' t'.\n                 (c2, t) \\<rightarrow>c (d', t') \\<and>\n                 s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n             (\\<exists>t'.\n                 (c2, t) \\<rightarrow>t t' \\<and>\n                 s' \\<approx> t' \\<and> discr c'))) &&&\n     (\\<And>theta c1 c2.\n         \\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>c (d', t') \\<and>\n                s' \\<approx> t' \\<and>\n                (c', d') \\<in> theta) \\<Longrightarrow>\n         \\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta)) &&&\n     (\\<And>theta c1 c2.\n         \\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>t t' \\<and>\n                s' \\<approx> t' \\<and> discr c') \\<Longrightarrow>\n         \\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>*t t' \\<and>\n                s' \\<approx> t' \\<and> discr c')) &&&\n     (\\<And>theta c1 c2.\n         \\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and>\n                (c', d') \\<in> theta) \\<Longrightarrow>\n         \\<forall>s t c' s'.\n            s \\<approx> t \\<and>\n            (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>*t t' \\<and>\n                s' \\<approx> t' \\<and> discr c'))) &&&\n    ((\\<And>c1 c2.\n         \\<forall>s t s'.\n            s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>t t' \\<and>\n                s' \\<approx> t') \\<Longrightarrow>\n         \\<forall>s t s'.\n            s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n            s' \\<approx> t \\<and> discr c2 \\<or>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>c (d', t') \\<and>\n                s' \\<approx> t' \\<and> discr d') \\<or>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')) &&&\n     (\\<And>c1 c2.\n         \\<forall>s t s'.\n            s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>t t' \\<and>\n                s' \\<approx> t') \\<Longrightarrow>\n         \\<forall>s t s'.\n            s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) &&&\n     (\\<And>c1 c2.\n         \\<forall>s t s'.\n            s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n            s' \\<approx> t \\<and> discr c2 \\<or>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>c (d', t') \\<and>\n                s' \\<approx> t' \\<and> discr d') \\<or>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>t t' \\<and>\n                s' \\<approx> t') \\<Longrightarrow>\n         \\<forall>s t s'.\n            s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n            (\\<exists>d' t'.\n                (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                s' \\<approx> t' \\<and> discr d') \\<or>\n            (\\<exists>t'.\n                (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'))) &&&\n    (\\<And>c1 c2.\n        \\<forall>s t s'.\n           s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n           (\\<exists>t'.\n               (c2, t) \\<rightarrow>*t t' \\<and>\n               s' \\<approx> t') \\<Longrightarrow>\n        \\<forall>s t s'.\n           s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n           (\\<exists>d' t'.\n               (c2, t) \\<rightarrow>*c (d', t') \\<and>\n               s' \\<approx> t' \\<and> discr d') \\<or>\n           (\\<exists>t'.\n               (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t')) &&&\n    (\\<And>theta c1 c2.\n        \\<forall>s t c' s'.\n           s \\<approx> t \\<and>\n           (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n           (\\<exists>d' t'.\n               (c2, t) \\<rightarrow>*c (d', t') \\<and>\n               s' \\<approx> t' \\<and>\n               (c', d') \\<in> theta) \\<Longrightarrow>\n        \\<forall>s t c' s'.\n           mustT c1 s \\<and>\n           mustT c2 t \\<and>\n           s \\<approx> t \\<and>\n           (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n           (\\<exists>d' t'.\n               (c2, t) \\<rightarrow>*c (d', t') \\<and>\n               s' \\<approx> t' \\<and> (c', d') \\<in> theta)) &&&\n    (\\<And>theta c1 c2.\n        \\<forall>s t s'.\n           s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n           (\\<exists>t'.\n               (c2, t) \\<rightarrow>*t t' \\<and>\n               s' \\<approx> t') \\<Longrightarrow>\n        \\<forall>s t s'.\n           mustT c1 s \\<and>\n           mustT c2 t \\<and>\n           s \\<approx> t \\<and> (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n           (\\<exists>t'. (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t'))", "apply(tactic \\<open>mauto_no_simp_tac @{context}\\<close>)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> (c', d') \\<in> theta)\n 2. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 3. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> (c', d') \\<in> theta\n 4. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and>\n                       s' \\<approx> t' \\<and> discr c');\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 5. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 6. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> discr c2 \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t')\n 7. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (c2, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'\n 8. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   s' \\<approx> t \\<and> discr c2 \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> discr d') \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 9. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 10. \\<And>theta c1 c2 s t c' s'.\n        \\<lbrakk>\\<forall>s t c' s'.\n                    s \\<approx> t \\<and>\n                    (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                    (\\<exists>d' t'.\n                        (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                        s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n         mustT c1 s; mustT c2 t; s \\<approx> t;\n         (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n        \\<Longrightarrow> \\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> (c', d') \\<in> theta\nA total of 11 subgoals...", "apply fastforce"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 2. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> (c', d') \\<in> theta\n 3. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and>\n                       s' \\<approx> t' \\<and> discr c');\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 4. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 5. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> discr c2 \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t')\n 6. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (c2, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'\n 7. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   s' \\<approx> t \\<and> discr c2 \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> discr d') \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 8. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 9. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        mustT c1 s; mustT c2 t; s \\<approx> t;\n        (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> (c', d') \\<in> theta\n 10. \\<And>theta c1 c2 s t s'.\n        \\<lbrakk>\\<forall>s t s'.\n                    s \\<approx> t \\<and>\n                    (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                    (\\<exists>t'.\n                        (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n         mustT c1 s; mustT c2 t; s \\<approx> t;\n         (c1, s) \\<rightarrow>t s'\\<rbrakk>\n        \\<Longrightarrow> \\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t'", "apply fastforce"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> (c', d') \\<in> theta\n 2. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and>\n                       s' \\<approx> t' \\<and> discr c');\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 3. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 4. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> discr c2 \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t')\n 5. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (c2, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'\n 6. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   s' \\<approx> t \\<and> discr c2 \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> discr d') \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 7. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 8. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        mustT c1 s; mustT c2 t; s \\<approx> t;\n        (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> (c', d') \\<in> theta\n 9. \\<And>theta c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n        mustT c1 s; mustT c2 t; s \\<approx> t;\n        (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (c2, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'", "apply (metis MtransC_Refl transC_MtransC)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   s' \\<approx> t \\<and> (c', c2) \\<in> theta \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta) \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and>\n                       s' \\<approx> t' \\<and> discr c');\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 2. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        s \\<approx> t; (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and>\n                             (c', d') \\<in> theta) \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t' \\<and> discr c')\n 3. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> s' \\<approx> t \\<and> discr c2 \\<or>\n                         (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>t t' \\<and>\n                             s' \\<approx> t')\n 4. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (c2, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'\n 5. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   s' \\<approx> t \\<and> discr c2 \\<or>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> discr d') \\<or>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 6. \\<And>c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n        s \\<approx> t; (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>d' t'.\n                             (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                             s' \\<approx> t' \\<and> discr d') \\<or>\n                         (\\<exists>t'.\n                             (c2, t) \\<rightarrow>*t t' \\<and>\n                             s' \\<approx> t')\n 7. \\<And>theta c1 c2 s t c' s'.\n       \\<lbrakk>\\<forall>s t c' s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n                   (\\<exists>d' t'.\n                       (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                       s' \\<approx> t' \\<and> (c', d') \\<in> theta);\n        mustT c1 s; mustT c2 t; s \\<approx> t;\n        (c1, s) \\<rightarrow>c (c', s')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d' t'.\n                            (c2, t) \\<rightarrow>*c (d', t') \\<and>\n                            s' \\<approx> t' \\<and> (c', d') \\<in> theta\n 8. \\<And>theta c1 c2 s t s'.\n       \\<lbrakk>\\<forall>s t s'.\n                   s \\<approx> t \\<and>\n                   (c1, s) \\<rightarrow>t s' \\<longrightarrow>\n                   (\\<exists>t'.\n                       (c2, t) \\<rightarrow>*t t' \\<and> s' \\<approx> t');\n        mustT c1 s; mustT c2 t; s \\<approx> t;\n        (c1, s) \\<rightarrow>t s'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (c2, t) \\<rightarrow>*t t' \\<and>\n                            s' \\<approx> t'", "by force+"], ["", "lemma Retr_incl:\n\"\\<And>theta. Sretr theta \\<subseteq> ZOretrT theta\"\n(*  *)\n\"\\<And>theta. ZOretrT theta \\<subseteq> ZOretr theta\"\n(*  *)\n\"\\<And>theta. ZOretrT theta \\<subseteq> WretrT theta\"\n(*  *)\n\"\\<And>theta. ZOretr theta \\<subseteq> Wretr theta\"\n(*  *)\n\"\\<And>theta. WretrT theta \\<subseteq> Wretr theta\"\n(*  *)\n\"\\<And>theta. WretrT theta \\<subseteq> RetrT theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>theta. Sretr theta \\<subseteq> ZOretrT theta) &&&\n     (\\<And>theta. ZOretrT theta \\<subseteq> ZOretr theta) &&&\n     (\\<And>theta. ZOretrT theta \\<subseteq> WretrT theta)) &&&\n    (\\<And>theta. ZOretr theta \\<subseteq> Wretr theta) &&&\n    (\\<And>theta. WretrT theta \\<subseteq> Wretr theta) &&&\n    (\\<And>theta. WretrT theta \\<subseteq> RetrT theta)", "unfolding Retr_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>theta.\n         {(c, d). matchC_C theta c d \\<and> matchT_T c d}\n         \\<subseteq> {(c, d). matchC_ZOC theta c d \\<and> matchT_T c d}) &&&\n     (\\<And>theta.\n         {(c, d). matchC_ZOC theta c d \\<and> matchT_T c d}\n         \\<subseteq> {(c, d). matchC_ZO theta c d \\<and> matchT_ZO c d}) &&&\n     (\\<And>theta.\n         {(c, d). matchC_ZOC theta c d \\<and> matchT_T c d}\n         \\<subseteq> {(c, d).\n                      matchC_MC theta c d \\<and> matchT_MT c d})) &&&\n    (\\<And>theta.\n        {(c, d). matchC_ZO theta c d \\<and> matchT_ZO c d}\n        \\<subseteq> {(c, d). matchC_M theta c d \\<and> matchT_M c d}) &&&\n    (\\<And>theta.\n        {(c, d). matchC_MC theta c d \\<and> matchT_MT c d}\n        \\<subseteq> {(c, d). matchC_M theta c d \\<and> matchT_M c d}) &&&\n    (\\<And>theta.\n        {(c, d). matchC_MC theta c d \\<and> matchT_MT c d}\n        \\<subseteq> {(c, d). matchC_TMC theta c d \\<and> matchT_TMT c d})", "by auto"], ["", "lemma bis_incl:\n\"Sbis \\<subseteq> ZObisT\"\n(*  *)\n\"ZObisT \\<subseteq> ZObis\"\n(*  *)\n\"ZObisT \\<subseteq> WbisT\"\n(*  *)\n\"ZObis \\<subseteq> Wbis\"\n(*  *)\n\"WbisT \\<subseteq> Wbis\"\n(*  *)\n\"WbisT \\<subseteq> BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Sbis \\<subseteq> ZObisT &&&\n     ZObisT \\<subseteq> ZObis &&& ZObisT \\<subseteq> WbisT) &&&\n    ZObis \\<subseteq> Wbis &&&\n    WbisT \\<subseteq> Wbis &&& WbisT \\<subseteq> BisT", "unfolding bis_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (bis Sretr \\<subseteq> bis ZOretrT &&&\n     bis ZOretrT \\<subseteq> bis ZOretr &&&\n     bis ZOretrT \\<subseteq> bis WretrT) &&&\n    bis ZOretr \\<subseteq> bis Wretr &&&\n    bis WretrT \\<subseteq> bis Wretr &&& bis WretrT \\<subseteq> bis RetrT", "using Retr_incl mono_bis mono_Retr"], ["proof (prove)\nusing this:\n  Sretr ?theta \\<subseteq> ZOretrT ?theta\n  ZOretrT ?theta \\<subseteq> ZOretr ?theta\n  ZOretrT ?theta \\<subseteq> WretrT ?theta\n  ZOretr ?theta \\<subseteq> Wretr ?theta\n  WretrT ?theta \\<subseteq> Wretr ?theta\n  WretrT ?theta \\<subseteq> RetrT ?theta\n  \\<lbrakk>Bisim.mono ?Retr1.0; Bisim.mono ?Retr2.0;\n   \\<And>theta. ?Retr1.0 theta \\<subseteq> ?Retr2.0 theta\\<rbrakk>\n  \\<Longrightarrow> bis ?Retr1.0 \\<subseteq> bis ?Retr2.0\n  Bisim.mono Sretr\n  Bisim.mono ZOretr\n  Bisim.mono ZOretrT\n  Bisim.mono Wretr\n  Bisim.mono WretrT\n  Bisim.mono RetrT\n\ngoal (1 subgoal):\n 1. (bis Sretr \\<subseteq> bis ZOretrT &&&\n     bis ZOretrT \\<subseteq> bis ZOretr &&&\n     bis ZOretrT \\<subseteq> bis WretrT) &&&\n    bis ZOretr \\<subseteq> bis Wretr &&&\n    bis WretrT \\<subseteq> bis Wretr &&& bis WretrT \\<subseteq> bis RetrT", "by blast+"], ["", "lemma bis_imp[simp]:\n\"\\<And> c1 c2. c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01T c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>01 c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>wT c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>01 c2 \\<Longrightarrow> c1 \\<approx>w c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>w c2\"\n(*  *)\n\"\\<And> c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>T c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>c1 c2.\n         c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01T c2) &&&\n     (\\<And>c1 c2.\n         c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>01 c2) &&&\n     (\\<And>c1 c2.\n         c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>wT c2)) &&&\n    (\\<And>c1 c2. c1 \\<approx>01 c2 \\<Longrightarrow> c1 \\<approx>w c2) &&&\n    (\\<And>c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>w c2) &&&\n    (\\<And>c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>T c2)", "using bis_incl rev_subsetD"], ["proof (prove)\nusing this:\n  Sbis \\<subseteq> ZObisT\n  ZObisT \\<subseteq> ZObis\n  ZObisT \\<subseteq> WbisT\n  ZObis \\<subseteq> Wbis\n  WbisT \\<subseteq> Wbis\n  WbisT \\<subseteq> BisT\n  \\<lbrakk>?c \\<in> ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<in> ?B\n\ngoal (1 subgoal):\n 1. ((\\<And>c1 c2.\n         c1 \\<approx>s c2 \\<Longrightarrow> c1 \\<approx>01T c2) &&&\n     (\\<And>c1 c2.\n         c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>01 c2) &&&\n     (\\<And>c1 c2.\n         c1 \\<approx>01T c2 \\<Longrightarrow> c1 \\<approx>wT c2)) &&&\n    (\\<And>c1 c2. c1 \\<approx>01 c2 \\<Longrightarrow> c1 \\<approx>w c2) &&&\n    (\\<And>c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>w c2) &&&\n    (\\<And>c1 c2. c1 \\<approx>wT c2 \\<Longrightarrow> c1 \\<approx>T c2)", "by auto"], ["", "text\\<open>Self-isomorphism implies strong bisimilarity:\\<close>"], ["", "lemma siso_Sbis[simp]:\nassumes \"siso c\"\nshows \"c \\<approx>s c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>s c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<approx>s c", "let ?theta = \"{(c,c) | c . siso c}\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<approx>s c", "have \"?theta \\<subseteq> Sbis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, c) |c. siso c} \\<subseteq> Sbis", "proof(rule Sbis_raw_coind)"], ["proof (state)\ngoal (2 subgoals):\n 1. sym {(c, c) |c. siso c}\n 2. {(c, c) |c. siso c} \\<subseteq> Sretr {(c, c) |c. siso c}", "show \"sym ?theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym {(c, c) |c. siso c}", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> {(c, c) |c. siso c} \\<longrightarrow>\n       (y, x) \\<in> {(c, c) |c. siso c}", "by blast"], ["proof (state)\nthis:\n  sym {(c, c) |c. siso c}\n\ngoal (1 subgoal):\n 1. {(c, c) |c. siso c} \\<subseteq> Sretr {(c, c) |c. siso c}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {(c, c) |c. siso c} \\<subseteq> Sretr {(c, c) |c. siso c}", "show \"?theta \\<subseteq> Sretr ?theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, c) |c. siso c} \\<subseteq> Sretr {(c, c) |c. siso c}", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       siso c \\<Longrightarrow> (c, c) \\<in> Sretr {(c, c) |c. siso c}", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       siso c \\<Longrightarrow> (c, c) \\<in> Sretr {(c, c) |c. siso c}", "assume c: \"siso c\""], ["proof (state)\nthis:\n  siso c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       siso c \\<Longrightarrow> (c, c) \\<in> Sretr {(c, c) |c. siso c}", "show \"(c, c) \\<in> Sretr ?theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, c) \\<in> Sretr {(c, c) |c. siso c}", "unfolding Sretr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, c)\n    \\<in> {(c, d). matchC_C {(c, c) |c. siso c} c d \\<and> matchT_T c d}", "proof (clarify, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. matchC_C {(c, c) |c. siso c} c c\n 2. matchT_T c c", "show \"matchC_C ?theta c c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_C {(c, c) |c. siso c} c c", "unfolding matchC_C_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t c' s'.\n       s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n       (\\<exists>d' t'.\n           (c, t) \\<rightarrow>c (d', t') \\<and>\n           s' \\<approx> t' \\<and> (c', d') \\<in> {(c, c) |c. siso c})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t c' s'.\n       s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n       (\\<exists>t'.\n           (c, t) \\<rightarrow>c (c', t') \\<and>\n           s' \\<approx> t' \\<and> siso c')", "by (metis c siso_transC siso_transC_indis)"], ["proof (state)\nthis:\n  matchC_C {(c, c) |c. siso c} c c\n\ngoal (1 subgoal):\n 1. matchT_T c c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. matchT_T c c", "show \"matchT_T c c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_T c c", "unfolding matchT_T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t s'.\n       s \\<approx> t \\<and> (c, s) \\<rightarrow>t s' \\<longrightarrow>\n       (\\<exists>t'. (c, t) \\<rightarrow>t t' \\<and> s' \\<approx> t')", "by (metis c siso_transT)"], ["proof (state)\nthis:\n  matchT_T c c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (c, c) \\<in> Sretr {(c, c) |c. siso c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(c, c) |c. siso c} \\<subseteq> Sretr {(c, c) |c. siso c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(c, c) |c. siso c} \\<subseteq> Sbis\n\ngoal (1 subgoal):\n 1. c \\<approx>s c", "thus ?thesis"], ["proof (prove)\nusing this:\n  {(c, c) |c. siso c} \\<subseteq> Sbis\n\ngoal (1 subgoal):\n 1. c \\<approx>s c", "using assms"], ["proof (prove)\nusing this:\n  {(c, c) |c. siso c} \\<subseteq> Sbis\n  siso c\n\ngoal (1 subgoal):\n 1. c \\<approx>s c", "by blast"], ["proof (state)\nthis:\n  c \\<approx>s c\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>0-Self-isomorphism implies weak T 0-bisimilarity:\\<close>"], ["", "lemma siso0_Sbis[simp]:\nassumes \"siso0 c\"\nshows \"c \\<approx>T c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<approx>T c", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<approx>T c", "let ?theta = \"{(c,c) | c . siso0 c}\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<approx>T c", "have \"?theta \\<subseteq> BisT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, c) |c. siso0 c} \\<subseteq> BisT", "proof(rule BisT_raw_coind)"], ["proof (state)\ngoal (2 subgoals):\n 1. sym {(c, c) |c. siso0 c}\n 2. {(c, c) |c. siso0 c} \\<subseteq> RetrT {(c, c) |c. siso0 c}", "show \"sym ?theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym {(c, c) |c. siso0 c}", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> {(c, c) |c. siso0 c} \\<longrightarrow>\n       (y, x) \\<in> {(c, c) |c. siso0 c}", "by blast"], ["proof (state)\nthis:\n  sym {(c, c) |c. siso0 c}\n\ngoal (1 subgoal):\n 1. {(c, c) |c. siso0 c} \\<subseteq> RetrT {(c, c) |c. siso0 c}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {(c, c) |c. siso0 c} \\<subseteq> RetrT {(c, c) |c. siso0 c}", "show \"?theta \\<subseteq> RetrT ?theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(c, c) |c. siso0 c} \\<subseteq> RetrT {(c, c) |c. siso0 c}", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       siso0 c \\<Longrightarrow> (c, c) \\<in> RetrT {(c, c) |c. siso0 c}", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       siso0 c \\<Longrightarrow> (c, c) \\<in> RetrT {(c, c) |c. siso0 c}", "assume c: \"siso0 c\""], ["proof (state)\nthis:\n  siso0 c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       siso0 c \\<Longrightarrow> (c, c) \\<in> RetrT {(c, c) |c. siso0 c}", "show \"(c, c) \\<in> RetrT ?theta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, c) \\<in> RetrT {(c, c) |c. siso0 c}", "unfolding RetrT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c, c)\n    \\<in> {(c, d).\n           matchC_TMC {(c, c) |c. siso0 c} c d \\<and> matchT_TMT c d}", "proof (clarify, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. matchC_TMC {(c, c) |c. siso0 c} c c\n 2. matchT_TMT c c", "show \"matchC_TMC ?theta c c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchC_TMC {(c, c) |c. siso0 c} c c", "unfolding matchC_TMC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t c' s'.\n       mustT c s \\<and>\n       mustT c t \\<and>\n       s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n       (\\<exists>d' t'.\n           (c, t) \\<rightarrow>*c (d', t') \\<and>\n           s' \\<approx> t' \\<and> (c', d') \\<in> {(c, c) |c. siso0 c})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s t c' s'.\n       mustT c s \\<and>\n       mustT c t \\<and>\n       s \\<approx> t \\<and> (c, s) \\<rightarrow>c (c', s') \\<longrightarrow>\n       (\\<exists>t'.\n           (c, t) \\<rightarrow>*c (c', t') \\<and>\n           s' \\<approx> t' \\<and> siso0 c')", "by (metis c siso0_transC siso0_transC_indis transC_MtransC)"], ["proof (state)\nthis:\n  matchC_TMC {(c, c) |c. siso0 c} c c\n\ngoal (1 subgoal):\n 1. matchT_TMT c c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. matchT_TMT c c", "show \"matchT_TMT c c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_TMT c c", "unfolding matchC_TMC_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. matchT_TMT c c", "by (metis c matchT_TMT_def siso0_transT transT_MtransT)"], ["proof (state)\nthis:\n  matchT_TMT c c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (c, c) \\<in> RetrT {(c, c) |c. siso0 c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(c, c) |c. siso0 c} \\<subseteq> RetrT {(c, c) |c. siso0 c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(c, c) |c. siso0 c} \\<subseteq> BisT\n\ngoal (1 subgoal):\n 1. c \\<approx>T c", "thus ?thesis"], ["proof (prove)\nusing this:\n  {(c, c) |c. siso0 c} \\<subseteq> BisT\n\ngoal (1 subgoal):\n 1. c \\<approx>T c", "using assms"], ["proof (prove)\nusing this:\n  {(c, c) |c. siso0 c} \\<subseteq> BisT\n  siso0 c\n\ngoal (1 subgoal):\n 1. c \\<approx>T c", "by blast"], ["proof (state)\nthis:\n  c \\<approx>T c\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* context PL_Indis *)"], ["", "end"]]}