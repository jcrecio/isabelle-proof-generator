{"file_name": "/home/qj213/afp-2021-10-22/thys/SIFUM_Type_Systems/TypeSystem.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/SIFUM_Type_Systems", "problem_names": ["lemma tyenv_eq_sym: \"mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 \\<Longrightarrow> mem\\<^sub>2 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>1\"", "lemma \\<R>\\<^sub>1_sym: \"sym (\\<R>\\<^sub>1 \\<Gamma>)\"", "lemma \\<R>\\<^sub>2_sym: \"sym (\\<R>\\<^sub>2 \\<Gamma>)\"", "lemma \\<R>\\<^sub>3_sym: \"sym (\\<R>\\<^sub>3 \\<Gamma>)\"", "lemma \\<R>_mds [simp]: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<Longrightarrow> mds = mds'\"", "lemma \\<R>_sym: \"sym (\\<R> \\<Gamma>)\"", "lemma \\<R>\\<^sub>1_closed_glob_consistent: \"closed_glob_consistent (\\<R>\\<^sub>1 \\<Gamma>')\"", "lemma \\<R>\\<^sub>2_closed_glob_consistent: \"closed_glob_consistent (\\<R>\\<^sub>2 \\<Gamma>')\"", "lemma \\<R>\\<^sub>3_closed_glob_consistent:\n  assumes R3: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\"\n  shows \"\\<forall> x.\n    (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow> (\\<forall>v. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>'))\"", "lemma \\<R>_closed_glob_consistent: \"closed_glob_consistent (\\<R> \\<Gamma>')\"", "lemma type_low_vars_low:\n  assumes typed: \"\\<Gamma> \\<turnstile>\\<^sub>a e \\<in> Low\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes x_in_vars: \"x \\<in> aexp_vars e\"\n  shows \"to_total \\<Gamma> x = Low\"", "lemma type_low_vars_low_b:\n  assumes typed : \"\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes x_in_vars: \"x \\<in> bexp_vars e\"\n  shows \"to_total \\<Gamma> x = Low\"", "lemma mode_update_add_anno:\n  \"mds_consistent mds \\<Gamma> \\<Longrightarrow> mds_consistent (update_modes upd mds) (\\<Gamma> \\<oplus> upd)\"", "lemma context_le_trans: \"\\<lbrakk> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>' ; \\<Gamma>' \\<sqsubseteq>\\<^sub>c \\<Gamma>'' \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\"", "lemma context_le_refl [simp]: \"\\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\"", "lemma stop_cxt :\n  \"\\<lbrakk> \\<turnstile> \\<Gamma> { c } \\<Gamma>' ; c = Stop \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>'\"", "lemma preservation:\n  assumes typed: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  assumes eval: \"\\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\"\n  shows \"\\<exists> \\<Gamma>''. (\\<turnstile> \\<Gamma>'' { c' } \\<Gamma>') \\<and> (mds_consistent mds \\<Gamma> \\<longrightarrow> mds_consistent mds' \\<Gamma>'')\"", "lemma \\<R>\\<^sub>1_mem_eq: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\"", "lemma \\<R>\\<^sub>2_mem_eq: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\"", "lemma \\<R>\\<^sub>3_mem_eq: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\"", "lemma \\<R>\\<^sub>2_bisim_step:\n  assumes case2: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\"\n  assumes eval: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\"\n  shows \"\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\"", "lemma \\<R>\\<^sub>2_weak_bisim:\n  \"weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>')\"", "lemma \\<R>\\<^sub>2_bisim: \"strong_low_bisim_mm (\\<R>\\<^sub>2 \\<Gamma>')\"", "lemma annotated_no_stop: \"\\<lbrakk> \\<not> has_annotated_stop (c@[upd]) \\<rbrakk> \\<Longrightarrow> \\<not> has_annotated_stop c\"", "lemma typed_no_annotated_stop:\n  \"\\<lbrakk> \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow> \\<not> has_annotated_stop c\"", "lemma not_stop_eval:\n  \"\\<lbrakk> c \\<noteq> Stop ; \\<not> has_annotated_stop c \\<rbrakk> \\<Longrightarrow>\n  \\<forall> mds mem. \\<exists> c' mds' mem'. \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\"", "lemma stop_bisim:\n  assumes bisim: \"\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\"\n  assumes typeable: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  shows \"c = Stop\"", "lemma \\<R>_typed_step:\n  \"\\<lbrakk> \\<turnstile> \\<Gamma> { c\\<^sub>1 } \\<Gamma>' ;\n     mds_consistent mds \\<Gamma> ;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 ;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<rbrakk> \\<Longrightarrow>\n   (\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                 \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\"", "lemma \\<R>\\<^sub>1_weak_bisim:\n  \"weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>')\"", "lemma \\<R>_to_\\<R>\\<^sub>3: \"\\<lbrakk> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> ; \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\"", "lemma \\<R>\\<^sub>2_implies_typeable: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> \\<exists> \\<Gamma>\\<^sub>1. \\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>2 } \\<Gamma>'\"", "lemma \\<R>\\<^sub>3_weak_bisim:\n  \"weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')\"", "lemma \\<R>_bisim: \"strong_low_bisim_mm (\\<R> \\<Gamma>')\"", "lemma Typed_in_\\<R>:\n  assumes typeable: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes mem_eq: \"\\<forall> x. to_total \\<Gamma> x = Low \\<longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x\"\n  shows \"\\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\"", "theorem type_soundness:\n  assumes well_typed: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes mem_eq: \"\\<forall> x. to_total \\<Gamma> x = Low \\<longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x\"\n  shows \"\\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\"", "lemma mds\\<^sub>s_consistent: \"mds_consistent mds\\<^sub>s \\<Gamma>\\<^sub>0\"", "lemma typed_secure:\n  \"\\<lbrakk> \\<turnstile> \\<Gamma>\\<^sub>0 { c } \\<Gamma>\\<^sub>0 \\<rbrakk> \\<Longrightarrow> com_sifum_secure c\"", "lemma \"\\<lbrakk> mds_consistent mds \\<Gamma>\\<^sub>0 ; dma x = Low \\<rbrakk> \\<Longrightarrow> x \\<notin> mds AsmNoRead\"", "lemma list_all_set: \"\\<forall> x \\<in> set xs. P x \\<Longrightarrow> list_all P xs\"", "theorem type_soundness_global:\n  assumes typeable: \"\\<turnstile> cs\"\n  assumes no_assms_term: \"no_assumptions_on_termination cs\"\n  shows \"prog_sifum_secure cs\""], "translations": [["", "lemma tyenv_eq_sym: \"mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 \\<Longrightarrow> mem\\<^sub>2 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 \\<Longrightarrow>\n    mem\\<^sub>2 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>1", "by (auto simp: tyenv_eq_def)"], ["", "(* Parametrized relations for type soundness proof *)"], ["", "inductive_set \\<R>\\<^sub>1 :: \"'Var TyEnv \\<Rightarrow> (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf rel\"\n  and \\<R>\\<^sub>1_abv :: \"'Var TyEnv \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  bool\" (\"_ \\<R>\\<^sup>1\\<index> _\" [120, 120] 1000)\n  for \\<Gamma>' :: \"'Var TyEnv\"\n  where\n  \"x \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> y \\<equiv> (x, y) \\<in> \\<R>\\<^sub>1 \\<Gamma>\" |\n  intro [intro!] : \"\\<lbrakk> \\<turnstile> \\<Gamma> { c } \\<Gamma>' ; mds_consistent mds \\<Gamma> ; mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 \\<rbrakk> \\<Longrightarrow> \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\""], ["", "inductive_set \\<R>\\<^sub>2 :: \"'Var TyEnv \\<Rightarrow> (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf rel\"\n  and \\<R>\\<^sub>2_abv :: \"'Var TyEnv \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  bool\" (\"_ \\<R>\\<^sup>2\\<index> _\" [120, 120] 1000)\n  for \\<Gamma>' :: \"'Var TyEnv\"\n  where\n  \"x \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> y \\<equiv> (x, y) \\<in> \\<R>\\<^sub>2 \\<Gamma>\" |\n  intro [intro!] : \"\\<lbrakk> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> ;\n                       \\<forall> x \\<in> dom \\<Gamma>'. \\<Gamma>' x = Some High ;\n                       \\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>1 } \\<Gamma>' ; \\<turnstile> \\<Gamma>\\<^sub>2 { c\\<^sub>2 } \\<Gamma>' ;\n                       mds_consistent mds \\<Gamma>\\<^sub>1 ; mds_consistent mds \\<Gamma>\\<^sub>2 \\<rbrakk> \\<Longrightarrow>\n                     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["", "inductive \\<R>\\<^sub>3_aux :: \"'Var TyEnv \\<Rightarrow> (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n                 (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n                 bool\" (\"_ \\<R>\\<^sup>3\\<index> _\" [120, 120] 1000)\n  and \\<R>\\<^sub>3 :: \"'Var TyEnv \\<Rightarrow> (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf rel\"\n  where\n  \"\\<R>\\<^sub>3 \\<Gamma>' \\<equiv> {(lc\\<^sub>1, lc\\<^sub>2). \\<R>\\<^sub>3_aux \\<Gamma>' lc\\<^sub>1 lc\\<^sub>2}\" |\n  intro\\<^sub>1 [intro] : \"\\<lbrakk> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>; \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow>\n                      \\<langle>Seq c\\<^sub>1 c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>Seq c\\<^sub>2 c, mds, mem\\<^sub>2\\<rangle>\" |\n  intro\\<^sub>2 [intro] : \"\\<lbrakk> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>; \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow>\n                      \\<langle>Seq c\\<^sub>1 c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>Seq c\\<^sub>2 c, mds, mem\\<^sub>2\\<rangle>\" |\n  intro\\<^sub>3 [intro] : \"\\<lbrakk> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>; \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow>\n                      \\<langle>Seq c\\<^sub>1 c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>Seq c\\<^sub>2 c, mds, mem\\<^sub>2\\<rangle>\""], ["", "(* A weaker property than bisimulation to reason about the sub-relations of \\<R>: *)"], ["", "definition weak_bisim :: \"(('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf rel \\<Rightarrow>\n                        (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf rel \\<Rightarrow> bool\"\n  where \"weak_bisim \\<T>\\<^sub>1 \\<T> \\<equiv> \\<forall> c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds' mem\\<^sub>1'.\n  ((\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>) \\<in> \\<T>\\<^sub>1 \\<and>\n   (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>)) \\<longrightarrow>\n  (\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and> \n                (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>, \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>) \\<in> \\<T>)\""], ["", "inductive_set \\<R> :: \"'Var TyEnv \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf rel\"\n  and \\<R>_abv :: \"'Var TyEnv \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  bool\" (\"_ \\<R>\\<^sup>u\\<index> _\" [120, 120] 1000)\n  for \\<Gamma> :: \"'Var TyEnv\"\n  where\n  \"x \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> y \\<equiv> (x, y) \\<in> \\<R> \\<Gamma>\" |\n  intro\\<^sub>1: \"lc \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow> (lc, lc') \\<in> \\<R> \\<Gamma>\" |\n  intro\\<^sub>2: \"lc \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow> (lc, lc') \\<in> \\<R> \\<Gamma>\" |\n  intro\\<^sub>3: \"lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow> (lc, lc') \\<in> \\<R> \\<Gamma>\""], ["", "(* Some eliminators for the above relations *)"], ["", "inductive_cases \\<R>\\<^sub>1_elim [elim]: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["", "inductive_cases \\<R>\\<^sub>2_elim [elim]: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["", "inductive_cases \\<R>\\<^sub>3_elim [elim]: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["", "inductive_cases \\<R>_elim [elim]: \"(\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>) \\<in> \\<R> \\<Gamma>\""], ["", "inductive_cases \\<R>_elim': \"(\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>) \\<in> \\<R> \\<Gamma>\""], ["", "inductive_cases \\<R>\\<^sub>1_elim' : \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\""], ["", "inductive_cases \\<R>\\<^sub>2_elim' : \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\""], ["", "inductive_cases \\<R>\\<^sub>3_elim' : \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\""], ["", "(* To prove that \\<R> is a bisimulation, we first show symmetry *)"], ["", "lemma \\<R>\\<^sub>1_sym: \"sym (\\<R>\\<^sub>1 \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (\\<R>\\<^sub>1 \\<Gamma>)", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> y \\<longrightarrow>\n       y \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> x", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "by (metis (no_types) \\<R>\\<^sub>1.intro \\<R>\\<^sub>1_elim' tyenv_eq_sym)"], ["", "lemma \\<R>\\<^sub>2_sym: \"sym (\\<R>\\<^sub>2 \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (\\<R>\\<^sub>2 \\<Gamma>)", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> y \\<longrightarrow>\n       y \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> x", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "by (metis (no_types) \\<R>\\<^sub>2.intro \\<R>\\<^sub>2_elim' mm_equiv_sym)"], ["", "lemma \\<R>\\<^sub>3_sym: \"sym (\\<R>\\<^sub>3 \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (\\<R>\\<^sub>3 \\<Gamma>)", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (x, y) \\<in> \\<R>\\<^sub>3 \\<Gamma> \\<longrightarrow>\n       (y, x) \\<in> \\<R>\\<^sub>3 \\<Gamma>", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mds' mem\\<^sub>2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "assume asm: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "hence [simp]: \"mds' = mds\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. mds' = mds", "using \\<R>\\<^sub>3_elim'"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds\\<^sub>2, ?mem\\<^sub>2\\<rangle>;\n   \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2 c.\n      \\<lbrakk>?c\\<^sub>1 = c\\<^sub>1 ;; c;\n       \\<langle>c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n       \\<turnstile> \\<Gamma> {c} ?\\<Gamma>; ?c\\<^sub>2 = c\\<^sub>2 ;; c;\n       ?mds\\<^sub>2 = ?mds\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2 c.\n      \\<lbrakk>?c\\<^sub>1 = c\\<^sub>1 ;; c;\n       \\<langle>c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n       \\<turnstile> \\<Gamma> {c} ?\\<Gamma>; ?c\\<^sub>2 = c\\<^sub>2 ;; c;\n       ?mds\\<^sub>2 = ?mds\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2 c.\n      \\<lbrakk>?c\\<^sub>1 = c\\<^sub>1 ;; c;\n       \\<langle>c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n       \\<turnstile> \\<Gamma> {c} ?\\<Gamma>; ?c\\<^sub>2 = c\\<^sub>2 ;; c;\n       ?mds\\<^sub>2 = ?mds\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. mds' = mds", "by blast"], ["proof (state)\nthis:\n  mds' = mds\n\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "from asm"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>", "show \"\\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "apply (induct rule: \\<R>\\<^sub>3_aux.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1 ;;\n                                  c, mds, mem\\<^sub>1\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1 ;;\n                                  c, mds, mem\\<^sub>1\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1 ;;\n                                  c, mds, mem\\<^sub>1\\<rangle>", "apply (metis (lifting) \\<R>\\<^sub>1_sym \\<R>\\<^sub>3_aux.intro\\<^sub>1 symD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1 ;;\n                                  c, mds, mem\\<^sub>1\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1 ;;\n                                  c, mds, mem\\<^sub>1\\<rangle>", "apply (metis (lifting) \\<R>\\<^sub>2_sym \\<R>\\<^sub>3_aux.intro\\<^sub>2 symD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1 ;;\n                                  c, mds, mem\\<^sub>1\\<rangle>", "by (metis (lifting) \\<R>\\<^sub>3_aux.intro\\<^sub>3)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<R>_mds [simp]: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<Longrightarrow> mds = mds'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mds = mds'", "apply (rule \\<R>_elim')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds\\<^sub>2, ?mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     (case \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>?c\\<^sub>2, ?mds\\<^sub>2, ?mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'\n 3. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     (case \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>?c\\<^sub>2, ?mds\\<^sub>2, ?mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'\n 4. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds\\<^sub>2, ?mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'", "apply (auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'\n 3. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'", "apply (metis \\<R>\\<^sub>1_elim')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'", "apply (metis \\<R>\\<^sub>2_elim')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mds = mds'", "apply (insert \\<R>\\<^sub>3_elim')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mds\\<^sub>2\n        mem\\<^sub>2 P.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>;\n         \\<And>\\<Gamma>' c\\<^sub>1' c\\<^sub>2' c.\n            \\<lbrakk>c\\<^sub>1 = c\\<^sub>1' ;; c;\n             \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n             \\<turnstile> \\<Gamma>' {c} \\<Gamma>;\n             c\\<^sub>2 = c\\<^sub>2' ;; c; mds\\<^sub>2 = mds\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>\\<Gamma>' c\\<^sub>1' c\\<^sub>2' c.\n            \\<lbrakk>c\\<^sub>1 = c\\<^sub>1' ;; c;\n             \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n             \\<turnstile> \\<Gamma>' {c} \\<Gamma>;\n             c\\<^sub>2 = c\\<^sub>2' ;; c; mds\\<^sub>2 = mds\\<rbrakk>\n            \\<Longrightarrow> P;\n         \\<And>\\<Gamma>' c\\<^sub>1' c\\<^sub>2' c.\n            \\<lbrakk>c\\<^sub>1 = c\\<^sub>1' ;; c;\n             \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n             \\<turnstile> \\<Gamma>' {c} \\<Gamma>;\n             c\\<^sub>2 = c\\<^sub>2' ;; c; mds\\<^sub>2 = mds\\<rbrakk>\n            \\<Longrightarrow> P\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> mds = mds'", "by blast"], ["", "lemma \\<R>_sym: \"sym (\\<R> \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (\\<R> \\<Gamma>)", "unfolding sym_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> y \\<longrightarrow>\n       y \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> x", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mds\\<^sub>2 mem\\<^sub>2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "assume asm: \"(\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>) \\<in> \\<R> \\<Gamma>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "with \\<R>_mds"], ["proof (chain)\npicking this:\n  \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds', ?mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  ?mds = ?mds'\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>", "have [simp]: \"mds\\<^sub>2 = mds\""], ["proof (prove)\nusing this:\n  \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds', ?mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  ?mds = ?mds'\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. mds\\<^sub>2 = mds", "by blast"], ["proof (state)\nthis:\n  mds\\<^sub>2 = mds\n\ngoal (1 subgoal):\n 1. \\<And>a b ba aa bb bc.\n       \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n       \\<langle>aa, bb, bc\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>a, b, ba\\<rangle>", "from asm"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>", "show \"(\\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>, \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>) \\<in> \\<R> \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "using \\<R>.intro\\<^sub>1 [of \\<Gamma>] and \\<R>.intro\\<^sub>2 [of \\<Gamma>] and \\<R>.intro\\<^sub>3 [of \\<Gamma>]"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n  ?lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "using \\<R>\\<^sub>1_sym [of \\<Gamma>] and \\<R>\\<^sub>2_sym [of \\<Gamma>] and \\<R>\\<^sub>3_sym [of \\<Gamma>]"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n  ?lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n  sym (\\<R>\\<^sub>1 \\<Gamma>)\n  sym (\\<R>\\<^sub>2 \\<Gamma>)\n  sym (\\<R>\\<^sub>3 \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>lc lc'.\n        (case lc of\n         (x, xa) \\<Rightarrow>\n           (case x of\n            (x, xa) \\<Rightarrow>\n              \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                 \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n            xa)\n         lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        (case lc of\n         (x, xa) \\<Rightarrow>\n           (case x of\n            (x, xa) \\<Rightarrow>\n              \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                 \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n            xa)\n         lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     sym (\\<R>\\<^sub>1 \\<Gamma>); sym (\\<R>\\<^sub>2 \\<Gamma>);\n     sym (\\<R>\\<^sub>3 \\<Gamma>)\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "apply (erule \\<R>_elim)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>lc lc'.\n                (case lc of\n                 (x, xa) \\<Rightarrow>\n                   (case x of\n                    (x, xa) \\<Rightarrow>\n                      \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                         \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n                    xa)\n                 lc' \\<Longrightarrow>\n                lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        (case lc of\n         (x, xa) \\<Rightarrow>\n           (case x of\n            (x, xa) \\<Rightarrow>\n              \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                 \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n            xa)\n         lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     sym (\\<R>\\<^sub>1 \\<Gamma>); sym (\\<R>\\<^sub>2 \\<Gamma>);\n     sym (\\<R>\\<^sub>3 \\<Gamma>);\n     (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n 2. \\<lbrakk>\\<And>lc lc'.\n                (case lc of\n                 (x, xa) \\<Rightarrow>\n                   (case x of\n                    (x, xa) \\<Rightarrow>\n                      \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                         \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n                    xa)\n                 lc' \\<Longrightarrow>\n                lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        (case lc of\n         (x, xa) \\<Rightarrow>\n           (case x of\n            (x, xa) \\<Rightarrow>\n              \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                 \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n            xa)\n         lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     sym (\\<R>\\<^sub>1 \\<Gamma>); sym (\\<R>\\<^sub>2 \\<Gamma>);\n     sym (\\<R>\\<^sub>3 \\<Gamma>);\n     (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n 3. \\<lbrakk>\\<And>lc lc'.\n                (case lc of\n                 (x, xa) \\<Rightarrow>\n                   (case x of\n                    (x, xa) \\<Rightarrow>\n                      \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                         \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n                    xa)\n                 lc' \\<Longrightarrow>\n                lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        (case lc of\n         (x, xa) \\<Rightarrow>\n           (case x of\n            (x, xa) \\<Rightarrow>\n              \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                 \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n            xa)\n         lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     \\<And>lc lc'.\n        lc \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> lc' \\<Longrightarrow>\n        lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> lc';\n     sym (\\<R>\\<^sub>1 \\<Gamma>); sym (\\<R>\\<^sub>2 \\<Gamma>);\n     sym (\\<R>\\<^sub>3 \\<Gamma>);\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>", "by (auto simp: sym_def)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Next, we show that the relations are closed under globally consistent changes *)"], ["", "lemma \\<R>\\<^sub>1_closed_glob_consistent: \"closed_glob_consistent (\\<R>\\<^sub>1 \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed_glob_consistent (\\<R>\\<^sub>1 \\<Gamma>')", "unfolding closed_glob_consistent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n       (\\<forall>x.\n           (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n            (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                (x := v\\<^sub>2)\\<rangle>)) \\<and>\n           (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n            (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                (x := v)\\<rangle>)))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x \\<Gamma>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "assume R1: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "hence [simp]: \"c\\<^sub>2 = c\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>2 = c\\<^sub>1", "by blast"], ["proof (state)\nthis:\n  c\\<^sub>2 = c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "from R1"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "obtain \\<Gamma> where \\<Gamma>_props: \"\\<turnstile> \\<Gamma> { c\\<^sub>1 } \\<Gamma>'\" \"mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\" \"mds_consistent mds \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>.\n        \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         mds_consistent mds \\<Gamma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>'\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  mds_consistent mds \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "hence \"\\<And> v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1 (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2 (x := v)\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>'\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  mds_consistent mds \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v)\\<rangle>", "by (auto simp: tyenv_eq_def mds_consistent_def)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n  (x := ?v5)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n  (x := ?v5)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n  (x := ?v5)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n  (x := ?v5)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "from \\<Gamma>_props"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>'\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  mds_consistent mds \\<Gamma>", "have \"\\<And> v\\<^sub>1 v\\<^sub>2. \\<lbrakk> dma x = High ; x \\<notin> mds AsmNoWrite \\<rbrakk> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>'\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  mds_consistent mds \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>v\\<^sub>1 v\\<^sub>2.\n       \\<lbrakk>dma x = High; x \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                         (x := v\\<^sub>2)\\<rangle>", "apply (auto simp: mds_consistent_def tyenv_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v\\<^sub>1 v\\<^sub>2.\n       \\<lbrakk>dma x = High; x \\<notin> mds AsmNoWrite;\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<forall>x.\n           to_total \\<Gamma> x = Low \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        to_total \\<Gamma> x = Low\\<rbrakk>\n       \\<Longrightarrow> v\\<^sub>1 = v\\<^sub>2", "by (metis (lifting, full_types) Sec.simps(2) mem_Collect_eq to_total_def)"], ["proof (state)\nthis:\n  \\<lbrakk>dma x = High; x \\<notin> mds AsmNoWrite\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                    (x := ?v\\<^sub>15)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                    (x := ?v\\<^sub>25)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n  (x := ?v5)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n  (x := ?v5)\\<rangle>\n  \\<lbrakk>dma x = High; x \\<notin> mds AsmNoWrite\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                    (x := ?v\\<^sub>15)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                    (x := ?v\\<^sub>25)\\<rangle>", "show\n    \"(dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>))\n     \\<and>\n     (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n  (x := ?v5)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n  (x := ?v5)\\<rangle>\n  \\<lbrakk>dma x = High; x \\<notin> mds AsmNoWrite\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                    (x := ?v\\<^sub>15)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                    (x := ?v\\<^sub>25)\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "using intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n  (x := ?v5)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n  (x := ?v5)\\<rangle>\n  \\<lbrakk>dma x = High; x \\<notin> mds AsmNoWrite\\<rbrakk>\n  \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                    (x := ?v\\<^sub>15)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                    (x := ?v\\<^sub>25)\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v\\<^sub>2)\\<rangle>)) \\<and>\n  (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v)\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<R>\\<^sub>2_closed_glob_consistent: \"closed_glob_consistent (\\<R>\\<^sub>2 \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed_glob_consistent (\\<R>\\<^sub>2 \\<Gamma>')", "unfolding closed_glob_consistent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n       (\\<forall>x.\n           (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n            (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                (x := v\\<^sub>2)\\<rangle>)) \\<and>\n           (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n            (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                (x := v)\\<rangle>)))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x \\<Gamma>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "assume R2: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "then"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "obtain \\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2 where \\<Gamma>_prop: \"\\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>1 } \\<Gamma>'\" \"\\<turnstile> \\<Gamma>\\<^sub>2 { c\\<^sub>2 } \\<Gamma>'\"\n    \"mds_consistent mds \\<Gamma>\\<^sub>1\" \"mds_consistent mds \\<Gamma>\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n        \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>';\n         \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>';\n         mds_consistent mds \\<Gamma>\\<^sub>1;\n         mds_consistent mds \\<Gamma>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "from R2"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have bisim: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "then"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "obtain \\<R>' where \\<R>'_prop: \"(\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>) \\<in> \\<R>' \\<and> strong_low_bisim_mm \\<R>'\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<R>'.\n        (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n        \\<in> \\<R>' \\<and>\n        strong_low_bisim_mm \\<R>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (rule mm_equiv_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<R>.\n       \\<lbrakk>\\<And>\\<R>'.\n                   (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n                    \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n                   \\<in> \\<R>' \\<and>\n                   strong_low_bisim_mm \\<R>' \\<Longrightarrow>\n                   thesis;\n        strong_low_bisim_mm \\<R>;\n        (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n        \\<in> \\<R>\\<rbrakk>\n       \\<Longrightarrow> thesis", "by (auto simp: strong_low_bisim_mm_def)"], ["proof (state)\nthis:\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "from \\<R>'_prop"], ["proof (chain)\npicking this:\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'", "have \\<R>'_cons: \"closed_glob_consistent \\<R>'\""], ["proof (prove)\nusing this:\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n\ngoal (1 subgoal):\n 1. closed_glob_consistent \\<R>'", "by (auto simp: strong_low_bisim_mm_def)"], ["proof (state)\nthis:\n  closed_glob_consistent \\<R>'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "moreover"], ["proof (state)\nthis:\n  closed_glob_consistent \\<R>'\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "from \\<Gamma>_prop and \\<R>'_prop"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'", "have \"\\<And>mem\\<^sub>1 mem\\<^sub>2. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>) \\<in> \\<R>' \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n\ngoal (1 subgoal):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n       \\<in> \\<R>' \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "using \\<R>\\<^sub>2.intro [where \\<Gamma>' = \\<Gamma>' and \\<Gamma>\\<^sub>1 = \\<Gamma>\\<^sub>1 and \\<Gamma>\\<^sub>2 = \\<Gamma>\\<^sub>2]"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<approx>\n           \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High;\n   \\<turnstile> \\<Gamma>\\<^sub>1 {?c\\<^sub>1} \\<Gamma>';\n   \\<turnstile> \\<Gamma>\\<^sub>2 {?c\\<^sub>2} \\<Gamma>';\n   mds_consistent ?mds \\<Gamma>\\<^sub>1;\n   mds_consistent ?mds \\<Gamma>\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n       \\<in> \\<R>' \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "using mm_equiv_intro and R2"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<approx>\n           \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High;\n   \\<turnstile> \\<Gamma>\\<^sub>1 {?c\\<^sub>1} \\<Gamma>';\n   \\<turnstile> \\<Gamma>\\<^sub>2 {?c\\<^sub>2} \\<Gamma>';\n   mds_consistent ?mds \\<Gamma>\\<^sub>1;\n   mds_consistent ?mds \\<Gamma>\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>\n  \\<lbrakk>strong_low_bisim_mm ?\\<R>;\n   (?lc\\<^sub>1, ?lc\\<^sub>2) \\<in> ?\\<R>\\<rbrakk>\n  \\<Longrightarrow> ?lc\\<^sub>1 \\<approx> ?lc\\<^sub>2\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n       \\<in> \\<R>' \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by blast"], ["proof (state)\nthis:\n  (\\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>)\n  \\<in> \\<R>' \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "ultimately"], ["proof (chain)\npicking this:\n  closed_glob_consistent \\<R>'\n  (\\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>)\n  \\<in> \\<R>' \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>", "show\n    \"(dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>))\n     \\<and>\n     (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>))\""], ["proof (prove)\nusing this:\n  closed_glob_consistent \\<R>'\n  (\\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>)\n  \\<in> \\<R>' \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "using \\<R>'_prop"], ["proof (prove)\nusing this:\n  closed_glob_consistent \\<R>'\n  (\\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>)\n  \\<in> \\<R>' \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "unfolding closed_glob_consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n     \\<in> \\<R>' \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n               (x := v\\<^sub>1)\\<rangle>,\n               \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n               (x := v\\<^sub>2)\\<rangle>)\n              \\<in> \\<R>')) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v.\n              (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>,\n               \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>)\n              \\<in> \\<R>')))\n  (\\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>)\n  \\<in> \\<R>' \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, ?mem\\<^sub>25\\<rangle>\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>' \\<and>\n  strong_low_bisim_mm \\<R>'\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "by simp"], ["proof (state)\nthis:\n  (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v\\<^sub>2)\\<rangle>)) \\<and>\n  (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v)\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* A predicate like this seems to be necessary to make induct generate\n    the correct goal in the following lemma. Without it, it somehow does\n    not \"unify\" the local configuration components in the goal and the assumptions. *)"], ["", "fun closed_glob_helper :: \"'Var TyEnv \\<Rightarrow> (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow> (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow> bool\"\n  where\n  \"closed_glob_helper \\<Gamma>' \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle> =\n  (\\<forall> x. ((dma x = High \\<and> x \\<notin> mds AsmNoWrite) \\<longrightarrow>\n           (\\<forall> v\\<^sub>1 v\\<^sub>2. (\\<langle> c\\<^sub>1, mds, mem\\<^sub>1 (x := v\\<^sub>1) \\<rangle>, \\<langle> c\\<^sub>2, mds, mem\\<^sub>2 (x := v\\<^sub>2) \\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n         ((dma x = Low \\<and> x \\<notin> mds AsmNoWrite) \\<longrightarrow>\n           (\\<forall> v. (\\<langle> c\\<^sub>1, mds, mem\\<^sub>1 (x := v) \\<rangle>, \\<langle> c\\<^sub>2, mds, mem\\<^sub>2 (x := v) \\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>')))\""], ["", "lemma \\<R>\\<^sub>3_closed_glob_consistent:\n  assumes R3: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\"\n  shows \"\\<forall> x.\n    (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow> (\\<forall>v. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>'))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>'))", "from R3"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"closed_glob_helper \\<Gamma>' \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "proof (induct rule: \\<R>\\<^sub>3_aux.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "case (intro\\<^sub>1 \\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c \\<Gamma>')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "using \\<R>\\<^sub>1_closed_glob_consistent [of \\<Gamma>] and \\<R>\\<^sub>3_aux.intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  closed_glob_consistent (\\<R>\\<^sub>1 \\<Gamma>)\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "unfolding closed_glob_consistent_def"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v\\<^sub>2)\\<rangle>)) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v)\\<rangle>)))\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "by (simp, blast)"], ["proof (state)\nthis:\n  closed_glob_helper \\<Gamma>'\n   \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n   \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "case (intro\\<^sub>2 \\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c \\<Gamma>')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "using \\<R>\\<^sub>2_closed_glob_consistent [of \\<Gamma>] and \\<R>\\<^sub>3_aux.intro\\<^sub>2"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  closed_glob_consistent (\\<R>\\<^sub>2 \\<Gamma>)\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "unfolding closed_glob_consistent_def"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v\\<^sub>2)\\<rangle>)) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v)\\<rangle>)))\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "by (simp, blast)"], ["proof (state)\nthis:\n  closed_glob_helper \\<Gamma>'\n   \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n   \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "case intro\\<^sub>3"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1_, mds_, mem\\<^sub>1_\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>_\\<^esub> \\<langle>c\\<^sub>2_, mds_, mem\\<^sub>2_\\<rangle>\n  closed_glob_helper \\<Gamma>_\n   \\<langle>c\\<^sub>1_, mds_, mem\\<^sub>1_\\<rangle>\n   \\<langle>c\\<^sub>2_, mds_, mem\\<^sub>2_\\<rangle>\n  \\<turnstile> \\<Gamma>_ {c_} \\<Gamma>'_\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        closed_glob_helper \\<Gamma>\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> closed_glob_helper \\<Gamma>'\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1_, mds_, mem\\<^sub>1_\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>_\\<^esub> \\<langle>c\\<^sub>2_, mds_, mem\\<^sub>2_\\<rangle>\n  closed_glob_helper \\<Gamma>_\n   \\<langle>c\\<^sub>1_, mds_, mem\\<^sub>1_\\<rangle>\n   \\<langle>c\\<^sub>2_, mds_, mem\\<^sub>2_\\<rangle>\n  \\<turnstile> \\<Gamma>_ {c_} \\<Gamma>'_\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'_\n     \\<langle>c\\<^sub>1_ ;; c_, mds_, mem\\<^sub>1_\\<rangle>\n     \\<langle>c\\<^sub>2_ ;; c_, mds_, mem\\<^sub>2_\\<rangle>", "using \\<R>\\<^sub>3_aux.intro\\<^sub>3"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1_, mds_, mem\\<^sub>1_\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>_\\<^esub> \\<langle>c\\<^sub>2_, mds_, mem\\<^sub>2_\\<rangle>\n  closed_glob_helper \\<Gamma>_\n   \\<langle>c\\<^sub>1_, mds_, mem\\<^sub>1_\\<rangle>\n   \\<langle>c\\<^sub>2_, mds_, mem\\<^sub>2_\\<rangle>\n  \\<turnstile> \\<Gamma>_ {c_} \\<Gamma>'_\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. closed_glob_helper \\<Gamma>'_\n     \\<langle>c\\<^sub>1_ ;; c_, mds_, mem\\<^sub>1_\\<rangle>\n     \\<langle>c\\<^sub>2_ ;; c_, mds_, mem\\<^sub>2_\\<rangle>", "by (simp, blast)"], ["proof (state)\nthis:\n  closed_glob_helper \\<Gamma>'_\n   \\<langle>c\\<^sub>1_ ;; c_, mds_, mem\\<^sub>1_\\<rangle>\n   \\<langle>c\\<^sub>2_ ;; c_, mds_, mem\\<^sub>2_\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  closed_glob_helper \\<Gamma>' \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>'))", "thus ?thesis"], ["proof (prove)\nusing this:\n  closed_glob_helper \\<Gamma>' \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v.\n            (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>,\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>)\n            \\<in> \\<R>\\<^sub>3 \\<Gamma>'))", "by simp"], ["proof (state)\nthis:\n  \\<forall>x.\n     (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v\\<^sub>1 v\\<^sub>2.\n          (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>,\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>)\n          \\<in> \\<R>\\<^sub>3 \\<Gamma>')) \\<and>\n     (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v.\n          (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>,\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>)\n          \\<in> \\<R>\\<^sub>3 \\<Gamma>'))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<R>_closed_glob_consistent: \"closed_glob_consistent (\\<R> \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed_glob_consistent (\\<R> \\<Gamma>')", "unfolding closed_glob_consistent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n       (\\<forall>x.\n           (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n            (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                (x := v\\<^sub>2)\\<rangle>)) \\<and>\n           (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n            (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                (x := v)\\<rangle>)))", "proof (clarify, erule \\<R>_elim, simp_all)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 3. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 3. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "assume R1: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 3. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "with \\<R>\\<^sub>1_closed_glob_consistent"], ["proof (chain)\npicking this:\n  closed_glob_consistent (\\<R>\\<^sub>1 ?\\<Gamma>')\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "show\n    \"(dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>) \\<in> \\<R> \\<Gamma>')) \\<and>\n     (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>) \\<in> \\<R> \\<Gamma>'))\""], ["proof (prove)\nusing this:\n  closed_glob_consistent (\\<R>\\<^sub>1 ?\\<Gamma>')\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "unfolding closed_glob_consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v\\<^sub>2)\\<rangle>)) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v)\\<rangle>)))\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "using intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v\\<^sub>2)\\<rangle>)) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v)\\<rangle>)))\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<Gamma>'.\n                \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n                   \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n                   (\\<forall>x.\n                       (dma x = High \\<and>\n                        x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                        (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n                       (dma x = Low \\<and>\n                        x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                            (x := v)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                            (x := v)\\<rangle>)));\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> (dma x = High \\<and>\n                       x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                       (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                           (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                           (x := v\\<^sub>2)\\<rangle>)) \\<and>\n                      (dma x = Low \\<and>\n                       x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                       (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                           (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                           (x := v)\\<rangle>))", "by metis"], ["proof (state)\nthis:\n  (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v\\<^sub>2)\\<rangle>)) \\<and>\n  (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v)\\<rangle>))\n\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "assume R2: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "with \\<R>\\<^sub>2_closed_glob_consistent"], ["proof (chain)\npicking this:\n  closed_glob_consistent (\\<R>\\<^sub>2 ?\\<Gamma>')\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "show\n    \"(dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v\\<^sub>1 v\\<^sub>2. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>) \\<in> \\<R> \\<Gamma>'))\n     \\<and>\n     (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>) \\<in> \\<R> \\<Gamma>'))\""], ["proof (prove)\nusing this:\n  closed_glob_consistent (\\<R>\\<^sub>2 ?\\<Gamma>')\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "unfolding closed_glob_consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v\\<^sub>2)\\<rangle>)) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v)\\<rangle>)))\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "using intro\\<^sub>2"], ["proof (prove)\nusing this:\n  \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n     (\\<forall>x.\n         (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v\\<^sub>1 v\\<^sub>2.\n              \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v\\<^sub>2)\\<rangle>)) \\<and>\n         (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n          (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n              (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n              (x := v)\\<rangle>)))\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<Gamma>'.\n                \\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n                   \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n                   (\\<forall>x.\n                       (dma x = High \\<and>\n                        x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                        (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n                       (dma x = Low \\<and>\n                        x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                            (x := v)\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                            (x := v)\\<rangle>)));\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> (dma x = High \\<and>\n                       x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                       (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                           (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                           (x := v\\<^sub>2)\\<rangle>)) \\<and>\n                      (dma x = Low \\<and>\n                       x \\<notin> mds AsmNoWrite \\<longrightarrow>\n                       (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                           (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                           (x := v)\\<rangle>))", "by metis"], ["proof (state)\nthis:\n  (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v\\<^sub>2)\\<rangle>)) \\<and>\n  (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v)\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x \\<Gamma>'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "assume R3: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 x.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v\\<^sub>2)\\<rangle>)) \\<and>\n       (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n        (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n            (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n            (x := v)\\<rangle>))", "thus\n    \"(dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n       (\\<forall>v\\<^sub>1 v\\<^sub>2. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>) \\<in> \\<R> \\<Gamma>'))\n     \\<and>\n     (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n       (\\<forall>v. (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1(x := v)\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2(x := v)\\<rangle>) \\<in> \\<R> \\<Gamma>'))\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "using \\<R>\\<^sub>3_closed_glob_consistent"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<forall>x.\n     (dma x = High \\<and> x \\<notin> ?mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v\\<^sub>1 v\\<^sub>2.\n          (\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1(x := v\\<^sub>1)\\<rangle>,\n           \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2(x := v\\<^sub>2)\\<rangle>)\n          \\<in> \\<R>\\<^sub>3 ?\\<Gamma>')) \\<and>\n     (dma x = Low \\<and> x \\<notin> ?mds AsmNoWrite \\<longrightarrow>\n      (\\<forall>v.\n          (\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1(x := v)\\<rangle>,\n           \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2(x := v)\\<rangle>)\n          \\<in> \\<R>\\<^sub>3 ?\\<Gamma>'))\n\ngoal (1 subgoal):\n 1. (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v\\<^sub>2)\\<rangle>)) \\<and>\n    (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n     (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n         (x := v)\\<rangle>))", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>v\\<^sub>1 v\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>\\<Gamma>' c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n           \\<forall>x.\n              (dma x = High \\<and>\n               x \\<notin> mds AsmNoWrite \\<longrightarrow>\n               (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                   \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                   (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                   (x := v\\<^sub>2)\\<rangle>)) \\<and>\n              (dma x = Low \\<and>\n               x \\<notin> mds AsmNoWrite \\<longrightarrow>\n               (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                   (x := v)\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                   (x := v)\\<rangle>));\n        dma x = High; x \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                         (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                         (x := v\\<^sub>2)\\<rangle>\n 2. \\<And>v.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>\\<Gamma>' c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n           \\<forall>x.\n              (dma x = High \\<and>\n               x \\<notin> mds AsmNoWrite \\<longrightarrow>\n               (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                   \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                   (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                   (x := v\\<^sub>2)\\<rangle>)) \\<and>\n              (dma x = Low \\<and>\n               x \\<notin> mds AsmNoWrite \\<longrightarrow>\n               (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                   (x := v)\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                   (x := v)\\<rangle>));\n        dma x = Low; x \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                         (x := v)\\<rangle>", "apply (metis \\<R>.intro\\<^sub>3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>\\<Gamma>' c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n           \\<forall>x.\n              (dma x = High \\<and>\n               x \\<notin> mds AsmNoWrite \\<longrightarrow>\n               (\\<forall>v\\<^sub>1 v\\<^sub>2.\n                   \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                   (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                   (x := v\\<^sub>2)\\<rangle>)) \\<and>\n              (dma x = Low \\<and>\n               x \\<notin> mds AsmNoWrite \\<longrightarrow>\n               (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                   (x := v)\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                   (x := v)\\<rangle>));\n        dma x = Low; x \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n                         (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n                         (x := v)\\<rangle>", "by (metis (lifting) \\<R>.intro\\<^sub>3)"], ["proof (state)\nthis:\n  (dma x = High \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v\\<^sub>1 v\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v\\<^sub>1)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v\\<^sub>2)\\<rangle>)) \\<and>\n  (dma x = Low \\<and> x \\<notin> mds AsmNoWrite \\<longrightarrow>\n   (\\<forall>v. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\n       (x := v)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\n       (x := v)\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "(* It now remains to show that steps of the first of two related configurations\n    can be matched by the second: *)\n\n(* Some technical lemmas: *)"], ["", "lemma type_low_vars_low:\n  assumes typed: \"\\<Gamma> \\<turnstile>\\<^sub>a e \\<in> Low\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes x_in_vars: \"x \\<in> aexp_vars e\"\n  shows \"to_total \\<Gamma> x = Low\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> Low\n  mds_consistent mds \\<Gamma>\n  x \\<in> aexp_vars e\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low", "by (metis (full_types) Sec.exhaust imageI max_dom_def type_aexpr_elim)"], ["", "lemma type_low_vars_low_b:\n  assumes typed : \"\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes x_in_vars: \"x \\<in> bexp_vars e\"\n  shows \"to_total \\<Gamma> x = Low\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low", "using assms"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  mds_consistent mds \\<Gamma>\n  x \\<in> bexp_vars e\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low", "by (metis (full_types) Sec.exhaust imageI max_dom_def type_bexpr.simps)"], ["", "lemma mode_update_add_anno:\n  \"mds_consistent mds \\<Gamma> \\<Longrightarrow> mds_consistent (update_modes upd mds) (\\<Gamma> \\<oplus> upd)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mds_consistent mds \\<Gamma> \\<Longrightarrow>\n    mds_consistent (update_modes upd mds) (\\<Gamma> \\<oplus> upd)", "apply (induct arbitrary: \\<Gamma> rule: add_anno_dom.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v +=\\<^sub>m AsmNoRead) mds)\n        (\\<Gamma>' \\<oplus> v +=\\<^sub>m AsmNoRead)\n 2. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v +=\\<^sub>m AsmNoWrite) mds)\n        (\\<Gamma>' \\<oplus> v +=\\<^sub>m AsmNoWrite)\n 3. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v +=\\<^sub>m GuarNoRead) mds)\n        (\\<Gamma>' \\<oplus> v +=\\<^sub>m GuarNoRead)\n 4. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v +=\\<^sub>m GuarNoWrite) mds)\n        (\\<Gamma>' \\<oplus> v +=\\<^sub>m GuarNoWrite)\n 5. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v -=\\<^sub>m AsmNoRead) mds)\n        (\\<Gamma>' \\<oplus> v -=\\<^sub>m AsmNoRead)\n 6. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v -=\\<^sub>m AsmNoWrite) mds)\n        (\\<Gamma>' \\<oplus> v -=\\<^sub>m AsmNoWrite)\n 7. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v -=\\<^sub>m GuarNoRead) mds)\n        (\\<Gamma>' \\<oplus> v -=\\<^sub>m GuarNoRead)\n 8. \\<And>\\<Gamma> v \\<Gamma>'.\n       mds_consistent mds \\<Gamma>' \\<Longrightarrow>\n       mds_consistent (update_modes (v -=\\<^sub>m GuarNoWrite) mds)\n        (\\<Gamma>' \\<oplus> v -=\\<^sub>m GuarNoWrite)", "by (auto simp: add_anno_def mds_consistent_def)"], ["", "lemma context_le_trans: \"\\<lbrakk> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>' ; \\<Gamma>' \\<sqsubseteq>\\<^sub>c \\<Gamma>'' \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n     \\<Gamma>' \\<sqsubseteq>\\<^sub>c \\<Gamma>''\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''", "apply (auto simp: context_le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<Gamma>'' x = Some y; dom \\<Gamma> = dom \\<Gamma>'';\n        \\<forall>x\\<in>dom \\<Gamma>''.\n           the (\\<Gamma> x) \\<sqsubseteq> the (\\<Gamma>' x);\n        dom \\<Gamma>' = dom \\<Gamma>'';\n        \\<forall>x\\<in>dom \\<Gamma>''.\n           the (\\<Gamma>' x) \\<sqsubseteq> the (\\<Gamma>'' x)\\<rbrakk>\n       \\<Longrightarrow> the (\\<Gamma> x) \\<sqsubseteq> y", "by (metis domI order_trans option.sel)"], ["", "lemma context_le_refl [simp]: \"\\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>", "by (metis context_le_def order_refl)"], ["", "(* Strangely, using only \\<turnstile> \\<Gamma> { Stop } \\<Gamma>' as assumption does not work *)"], ["", "lemma stop_cxt :\n  \"\\<lbrakk> \\<turnstile> \\<Gamma> { c } \\<Gamma>' ; c = Stop \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c} \\<Gamma>'; c = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>'", "apply (induct rule: has_type.induct)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma>.\n       Stop = Stop \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\n 2. \\<And>\\<Gamma>.\n       Skip = Stop \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\n 3. \\<And>x \\<Gamma> e t.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        x \\<leftarrow> e = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\n 4. \\<And>x \\<Gamma> e t.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        x \\<leftarrow> e = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>(x \\<mapsto>\n                         t)\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        c\\<^sub>1 = Stop \\<Longrightarrow>\n        \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        c\\<^sub>2 = Stop \\<Longrightarrow>\n        \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n        Stmt.If e c\\<^sub>1 c\\<^sub>2 = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n 6. \\<And>\\<Gamma> e c.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        c = Stop \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>;\n        While e c = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>''.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        c = Stop \\<Longrightarrow>\n        \\<Gamma>' \\<sqsubseteq>\\<^sub>c \\<Gamma>'';\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        c@[upd] = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>''.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        c\\<^sub>1 = Stop \\<Longrightarrow>\n        \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        c\\<^sub>2 = Stop \\<Longrightarrow>\n        \\<Gamma>' \\<sqsubseteq>\\<^sub>c \\<Gamma>'';\n        c\\<^sub>1 ;; c\\<^sub>2 = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        c = Stop \\<Longrightarrow>\n        \\<Gamma>\\<^sub>1 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1';\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        c = Stop\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c\n                         \\<Gamma>\\<^sub>2'", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {Stop} \\<Gamma>\\<^sub>1';\n        \\<Gamma>\\<^sub>1 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1';\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c\n                         \\<Gamma>\\<^sub>2'", "by (metis context_le_trans)"], ["", "(* First we show that (roughly) typeability is preserved by evaluation steps *)"], ["", "lemma preservation:\n  assumes typed: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  assumes eval: \"\\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\"\n  shows \"\\<exists> \\<Gamma>''. (\\<turnstile> \\<Gamma>'' { c' } \\<Gamma>') \\<and> (mds_consistent mds \\<Gamma> \\<longrightarrow> mds_consistent mds' \\<Gamma>'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>''.\n       \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>'')", "using typed eval"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>''.\n       \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>'')", "proof (induct arbitrary: c' mds rule: has_type.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        \\<langle>c@[upd], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (anno_type \\<Gamma>'' \\<Gamma> upd c\\<^sub>1 \\<Gamma>')"], ["proof (state)\nthis:\n  \\<Gamma>'' = \\<Gamma> \\<oplus> upd\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>1} \\<Gamma>'\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>'' \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  c\\<^sub>1 \\<noteq> Stop\n  \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>'' x\n  \\<langle>c\\<^sub>1@[upd], mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        \\<langle>c@[upd], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "hence \"\\<langle>c\\<^sub>1, update_modes upd mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<Gamma>'' = \\<Gamma> \\<oplus> upd\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>1} \\<Gamma>'\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>'' \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  c\\<^sub>1 \\<noteq> Stop\n  \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>'' x\n  \\<langle>c\\<^sub>1@[upd], mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, update_modes upd mds, mem\\<rangle> \\<leadsto>\n    \\<langle>c', mds', mem'\\<rangle>", "by (metis upd_elim)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, update_modes upd mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        \\<langle>c@[upd], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "with anno_type(3)"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>'' \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<langle>c\\<^sub>1, update_modes upd mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>", "obtain \\<Gamma>''' where\n    \"\\<turnstile> \\<Gamma>''' { c' } \\<Gamma>' \\<and> (mds_consistent (update_modes upd mds) \\<Gamma>'' \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>'' \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<langle>c\\<^sub>1, update_modes upd mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'''.\n        \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>' \\<and>\n        (mds_consistent (update_modes upd mds) \\<Gamma>'' \\<longrightarrow>\n         mds_consistent mds' \\<Gamma>''') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>' \\<and>\n  (mds_consistent (update_modes upd mds) \\<Gamma>'' \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        \\<langle>c@[upd], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>' \\<and>\n  (mds_consistent (update_modes upd mds) \\<Gamma>'' \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        \\<langle>c@[upd], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "have \"mds_consistent mds \\<Gamma> \\<longrightarrow> mds_consistent (update_modes upd mds) \\<Gamma>''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mds_consistent mds \\<Gamma> \\<longrightarrow>\n    mds_consistent (update_modes upd mds) \\<Gamma>''", "using anno_type"], ["proof (prove)\nusing this:\n  \\<Gamma>'' = \\<Gamma> \\<oplus> upd\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>1} \\<Gamma>'\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>'' \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  c\\<^sub>1 \\<noteq> Stop\n  \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>'' x\n  \\<langle>c\\<^sub>1@[upd], mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. mds_consistent mds \\<Gamma> \\<longrightarrow>\n    mds_consistent (update_modes upd mds) \\<Gamma>''", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma>'' = \\<Gamma> \\<oplus> upd;\n     \\<turnstile> (\\<Gamma> \\<oplus> upd) {c\\<^sub>1} \\<Gamma>';\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n           (mds_consistent mds (\\<Gamma> \\<oplus> upd) \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     c\\<^sub>1 \\<noteq> Stop;\n     \\<forall>x.\n        to_total \\<Gamma> x \\<sqsubseteq>\n        to_total (\\<Gamma> \\<oplus> upd) x;\n     \\<langle>c\\<^sub>1@[upd], mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     mds_consistent mds \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> mds_consistent (update_modes upd mds)\n                       (\\<Gamma> \\<oplus> upd)", "by (metis mode_update_add_anno)"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma> \\<longrightarrow>\n  mds_consistent (update_modes upd mds) \\<Gamma>''\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        \\<langle>c@[upd], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>' \\<and>\n  (mds_consistent (update_modes upd mds) \\<Gamma>'' \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n  mds_consistent mds \\<Gamma> \\<longrightarrow>\n  mds_consistent (update_modes upd mds) \\<Gamma>''", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>' \\<and>\n  (mds_consistent (update_modes upd mds) \\<Gamma>'' \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n  mds_consistent mds \\<Gamma> \\<longrightarrow>\n  mds_consistent (update_modes upd mds) \\<Gamma>''\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>''.\n       \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>'')", "by blast"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case stop_type"], ["proof (state)\nthis:\n  \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 7. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "with stop_no_eval"], ["proof (chain)\npicking this:\n  (\\<langle>Stop, ?mds, ?mem\\<rangle>, \\<langle>?c', ?mds', ?mem'\\<rangle>)\n  \\<notin> eval\\<^sub>w\n  \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  (\\<langle>Stop, ?mds, ?mem\\<rangle>, \\<langle>?c', ?mds', ?mem'\\<rangle>)\n  \\<notin> eval\\<^sub>w\n  \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>_ \\<and>\n       (mds_consistent mds \\<Gamma>_ \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", ".."], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>_ \\<and>\n     (mds_consistent mds \\<Gamma>_ \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case skip_type"], ["proof (state)\nthis:\n  \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "hence \"c' = Stop \\<and> mds' = mds\""], ["proof (prove)\nusing this:\n  \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. c' = Stop \\<and> mds' = mds", "by (metis skip_elim)"], ["proof (state)\nthis:\n  c' = Stop \\<and> mds' = mds\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> c' mds.\n       \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n       \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n       \\<exists>\\<Gamma>''.\n          \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n          (mds_consistent mds \\<Gamma> \\<longrightarrow>\n           mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 6. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  c' = Stop \\<and> mds' = mds\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>_ \\<and>\n       (mds_consistent mds \\<Gamma>_ \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "by (metis stop_type)"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>_ \\<and>\n     (mds_consistent mds \\<Gamma>_ \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (assign\\<^sub>1 x \\<Gamma> e t c' mds)"], ["proof (state)\nthis:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "hence \"c' = Stop \\<and> mds' = mds\""], ["proof (prove)\nusing this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. c' = Stop \\<and> mds' = mds", "by (metis assign_elim)"], ["proof (state)\nthis:\n  c' = Stop \\<and> mds' = mds\n\ngoal (6 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 5. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  c' = Stop \\<and> mds' = mds\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma> \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "by (metis stop_type)"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma> \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (assign\\<^sub>2 x \\<Gamma> e t c' mds)"], ["proof (state)\nthis:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "hence \"c' = Stop \\<and> mds' = mds\""], ["proof (prove)\nusing this:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. c' = Stop \\<and> mds' = mds", "by (metis assign_elim)"], ["proof (state)\nthis:\n  c' = Stop \\<and> mds' = mds\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t c' mds.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>(x \n                            \\<mapsto> t) \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 4. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  c' = Stop \\<and> mds' = mds\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>(x \\<mapsto> t) \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "apply (rule_tac x = \"\\<Gamma> (x \\<mapsto> t)\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c' = Stop \\<and> mds' = mds \\<Longrightarrow>\n    \\<turnstile> \\<Gamma>(x \\<mapsto> t) {c'} \\<Gamma>(x \\<mapsto> t) \\<and>\n    (mds_consistent mds \\<Gamma> \\<longrightarrow>\n     mds_consistent mds' (\\<Gamma>(x \\<mapsto> t)))", "apply (auto simp: mds_consistent_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        dma xa \\<noteq> High\\<rbrakk>\n       \\<Longrightarrow> dma xa = Low\n 2. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        dma xa \\<noteq> High\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> mds AsmNoRead\n 3. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> dma xa = Low\n 4. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> mds AsmNoRead\n 5. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = Low; xa \\<in> mds AsmNoRead; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y\n 6. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = High; xa \\<in> mds AsmNoWrite; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y", "apply (metis Sec.exhaust)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        dma xa \\<noteq> High\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> mds AsmNoRead\n 2. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> dma xa = Low\n 3. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> mds AsmNoRead\n 4. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = Low; xa \\<in> mds AsmNoRead; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y\n 5. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = High; xa \\<in> mds AsmNoWrite; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y", "apply (metis (lifting, full_types) CollectD domI assign\\<^sub>2(1))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> dma xa = Low\n 2. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> mds AsmNoRead\n 3. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = Low; xa \\<in> mds AsmNoRead; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y\n 4. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = High; xa \\<in> mds AsmNoWrite; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y", "apply (metis (lifting, full_types) CollectD domI assign\\<^sub>2(1))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa y.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        (if xa = x then Some t else \\<Gamma> xa) = Some y;\n        xa \\<notin> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> mds AsmNoRead\n 2. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = Low; xa \\<in> mds AsmNoRead; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y\n 3. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = High; xa \\<in> mds AsmNoWrite; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y", "apply (metis (lifting) CollectE domI assign\\<^sub>2(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = Low; xa \\<in> mds AsmNoRead; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y\n 2. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = High; xa \\<in> mds AsmNoWrite; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y", "apply (metis (lifting, full_types) domD mem_Collect_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>c' = Stop; mds' = mds;\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dma xa = High; xa \\<in> mds AsmNoWrite; xa \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma> xa = Some y", "by (metis (lifting, full_types) domD mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>(x \\<mapsto> t) \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (if_type \\<Gamma> e th el \\<Gamma>' c' mds)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<langle>th, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''''.\n     \\<turnstile> \\<Gamma>'''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'''')\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<langle>el, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''''.\n     \\<turnstile> \\<Gamma>'''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'''')\n  \\<langle>Stmt.If e th el, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>Stmt.If e c\\<^sub>1 c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 3. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<langle>th, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''''.\n     \\<turnstile> \\<Gamma>'''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'''')\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<langle>el, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''''.\n     \\<turnstile> \\<Gamma>'''' {?c'5} \\<Gamma>' \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'''')\n  \\<langle>Stmt.If e th el, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>''''.\n       \\<turnstile> \\<Gamma>'''' {c'} \\<Gamma>' \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>'''')", "apply (rule_tac x = \\<Gamma> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c'.\n        \\<langle>th, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''''.\n           \\<turnstile> \\<Gamma>'''' {c'} \\<Gamma>' \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'''');\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c'.\n        \\<langle>el, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''''.\n           \\<turnstile> \\<Gamma>'''' {c'} \\<Gamma>' \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'''');\n     \\<langle>Stmt.If e th el, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<Gamma> {c'} \\<Gamma>' \\<and>\n                      (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                       mds_consistent mds' \\<Gamma>)", "by force"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>''''.\n     \\<turnstile> \\<Gamma>'''' {c'} \\<Gamma>' \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'''')\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (while_type \\<Gamma> e c c' mds)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\n  \\<langle>c, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma> \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "hence [simp]: \"mds' = mds \\<and> c' = If e (c ;; While e c) Stop\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\n  \\<langle>c, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma> \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. mds' = mds \\<and> c' = Stmt.If e (c ;; While e c) Stop", "by (metis while_elim)"], ["proof (state)\nthis:\n  mds' = mds \\<and> c' = Stmt.If e (c ;; While e c) Stop\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c c' mds.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<langle>While e c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma> \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')\n 2. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  mds' = mds \\<and> c' = Stmt.If e (c ;; While e c) Stop\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma> \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "apply (rule_tac x = \\<Gamma> in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mds' = mds \\<and> c' = Stmt.If e (c ;; While e c) Stop \\<Longrightarrow>\n    \\<turnstile> \\<Gamma> {c'} \\<Gamma> \\<and>\n    (mds_consistent mds \\<Gamma> \\<longrightarrow>\n     mds_consistent mds' \\<Gamma>)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {Stmt.If e (c ;; While e c) Stop} \\<Gamma>", "by (metis Sec.simps(2) has_type.while_type if_type while_type(1) while_type(2) seq_type stop_type type_bexpr_elim)"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma> \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (seq_type \\<Gamma> c\\<^sub>1 \\<Gamma>\\<^sub>1 c\\<^sub>2 \\<Gamma>\\<^sub>2 c' mds)"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>2, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>' \\<and>\n              (mds_consistent mds \\<Gamma> \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>c' mds.\n           \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>'''.\n              \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n              (mds_consistent mds \\<Gamma>' \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>''');\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                            \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>'' \\<and>\n                            (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>''')\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>2, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "proof (cases \"c\\<^sub>1 = Stop\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')\n 2. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "assume [simp]: \"c\\<^sub>1 = Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Stop\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')\n 2. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "with seq_type"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>2, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n  c\\<^sub>1 = Stop", "have [simp]: \"mds' = mds \\<and> c' = c\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>2, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n  c\\<^sub>1 = Stop\n\ngoal (1 subgoal):\n 1. mds' = mds \\<and> c' = c\\<^sub>2", "by (metis seq_stop_elim)"], ["proof (state)\nthis:\n  mds' = mds \\<and> c' = c\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')\n 2. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "thus ?case"], ["proof (prove)\nusing this:\n  mds' = mds \\<and> c' = c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c\\<^sub>2} \\<Gamma>\\<^sub>2 \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds \\<Gamma>''')", "by (metis (lifting) \\<open>c\\<^sub>1 = Stop\\<close> context_le_refl seq_type(1) seq_type(3) stop_cxt sub)"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "assume \"c\\<^sub>1 \\<noteq> Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "then"], ["proof (chain)\npicking this:\n  c\\<^sub>1 \\<noteq> Stop", "obtain c\\<^sub>1' where \"\\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and> c' = (c\\<^sub>1' ;; c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and>\n        c' = c\\<^sub>1' ;; c\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis seq_elim seq_type.prems)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and>\n  c' = c\\<^sub>1' ;; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "then"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and>\n  c' = c\\<^sub>1' ;; c\\<^sub>2", "obtain \\<Gamma>''' where \"\\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n      (mds_consistent mds \\<Gamma> \\<longrightarrow> mds_consistent mds' \\<Gamma>''')\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and>\n  c' = c\\<^sub>1' ;; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'''.\n        \\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n        (mds_consistent mds \\<Gamma> \\<longrightarrow>\n         mds_consistent mds' \\<Gamma>''') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using seq_type(2)"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and>\n  c' = c\\<^sub>1' ;; c\\<^sub>2\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>'''.\n        \\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n        (mds_consistent mds \\<Gamma> \\<longrightarrow>\n         mds_consistent mds' \\<Gamma>''') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n  (mds_consistent mds \\<Gamma> \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n  (mds_consistent mds \\<Gamma> \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "from seq_type"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>2, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>", "have \"\\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>2 } \\<Gamma>\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1\n  \\<langle>c\\<^sub>1, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {?c'5} \\<Gamma>\\<^sub>1 \\<and>\n     (mds_consistent ?mds5 \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>2, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>'''.\n           \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>1 \\<and>\n           (mds_consistent mds \\<Gamma> \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<And>mds c'.\n        \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n        \\<exists>\\<Gamma>''.\n           \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2 \\<and>\n           (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n            mds_consistent mds' \\<Gamma>'');\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n     \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<Gamma>'''.\n                         \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                         (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                          mds_consistent mds' \\<Gamma>''')", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n  (mds_consistent mds \\<Gamma> \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n  (mds_consistent mds \\<Gamma> \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>''')\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>'''.\n       \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n       (mds_consistent mds \\<Gamma> \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>''')", "apply (rule_tac x = \\<Gamma>''' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma>''' {c\\<^sub>1'} \\<Gamma>\\<^sub>1 \\<and>\n             (mds_consistent mds \\<Gamma> \\<longrightarrow>\n              mds_consistent mds' \\<Gamma>''');\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2;\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n                      (mds_consistent mds \\<Gamma> \\<longrightarrow>\n                       mds_consistent mds' \\<Gamma>''')", "by (metis (lifting) \\<open>\\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem'\\<rangle> \\<and> c' = c\\<^sub>1' ;; c\\<^sub>2\\<close> has_type.seq_type)"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>'''.\n     \\<turnstile> \\<Gamma>''' {c'} \\<Gamma>\\<^sub>2 \\<and>\n     (mds_consistent mds \\<Gamma> \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>''')\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "case (sub \\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2 \\<Gamma>\\<^sub>2' c' mds)"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>1' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2'\n  \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "then"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>1' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2'\n  \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>", "obtain \\<Gamma>'' where \"\\<turnstile> \\<Gamma>'' { c' } \\<Gamma>\\<^sub>1' \\<and>\n    (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow> mds_consistent mds' \\<Gamma>'')\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c, ?mds5, mem\\<rangle> \\<leadsto>\n  \\<langle>?c'5, mds', mem'\\<rangle> \\<Longrightarrow>\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {?c'5} \\<Gamma>\\<^sub>1' \\<and>\n     (mds_consistent ?mds5 \\<Gamma>\\<^sub>1 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n  \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2'\n  \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>''.\n        \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n        (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n         mds_consistent mds' \\<Gamma>'') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n  (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>'')\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' c' mds.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>c' mds.\n           \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle> \\<Longrightarrow>\n           \\<exists>\\<Gamma>''.\n              \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n              (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n               mds_consistent mds' \\<Gamma>'');\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                            \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n                            (mds_consistent mds\n                              \\<Gamma>\\<^sub>2 \\<longrightarrow>\n                             mds_consistent mds' \\<Gamma>'')", "thus ?case"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n  (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n   mds_consistent mds' \\<Gamma>'')\n\ngoal (1 subgoal):\n 1. \\<exists>\\<Gamma>''.\n       \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n       (mds_consistent mds \\<Gamma>\\<^sub>2 \\<longrightarrow>\n        mds_consistent mds' \\<Gamma>'')", "apply (rule_tac x = \\<Gamma>'' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n    (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n     mds_consistent mds' \\<Gamma>'') \\<Longrightarrow>\n    \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n    (mds_consistent mds \\<Gamma>\\<^sub>2 \\<longrightarrow>\n     mds_consistent mds' \\<Gamma>'')", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n    (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n     mds_consistent mds' \\<Gamma>'') \\<Longrightarrow>\n    \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2'\n 2. \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n    (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n     mds_consistent mds' \\<Gamma>'') \\<Longrightarrow>\n    mds_consistent mds \\<Gamma>\\<^sub>2 \\<longrightarrow>\n    mds_consistent mds' \\<Gamma>''", "apply (metis (lifting) has_type.sub sub(4) stop_cxt stop_type)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n    (mds_consistent mds \\<Gamma>\\<^sub>1 \\<longrightarrow>\n     mds_consistent mds' \\<Gamma>'') \\<Longrightarrow>\n    mds_consistent mds \\<Gamma>\\<^sub>2 \\<longrightarrow>\n    mds_consistent mds' \\<Gamma>''", "apply (simp add: mds_consistent_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>1' \\<and>\n    (dom \\<Gamma>\\<^sub>1 =\n     {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n         dma x = High \\<and> x \\<in> mds AsmNoWrite} \\<longrightarrow>\n     dom \\<Gamma>'' =\n     {x. dma x = Low \\<and> x \\<in> mds' AsmNoRead \\<or>\n         dma x = High \\<and> x \\<in> mds' AsmNoWrite}) \\<Longrightarrow>\n    dom \\<Gamma>\\<^sub>2 =\n    {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n        dma x = High \\<and> x \\<in> mds AsmNoWrite} \\<longrightarrow>\n    dom \\<Gamma>'' =\n    {x. dma x = Low \\<and> x \\<in> mds' AsmNoRead \\<or>\n        dma x = High \\<and> x \\<in> mds' AsmNoWrite}", "by (metis context_le_def sub.hyps(3))"], ["proof (state)\nthis:\n  \\<exists>\\<Gamma>''.\n     \\<turnstile> \\<Gamma>'' {c'} \\<Gamma>\\<^sub>2' \\<and>\n     (mds_consistent mds \\<Gamma>\\<^sub>2 \\<longrightarrow>\n      mds_consistent mds' \\<Gamma>'')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<R>\\<^sub>1_mem_eq: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "apply (rule \\<R>\\<^sub>1_elim)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        ?c\\<^sub>2 = ?c\\<^sub>1;\n        \\<turnstile> \\<Gamma> {?c\\<^sub>1} ?\\<Gamma>;\n        mds_consistent ?mds \\<Gamma>;\n        ?mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> ?mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "apply (auto simp: tyenv_eq_def mds_consistent_def to_total_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        \\<forall>x.\n           (if dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n               dma x = High \\<and> x \\<in> mds AsmNoWrite\n            then the (\\<Gamma> x) else dma x) =\n           Low \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x;\n        c\\<^sub>2 = c\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "by (metis (lifting) Sec.simps(1) low_mds_eq_def)"], ["", "lemma \\<R>\\<^sub>2_mem_eq: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "apply (rule \\<R>\\<^sub>2_elim)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<approx>\n        \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n        \\<forall>x\\<in>dom ?\\<Gamma>. ?\\<Gamma> x = Some High;\n        \\<turnstile> \\<Gamma>\\<^sub>1 {?c\\<^sub>1} ?\\<Gamma>;\n        \\<turnstile> \\<Gamma>\\<^sub>2 {?c\\<^sub>2} ?\\<Gamma>;\n        mds_consistent ?mds \\<Gamma>\\<^sub>1;\n        mds_consistent ?mds \\<Gamma>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "by (auto simp: mm_equiv_elim strong_low_bisim_mm_def)"], ["", "fun bisim_helper :: \"(('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow>\n  (('Var, 'AExp, 'BExp) Stmt, 'Var, 'Val) LocalConf \\<Rightarrow> bool\"\n  where\n  \"bisim_helper \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<langle>c\\<^sub>2, mds\\<^sub>2, mem\\<^sub>2\\<rangle> = mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["", "lemma \\<R>\\<^sub>3_mem_eq: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "apply (subgoal_tac \"bisim_helper \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     bisim_helper \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    bisim_helper \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    bisim_helper \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply (induct rule: \\<R>\\<^sub>3_aux.induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> bisim_helper\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> bisim_helper\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        bisim_helper \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> bisim_helper\n                          \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle>\n                          \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>", "by (auto simp: \\<R>\\<^sub>1_mem_eq \\<R>\\<^sub>2_mem_eq)"], ["", "(* \\<R>\\<^sub>2 is a full bisimulation so we can show the stronger step statement here: *)"], ["", "lemma \\<R>\\<^sub>2_bisim_step:\n  assumes case2: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\"\n  assumes eval: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\"\n  shows \"\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from case2"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have aux: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\" \"\\<forall> x \\<in> dom \\<Gamma>'. \\<Gamma>' x = Some High\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> &&&\n    \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "by (rule \\<R>\\<^sub>2_elim, auto)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with eval"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "obtain c\\<^sub>2' mem\\<^sub>2' where c\\<^sub>2'_props:\n    \"\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2' mem\\<^sub>2'.\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n        \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using mm_equiv_strong_low_bisim strong_low_bisim_mm_def"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n  strong_low_bisim_mm mm_equiv\n  strong_low_bisim_mm ?\\<R> \\<equiv>\n  sym ?\\<R> \\<and>\n  closed_glob_consistent ?\\<R> \\<and>\n  (\\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n      (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n      \\<in> ?\\<R> \\<longrightarrow>\n      mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2 \\<and>\n      (\\<forall>c\\<^sub>1' mds' mem\\<^sub>1'.\n          \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n          (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>,\n               \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\n              \\<in> ?\\<R>)))\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2' mem\\<^sub>2'.\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n        \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "(* with aux(1) obtain \\<R>' where \\<R>'_props: \"(\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>) \\<in> \\<R>'\" \"strong_low_bisim_mm \\<R>'\" *)\n    (* using mm_equiv_elim *)\n    (* by auto *)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from case2"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "obtain \\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2 where \"\\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>1 } \\<Gamma>'\" \"\\<turnstile> \\<Gamma>\\<^sub>2 { c\\<^sub>2 } \\<Gamma>'\"\n    \"mds_consistent mds \\<Gamma>\\<^sub>1\" \"mds_consistent mds \\<Gamma>\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n        \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>';\n         \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>';\n         mds_consistent mds \\<Gamma>\\<^sub>1;\n         mds_consistent mds \\<Gamma>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<R>\\<^sub>2_elim')"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with preservation and c\\<^sub>2'_props"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>';\n   \\<langle>?c, ?mds, ?mem\\<rangle> \\<leadsto>\n   \\<langle>?c', ?mds', ?mem'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                       \\<turnstile> \\<Gamma>'' {?c'} ?\\<Gamma>' \\<and>\n                       (mds_consistent ?mds ?\\<Gamma> \\<longrightarrow>\n                        mds_consistent ?mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2", "obtain \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2' where\n    \"\\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>'\" \"mds_consistent mds' \\<Gamma>\\<^sub>1'\"\n    \"\\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>'\" \"mds_consistent mds' \\<Gamma>\\<^sub>2'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>';\n   \\<langle>?c, ?mds, ?mem\\<rangle> \\<leadsto>\n   \\<langle>?c', ?mds', ?mem'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                       \\<turnstile> \\<Gamma>'' {?c'} ?\\<Gamma>' \\<and>\n                       (mds_consistent ?mds ?\\<Gamma> \\<longrightarrow>\n                        mds_consistent ?mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2'.\n        \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>';\n         mds_consistent mds' \\<Gamma>\\<^sub>1';\n         \\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>';\n         mds_consistent mds' \\<Gamma>\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using eval"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>';\n   \\<langle>?c, ?mds, ?mem\\<rangle> \\<leadsto>\n   \\<langle>?c', ?mds', ?mem'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<Gamma>''.\n                       \\<turnstile> \\<Gamma>'' {?c'} ?\\<Gamma>' \\<and>\n                       (mds_consistent ?mds ?\\<Gamma> \\<longrightarrow>\n                        mds_consistent ?mds' \\<Gamma>'')\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mds_consistent mds \\<Gamma>\\<^sub>2\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2'.\n        \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>';\n         mds_consistent mds' \\<Gamma>\\<^sub>1';\n         \\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>';\n         mds_consistent mds' \\<Gamma>\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>2'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with c\\<^sub>2'_props"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>2'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>2'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<R>\\<^sub>2.intro aux(2) c\\<^sub>2'_props"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1' {c\\<^sub>1'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Gamma>\\<^sub>2' {c\\<^sub>2'} \\<Gamma>'\n  mds_consistent mds' \\<Gamma>\\<^sub>2'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<approx>\n           \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<forall>x\\<in>dom ?\\<Gamma>'. ?\\<Gamma>' x = Some High;\n   \\<turnstile> ?\\<Gamma>\\<^sub>1 {?c\\<^sub>1} ?\\<Gamma>';\n   \\<turnstile> ?\\<Gamma>\\<^sub>2 {?c\\<^sub>2} ?\\<Gamma>';\n   mds_consistent ?mds ?\\<Gamma>\\<^sub>1;\n   mds_consistent ?mds ?\\<Gamma>\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* To achieve more \"symmetry\" later, we prove a property analogous to the ones\n    for \\<R>\\<^sub>1 and \\<R>\\<^sub>3 which are not, by themselves, bisimulations. *)"], ["", "lemma \\<R>\\<^sub>2_weak_bisim:\n  \"weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>')", "unfolding weak_bisim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n       (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)", "using \\<R>.intro\\<^sub>2"], ["proof (prove)\nusing this:\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n       (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<And>\\<Gamma> a b ba aa bb bc.\n                   \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n                   \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis \\<R>\\<^sub>2_bisim_step)"], ["", "(* Not actually needed, but an interesting \"asymmetry\" since\n    \\<R>\\<^sub>1 and \\<R>\\<^sub>3 aren't bisimulations. *)"], ["", "lemma \\<R>\\<^sub>2_bisim: \"strong_low_bisim_mm (\\<R>\\<^sub>2 \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_low_bisim_mm (\\<R>\\<^sub>2 \\<Gamma>')", "unfolding strong_low_bisim_mm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (\\<R>\\<^sub>2 \\<Gamma>') \\<and>\n    closed_glob_consistent (\\<R>\\<^sub>2 \\<Gamma>') \\<and>\n    (\\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n        mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2 \\<and>\n        (\\<forall>c\\<^sub>1' mds' mem\\<^sub>1'.\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n            (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)))", "by (auto simp: \\<R>\\<^sub>2_sym \\<R>\\<^sub>2_closed_glob_consistent \\<R>\\<^sub>2_mem_eq \\<R>\\<^sub>2_bisim_step)"], ["", "lemma annotated_no_stop: \"\\<lbrakk> \\<not> has_annotated_stop (c@[upd]) \\<rbrakk> \\<Longrightarrow> \\<not> has_annotated_stop c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> has_annotated_stop (c@[upd]) \\<Longrightarrow>\n    \\<not> has_annotated_stop c", "apply (cases c)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x11 x12.\n       \\<lbrakk>\\<not> has_annotated_stop (c@[upd]);\n        c = x11 \\<leftarrow> x12\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_annotated_stop c\n 2. \\<lbrakk>\\<not> has_annotated_stop (c@[upd]); c = Skip\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_annotated_stop c\n 3. \\<And>x31 x32.\n       \\<lbrakk>\\<not> has_annotated_stop (c@[upd]); c = x31@[x32]\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_annotated_stop c\n 4. \\<And>x41 x42.\n       \\<lbrakk>\\<not> has_annotated_stop (c@[upd]); c = x41 ;; x42\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_annotated_stop c\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>\\<not> has_annotated_stop (c@[upd]);\n        c = Stmt.If x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_annotated_stop c\n 6. \\<And>x61 x62.\n       \\<lbrakk>\\<not> has_annotated_stop (c@[upd]);\n        c = While x61 x62\\<rbrakk>\n       \\<Longrightarrow> \\<not> has_annotated_stop c\n 7. \\<lbrakk>\\<not> has_annotated_stop (c@[upd]); c = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<not> has_annotated_stop c", "by auto"], ["", "lemma typed_no_annotated_stop:\n  \"\\<lbrakk> \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow> \\<not> has_annotated_stop c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {c} \\<Gamma>' \\<Longrightarrow>\n    \\<not> has_annotated_stop c", "by (induct rule: has_type.induct, auto)"], ["", "lemma not_stop_eval:\n  \"\\<lbrakk> c \\<noteq> Stop ; \\<not> has_annotated_stop c \\<rbrakk> \\<Longrightarrow>\n  \\<forall> mds mem. \\<exists> c' mds' mem'. \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "proof (induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>x1 \\<leftarrow> x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 \\<leftarrow> x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 \\<leftarrow>\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>Skip \\<noteq> Stop; \\<not> has_annotated_stop Skip\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 6. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 7. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case (Assign x exp)"], ["proof (state)\nthis:\n  x \\<leftarrow> exp \\<noteq> Stop\n  \\<not> has_annotated_stop (x \\<leftarrow> exp)\n\ngoal (7 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>x1 \\<leftarrow> x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 \\<leftarrow> x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 \\<leftarrow>\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>Skip \\<noteq> Stop; \\<not> has_annotated_stop Skip\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 6. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 7. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<leftarrow> exp \\<noteq> Stop\n  \\<not> has_annotated_stop (x \\<leftarrow> exp)\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>x \\<leftarrow> exp, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.assign eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>x \\<leftarrow> exp, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Skip \\<noteq> Stop; \\<not> has_annotated_stop Skip\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 6. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>Skip \\<noteq> Stop; \\<not> has_annotated_stop Skip\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 6. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case Skip"], ["proof (state)\nthis:\n  Skip \\<noteq> Stop\n  \\<not> has_annotated_stop Skip\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Skip \\<noteq> Stop; \\<not> has_annotated_stop Skip\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 6. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  Skip \\<noteq> Stop\n  \\<not> has_annotated_stop Skip\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.skip)"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case (ModeDecl c mu)"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c@[mu] \\<noteq> Stop\n  \\<not> has_annotated_stop (c@[mu])\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "hence \"\\<not> has_annotated_stop c \\<and> c \\<noteq> Stop\""], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c@[mu] \\<noteq> Stop\n  \\<not> has_annotated_stop (c@[mu])\n\ngoal (1 subgoal):\n 1. \\<not> has_annotated_stop c \\<and> c \\<noteq> Stop", "by (metis has_annotated_stop.simps(1))"], ["proof (state)\nthis:\n  \\<not> has_annotated_stop c \\<and> c \\<noteq> Stop\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        x1@[x2] \\<noteq> Stop; \\<not> has_annotated_stop (x1@[x2])\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1@[x2], mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 5. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "with ModeDecl"], ["proof (chain)\npicking this:\n  \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c@[mu] \\<noteq> Stop\n  \\<not> has_annotated_stop (c@[mu])\n  \\<not> has_annotated_stop c \\<and> c \\<noteq> Stop", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c@[mu] \\<noteq> Stop\n  \\<not> has_annotated_stop (c@[mu])\n  \\<not> has_annotated_stop c \\<and> c \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "apply (clarify, rename_tac mds mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<lbrakk>c \\<noteq> Stop;\n                 \\<not> has_annotated_stop c\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>c, mds, mem\\<rangle> \\<leadsto> \\<langle>c', mds', mem'\\<rangle>;\n        c@[mu] \\<noteq> Stop; \\<not> has_annotated_stop (c@[mu]);\n        \\<not> has_annotated_stop c; c \\<noteq> Stop;\n        \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        c@[mu] \\<noteq> Stop; \\<not> has_annotated_stop (c@[mu]);\n        \\<not> has_annotated_stop c \\<and> c \\<noteq> Stop\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<forall>mds mem.\n                   \\<exists>c' mds' mem'.\n                      \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                      \\<langle>c', mds', mem'\\<rangle>;\n        \\<not> has_annotated_stop c \\<and> c \\<noteq> Stop\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "apply (erule_tac x = \"update_modes mu mds\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<not> has_annotated_stop c \\<and> c \\<noteq> Stop;\n        \\<forall>mem.\n           \\<exists>c' mds' mem'.\n              \\<langle>c, update_modes mu mds, mem\\<rangle> \\<leadsto>\n              \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "apply (erule_tac x = mem in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<not> has_annotated_stop c \\<and> c \\<noteq> Stop;\n        \\<exists>c' mds' mem'.\n           \\<langle>c, update_modes mu mds, mem\\<rangle> \\<leadsto>\n           \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "apply (erule exE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem c' mds' mem'.\n       \\<lbrakk>\\<not> has_annotated_stop c \\<and> c \\<noteq> Stop;\n        \\<langle>c, update_modes mu mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w.decl)"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>c@[mu], mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case (Seq c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop\n  \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2)\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x2 \\<noteq> Stop; \\<not> has_annotated_stop x2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        x1 ;; x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (x1 ;; x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>x1 ;;\n  x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 4. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop\n  \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "proof (cases \"c\\<^sub>1 = Stop\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "assume \"c\\<^sub>1 = Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Stop\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Stop\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.seq_stop eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "assume \"c\\<^sub>1 \\<noteq> Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n              \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n             \\<Longrightarrow> \\<forall>mds mem.\n                                  \\<exists>c' mds' mem'.\n                                     \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                     \\<langle>c', mds', mem'\\<rangle>;\n     \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n      \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n     \\<Longrightarrow> \\<forall>mds mem.\n                          \\<exists>c' mds' mem'.\n                             \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                             \\<langle>c', mds', mem'\\<rangle>;\n     c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop;\n     \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2);\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "with Seq"], ["proof (chain)\npicking this:\n  \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop\n  \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2)\n  c\\<^sub>1 \\<noteq> Stop", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  c\\<^sub>1 ;; c\\<^sub>2 \\<noteq> Stop\n  \\<not> has_annotated_stop (c\\<^sub>1 ;; c\\<^sub>2)\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "by (metis eval\\<^sub>w.seq has_annotated_stop.simps(2))"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case (If bexp c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop\n  \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2)\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>x3 \\<noteq> Stop; \\<not> has_annotated_stop x3\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>x3, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If x1 x2 x3 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If x1 x2 x3)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>Stmt.If x1 x2\n   x3, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 3. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n   \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop\n  \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>Stmt.If bexp c\\<^sub>1\n                    c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "apply (clarify, rename_tac mds mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop\n                (Stmt.If bexp c\\<^sub>1 c\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>Stmt.If bexp c\\<^sub>1\nc\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "apply (case_tac \"ev\\<^sub>B mem bexp\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        ev\\<^sub>B mem bexp\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>Stmt.If bexp c\\<^sub>1\nc\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>\n 2. \\<And>mds mem.\n       \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        \\<not> ev\\<^sub>B mem bexp\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>Stmt.If bexp c\\<^sub>1\nc\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "apply (metis cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.if_true)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mds mem.\n       \\<lbrakk>\\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n                 \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        \\<lbrakk>c\\<^sub>1 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        \\<lbrakk>c\\<^sub>2 \\<noteq> Stop;\n         \\<not> has_annotated_stop c\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> \\<forall>mds mem.\n                             \\<exists>c' mds' mem'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                                \\<langle>c', mds', mem'\\<rangle>;\n        Stmt.If bexp c\\<^sub>1 c\\<^sub>2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (Stmt.If bexp c\\<^sub>1 c\\<^sub>2);\n        \\<not> ev\\<^sub>B mem bexp\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c' mds' mem'.\n                            \\<langle>Stmt.If bexp c\\<^sub>1\nc\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.if_false)"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>Stmt.If bexp c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case (While bexp c)"], ["proof (state)\nthis:\n  \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  While bexp c \\<noteq> Stop\n  \\<not> has_annotated_stop (While bexp c)\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>x2 \\<noteq> Stop;\n                 \\<not> has_annotated_stop x2\\<rbrakk>\n                \\<Longrightarrow> \\<forall>mds mem.\n                                     \\<exists>c' mds' mem'.\n  \\<langle>x2, mds, mem\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem'\\<rangle>;\n        While x1 x2 \\<noteq> Stop;\n        \\<not> has_annotated_stop (While x1 x2)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>mds mem.\n                            \\<exists>c' mds' mem'.\n                               \\<langle>While x1\n   x2, mds, mem\\<rangle> \\<leadsto>\n                               \\<langle>c', mds', mem'\\<rangle>\n 2. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<noteq> Stop; \\<not> has_annotated_stop c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n  While bexp c \\<noteq> Stop\n  \\<not> has_annotated_stop (While bexp c)\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>While bexp c, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.while eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>While bexp c, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "case Stop"], ["proof (state)\nthis:\n  Stop \\<noteq> Stop\n  \\<not> has_annotated_stop Stop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Stop \\<noteq> Stop; \\<not> has_annotated_stop Stop\\<rbrakk>\n    \\<Longrightarrow> \\<forall>mds mem.\n                         \\<exists>c' mds' mem'.\n                            \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n                            \\<langle>c', mds', mem'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  Stop \\<noteq> Stop\n  \\<not> has_annotated_stop Stop\n\ngoal (1 subgoal):\n 1. \\<forall>mds mem.\n       \\<exists>c' mds' mem'.\n          \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n          \\<langle>c', mds', mem'\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<forall>mds mem.\n     \\<exists>c' mds' mem'.\n        \\<langle>Stop, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stop_bisim:\n  assumes bisim: \"\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\"\n  assumes typeable: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  shows \"c = Stop\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = Stop", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "let ?lc\\<^sub>1 = \"\\<langle>Stop, mds, mem\\<^sub>1\\<rangle>\" and\n      ?lc\\<^sub>2 = \"\\<langle>c, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "assume \"c \\<noteq> Stop\""], ["proof (state)\nthis:\n  c \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "from typeable"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'", "have \"\\<not> has_annotated_stop c\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<not> has_annotated_stop c", "by (metis typed_no_annotated_stop)"], ["proof (state)\nthis:\n  \\<not> has_annotated_stop c\n\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "with \\<open>c \\<noteq> Stop\\<close>"], ["proof (chain)\npicking this:\n  c \\<noteq> Stop\n  \\<not> has_annotated_stop c", "obtain c' mds' mem\\<^sub>2' where \"?lc\\<^sub>2 \\<leadsto> \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  c \\<noteq> Stop\n  \\<not> has_annotated_stop c\n\ngoal (1 subgoal):\n 1. (\\<And>c' mds' mem\\<^sub>2'.\n        \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using not_stop_eval"], ["proof (prove)\nusing this:\n  c \\<noteq> Stop\n  \\<not> has_annotated_stop c\n  \\<lbrakk>?c \\<noteq> Stop; \\<not> has_annotated_stop ?c\\<rbrakk>\n  \\<Longrightarrow> \\<forall>mds mem.\n                       \\<exists>c' mds' mem'.\n                          \\<langle>?c, mds, mem\\<rangle> \\<leadsto>\n                          \\<langle>c', mds', mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c' mds' mem\\<^sub>2'.\n        \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "from bisim"], ["proof (chain)\npicking this:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle>", "have \"?lc\\<^sub>2 \\<approx> ?lc\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<approx>\n    \\<langle>Stop, mds, mem\\<^sub>1\\<rangle>", "by (metis mm_equiv_sym)"], ["proof (state)\nthis:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<approx>\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle>\n\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<approx>\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle>", "obtain c\\<^sub>1' mds\\<^sub>1' mem\\<^sub>1'\n    where \"\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds\\<^sub>1', mem\\<^sub>1'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<approx>\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1' mds\\<^sub>1' mem\\<^sub>1'.\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds\\<^sub>1', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using mm_equiv_strong_low_bisim"], ["proof (prove)\nusing this:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<approx>\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle>\n  strong_low_bisim_mm mm_equiv\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1' mds\\<^sub>1' mem\\<^sub>1'.\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds\\<^sub>1', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding strong_low_bisim_mm_def"], ["proof (prove)\nusing this:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<approx>\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle>\n  sym mm_equiv \\<and>\n  closed_glob_consistent mm_equiv \\<and>\n  (\\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n      \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n      mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2 \\<and>\n      (\\<forall>c\\<^sub>1' mds' mem\\<^sub>1'.\n          \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n          \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n          (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<approx>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)))\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1' mds\\<^sub>1' mem\\<^sub>1'.\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds\\<^sub>1', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds\\<^sub>1', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c \\<noteq> Stop \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds\\<^sub>1', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. False", "by (metis (lifting) stop_no_eval)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "(* This is the main part of the proof and used in \\<R>\\<^sub>1_weak_bisim: *)"], ["", "lemma \\<R>_typed_step:\n  \"\\<lbrakk> \\<turnstile> \\<Gamma> { c\\<^sub>1 } \\<Gamma>' ;\n     mds_consistent mds \\<Gamma> ;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 ;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<rbrakk> \\<Longrightarrow>\n   (\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                 \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof (induct arbitrary: mds c\\<^sub>1' rule: has_type.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c\\<^sub>1 ;;\n                 c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (seq_type \\<Gamma> c\\<^sub>1 \\<Gamma>'' c\\<^sub>2 \\<Gamma>' mds)"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>''\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>2} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>'';\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>''\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (9 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma> c\\<^sub>1 \\<Gamma>' c\\<^sub>2 \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma>' {c\\<^sub>2} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c\\<^sub>1 ;;\n                 c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>1 ;;\n                                     c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 9. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof (cases \"c\\<^sub>1 = Stop\")"], ["proof (state)\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"c\\<^sub>1 = Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Stop\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence [simp]: \"c\\<^sub>1' = c\\<^sub>2\" \"mds' = mds\" \"mem\\<^sub>1' = mem\\<^sub>1\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Stop\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = c\\<^sub>2 &&& mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1", "using seq_type"], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Stop\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>''\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>2} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>'';\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>''\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = c\\<^sub>2 &&& mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1", "by (auto simp: seq_stop_elim)"], ["proof (state)\nthis:\n  c\\<^sub>1' = c\\<^sub>2\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from seq_type \\<open>c\\<^sub>1 = Stop\\<close>"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>''\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>2} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>'';\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>''\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1 = Stop", "have \"\\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>''\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma>'' {c\\<^sub>2} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>'';\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>''\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>2, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1 = Stop\n\ngoal (1 subgoal):\n 1. \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''", "by (metis stop_cxt)"], ["proof (state)\nthis:\n  \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"\\<turnstile> \\<Gamma> { c\\<^sub>2 } \\<Gamma>'\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>''\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>'", "by (metis context_le_refl seq_type(3) sub)"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>'\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>\\<^sub>1.intro [of \\<Gamma>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>'\n 2. mds_consistent mds \\<Gamma>\n 3. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "by (auto simp: seq_type \\<open>\\<turnstile> \\<Gamma> { c\\<^sub>2 } \\<Gamma>'\\<close>)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. c\\<^sub>1 = Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<R>.intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>1 ;;\n                                  c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply (rule_tac x = c\\<^sub>2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>1 ;;\n                                  c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "apply (rule_tac x = mem\\<^sub>2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                               c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle> \\<and>\n                      \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds', mem\\<^sub>2\\<rangle>", "apply (auto simp: \\<open>c\\<^sub>1 = Stop\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stop ;;\n                               c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.seq_stop eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"c\\<^sub>1 \\<noteq> Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with \\<open>\\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1 \\<noteq> Stop", "obtain c\\<^sub>1'' where c\\<^sub>1''_props:\n      \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and> c\\<^sub>1' = c\\<^sub>1'' ;; c\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1''''.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1'''', mds', mem\\<^sub>1'\\<rangle> \\<and>\n        c\\<^sub>1' = c\\<^sub>1'''' ;; c\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis seq_elim)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with seq_type(2)"], ["proof (chain)\npicking this:\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\\<^sub>2", "obtain c\\<^sub>2'' mem\\<^sub>2' where c\\<^sub>2''_props:\n      \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<and> \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c\\<^sub>1, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2'' mem\\<^sub>2'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis seq_type(5) seq_type(6))"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"\\<langle>c\\<^sub>1'' ;; c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;; c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1'' ;;\n             c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n                       c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "apply (rule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "apply (erule \\<R>_elim, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n 3. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "apply (metis \\<R>.intro\\<^sub>3 \\<R>\\<^sub>3_aux.intro\\<^sub>1 seq_type(3))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "apply (metis \\<R>.intro\\<^sub>3 \\<R>\\<^sub>3_aux.intro\\<^sub>2 seq_type(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n   c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "by (metis \\<R>.intro\\<^sub>3 \\<R>\\<^sub>3_aux.intro\\<^sub>3 seq_type(3))"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1'' ;;\n           c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n                     c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1'' ;;\n           c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n                     c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from c\\<^sub>2''_props"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2'' ;; c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2'' ;; c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "by (metis eval\\<^sub>w.seq)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'' ;; c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1 \\<noteq> Stop \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1'' ;;\n           c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n                     c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'' ;; c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1'' ;;\n           c\\<^sub>2, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n                     c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'' ;; c\\<^sub>2, mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis c\\<^sub>1''_props)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c\\<^sub>1 ;; c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (anno_type \\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds)"], ["proof (state)\nthis:\n  \\<Gamma>' = \\<Gamma> \\<oplus> upd\n  \\<turnstile> \\<Gamma>' {c} \\<Gamma>''\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>';\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  c \\<noteq> Stop\n  \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2", "by (metis less_eq_Sec_def anno_type(5) anno_type(7) tyenv_eq_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"mds_consistent (update_modes upd mds) \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mds_consistent (update_modes upd mds) \\<Gamma>'", "by (metis (lifting) anno_type(1) anno_type(6) mode_update_add_anno)"], ["proof (state)\nthis:\n  mds_consistent (update_modes upd mds) \\<Gamma>'\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "then"], ["proof (chain)\npicking this:\n  mds_consistent (update_modes upd mds) \\<Gamma>'", "obtain c\\<^sub>2' mem\\<^sub>2' where \"(\\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n    \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\""], ["proof (prove)\nusing this:\n  mds_consistent (update_modes upd mds) \\<Gamma>'\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2' mem\\<^sub>2'.\n        \\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using anno_type"], ["proof (prove)\nusing this:\n  mds_consistent (update_modes upd mds) \\<Gamma>'\n  \\<Gamma>' = \\<Gamma> \\<oplus> upd\n  \\<turnstile> \\<Gamma>' {c} \\<Gamma>''\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>';\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  c \\<noteq> Stop\n  \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2' mem\\<^sub>2'.\n        \\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>c\\<^sub>2' mem\\<^sub>2'.\n                \\<langle>c, update_modes upd\n                             mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n                thesis;\n     mds_consistent (update_modes upd mds) (\\<Gamma> \\<oplus> upd);\n     \\<Gamma>' = \\<Gamma> \\<oplus> upd;\n     \\<turnstile> (\\<Gamma> \\<oplus> upd) {c} \\<Gamma>'';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds (\\<Gamma> \\<oplus> upd);\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma> \\<oplus> upd\\<^esub> mem\\<^sub>2;\n         \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     c \\<noteq> Stop;\n     \\<forall>x.\n        to_total \\<Gamma> x \\<sqsubseteq>\n        to_total (\\<Gamma> \\<oplus> upd) x;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis \\<open>mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<close> anno_type(1) upd_elim)"], ["proof (state)\nthis:\n  \\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (8 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>' \\<Gamma> upd c \\<Gamma>'' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma>' = \\<Gamma> \\<oplus> upd;\n        \\<turnstile> \\<Gamma>' {c} \\<Gamma>'';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>';\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        c \\<noteq> Stop;\n        \\<forall>x. to_total \\<Gamma> x \\<sqsubseteq> to_total \\<Gamma>' x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c@[upd], mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 8. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply (rule_tac x = c\\<^sub>2' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n    \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n    \\<exists>mem\\<^sub>2'.\n       \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply (rule_tac x = mem\\<^sub>2' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c, update_modes upd mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n    \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<Longrightarrow>\n    \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n    \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c, update_modes upd\n                          mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w.decl)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c@[upd], mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>''\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case stop_type"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>_\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>_\\<^esub> mem\\<^sub>2\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (7 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 7. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with stop_no_eval"], ["proof (chain)\npicking this:\n  (\\<langle>Stop, ?mds, ?mem\\<rangle>, \\<langle>?c', ?mds', ?mem'\\<rangle>)\n  \\<notin> eval\\<^sub>w\n  mds_consistent mds \\<Gamma>_\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>_\\<^esub> mem\\<^sub>2\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  (\\<langle>Stop, ?mds, ?mem\\<rangle>, \\<langle>?c', ?mds', ?mem'\\<rangle>)\n  \\<notin> eval\\<^sub>w\n  mds_consistent mds \\<Gamma>_\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>_\\<^esub> mem\\<^sub>2\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>_\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>_\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (skip_type \\<Gamma> mds)"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with skip_type"], ["proof (chain)\npicking this:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "have [simp]: \"mds' = mds\" \"c\\<^sub>1' = Stop\" \"mem\\<^sub>1' = mem\\<^sub>1\""], ["proof (prove)\nusing this:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. mds' = mds &&& c\\<^sub>1' = Stop &&& mem\\<^sub>1' = mem\\<^sub>1", "using skip_elim"], ["proof (prove)\nusing this:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>Skip, ?mds, ?mem\\<rangle> \\<leadsto>\n  \\<langle>?c', ?mds', ?mem'\\<rangle> \\<Longrightarrow>\n  ?c' = Stop \\<and> ?mds = ?mds' \\<and> ?mem = ?mem'\n\ngoal (1 subgoal):\n 1. mds' = mds &&& c\\<^sub>1' = Stop &&& mem\\<^sub>1' = mem\\<^sub>1", "by (metis, metis, metis)"], ["proof (state)\nthis:\n  mds' = mds\n  c\\<^sub>1' = Stop\n  mem\\<^sub>1' = mem\\<^sub>1\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with skip_type"], ["proof (chain)\npicking this:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  mds' = mds\n  c\\<^sub>1' = Stop\n  mem\\<^sub>1' = mem\\<^sub>1", "have \"\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  mds' = mds\n  c\\<^sub>1' = Stop\n  mem\\<^sub>1' = mem\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> mds c\\<^sub>1'.\n       \\<lbrakk>mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Skip, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 6. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<R>.intro\\<^sub>1 and unannotated [where c = Skip and E = \"[]\"]"], ["proof (prove)\nusing this:\n  \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n  eval\\<^sub>w_simple_abv (Skip, ?mem) (?c', ?mem') \\<Longrightarrow>\n  \\<langle>cxt_to_stmt [] Skip, ?mds, ?mem\\<rangle> \\<leadsto>\n  \\<langle>cxt_to_stmt [] ?c', ?mds, ?mem'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>;\n     \\<And>mem c' mem' mds.\n        eval\\<^sub>w_simple_abv (Skip, mem) (c', mem') \\<Longrightarrow>\n        \\<langle>Skip, mds, mem\\<rangle> \\<leadsto>\n        \\<langle>c', mds, mem'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds, mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2'\\<rangle>", "by (metis eval\\<^sub>w_simple.skip)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Skip, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "(* assign\\<^sub>1 *)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (assign\\<^sub>1 x \\<Gamma> e t mds)"], ["proof (state)\nthis:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence [simp]: \"c\\<^sub>1' = Stop\" \"mds' = mds\" \"mem\\<^sub>1' = mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e)\""], ["proof (prove)\nusing this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = Stop &&&\n    mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)", "using assign_elim"], ["proof (prove)\nusing this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>?x \\<leftarrow> ?e, ?mds, ?mem\\<rangle> \\<leadsto>\n  \\<langle>?c', ?mds', ?mem'\\<rangle> \\<Longrightarrow>\n  ?c' = Stop \\<and>\n  ?mds = ?mds' \\<and> ?mem' = ?mem(?x := ev\\<^sub>A ?mem ?e)\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = Stop &&&\n    mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)", "by (auto, metis)"], ["proof (state)\nthis:\n  c\\<^sub>1' = Stop\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "proof (cases \"to_total \\<Gamma> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. to_total \\<Gamma> x = High \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n 2. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "assume \"to_total \\<Gamma> x = High\""], ["proof (state)\nthis:\n  to_total \\<Gamma> x = High\n\ngoal (2 subgoals):\n 1. to_total \\<Gamma> x = High \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n 2. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  to_total \\<Gamma> x = High\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "using assign\\<^sub>1 tyenv_eq_def"], ["proof (prove)\nusing this:\n  to_total \\<Gamma> x = High\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  ?mem\\<^sub>1 =\\<^bsub>?\\<Gamma>\\<^esub> ?mem\\<^sub>2 \\<equiv>\n  \\<forall>x.\n     to_total ?\\<Gamma> x = Low \\<longrightarrow>\n     ?mem\\<^sub>1 x = ?mem\\<^sub>2 x\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "by auto"], ["proof (state)\nthis:\n  mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n  mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "assume \"to_total \\<Gamma> x = Low\""], ["proof (state)\nthis:\n  to_total \\<Gamma> x = Low\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "with assign\\<^sub>1"], ["proof (chain)\npicking this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  to_total \\<Gamma> x = Low", "have [simp]: \"t = Low\""], ["proof (prove)\nusing this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  to_total \\<Gamma> x = Low\n\ngoal (1 subgoal):\n 1. t = Low", "by (metis less_eq_Sec_def to_total_def)"], ["proof (state)\nthis:\n  t = Low\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "hence \"dma x = Low\""], ["proof (prove)\nusing this:\n  t = Low\n\ngoal (1 subgoal):\n 1. dma x = Low", "using assign\\<^sub>1 \\<open>to_total \\<Gamma> x = Low\\<close>"], ["proof (prove)\nusing this:\n  t = Low\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  to_total \\<Gamma> x = Low\n\ngoal (1 subgoal):\n 1. dma x = Low", "by (metis to_total_def)"], ["proof (state)\nthis:\n  dma x = Low\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "with assign\\<^sub>1"], ["proof (chain)\npicking this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  dma x = Low", "have \"\\<forall> v \\<in> aexp_vars e. to_total \\<Gamma> v = Low\""], ["proof (prove)\nusing this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  dma x = Low\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low", "using type_low_vars_low"], ["proof (prove)\nusing this:\n  x \\<notin> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  t \\<sqsubseteq> dma x\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  dma x = Low\n  \\<lbrakk>?\\<Gamma> \\<turnstile>\\<^sub>a ?e \\<in> Low;\n   mds_consistent ?mds ?\\<Gamma>; ?x \\<in> aexp_vars ?e\\<rbrakk>\n  \\<Longrightarrow> to_total ?\\<Gamma> ?x = Low\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low", "by auto"], ["proof (state)\nthis:\n  \\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low\n\ngoal (1 subgoal):\n 1. to_total \\<Gamma> x = Low \\<Longrightarrow>\n    mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "using eval_vars_det\\<^sub>A"], ["proof (prove)\nusing this:\n  \\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low\n  \\<forall>x\\<in>aexp_vars ?e.\n     ?mem\\<^sub>1 x = ?mem\\<^sub>2 x \\<Longrightarrow>\n  ev\\<^sub>A ?mem\\<^sub>1 ?e = ev\\<^sub>A ?mem\\<^sub>2 ?e\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "apply (auto simp: tyenv_eq_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low;\n     \\<And>e mem\\<^sub>1 mem\\<^sub>2.\n        \\<forall>x\\<in>aexp_vars e.\n           mem\\<^sub>1 x = mem\\<^sub>2 x \\<Longrightarrow>\n        ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e;\n     to_total \\<Gamma> x = Low\\<rbrakk>\n    \\<Longrightarrow> ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e\n 2. \\<And>xa.\n       \\<lbrakk>\\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low;\n        \\<And>e mem\\<^sub>1 mem\\<^sub>2.\n           \\<forall>x\\<in>aexp_vars e.\n              mem\\<^sub>1 x = mem\\<^sub>2 x \\<Longrightarrow>\n           ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e;\n        xa \\<noteq> x; to_total \\<Gamma> xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "apply (metis (no_types) assign\\<^sub>1(5) tyenv_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>v\\<in>aexp_vars e. to_total \\<Gamma> v = Low;\n        \\<And>e mem\\<^sub>1 mem\\<^sub>2.\n           \\<forall>x\\<in>aexp_vars e.\n              mem\\<^sub>1 x = mem\\<^sub>2 x \\<Longrightarrow>\n           ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e;\n        xa \\<noteq> x; to_total \\<Gamma> xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "by (metis assign\\<^sub>1(5) tyenv_eq_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n  mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n  mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"\\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>Stop, mds', mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\"\n    \"\\<langle>Stop, mds', mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\""], ["proof (prove)\nusing this:\n  mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n  mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n\ngoal (1 subgoal):\n 1. \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>Stop, mds', mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle> &&&\n    \\<langle>Stop, mds', mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1\n           e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e) \\<Longrightarrow>\n    \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n 2. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e) \\<Longrightarrow>\n    \\<langle>Stop, mds, mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1\n           e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "apply (metis cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.assign)"], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e) \\<Longrightarrow>\n    \\<langle>Stop, mds, mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1\n           e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "by (rule \\<R>.intro\\<^sub>1, auto simp: assign\\<^sub>1)"], ["proof (state)\nthis:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds', mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds', mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (5 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<notin> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t; t \\<sqsubseteq> dma x;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 5. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds', mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds', mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<open>c\\<^sub>1' = Stop\\<close> and \\<open>mem\\<^sub>1' = mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e)\\<close>"], ["proof (prove)\nusing this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds', mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds', mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  c\\<^sub>1' = Stop\n  mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "(* assign\\<^sub>2 *)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (assign\\<^sub>2 x \\<Gamma> e t mds)"], ["proof (state)\nthis:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence [simp]: \"c\\<^sub>1' = Stop\" \"mds' = mds\" \"mem\\<^sub>1' = mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e)\""], ["proof (prove)\nusing this:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = Stop &&&\n    mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)", "using assign_elim assign\\<^sub>2"], ["proof (prove)\nusing this:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>?x \\<leftarrow> ?e, ?mds, ?mem\\<rangle> \\<leadsto>\n  \\<langle>?c', ?mds', ?mem'\\<rangle> \\<Longrightarrow>\n  ?c' = Stop \\<and>\n  ?mds = ?mds' \\<and> ?mem' = ?mem(?x := ev\\<^sub>A ?mem ?e)\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = Stop &&&\n    mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)", "by (auto, metis)"], ["proof (state)\nthis:\n  c\\<^sub>1' = Stop\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "let ?\\<Gamma>' = \"\\<Gamma> (x \\<mapsto> t)\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>Stop, mds, mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "using assign\\<^sub>2"], ["proof (prove)\nusing this:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.assign eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>Stop, mds, mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e)\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Stop, mds, mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1\n           e)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. mds_consistent mds (\\<Gamma>(x \\<mapsto> t))\n 2. mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "from assign\\<^sub>2"], ["proof (chain)\npicking this:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "show \"mds_consistent mds ?\\<Gamma>'\""], ["proof (prove)\nusing this:\n  x \\<in> dom \\<Gamma>\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. mds_consistent mds (\\<Gamma>(x \\<mapsto> t))", "apply (simp add: mds_consistent_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n             dma x = High \\<and> x \\<in> mds AsmNoWrite;\n     \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n     dom \\<Gamma> =\n     {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n         dma x = High \\<and> x \\<in> mds AsmNoWrite};\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>Stop, mds, \\<lambda>a.\n                            if a = x then ev\\<^sub>A mem\\<^sub>1 e\n                            else mem\\<^sub>1 a\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> insert x\n                       {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n                           dma x = High \\<and> x \\<in> mds AsmNoWrite} =\n                      {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n                          dma x = High \\<and> x \\<in> mds AsmNoWrite}", "by (metis (lifting) insert_absorb assign\\<^sub>2(1))"], ["proof (state)\nthis:\n  mds_consistent mds (\\<Gamma>(x \\<mapsto> t))\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "show \"mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>?\\<Gamma>'\\<^esub> mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub>\n    mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)", "unfolding tyenv_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low \\<longrightarrow>\n       (mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)) xa =\n       (mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)) xa", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. to_total (\\<Gamma>(x \\<mapsto> t)) x = Low \\<Longrightarrow>\n    ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "assume \"to_total (\\<Gamma>(x \\<mapsto> t)) x = Low\""], ["proof (state)\nthis:\n  to_total (\\<Gamma>(x \\<mapsto> t)) x = Low\n\ngoal (2 subgoals):\n 1. to_total (\\<Gamma>(x \\<mapsto> t)) x = Low \\<Longrightarrow>\n    ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "with \\<open>\\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  to_total (\\<Gamma>(x \\<mapsto> t)) x = Low", "have \"\\<And> x. x \\<in> aexp_vars e \\<Longrightarrow> to_total \\<Gamma> x = Low\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t\n  to_total (\\<Gamma>(x \\<mapsto> t)) x = Low\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> aexp_vars e \\<Longrightarrow> to_total \\<Gamma> x = Low", "by (metis assign\\<^sub>2.prems(1) domI fun_upd_same option.sel to_total_def type_low_vars_low)"], ["proof (state)\nthis:\n  ?x5 \\<in> aexp_vars e \\<Longrightarrow> to_total \\<Gamma> ?x5 = Low\n\ngoal (2 subgoals):\n 1. to_total (\\<Gamma>(x \\<mapsto> t)) x = Low \\<Longrightarrow>\n    ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e\n 2. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "thus \"ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e\""], ["proof (prove)\nusing this:\n  ?x5 \\<in> aexp_vars e \\<Longrightarrow> to_total \\<Gamma> ?x5 = Low\n\ngoal (1 subgoal):\n 1. ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e", "by (metis assign\\<^sub>2.prems(2) eval_vars_det\\<^sub>A tyenv_eq_def)"], ["proof (state)\nthis:\n  ev\\<^sub>A mem\\<^sub>1 e = ev\\<^sub>A mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "assume \"y \\<noteq> x\" and \"to_total (\\<Gamma> (x \\<mapsto> t)) y = Low\""], ["proof (state)\nthis:\n  y \\<noteq> x\n  to_total (\\<Gamma>(x \\<mapsto> t)) y = Low\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>xa \\<noteq> x;\n        to_total (\\<Gamma>(x \\<mapsto> t)) xa = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 xa = mem\\<^sub>2 xa", "thus \"mem\\<^sub>1 y = mem\\<^sub>2 y\""], ["proof (prove)\nusing this:\n  y \\<noteq> x\n  to_total (\\<Gamma>(x \\<mapsto> t)) y = Low\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1 y = mem\\<^sub>2 y", "by (metis (full_types) assign\\<^sub>2.prems(2) domD domI fun_upd_other to_total_def tyenv_eq_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1 y = mem\\<^sub>2 y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1 e) =\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub>\n  mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>Stop, mds, mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds, mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "have \"\\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>Stop, mds', mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\"\n    \"\\<langle>Stop, mds', mem\\<^sub>1 (x := ev\\<^sub>A mem\\<^sub>1 e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2 (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds, mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>Stop, mds', mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle> &&&\n    \\<langle>Stop, mds', mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1\n           e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "using \\<R>.intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds, mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds, mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>Stop, mds', mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle> &&&\n    \\<langle>Stop, mds', mem\\<^sub>1\n    (x := ev\\<^sub>A mem\\<^sub>1\n           e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n    (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds', mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds', mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (4 subgoals):\n 1. \\<And>x \\<Gamma> e t mds c\\<^sub>1'.\n       \\<lbrakk>x \\<in> dom \\<Gamma>;\n        \\<Gamma> \\<turnstile>\\<^sub>a e \\<in> t;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>x \\<leftarrow>\n                                     e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 4. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds', mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds', mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<open>mds' = mds\\<close> \\<open>c\\<^sub>1' = Stop\\<close> \\<open>mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)\\<close>"], ["proof (prove)\nusing this:\n  \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>Stop, mds', mem\\<^sub>2(x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  \\<langle>Stop, mds', mem\\<^sub>1\n  (x := ev\\<^sub>A mem\\<^sub>1\n         e)\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>Stop, mds', mem\\<^sub>2\n  (x := ev\\<^sub>A mem\\<^sub>2 e)\\<rangle>\n  mds' = mds\n  c\\<^sub>1' = Stop\n  mem\\<^sub>1' = mem\\<^sub>1(x := ev\\<^sub>A mem\\<^sub>1 e)\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>x \\<leftarrow> e, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>(x \\<mapsto> t)\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "(* if *)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (if_type \\<Gamma> e th el \\<Gamma>')"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"(\\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>) \\<in> \\<R> \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (rule intro\\<^sub>1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (x, xa) \\<Rightarrow>\n          \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n             \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n        xa)\n     \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>\\<^sub>1.intro [where \\<Gamma> = \\<Gamma> and \\<Gamma>' = \\<Gamma>'])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile> \\<Gamma> {c\\<^sub>1'} \\<Gamma>'\n 2. mds_consistent mds \\<Gamma>\n 3. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "apply (auto simp: if_type)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {c\\<^sub>1'} \\<Gamma>'", "by (metis (lifting) if_elim if_type(2) if_type(4) if_type(8))"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have eq_condition: \"ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow> ?case\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\""], ["proof (state)\nthis:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with if_type(8)"], ["proof (chain)\npicking this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e", "have \"(\\<langle>If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (cases \"ev\\<^sub>B mem\\<^sub>1 e\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (subgoal_tac \"c\\<^sub>1' = th\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e; c\\<^sub>1' = th\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1' = th\n 3. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>th, mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e; c\\<^sub>1' = th; ev\\<^sub>B mem\\<^sub>1 e;\n     ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1' = th\n 3. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.if_true eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq if_type(8))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1' = th\n 2. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (metis if_elim if_type(8))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (subgoal_tac \"c\\<^sub>1' = el\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e; c\\<^sub>1' = el\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stmt.If e th\n                                el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1' = el", "apply (metis (hide_lams, mono_tags) cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.if_false if_type(8))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1' = el", "by (metis if_elim if_type(8))"], ["proof (state)\nthis:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis \\<open>\\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\\<close> if_elim if_type(8))"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "apply (auto simp: low_mds_eq_def mds_consistent_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>dma x = Low; x \\<notin> mds AsmNoRead\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x", "apply (subgoal_tac \"x \\<notin> dom \\<Gamma>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>dma x = Low; x \\<notin> mds AsmNoRead;\n        x \\<notin> dom \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x\n 2. \\<And>x.\n       \\<lbrakk>dma x = Low; x \\<notin> mds AsmNoRead\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> dom \\<Gamma>", "apply (metis if_type(7) to_total_def tyenv_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>dma x = Low; x \\<notin> mds AsmNoRead\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> dom \\<Gamma>", "by (metis (lifting, mono_tags) CollectD Sec.simps(2) if_type(6) mds_consistent_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "obtain t where \"\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t  \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis type_bexpr.intros)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t \n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> e c\\<^sub>1 c\\<^sub>2 \\<Gamma>' mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n                (\\<forall>mds.\n                    mds_consistent mds \\<Gamma> \\<longrightarrow>\n                    c\\<^sub>1 \\<sim>\\<^bsub>mds\\<^esub> c\\<^sub>2) \\<and>\n                (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c\\<^sub>2} \\<Gamma>';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>Stmt.If e c\\<^sub>1\n                  c\\<^sub>2, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>Stmt.If e c\\<^sub>1\nc\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from if_type"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof (cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"t = High\""], ["proof (state)\nthis:\n  t = High\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with if_type"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = High", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = High\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof (cases \"ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High; ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High;\n     ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\""], ["proof (state)\nthis:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High; ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High;\n     ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with eq_condition"], ["proof (chain)\npicking this:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e", "show ?thesis"], ["proof (prove)\nusing this:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High;\n     ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High;\n     ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume neq: \"ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\""], ["proof (state)\nthis:\n  ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High;\n     ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from if_type \\<open>t = High\\<close>"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = High", "have \"th \\<sim>\\<^bsub>mds\\<^esub> el\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = High\n\ngoal (1 subgoal):\n 1. th \\<sim>\\<^bsub>mds\\<^esub> el", "by (metis \\<open>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t\\<close>)"], ["proof (state)\nthis:\n  th \\<sim>\\<^bsub>mds\\<^esub> el\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = High;\n     ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from neq"], ["proof (chain)\npicking this:\n  ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e", "show ?thesis"], ["proof (prove)\nusing this:\n  ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof (cases \"ev\\<^sub>B mem\\<^sub>1 e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"ev\\<^sub>B mem\\<^sub>1 e\""], ["proof (state)\nthis:\n  ev\\<^sub>B mem\\<^sub>1 e\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"c\\<^sub>1' = th\""], ["proof (prove)\nusing this:\n  ev\\<^sub>B mem\\<^sub>1 e\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = th", "by (metis (lifting) if_elim if_type(8))"], ["proof (state)\nthis:\n  c\\<^sub>1' = th\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"\\<langle>If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1' = th\n\ngoal (1 subgoal):\n 1. \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>el, mds, mem\\<^sub>2\\<rangle>", "by (metis \\<open>ev\\<^sub>B mem\\<^sub>1 e\\<close> cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.if_false if_type(8) neq)"], ["proof (state)\nthis:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with \\<open>mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>", "have \"\\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>el, mds, mem\\<^sub>2\\<rangle>", "by (metis low_indistinguishable_def \\<open>th \\<sim>\\<^bsub>mds\\<^esub> el\\<close>)"], ["proof (state)\nthis:\n  \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<forall> x \\<in> dom \\<Gamma>'. \\<Gamma>' x = Some High\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "using if_type \\<open>t = High\\<close>"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = High\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "by (metis \\<open>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t\\<close>)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>", "by (metis (lifting) \\<R>\\<^sub>2.intro \\<open>\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\\<close> \\<open>\\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\\<close> if_type(2) if_type(4) if_type(6))"], ["proof (state)\nthis:\n  \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<R>.intro\\<^sub>2"], ["proof (prove)\nusing this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>el, mds, mem\\<^sub>2\\<rangle>;\n     \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>el, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis \\<open>c\\<^sub>1' = th\\<close> if_elim if_type(8))"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"\\<not> ev\\<^sub>B mem\\<^sub>1 e\""], ["proof (state)\nthis:\n  \\<not> ev\\<^sub>B mem\\<^sub>1 e\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence [simp]: \"c\\<^sub>1' = el\""], ["proof (prove)\nusing this:\n  \\<not> ev\\<^sub>B mem\\<^sub>1 e\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = el", "by (metis (lifting) if_type(8) if_elim)"], ["proof (state)\nthis:\n  c\\<^sub>1' = el\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"\\<langle>If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1' = el\n\ngoal (1 subgoal):\n 1. \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>th, mds, mem\\<^sub>2\\<rangle>", "by (metis (hide_lams, mono_tags) \\<open>\\<not> ev\\<^sub>B mem\\<^sub>1 e\\<close> cxt_to_stmt.simps(1) eval\\<^sub>w.unannotated eval\\<^sub>w_simple.if_true if_type(8) neq)"], ["proof (state)\nthis:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from \\<open>th \\<sim>\\<^bsub>mds\\<^esub> el\\<close>"], ["proof (chain)\npicking this:\n  th \\<sim>\\<^bsub>mds\\<^esub> el", "have \"el \\<sim>\\<^bsub>mds\\<^esub> th\""], ["proof (prove)\nusing this:\n  th \\<sim>\\<^bsub>mds\\<^esub> el\n\ngoal (1 subgoal):\n 1. el \\<sim>\\<^bsub>mds\\<^esub> th", "by (metis low_indistinguishable_sym)"], ["proof (state)\nthis:\n  el \\<sim>\\<^bsub>mds\\<^esub> th\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with \\<open>mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n  el \\<sim>\\<^bsub>mds\\<^esub> th", "have \"\\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n  el \\<sim>\\<^bsub>mds\\<^esub> th\n\ngoal (1 subgoal):\n 1. \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>th, mds, mem\\<^sub>2\\<rangle>", "by (metis low_indistinguishable_def)"], ["proof (state)\nthis:\n  \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<forall> x \\<in> dom \\<Gamma>'. \\<Gamma>' x = Some High\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "using if_type \\<open>t = High\\<close>"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = High\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "by (metis \\<open>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t\\<close>)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>\\<^sub>2.intro [where \\<Gamma>\\<^sub>1 = \\<Gamma> and \\<Gamma>\\<^sub>2 = \\<Gamma>])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n 2. \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n 3. \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n 4. \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n 5. mds_consistent mds \\<Gamma>\n 6. mds_consistent mds \\<Gamma>", "by (auto simp: if_type \\<open>\\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\\<close> \\<open>\\<forall> x \\<in> dom \\<Gamma>'. \\<Gamma>' x = Some High\\<close>)"], ["proof (state)\nthis:\n  \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ev\\<^sub>B mem\\<^sub>1 e \\<noteq> ev\\<^sub>B mem\\<^sub>2 e;\n     \\<not> ev\\<^sub>B mem\\<^sub>1 e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<R>.intro\\<^sub>2"], ["proof (prove)\nusing this:\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>th, mds, mem\\<^sub>2\\<rangle>;\n     \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>th, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis \\<open>c\\<^sub>1' = el\\<close> if_elim if_type(8))"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"t = Low\""], ["proof (state)\nthis:\n  t = Low\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with if_type"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = Low", "have \"ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = Low\n\ngoal (1 subgoal):\n 1. ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e", "using eval_vars_det\\<^sub>B"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n  (\\<forall>mds.\n      mds_consistent mds \\<Gamma> \\<longrightarrow>\n      th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n  (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High)\n  \\<turnstile> \\<Gamma> {th} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>th, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>th, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {el} \\<Gamma>'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>el, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>el, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  t = Low\n  \\<forall>x\\<in>bexp_vars ?b.\n     ?mem\\<^sub>1 x = ?mem\\<^sub>2 x \\<Longrightarrow>\n  ev\\<^sub>B ?mem\\<^sub>1 ?b = ev\\<^sub>B ?mem\\<^sub>2 ?b\n\ngoal (1 subgoal):\n 1. ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e", "apply (simp add: tyenv_eq_def \\<open>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t\\<close> type_low_vars_low_b)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     \\<forall>x.\n        to_total \\<Gamma> x = Low \\<longrightarrow>\n        mem\\<^sub>1 x = mem\\<^sub>2 x;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low;\n     \\<And>b mem\\<^sub>1 mem\\<^sub>2.\n        \\<forall>x\\<in>bexp_vars b.\n           mem\\<^sub>1 x = mem\\<^sub>2 x \\<Longrightarrow>\n        ev\\<^sub>B mem\\<^sub>1 b = ev\\<^sub>B mem\\<^sub>2 b\\<rbrakk>\n    \\<Longrightarrow> ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e", "by (metis (lifting) \\<open>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> t\\<close> type_low_vars_low_b)"], ["proof (state)\nthis:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n             (\\<forall>mds.\n                 mds_consistent mds \\<Gamma> \\<longrightarrow>\n                 th \\<sim>\\<^bsub>mds\\<^esub> el) \\<and>\n             (\\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High);\n     \\<turnstile> \\<Gamma> {th} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>th, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>th, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {el} \\<Gamma>';\n     \\<And>mds c\\<^sub>1'.\n        \\<lbrakk>mds_consistent mds \\<Gamma>;\n         mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n         \\<langle>el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                             \\<langle>el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                             \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                             \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n     mds_consistent mds \\<Gamma>;\n     mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     t = Low\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>Stmt.If e th\n                                   el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with eq_condition"], ["proof (chain)\npicking this:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e", "show ?thesis"], ["proof (prove)\nusing this:\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e \\<Longrightarrow>\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  ev\\<^sub>B mem\\<^sub>1 e = ev\\<^sub>B mem\\<^sub>2 e\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by auto"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>Stmt.If e th el, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "(* while *)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (while_type \\<Gamma> e c)"], ["proof (state)\nthis:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence [simp]: \"c\\<^sub>1' = (If e (c ;; While e c) Stop)\" and\n    [simp]: \"mds' = mds\" and\n    [simp]: \"mem\\<^sub>1' = mem\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = Stmt.If e (c ;; While e c) Stop &&&\n    mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1", "by (auto simp: while_elim)"], ["proof (state)\nthis:\n  c\\<^sub>1' = Stmt.If e (c ;; While e c) Stop\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with while_type"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1' = Stmt.If e (c ;; While e c) Stop\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1", "have \"\\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low \n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1' = Stmt.If e (c ;; While e c) Stop\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.while eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>\\<^sub>1.intro [where \\<Gamma> = \\<Gamma>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile> \\<Gamma> {c\\<^sub>1'} \\<Gamma>\n 2. mds_consistent mds \\<Gamma>\n 3. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "apply (auto simp: while_type)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {Stmt.If e (c ;; While e c) Stop} \\<Gamma>", "apply (rule if_type)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<Gamma> \\<turnstile>\\<^sub>b e \\<in> High  \\<longrightarrow>\n    (\\<forall>mds.\n        mds_consistent mds \\<Gamma> \\<longrightarrow>\n        c ;; While e c \\<sim>\\<^bsub>mds\\<^esub> Stop) \\<and>\n    (\\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High)\n 2. \\<turnstile> \\<Gamma> {c ;; While e c} \\<Gamma>\n 3. \\<turnstile> \\<Gamma> {Stop} \\<Gamma>", "apply (metis (lifting) Sec.simps(1) while_type(1) type_bexpr_elim)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<turnstile> \\<Gamma> {c ;; While e c} \\<Gamma>\n 2. \\<turnstile> \\<Gamma> {Stop} \\<Gamma>", "apply (rule seq_type [where \\<Gamma>' = \\<Gamma>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile> \\<Gamma> {c} \\<Gamma>\n 2. \\<turnstile> \\<Gamma> {While e c} \\<Gamma>\n 3. \\<turnstile> \\<Gamma> {Stop} \\<Gamma>", "by (auto simp: while_type)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> e c mds c\\<^sub>1'.\n       \\<lbrakk>\\<Gamma> \\<turnstile>\\<^sub>b e \\<in> Low ;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>;\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>While e c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>While e\nc, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using \\<R>.intro\\<^sub>1 [of \\<Gamma>]"], ["proof (prove)\nusing this:\n  \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>1', mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (auto, blast)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>While e c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (sub \\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma> \\<Gamma>' mds c\\<^sub>1')"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>\\<^sub>1;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"dom \\<Gamma>\\<^sub>1 \\<subseteq> dom \\<Gamma>\" \"dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>\\<^sub>1;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. dom \\<Gamma>\\<^sub>1 \\<subseteq> dom \\<Gamma> &&&\n    dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'", "apply (metis (lifting) context_le_def equalityE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'", "by (metis context_le_def sub(4) order_refl)"], ["proof (state)\nthis:\n  dom \\<Gamma>\\<^sub>1 \\<subseteq> dom \\<Gamma>\n  dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence \"mds_consistent mds \\<Gamma>\\<^sub>1\""], ["proof (prove)\nusing this:\n  dom \\<Gamma>\\<^sub>1 \\<subseteq> dom \\<Gamma>\n  dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'\n\ngoal (1 subgoal):\n 1. mds_consistent mds \\<Gamma>\\<^sub>1", "using sub"], ["proof (prove)\nusing this:\n  dom \\<Gamma>\\<^sub>1 \\<subseteq> dom \\<Gamma>\n  dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>\\<^sub>1;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. mds_consistent mds \\<Gamma>\\<^sub>1", "apply (auto simp: mds_consistent_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>dom \\<Gamma>\\<^sub>1\n                \\<subseteq> {x. dma x = Low \\<and>\n                                x \\<in> mds AsmNoRead \\<or>\n                                dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1';\n        \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>dom \\<Gamma>\\<^sub>1 =\n                    {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n                        dma x = High \\<and> x \\<in> mds AsmNoWrite};\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n        dma x = Low; x \\<in> mds AsmNoRead\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma>\\<^sub>1 x = Some y\n 2. \\<And>x.\n       \\<lbrakk>dom \\<Gamma>\\<^sub>1\n                \\<subseteq> {x. dma x = Low \\<and>\n                                x \\<in> mds AsmNoRead \\<or>\n                                dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1';\n        \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>dom \\<Gamma>\\<^sub>1 =\n                    {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n                        dma x = High \\<and> x \\<in> mds AsmNoWrite};\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n        dma x = High; x \\<in> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma>\\<^sub>1 x = Some y", "apply (metis (lifting, full_types) context_le_def domD mem_Collect_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>dom \\<Gamma>\\<^sub>1\n                \\<subseteq> {x. dma x = Low \\<and>\n                                x \\<in> mds AsmNoRead \\<or>\n                                dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1';\n        \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>dom \\<Gamma>\\<^sub>1 =\n                    {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n                        dma x = High \\<and> x \\<in> mds AsmNoWrite};\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>';\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n        dma x = High; x \\<in> mds AsmNoWrite\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. \\<Gamma>\\<^sub>1 x = Some y", "by (metis (lifting, full_types) context_le_def domD mem_Collect_eq)"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2", "unfolding tyenv_eq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       to_total \\<Gamma>\\<^sub>1 x = Low \\<longrightarrow>\n       mem\\<^sub>1 x = mem\\<^sub>2 x", "by (metis (lifting, no_types) context_le_def less_eq_Sec_def sub.hyps(3) sub.prems(2) to_total_def tyenv_eq_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2", "obtain c\\<^sub>2' mem\\<^sub>2' where c\\<^sub>2'_props: \"\\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\"\n    \"\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2' mem\\<^sub>2'.\n        \\<lbrakk>\\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sub"], ["proof (prove)\nusing this:\n  mds_consistent mds \\<Gamma>\\<^sub>1\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1'\n  \\<lbrakk>mds_consistent ?mds5 \\<Gamma>\\<^sub>1;\n   mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n   \\<langle>c, ?mds5, mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>c, ?mds5, mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<Gamma> \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n  \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2' mem\\<^sub>2'.\n        \\<lbrakk>\\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<And> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "let ?lc\\<^sub>1 = \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>\" and ?lc\\<^sub>2 = \"\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume asm: \"?lc\\<^sub>1 \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> ?lc\\<^sub>2\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"?lc\\<^sub>1 \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> ?lc\\<^sub>2 \\<Longrightarrow> ?lc\\<^sub>1 \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> ?lc\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply (erule \\<R>\\<^sub>1_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>c\\<^sub>2 = c\\<^sub>1;\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1';\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>.\n       \\<lbrakk>c\\<^sub>2 = c\\<^sub>1;\n        \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>\\<^sub>1';\n        mds_consistent mds \\<Gamma>;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile> \\<Gamma> {c\\<^sub>1} \\<Gamma>'", "by (metis (lifting) has_type.sub sub(4) stop_cxt stop_type)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"?lc\\<^sub>1 \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> ?lc\\<^sub>2 \\<Longrightarrow> ?lc\\<^sub>1 \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> ?lc\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume r2: \"?lc\\<^sub>1 \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> ?lc\\<^sub>2\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "obtain \\<Lambda>\\<^sub>1 \\<Lambda>\\<^sub>2 where \"\\<turnstile> \\<Lambda>\\<^sub>1 { c\\<^sub>1 }  \\<Gamma>\\<^sub>1'\" \"\\<turnstile> \\<Lambda>\\<^sub>2 { c\\<^sub>2 } \\<Gamma>\\<^sub>1'\" \"mds_consistent mds \\<Lambda>\\<^sub>1\"\n        \"mds_consistent mds \\<Lambda>\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Lambda>\\<^sub>1 \\<Lambda>\\<^sub>2.\n        \\<lbrakk>\\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>\\<^sub>1';\n         \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>\\<^sub>1';\n         mds_consistent mds \\<Lambda>\\<^sub>1;\n         mds_consistent mds \\<Lambda>\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<R>\\<^sub>2_elim)"], ["proof (state)\nthis:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>\\<^sub>1'\n  mds_consistent mds \\<Lambda>\\<^sub>1\n  mds_consistent mds \\<Lambda>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "hence \"\\<turnstile> \\<Lambda>\\<^sub>1 { c\\<^sub>1 } \\<Gamma>'\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>\\<^sub>1'\n  mds_consistent mds \\<Lambda>\\<^sub>1\n  mds_consistent mds \\<Lambda>\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'", "using sub(4)"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>\\<^sub>1'\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>\\<^sub>1'\n  mds_consistent mds \\<Lambda>\\<^sub>1\n  mds_consistent mds \\<Lambda>\\<^sub>2\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'", "by (metis context_le_refl has_type.sub sub(4))"], ["proof (state)\nthis:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"\\<turnstile> \\<Lambda>\\<^sub>2 { c\\<^sub>2 } \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'", "by (metis \\<open>\\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>\\<^sub>1'\\<close> context_le_refl has_type.sub sub(4))"], ["proof (state)\nthis:\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "from r2"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"\\<forall> x \\<in> dom \\<Gamma>\\<^sub>1'. \\<Gamma>\\<^sub>1' x = Some High\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>\\<^sub>1'. \\<Gamma>\\<^sub>1' x = Some High", "apply (rule \\<R>\\<^sub>2_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<forall>x\\<in>dom \\<Gamma>\\<^sub>1'.\n           \\<Gamma>\\<^sub>1' x = Some High;\n        \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>\\<^sub>1';\n        \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>\\<^sub>1';\n        mds_consistent mds \\<Gamma>\\<^sub>1;\n        mds_consistent mds \\<Gamma>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>dom \\<Gamma>\\<^sub>1'.\n                            \\<Gamma>\\<^sub>1' x = Some High", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>dom \\<Gamma>\\<^sub>1'. \\<Gamma>\\<^sub>1' x = Some High\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "hence \"\\<forall> x \\<in> dom \\<Gamma>'. \\<Gamma>' x = Some High\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>dom \\<Gamma>\\<^sub>1'. \\<Gamma>\\<^sub>1' x = Some High\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "by (metis Sec.simps(2) \\<open>dom \\<Gamma>' \\<subseteq> dom \\<Gamma>\\<^sub>1'\\<close> context_le_def domD less_eq_Sec_def sub(4) rev_subsetD option.sel)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Lambda>\\<^sub>1 {c\\<^sub>1} \\<Gamma>'\n  \\<turnstile> \\<Lambda>\\<^sub>2 {c\\<^sub>2} \\<Gamma>'\n  \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by (metis (no_types) \\<R>\\<^sub>2.intro \\<R>\\<^sub>2_elim' \\<open>mds_consistent mds \\<Lambda>\\<^sub>1\\<close> \\<open>mds_consistent mds \\<Lambda>\\<^sub>2\\<close> r2)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"?lc\\<^sub>1 \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> ?lc\\<^sub>2 \\<Longrightarrow> ?lc\\<^sub>1 \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> ?lc\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply (erule \\<R>\\<^sub>3_elim)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "fix \\<Gamma> c\\<^sub>1'' c\\<^sub>2''' c"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume [simp]: \"c\\<^sub>1 = c\\<^sub>1'' ;; c\" \"c\\<^sub>2 = c\\<^sub>2''' ;; c\""], ["proof (state)\nthis:\n  c\\<^sub>1 = c\\<^sub>1'' ;; c\n  c\\<^sub>2 = c\\<^sub>2''' ;; c\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume case1: \"\\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\" \"\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "hence \"\\<turnstile> \\<Gamma> {c} \\<Gamma>'\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {c} \\<Gamma>'", "using context_le_refl has_type.sub sub.hyps(4)"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  ?\\<Gamma> \\<sqsubseteq>\\<^sub>c ?\\<Gamma>\n  \\<lbrakk>\\<turnstile> ?\\<Gamma>\\<^sub>1 {?c} ?\\<Gamma>\\<^sub>1';\n   ?\\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c ?\\<Gamma>\\<^sub>1;\n   ?\\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c ?\\<Gamma>\\<^sub>2'\\<rbrakk>\n  \\<Longrightarrow> \\<turnstile> ?\\<Gamma>\\<^sub>2 {?c} ?\\<Gamma>\\<^sub>2'\n  \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma> {c} \\<Gamma>'", "by blast"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "with case1"], ["proof (chain)\npicking this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'", "show \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "using \\<R>\\<^sub>3_aux.intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "fix \\<Gamma> c\\<^sub>1'' c\\<^sub>2''' c''"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume [simp]: \"c\\<^sub>1 = c\\<^sub>1'' ;; c''\" \"c\\<^sub>2 = c\\<^sub>2''' ;; c''\""], ["proof (state)\nthis:\n  c\\<^sub>1 = c\\<^sub>1'' ;; c''\n  c\\<^sub>2 = c\\<^sub>2''' ;; c''\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume \"\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\" \"\\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "thus \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "using \\<R>\\<^sub>3_aux.intro\\<^sub>2"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2''' ;;\n                                 c'', mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>\\<^sub>3_aux.intro\\<^sub>2 [where \\<Gamma> = \\<Gamma>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<Gamma> {c''} \\<Gamma>'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<Gamma> {c''} \\<Gamma>'", "by (metis context_le_refl has_type.sub sub.hyps(4))"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "fix \\<Gamma> c\\<^sub>1'' c\\<^sub>2''' c''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume [simp]: \"c\\<^sub>1 = c\\<^sub>1'' ;; c''\" \"c\\<^sub>2 = c\\<^sub>2''' ;; c''\""], ["proof (state)\nthis:\n  c\\<^sub>1 = c\\<^sub>1'' ;; c''\n  c\\<^sub>2 = c\\<^sub>2''' ;; c''\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "assume \"\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\" \"\\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 c\\<^sub>2' c.\n       \\<lbrakk>c\\<^sub>1 = c\\<^sub>1 ;; c; c\\<^sub>2 = c\\<^sub>2' ;; c;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>\\<^sub>1'\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "thus \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "using \\<R>\\<^sub>3_aux.intro\\<^sub>3"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {c''} \\<Gamma>\\<^sub>1';\n     \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1'' ;;\n                               c'', mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2''' ;;\n                                 c'', mds, mem\\<^sub>2\\<rangle>", "by (metis (hide_lams, no_types) context_le_refl has_type.sub sub.hyps(4))"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "show \"?thesis c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by (auto simp: \\<R>.intros)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<langle>?c\\<^sub>15, ?mds5, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>?c\\<^sub>25, ?mds5, ?mem\\<^sub>25\\<rangle> \\<Longrightarrow>\n  \\<langle>?c\\<^sub>15, ?mds5, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>25, ?mds5, ?mem\\<^sub>25\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 c \\<Gamma>\\<^sub>1' \\<Gamma>\\<^sub>2\n       \\<Gamma>\\<^sub>2' mds c\\<^sub>1'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>1 {c} \\<Gamma>\\<^sub>1';\n        \\<And>mds c\\<^sub>1'.\n           \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>1;\n            mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>1\\<^esub> mem\\<^sub>2;\n            \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                                \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<Gamma>\\<^sub>2 \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>1;\n        \\<Gamma>\\<^sub>1' \\<sqsubseteq>\\<^sub>c \\<Gamma>\\<^sub>2';\n        mds_consistent mds \\<Gamma>\\<^sub>2;\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^sub>2\\<^esub> mem\\<^sub>2;\n        \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>2'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "with c\\<^sub>2'_props"], ["proof (chain)\npicking this:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>?c\\<^sub>15, ?mds5, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>?c\\<^sub>25, ?mds5, ?mem\\<^sub>25\\<rangle> \\<Longrightarrow>\n  \\<langle>?c\\<^sub>15, ?mds5, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>25, ?mds5, ?mem\\<^sub>25\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>?c\\<^sub>15, ?mds5, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^sub>1'\\<^esub> \\<langle>?c\\<^sub>25, ?mds5, ?mem\\<^sub>25\\<rangle> \\<Longrightarrow>\n  \\<langle>?c\\<^sub>15, ?mds5, ?mem\\<^sub>15\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>25, ?mds5, ?mem\\<^sub>25\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by blast"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* We can now show that \\<R>\\<^sub>1 and \\<R>\\<^sub>3 are weak bisimulations of \\<R>,: *)"], ["", "lemma \\<R>\\<^sub>1_weak_bisim:\n  \"weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>')", "unfolding weak_bisim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n       (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)", "using \\<R>\\<^sub>1_elim \\<R>_typed_step"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<And>\\<Gamma>.\n      \\<lbrakk>?c\\<^sub>2 = ?c\\<^sub>1;\n       \\<turnstile> \\<Gamma> {?c\\<^sub>1} ?\\<Gamma>;\n       mds_consistent ?mds \\<Gamma>;\n       ?mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> ?mem\\<^sub>2\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  \\<lbrakk>\\<turnstile> ?\\<Gamma> {?c\\<^sub>1} ?\\<Gamma>';\n   mds_consistent ?mds ?\\<Gamma>;\n   ?mem\\<^sub>1 =\\<^bsub>?\\<Gamma>\\<^esub> ?mem\\<^sub>2;\n   \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1', ?mds', ?mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', ?mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1', ?mds', ?mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', ?mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n       (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)", "by auto"], ["", "lemma \\<R>_to_\\<R>\\<^sub>3: \"\\<lbrakk> \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> ; \\<turnstile> \\<Gamma> { c } \\<Gamma>' \\<rbrakk> \\<Longrightarrow>\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                               c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle>", "apply (erule \\<R>_elim)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                               c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                               c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle>\n 3. \\<lbrakk>\\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                               c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle>", "by auto"], ["", "lemma \\<R>\\<^sub>2_implies_typeable: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow> \\<exists> \\<Gamma>\\<^sub>1. \\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>2 } \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<exists>\\<Gamma>\\<^sub>1.\n       \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>'", "apply (erule \\<R>\\<^sub>2_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<forall>x\\<in>dom \\<Gamma>'. \\<Gamma>' x = Some High;\n        \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>1} \\<Gamma>';\n        \\<turnstile> \\<Gamma>\\<^sub>2 {c\\<^sub>2} \\<Gamma>';\n        mds_consistent mds \\<Gamma>\\<^sub>1;\n        mds_consistent mds \\<Gamma>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<Gamma>\\<^sub>1.\n                            \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>'", "by auto"], ["", "lemma \\<R>\\<^sub>3_weak_bisim:\n  \"weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds' mem\\<^sub>1'"], ["proof (state)\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "assume case3: \"(\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>, \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>'\""], ["proof (state)\nthis:\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>\\<^sub>3 \\<Gamma>'\n\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "assume eval: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "have \"\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "using case3 eval"], ["proof (prove)\nusing this:\n  (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n   \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n  \\<in> \\<R>\\<^sub>3 \\<Gamma>'\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "proof (induct arbitrary: c\\<^sub>1' rule: \\<R>\\<^sub>3_aux.induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (intro\\<^sub>1 \\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c \\<Gamma>')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "hence [simp]: \"c\\<^sub>2 = c\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. c\\<^sub>2 = c\\<^sub>1", "by (metis (lifting) \\<R>\\<^sub>1_elim)"], ["proof (state)\nthis:\n  c\\<^sub>2 = c\\<^sub>1\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  c\\<^sub>2 = c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "proof (cases \"c\\<^sub>1 = Stop\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "assume [simp]: \"c\\<^sub>1 = Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Stop\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from intro\\<^sub>1(1)"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply (rule \\<R>\\<^sub>1_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>c\\<^sub>2 = c\\<^sub>1;\n        \\<turnstile> \\<Gamma>' {c\\<^sub>1} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2''.\n                            \\<langle>Stop ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2''\\<rangle>", "apply (rule_tac x = c in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>mem\\<^sub>2''.\n                            \\<langle>Stop ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c, mds', mem\\<^sub>2''\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds', mem\\<^sub>2''\\<rangle>", "apply (rule_tac x = mem\\<^sub>2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>Stop ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c, mds', mem\\<^sub>2\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds', mem\\<^sub>2\\<rangle>", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>Stop ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c, mds', mem\\<^sub>2\\<rangle>\n 2. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds', mem\\<^sub>2\\<rangle>", "apply (metis \\<open>c\\<^sub>1 = Stop\\<close> cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.seq_stop eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq intro\\<^sub>1.prems seq_stop_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds', mem\\<^sub>2\\<rangle>", "apply (rule \\<R>.intro\\<^sub>1, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>'.\n       \\<lbrakk>\\<turnstile> \\<Gamma>' {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>';\n        mem\\<^sub>1 =\\<^bsub>\\<Gamma>'\\<^esub> mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds', mem\\<^sub>2\\<rangle>", "by (metis (no_types) \\<R>\\<^sub>1.intro \\<open>c\\<^sub>1 = Stop\\<close> context_le_refl intro\\<^sub>1.prems intro\\<^sub>1(2) seq_stop_elim stop_cxt sub)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "assume \"c\\<^sub>1 \\<noteq> Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from intro\\<^sub>1"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "obtain c\\<^sub>1'' where \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and> c\\<^sub>1' = (c\\<^sub>1'' ;; c)\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1''''.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1'''', mds', mem\\<^sub>1'\\<rangle> \\<and>\n        c\\<^sub>1' = c\\<^sub>1'''' ;; c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<open>c\\<^sub>1 \\<noteq> Stop\\<close> intro\\<^sub>1.prems seq_elim)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "with intro\\<^sub>1"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c", "obtain c\\<^sub>2'' mem\\<^sub>2' where \"\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\" \"\\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2'' mem\\<^sub>2''.\n        \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n         \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<R>\\<^sub>1_weak_bisim and weak_bisim_def"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\n  weak_bisim (\\<R>\\<^sub>1 ?\\<Gamma>') (\\<R> ?\\<Gamma>')\n  weak_bisim ?\\<T>\\<^sub>1 ?\\<T> \\<equiv>\n  \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n     mem\\<^sub>1'.\n     (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n     \\<in> ?\\<T>\\<^sub>1 \\<and>\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n     (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n         (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>,\n          \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\n         \\<in> ?\\<T>)\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2'' mem\\<^sub>2''.\n        \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n         \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c\\<^sub>2 = c\\<^sub>1; c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "using intro\\<^sub>1(2) \\<R>_to_\\<R>\\<^sub>3"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>'\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c\\<^sub>1 ;;\n                             ?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2 ;;\n                                 ?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply (rule_tac x = \"c\\<^sub>2'' ;; c\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'' ;;\n                                  c, mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n       c, mds', mem\\<^sub>2''\\<rangle>", "apply (rule_tac x = mem\\<^sub>2' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2'' ;;\n                               c, mds', mem\\<^sub>2'\\<rangle> \\<and>\n                      \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2'' ;; c, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (metis eval\\<^sub>w.seq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (rule \\<R>.intro\\<^sub>3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma> c\n        \\<Gamma>'.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n         \\<turnstile> \\<Gamma> {c} \\<Gamma>'\\<rbrakk>\n        \\<Longrightarrow> \\<langle>c\\<^sub>1 ;;\n                                   c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2 ;;\n                                   c, mds, mem\\<^sub>2\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "by (metis (hide_lams, no_types) \\<open>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<and> c\\<^sub>1' = c\\<^sub>1'' ;; c\\<close>)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (intro\\<^sub>2 \\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 cn \\<Gamma>')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "proof (cases \"c\\<^sub>1 = Stop\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "assume [simp]: \"c\\<^sub>1 = Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 = Stop\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "hence [simp]: \"c\\<^sub>1' = cn\" \"mds' = mds\" \"mem\\<^sub>1' = mem\\<^sub>1\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Stop\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = cn &&& mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1", "using eval intro\\<^sub>2 seq_stop_elim"], ["proof (prove)\nusing this:\n  c\\<^sub>1 = Stop\n  \\<langle>c\\<^sub>1__, mds__, mem\\<^sub>1__\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'__, mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n  \\<langle>Stop ;; ?c, ?mds, ?mem\\<rangle> \\<leadsto>\n  \\<langle>?c', ?mds', ?mem'\\<rangle> \\<Longrightarrow>\n  ?c' = ?c \\<and> ?mds' = ?mds \\<and> ?mem' = ?mem\n\ngoal (1 subgoal):\n 1. c\\<^sub>1' = cn &&& mds' = mds &&& mem\\<^sub>1' = mem\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  c\\<^sub>1' = cn\n  mds' = mds\n  mem\\<^sub>1' = mem\\<^sub>1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from intro\\<^sub>2"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "have bisim: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "by (metis (lifting) \\<R>\\<^sub>2_elim')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from intro\\<^sub>2"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>", "obtain \\<Gamma>\\<^sub>1 where \"\\<turnstile> \\<Gamma>\\<^sub>1 { c\\<^sub>2 } \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>1.\n        \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<R>\\<^sub>2_implies_typeable)"], ["proof (state)\nthis:\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "with bisim"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>", "have [simp]: \"c\\<^sub>2 = Stop\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\n\ngoal (1 subgoal):\n 1. c\\<^sub>2 = Stop", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>2 = Stop", "apply (rule stop_bisim [of mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 \\<Gamma>\\<^sub>1 \\<Gamma>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n                      \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n 2. \\<lbrakk>\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n             \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<turnstile> \\<Gamma>\\<^sub>1 {c\\<^sub>2} \\<Gamma>", "by simp_all"], ["proof (state)\nthis:\n  c\\<^sub>2 = Stop\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "have \"\\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>cn, mds', mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>cn, mds', mem\\<^sub>2\\<rangle>", "apply (auto simp: intro\\<^sub>2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Stop ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>cn, mds, mem\\<^sub>2\\<rangle>", "by (metis cxt_to_stmt.simps(1) eval\\<^sub>w_simplep.seq_stop eval\\<^sub>wp.unannotated eval\\<^sub>wp_eval\\<^sub>w_eq)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>cn, mds', mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>cn, mds', mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from intro\\<^sub>2(1)"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"mds_consistent mds \\<Gamma>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. mds_consistent mds \\<Gamma>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>Stop, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mds_consistent mds \\<Gamma>", "apply (erule \\<R>\\<^sub>2_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n       \\<lbrakk>\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n                \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>;\n        \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High;\n        \\<turnstile> \\<Gamma>\\<^sub>1 {Stop} \\<Gamma>;\n        \\<turnstile> \\<Gamma>\\<^sub>2 {Stop} \\<Gamma>;\n        mds_consistent mds \\<Gamma>\\<^sub>1;\n        mds_consistent mds \\<Gamma>\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> mds_consistent mds \\<Gamma>", "apply (simp add: mds_consistent_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma>\\<^sub>1 \\<Gamma>\\<^sub>2.\n       \\<lbrakk>\\<langle>Stop, mds, mem\\<^sub>1\\<rangle> \\<approx>\n                \\<langle>Stop, mds, mem\\<^sub>2\\<rangle>;\n        \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High;\n        \\<turnstile> \\<Gamma>\\<^sub>1 {Stop} \\<Gamma>;\n        \\<turnstile> \\<Gamma>\\<^sub>2 {Stop} \\<Gamma>;\n        dom \\<Gamma>\\<^sub>1 =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        dom \\<Gamma>\\<^sub>2 =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite}\\<rbrakk>\n       \\<Longrightarrow> dom \\<Gamma> =\n                         {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n                             dma x = High \\<and> x \\<in> mds AsmNoWrite}", "by (metis context_le_def stop_cxt)"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "moreover"], ["proof (state)\nthis:\n  mds_consistent mds \\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from bisim"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "have \"mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<approx>\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "by (auto simp: mm_equiv.simps strong_low_bisim_mm_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "have \"\\<forall> x \\<in> dom \\<Gamma>. \\<Gamma> x = Some High\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High", "using intro\\<^sub>2(1)"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High", "by (metis \\<R>\\<^sub>2_elim')"], ["proof (state)\nthis:\n  \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "hence \"mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "using \\<open>mds_consistent mds \\<Gamma>\\<close> \\<open>mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "apply (auto simp: tyenv_eq_def low_mds_eq_def mds_consistent_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x.\n                   (dma x = Low \\<and>\n                    x \\<in> mds AsmNoRead \\<longrightarrow>\n                    \\<Gamma> x = Some High) \\<and>\n                   (dma x = High \\<and>\n                    x \\<in> mds AsmNoWrite \\<longrightarrow>\n                    \\<Gamma> x = Some High);\n        dom \\<Gamma> =\n        {x. dma x = Low \\<and> x \\<in> mds AsmNoRead \\<or>\n            dma x = High \\<and> x \\<in> mds AsmNoWrite};\n        \\<forall>x.\n           dma x = Low \\<and> x \\<notin> mds AsmNoRead \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x;\n        to_total \\<Gamma> x = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x", "by (metis Sec.simps(1) \\<open>\\<forall>x\\<in>dom \\<Gamma>. \\<Gamma> x = Some High\\<close> \\<open>mds' = mds\\<close> domI option.sel to_total_def)"], ["proof (state)\nthis:\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>cn, mds', mem\\<^sub>2\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "have \"\\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>cn, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>cn, mds', mem\\<^sub>2\\<rangle>\n  mds_consistent mds \\<Gamma>\n  mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>cn, mds, mem\\<^sub>2\\<rangle>", "by (metis (lifting) \\<R>\\<^sub>1.intro intro\\<^sub>2(2))"], ["proof (state)\nthis:\n  \\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>cn, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "thus \"?thesis\""], ["proof (prove)\nusing this:\n  \\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>cn, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "using \\<R>.intro\\<^sub>1"], ["proof (prove)\nusing this:\n  \\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>cn, mds, mem\\<^sub>2\\<rangle>\n  (case ?lc of\n   (x, xa) \\<Rightarrow>\n     (case x of\n      (x, xa) \\<Rightarrow>\n        \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n           \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>?\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n      xa)\n   ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>cn, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma> a b ba aa bb bc.\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle> \\<Longrightarrow>\n        \\<langle>a, b, ba\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>aa, bb, bc\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2''.\n                         \\<langle>Stop ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds, mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>cn, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds, mem\\<^sub>2''\\<rangle>", "by (metis \\<open>\\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>cn, mds', mem\\<^sub>2\\<rangle>\\<close> \\<open>c\\<^sub>2 = Stop\\<close> \\<open>mds' = mds\\<close>)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "assume \"c\\<^sub>1 \\<noteq> Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "then"], ["proof (chain)\npicking this:\n  c\\<^sub>1 \\<noteq> Stop", "obtain c\\<^sub>1''' where \"c\\<^sub>1' = c\\<^sub>1''' ;; cn\" \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1''''.\n        \\<lbrakk>c\\<^sub>1' = c\\<^sub>1'''' ;; cn;\n         \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n         \\<langle>c\\<^sub>1'''', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types) intro\\<^sub>2.prems seq_elim)"], ["proof (state)\nthis:\n  c\\<^sub>1' = c\\<^sub>1''' ;; cn\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "then"], ["proof (chain)\npicking this:\n  c\\<^sub>1' = c\\<^sub>1''' ;; cn\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle>", "obtain c\\<^sub>2''' mem\\<^sub>2' where c\\<^sub>2'''_props:\n          \"\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle> \\<and>\n          \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  c\\<^sub>1' = c\\<^sub>1''' ;; cn\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2''' mem\\<^sub>2''.\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2''\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2''\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<R>\\<^sub>2_bisim_step intro\\<^sub>2"], ["proof (prove)\nusing this:\n  c\\<^sub>1' = c\\<^sub>1''' ;; cn\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle>\n  \\<lbrakk>\\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle>;\n   \\<langle>?c\\<^sub>1, ?mds, ?mem\\<^sub>1\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1', ?mds', ?mem\\<^sub>1'\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>?c\\<^sub>2, ?mds, ?mem\\<^sub>2\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', ?mds', mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1', ?mds', ?mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', ?mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<turnstile> \\<Gamma> {cn} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2''' mem\\<^sub>2''.\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2''\\<rangle> \\<and>\n        \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2''\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "let ?c\\<^sub>2' = \"c\\<^sub>2''' ;; cn\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "from c\\<^sub>2'''_props"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle>", "have \"\\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>?c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle> \\<and>\n  \\<langle>c\\<^sub>1''', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2''', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n    \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>", "by (metis (lifting) intro\\<^sub>2 eval\\<^sub>w.seq)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "moreover"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "have \"(\\<langle>c\\<^sub>1''' ;; cn, mds', mem\\<^sub>1'\\<rangle>, \\<langle>?c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>) \\<in> \\<R>\\<^sub>3 \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>c\\<^sub>1''' ;; cn, mds', mem\\<^sub>1'\\<rangle>,\n     \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>)\n    \\<in> \\<R>\\<^sub>3 \\<Gamma>'", "by (metis (lifting) \\<R>\\<^sub>3_aux.intro\\<^sub>2 c\\<^sub>2'''_props intro\\<^sub>2(2) mem_Collect_eq case_prodI)"], ["proof (state)\nthis:\n  (\\<langle>c\\<^sub>1''' ;; cn, mds', mem\\<^sub>1'\\<rangle>,\n   \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>)\n  \\<in> \\<R>\\<^sub>3 \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<turnstile> \\<Gamma> {cn} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; cn, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>\n  (\\<langle>c\\<^sub>1''' ;; cn, mds', mem\\<^sub>1'\\<rangle>,\n   \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>)\n  \\<in> \\<R>\\<^sub>3 \\<Gamma>'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>\n  (\\<langle>c\\<^sub>1''' ;; cn, mds', mem\\<^sub>1'\\<rangle>,\n   \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>)\n  \\<in> \\<R>\\<^sub>3 \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "using \\<R>.intro\\<^sub>3"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>\n  (\\<langle>c\\<^sub>1''' ;; cn, mds', mem\\<^sub>1'\\<rangle>,\n   \\<langle>c\\<^sub>2''' ;; cn, mds', mem\\<^sub>2'\\<rangle>)\n  \\<in> \\<R>\\<^sub>3 \\<Gamma>'\n  ?lc \\<R>\\<^sup>3\\<^bsub>?\\<Gamma>\\<^esub> ?lc' \\<Longrightarrow>\n  ?lc \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>\\<^esub> ?lc'\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "by (metis (lifting) \\<R>\\<^sub>3_aux.intro\\<^sub>2 \\<open>c\\<^sub>1' = c\\<^sub>1''' ;; cn\\<close> c\\<^sub>2'''_props intro\\<^sub>2(2))"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; cn, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "case (intro\\<^sub>3 \\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c \\<Gamma>')"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Gamma> c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\n       \\<Gamma>' c\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<And>c\\<^sub>1'.\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n           \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n              \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n              \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>;\n        \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n        \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2 ;;\n                                     c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n  \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n  \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply (cases \"c\\<^sub>1 = Stop\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 = Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "assume \"c\\<^sub>1 \\<noteq> Stop\""], ["proof (state)\nthis:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "then"], ["proof (chain)\npicking this:\n  c\\<^sub>1 \\<noteq> Stop", "obtain c\\<^sub>1'' where \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle>\" \"c\\<^sub>1' = (c\\<^sub>1'' ;; c)\""], ["proof (prove)\nusing this:\n  c\\<^sub>1 \\<noteq> Stop\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>1''''.\n        \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>1'''', mds', mem\\<^sub>1'\\<rangle>;\n         c\\<^sub>1' = c\\<^sub>1'''' ;; c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis intro\\<^sub>3.prems seq_elim)"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c", "obtain c\\<^sub>2'' mem\\<^sub>2' where \"\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\" \"\\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2'' mem\\<^sub>2''.\n        \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n         \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using intro\\<^sub>3(2) mem_Collect_eq case_prodI"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle>\n  c\\<^sub>1' = c\\<^sub>1'' ;; c\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>?c\\<^sub>1'5, mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n  (?a \\<in> Collect ?P) = ?P ?a\n  ?f ?a ?b \\<Longrightarrow> case (?a, ?b) of (c, d) \\<Rightarrow> ?f c d\n\ngoal (1 subgoal):\n 1. (\\<And>c\\<^sub>2'' mem\\<^sub>2''.\n        \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                 \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n         \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>c\\<^sub>1'.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<Longrightarrow>\n        \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>;\n     \\<turnstile> \\<Gamma> {c} \\<Gamma>';\n     \\<langle>c\\<^sub>1 ;; c, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     c\\<^sub>1 \\<noteq> Stop\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n  \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n       \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>", "apply (rule_tac x = \"c\\<^sub>2'' ;; c\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>mem\\<^sub>2''.\n                         \\<langle>c\\<^sub>2 ;;\n                                  c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2'' ;;\n                                  c, mds', mem\\<^sub>2''\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n       c, mds', mem\\<^sub>2''\\<rangle>", "apply (rule_tac x = mem\\<^sub>2' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2'' ;;\n                               c, mds', mem\\<^sub>2'\\<rangle> \\<and>\n                      \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>2 ;;\n                               c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                      \\<langle>c\\<^sub>2'' ;; c, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (metis eval\\<^sub>w.seq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (erule \\<R>_elim)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     (case \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     (case \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> of\n      (x, xa) \\<Rightarrow>\n        (case x of\n         (x, xa) \\<Rightarrow>\n           \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n              \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n         xa)\n      \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>\n 3. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>\n 3. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (metis \\<R>.intro\\<^sub>3 \\<R>_to_\\<R>\\<^sub>3 \\<open>\\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<close> \\<open>c\\<^sub>1' = c\\<^sub>1'' ;; c\\<close> intro\\<^sub>3(3))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "apply (metis (lifting) \\<R>.intro\\<^sub>3 \\<R>_to_\\<R>\\<^sub>3 \\<open>\\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<close> \\<open>c\\<^sub>1' = c\\<^sub>1'' ;; c\\<close> intro\\<^sub>3(3))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n             \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>;\n     \\<langle>c\\<^sub>1'', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'' ;;\n    c, mds', mem\\<^sub>2'\\<rangle>", "by (metis (lifting) \\<R>.intro\\<^sub>3 \\<R>\\<^sub>3_aux.intro\\<^sub>3 \\<open>c\\<^sub>1' = c\\<^sub>1'' ;; c\\<close> intro\\<^sub>3(3))"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2'' mem\\<^sub>2''.\n     \\<langle>c\\<^sub>2 ;; c, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2'', mds', mem\\<^sub>2''\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(\\<langle>?c\\<^sub>17, ?mds7, ?mem\\<^sub>17\\<rangle>,\n            \\<langle>?c\\<^sub>27, ?mds7, ?mem\\<^sub>27\\<rangle>)\n           \\<in> \\<R>\\<^sub>3 \\<Gamma>';\n   \\<langle>?c\\<^sub>17, ?mds7, ?mem\\<^sub>17\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'7, ?mds'7, ?mem\\<^sub>1'7\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>?c\\<^sub>27, ?mds7, ?mem\\<^sub>27\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', ?mds'7, mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'7, ?mds'7, ?mem\\<^sub>1'7\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', ?mds'7, mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<langle>?c\\<^sub>17, ?mds7, ?mem\\<^sub>17\\<rangle>,\n            \\<langle>?c\\<^sub>27, ?mds7, ?mem\\<^sub>27\\<rangle>)\n           \\<in> \\<R>\\<^sub>3 \\<Gamma>';\n   \\<langle>?c\\<^sub>17, ?mds7, ?mem\\<^sub>17\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'7, ?mds'7, ?mem\\<^sub>1'7\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>?c\\<^sub>27, ?mds7, ?mem\\<^sub>27\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', ?mds'7, mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'7, ?mds'7, ?mem\\<^sub>1'7\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', ?mds'7, mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')", "unfolding weak_bisim_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<langle>?c\\<^sub>17, ?mds7, ?mem\\<^sub>17\\<rangle>,\n            \\<langle>?c\\<^sub>27, ?mds7, ?mem\\<^sub>27\\<rangle>)\n           \\<in> \\<R>\\<^sub>3 \\<Gamma>';\n   \\<langle>?c\\<^sub>17, ?mds7, ?mem\\<^sub>17\\<rangle> \\<leadsto>\n   \\<langle>?c\\<^sub>1'7, ?mds'7, ?mem\\<^sub>1'7\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                       \\<langle>?c\\<^sub>27, ?mds7, ?mem\\<^sub>27\\<rangle> \\<leadsto>\n                       \\<langle>c\\<^sub>2', ?mds'7, mem\\<^sub>2'\\<rangle> \\<and>\n                       \\<langle>?c\\<^sub>1'7, ?mds'7, ?mem\\<^sub>1'7\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', ?mds'7, mem\\<^sub>2'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n        \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n       \\<in> \\<R>\\<^sub>3 \\<Gamma>' \\<and>\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n       (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n           \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>')\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Hence \\<R> is a bisimulation: *)"], ["", "lemma \\<R>_bisim: \"strong_low_bisim_mm (\\<R> \\<Gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strong_low_bisim_mm (\\<R> \\<Gamma>')", "unfolding strong_low_bisim_mm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (\\<R> \\<Gamma>') \\<and>\n    closed_glob_consistent (\\<R> \\<Gamma>') \\<and>\n    (\\<forall>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<longrightarrow>\n        mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2 \\<and>\n        (\\<forall>c\\<^sub>1' mds' mem\\<^sub>1'.\n            \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n            (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)))", "proof (auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. sym (\\<R> \\<Gamma>')\n 2. closed_glob_consistent (\\<R> \\<Gamma>')\n 3. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 4. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from \\<R>_sym"], ["proof (chain)\npicking this:\n  sym (\\<R> ?\\<Gamma>)", "show \"sym (\\<R> \\<Gamma>')\""], ["proof (prove)\nusing this:\n  sym (\\<R> ?\\<Gamma>)\n\ngoal (1 subgoal):\n 1. sym (\\<R> \\<Gamma>')", "."], ["proof (state)\nthis:\n  sym (\\<R> \\<Gamma>')\n\ngoal (3 subgoals):\n 1. closed_glob_consistent (\\<R> \\<Gamma>')\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 3. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. closed_glob_consistent (\\<R> \\<Gamma>')\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 3. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from \\<R>_closed_glob_consistent"], ["proof (chain)\npicking this:\n  closed_glob_consistent (\\<R> ?\\<Gamma>')", "show \"closed_glob_consistent (\\<R> \\<Gamma>')\""], ["proof (prove)\nusing this:\n  closed_glob_consistent (\\<R> ?\\<Gamma>')\n\ngoal (1 subgoal):\n 1. closed_glob_consistent (\\<R> \\<Gamma>')", "."], ["proof (state)\nthis:\n  closed_glob_consistent (\\<R> \\<Gamma>')\n\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2.\n       \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n       mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 2. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "thus \"mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "apply (rule \\<R>_elim)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (x, xa) \\<Rightarrow>\n          \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n             \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n        xa)\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 2. (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (x, xa) \\<Rightarrow>\n          \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n             \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n        xa)\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n 3. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2", "by (auto simp: \\<R>\\<^sub>1_mem_eq \\<R>\\<^sub>2_mem_eq \\<R>\\<^sub>3_mem_eq)"], ["proof (state)\nthis:\n  mem\\<^sub>1 =\\<^bsub>mds\\<^esub>\\<^sup>l mem\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "fix c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds' mem\\<^sub>1'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume eval: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto> \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n  \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "assume R: \"\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>c\\<^sub>1 mds mem\\<^sub>1 c\\<^sub>2 mem\\<^sub>2 c\\<^sub>1' mds'\n       mem\\<^sub>1'.\n       \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n        \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n        \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                            \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "from R"], ["proof (chain)\npicking this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>", "show \"\\<exists> c\\<^sub>2' mem\\<^sub>2'. \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                            \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply (rule \\<R>_elim)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (x, xa) \\<Rightarrow>\n          \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n             \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n        xa)\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. (case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (x, xa) \\<Rightarrow>\n          \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n             \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n        xa)\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<Longrightarrow>\n    \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n       \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n       \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n       \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply (insert \\<R>\\<^sub>1_weak_bisim \\<R>\\<^sub>2_weak_bisim \\<R>\\<^sub>3_weak_bisim eval weak_bisim_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n              (x, xa) \\<Rightarrow>\n                (case x of\n                 (x, xa) \\<Rightarrow>\n                   \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                      \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n                 xa)\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     \\<And>\\<T>\\<^sub>1 \\<T>.\n        weak_bisim \\<T>\\<^sub>1 \\<T> \\<equiv>\n        \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1'\n           mds' mem\\<^sub>1'.\n           (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n           \\<in> \\<T>\\<^sub>1 \\<and>\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n           (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n               \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n               \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n               (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>,\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\n               \\<in> \\<T>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 2. \\<lbrakk>(case \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> of\n              (x, xa) \\<Rightarrow>\n                (case x of\n                 (x, xa) \\<Rightarrow>\n                   \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n                      \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>2\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n                 xa)\n              \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     \\<And>\\<T>\\<^sub>1 \\<T>.\n        weak_bisim \\<T>\\<^sub>1 \\<T> \\<equiv>\n        \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1'\n           mds' mem\\<^sub>1'.\n           (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n           \\<in> \\<T>\\<^sub>1 \\<and>\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n           (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n               \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n               \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n               (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>,\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\n               \\<in> \\<T>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n 3. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     \\<And>\\<T>\\<^sub>1 \\<T>.\n        weak_bisim \\<T>\\<^sub>1 \\<T> \\<equiv>\n        \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1'\n           mds' mem\\<^sub>1'.\n           (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n           \\<in> \\<T>\\<^sub>1 \\<and>\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n           (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n               \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n               \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n               (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>,\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\n               \\<in> \\<T>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "apply (clarify, blast)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>3\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>;\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>1 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>2 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<And>\\<Gamma>'. weak_bisim (\\<R>\\<^sub>3 \\<Gamma>') (\\<R> \\<Gamma>');\n     \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>;\n     \\<And>\\<T>\\<^sub>1 \\<T>.\n        weak_bisim \\<T>\\<^sub>1 \\<T> \\<equiv>\n        \\<forall>c\\<^sub>1 c\\<^sub>2 mds mem\\<^sub>1 mem\\<^sub>2 c\\<^sub>1'\n           mds' mem\\<^sub>1'.\n           (\\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle>,\n            \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle>)\n           \\<in> \\<T>\\<^sub>1 \\<and>\n           \\<langle>c\\<^sub>1, mds, mem\\<^sub>1\\<rangle> \\<leadsto>\n           \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<longrightarrow>\n           (\\<exists>c\\<^sub>2' mem\\<^sub>2'.\n               \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n               \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n               (\\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle>,\n                \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>)\n               \\<in> \\<T>)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n                         \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n                         \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n                         \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>", "by (metis mem_Collect_eq case_prodI)"], ["proof (state)\nthis:\n  \\<exists>c\\<^sub>2' mem\\<^sub>2'.\n     \\<langle>c\\<^sub>2, mds, mem\\<^sub>2\\<rangle> \\<leadsto>\n     \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle> \\<and>\n     \\<langle>c\\<^sub>1', mds', mem\\<^sub>1'\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c\\<^sub>2', mds', mem\\<^sub>2'\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Typed_in_\\<R>:\n  assumes typeable: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes mem_eq: \"\\<forall> x. to_total \\<Gamma> x = Low \\<longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x\"\n  shows \"\\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>.intro\\<^sub>1 [of \\<Gamma>'])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case \\<langle>c, mds, mem\\<^sub>1\\<rangle> of\n     (x, xa) \\<Rightarrow>\n       (case x of\n        (x, xa) \\<Rightarrow>\n          \\<lambda>xaa ((xaaa, xaaaa), xaaaaa).\n             \\<langle>x, xa, xaa\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>xaaa, xaaaa, xaaaaa\\<rangle>)\n        xa)\n     \\<langle>c, mds, mem\\<^sub>2\\<rangle>", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<R>\\<^sup>1\\<^bsub>\\<Gamma>'\\<^esub> \\<langle>c, mds, mem\\<^sub>2\\<rangle>", "apply (rule \\<R>\\<^sub>1.intro [of \\<Gamma>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<turnstile> \\<Gamma> {c} \\<Gamma>'\n 2. mds_consistent mds \\<Gamma>\n 3. mem\\<^sub>1 =\\<^bsub>\\<Gamma>\\<^esub> mem\\<^sub>2", "by (auto simp: assms tyenv_eq_def)"], ["", "(* We then prove the main soundness theorem using the fact that typeable\n    configurations can be related using \\<R>\\<^sub>1 *)"], ["", "theorem type_soundness:\n  assumes well_typed: \"\\<turnstile> \\<Gamma> { c } \\<Gamma>'\"\n  assumes mds_cons: \"mds_consistent mds \\<Gamma>\"\n  assumes mem_eq: \"\\<forall> x. to_total \\<Gamma> x = Low \\<longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x\"\n  shows \"\\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<approx> \\<langle>c, mds, mem\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>c, mds, mem\\<^sub>2\\<rangle>", "using \\<R>_bisim Typed_in_\\<R>"], ["proof (prove)\nusing this:\n  strong_low_bisim_mm (\\<R> ?\\<Gamma>')\n  \\<lbrakk>\\<turnstile> ?\\<Gamma> {?c} ?\\<Gamma>';\n   mds_consistent ?mds ?\\<Gamma>;\n   \\<forall>x.\n      to_total ?\\<Gamma> x = Low \\<longrightarrow>\n      ?mem\\<^sub>1 x = ?mem\\<^sub>2 x\\<rbrakk>\n  \\<Longrightarrow> \\<langle>?c, ?mds, ?mem\\<^sub>1\\<rangle> \\<R>\\<^sup>u\\<^bsub>?\\<Gamma>'\\<^esub> \\<langle>?c, ?mds, ?mem\\<^sub>2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>c, mds, mem\\<^sub>1\\<rangle> \\<approx>\n    \\<langle>c, mds, mem\\<^sub>2\\<rangle>", "by (metis mds_cons mem_eq mm_equiv.simps well_typed)"], ["", "definition \"\\<Gamma>\\<^sub>0\" :: \"'Var TyEnv\"\n  where \"\\<Gamma>\\<^sub>0 x = None\""], ["", "(* The typing relation for lists of commands (\"thread pools\"). *)"], ["", "inductive type_global :: \"('Var, 'AExp, 'BExp) Stmt list \\<Rightarrow> bool\"\n  (\"\\<turnstile> _\" [120] 1000)\n  where\n  \"\\<lbrakk> list_all (\\<lambda> c. \\<turnstile> \\<Gamma>\\<^sub>0 { c } \\<Gamma>\\<^sub>0) cs ;\n     \\<forall> mem. sound_mode_use (add_initial_modes cs, mem) \\<rbrakk> \\<Longrightarrow>\n    type_global cs\""], ["", "inductive_cases type_global_elim: \"\\<turnstile> cs\""], ["", "lemma mds\\<^sub>s_consistent: \"mds_consistent mds\\<^sub>s \\<Gamma>\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mds_consistent mds\\<^sub>s \\<Gamma>\\<^sub>0", "by (auto simp: mds\\<^sub>s_def mds_consistent_def \\<Gamma>\\<^sub>0_def)"], ["", "lemma typed_secure:\n  \"\\<lbrakk> \\<turnstile> \\<Gamma>\\<^sub>0 { c } \\<Gamma>\\<^sub>0 \\<rbrakk> \\<Longrightarrow> com_sifum_secure c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0 \\<Longrightarrow>\n    com_sifum_secure c", "apply (auto simp: com_sifum_secure_def low_indistinguishable_def mds_consistent_def type_soundness)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0;\n        mem\\<^sub>1 =\\<^bsub>mds\\<^sub>s\\<^esub>\\<^sup>l mem\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c, mds\\<^sub>s, mem\\<^sub>1\\<rangle> \\<approx>\n                         \\<langle>c, mds\\<^sub>s, mem\\<^sub>2\\<rangle>", "apply (auto simp: low_mds_eq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0;\n        \\<forall>x.\n           dma x = Low \\<and>\n           x \\<notin> mds\\<^sub>s AsmNoRead \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x\\<rbrakk>\n       \\<Longrightarrow> \\<langle>c, mds\\<^sub>s, mem\\<^sub>1\\<rangle> \\<approx>\n                         \\<langle>c, mds\\<^sub>s, mem\\<^sub>2\\<rangle>", "apply (rule type_soundness [of \\<Gamma>\\<^sub>0 c \\<Gamma>\\<^sub>0])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0;\n        \\<forall>x.\n           dma x = Low \\<and>\n           x \\<notin> mds\\<^sub>s AsmNoRead \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x\\<rbrakk>\n       \\<Longrightarrow> \\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0\n 2. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0;\n        \\<forall>x.\n           dma x = Low \\<and>\n           x \\<notin> mds\\<^sub>s AsmNoRead \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x\\<rbrakk>\n       \\<Longrightarrow> mds_consistent mds\\<^sub>s \\<Gamma>\\<^sub>0\n 3. \\<And>mem\\<^sub>1 mem\\<^sub>2.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0;\n        \\<forall>x.\n           dma x = Low \\<and>\n           x \\<notin> mds\\<^sub>s AsmNoRead \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            to_total \\<Gamma>\\<^sub>0 x =\n                            Low \\<longrightarrow>\n                            mem\\<^sub>1 x = mem\\<^sub>2 x", "apply (auto simp: mds\\<^sub>s_consistent to_total_def \\<Gamma>\\<^sub>0_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>mem\\<^sub>1 mem\\<^sub>2 x.\n       \\<lbrakk>\\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0;\n        \\<forall>x.\n           dma x = Low \\<and>\n           x \\<notin> mds\\<^sub>s AsmNoRead \\<longrightarrow>\n           mem\\<^sub>1 x = mem\\<^sub>2 x;\n        dma x = Low\\<rbrakk>\n       \\<Longrightarrow> mem\\<^sub>1 x = mem\\<^sub>2 x", "by (metis empty_iff mds\\<^sub>s_def)"], ["", "lemma \"\\<lbrakk> mds_consistent mds \\<Gamma>\\<^sub>0 ; dma x = Low \\<rbrakk> \\<Longrightarrow> x \\<notin> mds AsmNoRead\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>mds_consistent mds \\<Gamma>\\<^sub>0; dma x = Low\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> mds AsmNoRead", "by (auto simp: mds_consistent_def \\<Gamma>\\<^sub>0_def)"], ["", "lemma list_all_set: \"\\<forall> x \\<in> set xs. P x \\<Longrightarrow> list_all P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. P x \\<Longrightarrow> list_all P xs", "by (metis (lifting) list_all_iff)"], ["", "theorem type_soundness_global:\n  assumes typeable: \"\\<turnstile> cs\"\n  assumes no_assms_term: \"no_assumptions_on_termination cs\"\n  shows \"prog_sifum_secure cs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prog_sifum_secure cs", "using typeable"], ["proof (prove)\nusing this:\n  \\<turnstile> cs\n\ngoal (1 subgoal):\n 1. prog_sifum_secure cs", "apply (rule type_global_elim)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>list_all\n              (\\<lambda>c.\n                  \\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0)\n              cs;\n     \\<forall>mem.\n        list_all (\\<lambda>cm. locally_sound_mode_use (cm, mem))\n         (add_initial_modes cs) \\<and>\n        globally_sound_mode_use (add_initial_modes cs, mem)\\<rbrakk>\n    \\<Longrightarrow> prog_sifum_secure cs", "apply (subgoal_tac \"\\<forall> c \\<in> set cs. com_sifum_secure c\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>list_all\n              (\\<lambda>c.\n                  \\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0)\n              cs;\n     \\<forall>mem.\n        list_all (\\<lambda>cm. locally_sound_mode_use (cm, mem))\n         (add_initial_modes cs) \\<and>\n        globally_sound_mode_use (add_initial_modes cs, mem);\n     Ball (set cs) com_sifum_secure\\<rbrakk>\n    \\<Longrightarrow> prog_sifum_secure cs\n 2. \\<lbrakk>list_all\n              (\\<lambda>c.\n                  \\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0)\n              cs;\n     \\<forall>mem.\n        list_all (\\<lambda>cm. locally_sound_mode_use (cm, mem))\n         (add_initial_modes cs) \\<and>\n        globally_sound_mode_use (add_initial_modes cs, mem)\\<rbrakk>\n    \\<Longrightarrow> Ball (set cs) com_sifum_secure", "apply (metis list_all_set no_assms_term sifum_compositionality sound_mode_use.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>list_all\n              (\\<lambda>c.\n                  \\<turnstile> \\<Gamma>\\<^sub>0 {c} \\<Gamma>\\<^sub>0)\n              cs;\n     \\<forall>mem.\n        list_all (\\<lambda>cm. locally_sound_mode_use (cm, mem))\n         (add_initial_modes cs) \\<and>\n        globally_sound_mode_use (add_initial_modes cs, mem)\\<rbrakk>\n    \\<Longrightarrow> Ball (set cs) com_sifum_secure", "by (metis (lifting) list_all_iff typed_secure)"], ["", "end"], ["", "end"]]}